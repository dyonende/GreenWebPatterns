ember-learn/ember-website,398550052,131,,"[{'action': 'opened', 'author': 'mansona', 'comment_id': None, 'datetime': '2019-01-12T12:29:11Z', 'masked_author': 'username_0', 'text': 'This issue is to track work that is related to creating a ""Why Ember"" page for the new Ember Website. This is separate from the work that is happening in the [Ember Website Redesign RFC](https://github.com/emberjs/rfcs/pull/425)\r\n\r\n### Motivation\r\nIt can sometimes be difficult to communicate why someone might want to consider using Ember as a technology, especially because there are many different kinds of stakeholders that would have different reasons to consider Ember. For example, many of the people in the Ember Community Discord are Ember developers that use Ember on a daily basis and could probably speak at length about some of the technical merits and potentially ergonomic benefits of using Ember, but might not have much of a grasp on the **business reasons** for using something like Ember. If you ask a develper they may talk about the powerful template syntax but a C-Level executivive might want to hear about our dedication to backwards compatibility and LTS release structure.\r\n\r\n**Note:** `C-Level executive` refers to the decision makers of a business such as CTO, CEO or CIO. In the UK and other parts of the world they may be referred to as Managing Director or Technical Director. See https://en.wikipedia.org/wiki/Corporate_title for more information\r\n\r\nWhile this effort doesn\'t proclude us from adding some sections in the theme of ""Why Ember"" to the homepage, having a whole page dedicated to it will allow us to give it the space it deserves.\r\n\r\n### Research and Previous efforts\r\nThis initiative has been spearheaded by @MelSumner in early 2018 and there has been a lot of discussion and research put into collecting content and opinions for this section. There was a survery form circulated to the community in 2018 that was used to collect a wider sample of ""Why people have chosen Ember"".\r\n\r\n@MelSumner has also published a [Gist here](https://gist.github.com/MelSumner/971ba6b7a3c0b01a4cb3a43d3b962dac) that was intended for people to have extra points of discussion that they might bring up when asked ""Why should I use Ember"" \r\n\r\n### Requirements\r\n\r\n- [ ] Add a route `/why` that will be used for this efforts. This means that https://emberjs.com/why will always link (or redirect) to something that helps to answer the question ""Why should you consider using Ember""\r\n- [ ] Add a section for Developers and group some of the content on why developers should consider using Ember\r\n- [ ] Add a section for C-Level exeutives\r\n- [ ] Collect responses from the ""Why Ember"" survey and decide with the Learning Team which items will be included in which sections\r\n\r\n### Open Questions\r\n- [ ] Do we need any other sections for the initial version? Should we have a section for project-managers or other parties?\r\n- [ ] Would it be useful to have testimonials on this page?', 'title': 'New Feature: ""Why Ember"" Page', 'type': 'issue'}
 {'action': 'created', 'author': 'mansona', 'comment_id': 510880178.0, 'datetime': '2019-07-12 13:09:24+00:00', 'masked_author': 'username_0', 'text': ""This is still a valid issue and will likely be done after the current effort on the Ember Website RFC ü§î \r\n\r\n@MelSumner @username_1 do you think that we should include this in the content map that we're now working on? is there enough material for it to be included in the current work?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pichfl', 'comment_id': 510883299.0, 'datetime': '2019-07-12 13:19:28+00:00', 'masked_author': 'username_1', 'text': 'As the RFC is merged, it would be appropriate to put it into consideration for the content structure üôÇ', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mansona', 'comment_id': 552213306.0, 'datetime': '2019-11-10 17:04:44+00:00', 'masked_author': 'username_0', 'text': 'I think we should start looking into this after the redesign is complete, commenting so we can keep it open üëç', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mansona', 'comment_id': 596979031.0, 'datetime': '2020-03-10 09:11:46+00:00', 'masked_author': 'username_0', 'text': 'I am very much looking forward to staring on this issue üòç', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: New Feature: ""Why Ember"" Page
username_0: This issue is to track work that is related to creating a ""Why Ember"" page for the new Ember Website. This is separate from the work that is happening in the [Ember Website Redesign RFC](https://github.com/emberjs/rfcs/pull/425)

### Motivation
It can sometimes be difficult to communicate why someone might want to consider using Ember as a technology, especially because there are many different kinds of stakeholders that would have different reasons to consider Ember. For example, many of the people in the Ember Community Discord are Ember developers that use Ember on a daily basis and could probably speak at length about some of the technical merits and potentially ergonomic benefits of using Ember, but might not have much of a grasp on the **business reasons** for using something like Ember. If you ask a develper they may talk about the powerful template syntax but a C-Level executivive might want to hear about our dedication to backwards compatibility and LTS release structure.

**Note:** `C-Level executive` refers to the decision makers of a business such as CTO, CEO or CIO. In the UK and other parts of the world they may be referred to as Managing Director or Technical Director. See https://en.wikipedia.org/wiki/Corporate_title for more information

While this effort doesn't proclude us from adding some sections in the theme of ""Why Ember"" to the homepage, having a whole page dedicated to it will allow us to give it the space it deserves.

### Research and Previous efforts
This initiative has been spearheaded by @MelSumner in early 2018 and there has been a lot of discussion and research put into collecting content and opinions for this section. There was a survery form circulated to the community in 2018 that was used to collect a wider sample of ""Why people have chosen Ember"".

@MelSumner has also published a [Gist here](https://gist.github.com/MelSumner/971ba6b7a3c0b01a4cb3a43d3b962dac) that was intended for people to have extra points of discussion that they might bring up when asked ""Why should I use Ember"" 

### Requirements

- [ ] Add a route `/why` that will be used for this efforts. This means that https://emberjs.com/why will always link (or redirect) to something that helps to answer the question ""Why should you consider using Ember""
- [ ] Add a section for Developers and group some of the content on why developers should consider using Ember
- [ ] Add a section for C-Level exeutives
- [ ] Collect responses from the ""Why Ember"" survey and decide with the Learning Team which items will be included in which sections

### Open Questions
- [ ] Do we need any other sections for the initial version? Should we have a section for project-managers or other parties?
- [ ] Would it be useful to have testimonials on this page?
<issue_comment>username_0: This is still a valid issue and will likely be done after the current effort on the Ember Website RFC ü§î 

@MelSumner @username_1 do you think that we should include this in the content map that we're now working on? is there enough material for it to be included in the current work?
<issue_comment>username_1: As the RFC is merged, it would be appropriate to put it into consideration for the content structure üôÇ
<issue_comment>username_0: I think we should start looking into this after the redesign is complete, commenting so we can keep it open üëç
<issue_comment>username_0: I am very much looking forward to staring on this issue üòç"
cake-build/website,337543100,549,,"[{'action': 'opened', 'author': 'Jericho', 'comment_id': None, 'datetime': '2018-07-02 14:30:03+00:00', 'masked_author': 'username_0', 'text': ""The Cake.AddinDiscoverer tool has discovered discrepencies between the YAML files currently on Cake's web site and the packages discovered on Nuget.org:\r\n\r\nYAML files to be deleted:\r\n\r\n\r\nYAML files to be created:\r\n- Cake.Android.AvdManager\r\n- Cake.ArtifactDrop\r\n- Cake.AWS.Lambda\r\n- Cake.AzCopy\r\n- Cake.AzureBlobStorage\r\n- Cake.Bower\r\n- Cake.CachedNpm\r\n- Cake.CakeBoss\r\n- Cake.CK.Pack\r\n- Cake.ClickTwice\r\n- Cake.ConventionalChangelog\r\n- Cake.Coverlet\r\n- Cake.Deploy.Azure.Authentication\r\n- Cake.Deploy.Bot.LUIS\r\n- Cake.Deploy.Variables\r\n- Cake.DeployParams\r\n- Cake.DocCreator\r\n- Cake.DocumentDb\r\n- Cake.Eazfuscator.Net\r\n- Cake.Flyway\r\n- Cake.FtpDeploy\r\n- Cake.GitHubUtility\r\n- Cake.Gradle\r\n- Cake.Graph\r\n- Cake.Handlebars\r\n- Cake.HandlebarsDotNet\r\n- Cake.Helm\r\n- Cake.HgVersion\r\n- Cake.Jira\r\n- Cake.Karma\r\n- Cake.LittleHelpers\r\n- Cake.Mage\r\n- Cake.Markdown-Pdf\r\n- Cake.MonoApiTools\r\n- Cake.Netlify\r\n- Cake.NewRelic\r\n- Cake.Npx\r\n- Cake.NSpec\r\n- Cake.NSwag.Console\r\n- Cake.OssIndex\r\n- Cake.Packages\r\n- Cake.PickAndRoll\r\n- Cake.PinNuGetDependency\r\n- Cake.ScheduledTasks\r\n- Cake.SimpleHTTPServer\r\n- Cake.SimpleVersionIncrement\r\n- Cake.SquareLogo\r\n- Cake.Storm.Android\r\n- Cake.Storm.Environment\r\n- Cake.Storm.Fluent\r\n- Cake.Storm.Fluent.Android\r\n- Cake.Storm.Fluent.DotNetCore\r\n- Cake.Storm.Fluent.iOS\r\n- Cake.Storm.Fluent.NuGet\r\n- Cake.Storm.Fluent.Transformations\r\n- Cake.Storm.iOS\r\n- Cake.Storm.JsonBuildConfiguration\r\n- Cake.Storm.Nuget\r\n- Cake.TravisCI\r\n- Cake.Umbraco.PackageUploader\r\n- Cake.UncUtils\r\n- Cake.UServer\r\n- Cake.Utility\r\n- Cake.ViewCompiler\r\n- Cake.WindowsAppStore\r\n- Cake.Xamarin.Binding.Util\r\n\r\nYAML files to be updated:\r\n- Cake.AliaSql\r\n- Cake.Apigee\r\n- Cake.AppleSimulator\r\n- Cake.AWS.CloudFront\r\n- Cake.AWS.CodeDeploy\r\n- Cake.AWS.EC2\r\n[Truncated]\n- Cake.Plist\r\n- Cake.Powershell\r\n- Cake.ProjHelpers\r\n- Cake.Putty\r\n- Cake.Raygun\r\n- Cake.ReSharperReports\r\n- Cake.Services\r\n- Cake.Slack\r\n- Cake.SqlServer\r\n- Cake.SqlTools\r\n- Cake.Terraform\r\n- Cake.Tfx\r\n- Cake.Topshelf\r\n- Cake.Twitter\r\n- Cake.VersionReader\r\n- Cake.VsCode\r\n- Cake.VsixSignTool\r\n- Cake.VsMetrics\r\n- Cake.WebDeploy\r\n- Cake.Webpack"", 'title': 'Synchronizing YAML files', 'type': 'issue'}
 {'action': 'closed', 'author': 'Jericho', 'comment_id': None, 'datetime': '2018-08-30 17:30:49+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'Jericho', 'comment_id': 417402237.0, 'datetime': '2018-08-30 17:30:49+00:00', 'masked_author': 'username_0', 'text': 'The issue in Wyam highlighted by the PR associated with this issue has been resolved. Therefore closing this issue.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Synchronizing YAML files
username_0: The Cake.AddinDiscoverer tool has discovered discrepencies between the YAML files currently on Cake's web site and the packages discovered on Nuget.org:

YAML files to be deleted:


YAML files to be created:
- Cake.Android.AvdManager
- Cake.ArtifactDrop
- Cake.AWS.Lambda
- Cake.AzCopy
- Cake.AzureBlobStorage
- Cake.Bower
- Cake.CachedNpm
- Cake.CakeBoss
- Cake.CK.Pack
- Cake.ClickTwice
- Cake.ConventionalChangelog
- Cake.Coverlet
- Cake.Deploy.Azure.Authentication
- Cake.Deploy.Bot.LUIS
- Cake.Deploy.Variables
- Cake.DeployParams
- Cake.DocCreator
- Cake.DocumentDb
- Cake.Eazfuscator.Net
- Cake.Flyway
- Cake.FtpDeploy
- Cake.GitHubUtility
- Cake.Gradle
- Cake.Graph
- Cake.Handlebars
- Cake.HandlebarsDotNet
- Cake.Helm
- Cake.HgVersion
- Cake.Jira
- Cake.Karma
- Cake.LittleHelpers
- Cake.Mage
- Cake.Markdown-Pdf
- Cake.MonoApiTools
- Cake.Netlify
- Cake.NewRelic
- Cake.Npx
- Cake.NSpec
- Cake.NSwag.Console
- Cake.OssIndex
- Cake.Packages
- Cake.PickAndRoll
- Cake.PinNuGetDependency
- Cake.ScheduledTasks
- Cake.SimpleHTTPServer
- Cake.SimpleVersionIncrement
- Cake.SquareLogo
- Cake.Storm.Android
- Cake.Storm.Environment
- Cake.Storm.Fluent
- Cake.Storm.Fluent.Android
- Cake.Storm.Fluent.DotNetCore
- Cake.Storm.Fluent.iOS
- Cake.Storm.Fluent.NuGet
- Cake.Storm.Fluent.Transformations
- Cake.Storm.iOS
- Cake.Storm.JsonBuildConfiguration
- Cake.Storm.Nuget
- Cake.TravisCI
- Cake.Umbraco.PackageUploader
- Cake.UncUtils
- Cake.UServer
- Cake.Utility
- Cake.ViewCompiler
- Cake.WindowsAppStore
- Cake.Xamarin.Binding.Util

YAML files to be updated:
- Cake.AliaSql
- Cake.Apigee
- Cake.AppleSimulator
- Cake.AWS.CloudFront
- Cake.AWS.CodeDeploy
- Cake.AWS.EC2
[Truncated]
- Cake.Plist
- Cake.Powershell
- Cake.ProjHelpers
- Cake.Putty
- Cake.Raygun
- Cake.ReSharperReports
- Cake.Services
- Cake.Slack
- Cake.SqlServer
- Cake.SqlTools
- Cake.Terraform
- Cake.Tfx
- Cake.Topshelf
- Cake.Twitter
- Cake.VersionReader
- Cake.VsCode
- Cake.VsixSignTool
- Cake.VsMetrics
- Cake.WebDeploy
- Cake.Webpack<issue_closed>
<issue_comment>username_0: The issue in Wyam highlighted by the PR associated with this issue has been resolved. Therefore closing this issue."
docpress/docpress,166675698,114,,"[{'action': 'opened', 'author': 'pirogoeth', 'comment_id': None, 'datetime': '2016-07-20 20:35:47+00:00', 'masked_author': 'username_0', 'text': ""```\r\n‚Üí sean@magic-box | ~/Projects/dabble | branch: develop *+ | battery: 99% | load: 0.27 \r\nŒª DEBUG='*' npm-exec docpress\r\n  docpress-core Using config: /home/sean/Projects/dabble/docpress.json +0ms\r\n                                                    \r\n  Docpress                                          \r\n  starting development - ^C to exit                 \r\n                                                    \r\n   err ‚úó    first build                             \r\n     ¬∑¬∑¬∑    livereload                              \r\n     ¬∑¬∑¬∑    http://localhost:3000                   \r\n                                                    \r\n            Starting up...                          \r\n    ‚úì on    livereload                              \r\n  ‚úó Failed to read the file at: /home/sean/Projects/dabble/include/python2.7\r\n\r\nEISDIR: illegal operation on a directory, read  \r\n                                                    \r\n    EISDIR: illegal operation on a directory, read  \r\n    at Error (native)                               \r\n    ‚úì on    http://localhost:3000                   \r\n  tinylr:server Configuring HTTP server +0ms\r\n            Running                                 \r\n  connect:dispatcher use / anonymous +1ms\r\n  router use / <anonymous> +0ms\r\n  router:layer new / +0ms\r\n  router use / <anonymous> +9ms\r\n  router:layer new / +0ms\r\n  connect:dispatcher use / anonymous +12ms\r\n^C^X\r\n‚Üí sean@magic-box | ~/Projects/dabble | branch: develop *+ | battery: 99% | load: 0.24 \r\nŒª stat include/python2.7\r\n  File: ‚Äòinclude/python2.7‚Äô -> ‚Äò/usr/include/python2.7‚Äô\r\n  Size: 22        \tBlocks: 8          IO Block: 4096   symbolic link\r\nDevice: 15h/21d\tInode: 2968562     Links: 1\r\nAccess: (0777/lrwxrwxrwx)  Uid: ( 1000/    sean)   Gid: ( 1000/    sean)\r\nAccess: 2016-07-20 15:30:44.736296965 -0500\r\nModify: 2016-07-20 15:22:03.308303091 -0500\r\nChange: 2016-07-20 15:22:03.308303091 -0500\r\n Birth: -\r\n```\r\n\r\nAt this point, no pages have been generated but it starts the router and serves anyway."", 'title': 'Indexer chokes on symbolic links', 'type': 'issue'}
 {'action': 'closed', 'author': 'Kikobeats', 'comment_id': None, 'datetime': '2016-11-21 10:00:53+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Indexer chokes on symbolic links
username_0: ```
‚Üí sean@magic-box | ~/Projects/dabble | branch: develop *+ | battery: 99% | load: 0.27 
Œª DEBUG='*' npm-exec docpress
  docpress-core Using config: /home/sean/Projects/dabble/docpress.json +0ms
                                                    
  Docpress                                          
  starting development - ^C to exit                 
                                                    
   err ‚úó    first build                             
     ¬∑¬∑¬∑    livereload                              
     ¬∑¬∑¬∑    http://localhost:3000                   
                                                    
            Starting up...                          
    ‚úì on    livereload                              
  ‚úó Failed to read the file at: /home/sean/Projects/dabble/include/python2.7

EISDIR: illegal operation on a directory, read  
                                                    
    EISDIR: illegal operation on a directory, read  
    at Error (native)                               
    ‚úì on    http://localhost:3000                   
  tinylr:server Configuring HTTP server +0ms
            Running                                 
  connect:dispatcher use / anonymous +1ms
  router use / <anonymous> +0ms
  router:layer new / +0ms
  router use / <anonymous> +9ms
  router:layer new / +0ms
  connect:dispatcher use / anonymous +12ms
^C^X
‚Üí sean@magic-box | ~/Projects/dabble | branch: develop *+ | battery: 99% | load: 0.24 
Œª stat include/python2.7
  File: ‚Äòinclude/python2.7‚Äô -> ‚Äò/usr/include/python2.7‚Äô
  Size: 22        	Blocks: 8          IO Block: 4096   symbolic link
Device: 15h/21d	Inode: 2968562     Links: 1
Access: (0777/lrwxrwxrwx)  Uid: ( 1000/    sean)   Gid: ( 1000/    sean)
Access: 2016-07-20 15:30:44.736296965 -0500
Modify: 2016-07-20 15:22:03.308303091 -0500
Change: 2016-07-20 15:22:03.308303091 -0500
 Birth: -
```

At this point, no pages have been generated but it starts the router and serves anyway.<issue_closed>"
facebook/docusaurus,704887832,3466,,"[{'action': 'opened', 'author': 'arifszn', 'comment_id': None, 'datetime': '2020-09-19 14:01:12+00:00', 'masked_author': 'username_0', 'text': '## üêõ Bug Report\r\n\r\nI am having problem in swizzlling the react-live scope. I have installed a fresh project with @docusaurus/theme-live-codeblock installed just to be sure but same error occurs.\r\n\r\n### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?\r\n\r\nYes\r\n\r\n## To Reproduce\r\n\r\n1. `npm install --save @docusaurus/theme-live-codeblock`\r\n2. add the plugin to `docusaurus.config.js`\r\n2. `npm run swizzle @docusaurus/theme-live-codeblock ReactLiveScope`\r\n\r\n## Expected behavior\r\n\r\nswizzle the react-live scope and create a file **src/theme/ReactLiveScope/index.js**\r\n\r\n## Actual Behavior\r\n\r\n**```Component ""ReactLiveScope"" doesn\'t exists. ""ReactLiveScope"" is swizzled instead of ""ReactLiveScope"".                                                                    Error: Component ReactLiveScope not found.No component to swizzle```**\r\n\r\n![image](https://user-images.githubusercontent.com/45073703/93668896-a570a600-fab1-11ea-8887-dc6f5ed89085.png)\r\n\r\n\r\n## Your Environment\r\n\r\n- Docusaurus version used: 2.0.0-alpha.64\r\n- Environment name and version: Node.js v12.18.1, window\'s default cmd, PowerShell 7.0.3\r\n- Operating system and version (desktop or mobile): Windows 10 Pro. Version: 2004 \r\n\r\n## Reproducible Demo', 'title': 'Swizzling ReactLiveScope does not work', 'type': 'issue'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 697302358.0, 'datetime': '2020-09-23 11:26:18+00:00', 'masked_author': 'username_1', 'text': ""Hi\r\n\r\nWill be back from holidays on Monday 28.\r\n\r\nWill check new issues when I'm back. Afaik we already have an issue where swizzling fails to override original comp. In the meantime give a try to patch-package"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 700703081.0, 'datetime': '2020-09-29 13:28:26+00:00', 'masked_author': 'username_1', 'text': ""I wasn't able to reproduce\r\n\r\n![image](https://user-images.githubusercontent.com/749374/94564497-54f30880-0268-11eb-9a81-cdc0da04ecb9.png)\r\n\r\nWouldn't be surprised if it was a Windows related bug, unfortunately I don't have windows üòÖ"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 700757756.0, 'datetime': '2020-09-29 14:48:50+00:00', 'masked_author': 'username_0', 'text': 'Then you may close the issue. Thank you for the response.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 700766545.0, 'datetime': '2020-09-29 15:01:53+00:00', 'masked_author': 'username_1', 'text': ""Even if there's a valid workaround, I'd like to confirm if someone can reproduce this bug on Windows before closing ;)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'michelpf', 'comment_id': 700898919.0, 'datetime': '2020-09-29 18:28:06+00:00', 'masked_author': 'username_2', 'text': 'I have the same in MacOS:\r\n\r\n```\r\ndocusaurus swizzle ""@docusaurus/theme-live-codeblock"" ""ReactLiveScope""\r\n\r\nComponent ""ReactLiveScope"" doesn\'t exists. ""ReactLiveScope"" is swizzled instead of ""ReactLiveScope"".\r\nError: Component ReactLiveScope not found.No component to swizzle\r\n    at swizzle (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/lib/commands/swizzle.js:213:31)\r\n    at /Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/bin/docusaurus.js:73:5\r\n    at Command.<anonymous> (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/bin/docusaurus.js:113:25)\r\n    at Command.listener (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/commander/index.js:370:29)\r\n    at Command.emit (events.js:314:20)\r\n    at Command.parseArgs (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/commander/index.js:892:12)\r\n    at Command.parse (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/commander/index.js:642:21)\r\n    at Object.<anonymous> (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/bin/docusaurus.js:204:5)\r\n    at Module._compile (internal/modules/cjs/loader.js:1075:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1096:10)\r\n    at Module.load (internal/modules/cjs/loader.js:940:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:781:14)\r\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\r\n    at internal/main/run_main_module.js:17:47\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! beyondstyle-docs@0.0.0 swizzle: `docusaurus swizzle ""@docusaurus/theme-live-codeblock"" ""ReactLiveScope""`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the beyondstyle-docs@0.0.0 swizzle script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 700903787.0, 'datetime': '2020-09-29 18:36:15+00:00', 'masked_author': 'username_0', 'text': 'If the scopes can be passed to the CodeBlock as a prop, I think it would be very helpful and most people would not need swizzling the component.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 701403404.0, 'datetime': '2020-09-30 13:49:54+00:00', 'masked_author': 'username_1', 'text': ""Does anyone has an open-source site repro on github to see if it's a problem on your site? As it works on my computer it's hard to debug this problem."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 701405539.0, 'datetime': '2020-09-30 13:53:27+00:00', 'masked_author': 'username_1', 'text': ""@username_0 I don't understand what you mean by that, how would you pass the scopes to the CodeBlock exactly?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 701414395.0, 'datetime': '2020-09-30 14:07:12+00:00', 'masked_author': 'username_0', 'text': ""It was a suggestion if it is possible. Haven't looked at the code actually. I used the original react live as i didn't know how to swizzle manually."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dhitimedin', 'comment_id': 711127803.0, 'datetime': '2020-10-18 07:16:33+00:00', 'masked_author': 'username_3', 'text': 'I have a similar issue with swizzle\r\n[Local Search] [INFO]: The following documentation versions were detected: English, next\r\nComponent ""SearchBar"" doesn\'t exists. ""SearchBar"" is swizzled instead of ""SearchBar"".\r\nError: SearchBar is an internal component, and have a higher breaking change probability. If you want to swizzle it, use the ""--danger"" flag.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 711129337.0, 'datetime': '2020-10-18 07:33:43+00:00', 'masked_author': 'username_0', 'text': 'The issue is different though and searchbar swizzle works. Run: `npm run swizzle @docusaurus/theme-classic SearchBar --danger`', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dhitimedin', 'comment_id': 711129747.0, 'datetime': '2020-10-18 07:38:12+00:00', 'masked_author': 'username_3', 'text': 'I am trying to get lunr search https://github.com/lelouch77/docusaurus-lunr-search . They prescribe npm run swizzle docusaurus-lunr-search SearchBar. Is the same as npm run swizzle @docusaurus/theme-classic SearchBar --danger ?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 711131700.0, 'datetime': '2020-10-18 07:59:33+00:00', 'masked_author': 'username_0', 'text': 'In that case, run: `npm run swizzle docusaurus-lunr-search SearchBar --danger`', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dhitimedin', 'comment_id': 711146412.0, 'datetime': '2020-10-18 10:17:13+00:00', 'masked_author': 'username_3', 'text': '[Local Search] [INFO]: The following documentation versions were detected: English, next\r\nComponent ""SearchBar"" doesn\'t exists. ""SearchBar"" is swizzled instead of ""SearchBar"".\r\nError: SearchBar is an internal component, and have a higher breaking change probability. If you want to swizzle it, use the ""--danger"" flag.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 711154618.0, 'datetime': '2020-10-18 11:32:34+00:00', 'masked_author': 'username_0', 'text': 'Sorry for the typo. The command should be `npm run swizzle docusaurus-lunr-search SearchBar -- --danger`', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dhitimedin', 'comment_id': 711202603.0, 'datetime': '2020-10-18 15:01:51+00:00', 'masked_author': 'username_3', 'text': 'Great it progressed but I am still stuck. Firstly it gave the following message on swizzle:\r\n\r\n[Local Search] [INFO]: The following documentation versions were detected: English, next\r\nComponent ""SearchBar"" doesn\'t exists. ""SearchBar"" is swizzled instead of ""SearchBar"".\r\n\r\nSuccess! Copied docusaurus-lunr-search SearchBar to src/theme/SearchBar.\r\n\r\n\r\nThen while doing a build it gives the following error message: \r\n\r\ndocusaurus-lunr-search:: Building search docs and lunr index file\r\ndocusaurus-lunr-search:: Start scanning documents in 4 threads\r\nTypeError: Cannot read property \'properties\' of null\r\n    at emitCurrent (', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'arifszn', 'comment_id': 711207824.0, 'datetime': '2020-10-18 15:08:53+00:00', 'masked_author': 'username_0', 'text': 'Please refer to this [issue](https://github.com/lelouch77/docusaurus-lunr-search/issues/25) or create a new issue in [docusaurus-lunr-search](https://github.com/lelouch77/docusaurus-lunr-search/issues).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dhitimedin', 'comment_id': 711498256.0, 'datetime': '2020-10-19 03:57:49+00:00', 'masked_author': 'username_3', 'text': 'Sure! Thanks.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 724844083.0, 'datetime': '2020-11-10 17:16:51+00:00', 'masked_author': 'username_4', 'text': 'It seems our fault is that when we release new packages we do not mark them as `latest` version in npm.\r\n\r\n![image](https://user-images.githubusercontent.com/4408379/98707301-ef2e8c00-2390-11eb-8a62-fa358b03156f.png)\r\n\r\nThus, if we execute `npm install --save @docusaurus/theme-live-codeblock`, then we get an obsolete (.39) version:\r\n\r\n```\r\n   ""dependencies"": {\r\n     ""@docusaurus/theme-live-codeblock"": ""^2.0.0-alpha.39"",\r\n   }\r\n```\r\n\r\nTherefore, to get the actual version (in which `ReactLiveScope` will be available for swizzle), we need to use the `next` tag, respectively execute `npm install --save @docusaurus/theme-live-codeblock@next`.\r\n\r\n@username_0 could you please install the next (.66) version of `docusaurus/theme-live-codeblock` and tell us if this solved the issue or not?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SeanGroff', 'comment_id': 726338735.0, 'datetime': '2020-11-12 20:58:15+00:00', 'masked_author': 'username_5', 'text': ""@username_4 I noticed this as well. After installing `@docusaurus/theme-live-codeblock@next` I still get the same error reported in this issue. I'm on a Mac."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 726361403.0, 'datetime': '2020-11-12 21:50:02+00:00', 'masked_author': 'username_4', 'text': '@username_1 this is strange, can you please provide steps to reproduce or even better demo repo?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SeanGroff', 'comment_id': 726364211.0, 'datetime': '2020-11-12 21:56:14+00:00', 'masked_author': 'username_5', 'text': ""@username_1 Sure!\r\nHere's the repo you can clone and hopefully reproduce the problem. \r\nRepo: https://github.com/SelectQuoteLabs/SQForm/tree/master/SQFormDocs\r\n\r\nI'm currently using a Mac using Node v14.15.0"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 726374071.0, 'datetime': '2020-11-12 22:19:02+00:00', 'masked_author': 'username_4', 'text': ""@username_5 thanks, \r\n\r\nPlease try two options:\r\n\r\n- Run the command `npm run swizzle @docusaurus/theme-live-codeblock ReactLiveScope --danger`\r\n\r\n- If that didn't help, then try swizzling component via Yarn:  `yarn swizzle @docusaurus/theme-live-codeblock ReactLiveScope`"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'lex111', 'comment_id': None, 'datetime': '2020-11-17 06:59:26+00:00', 'masked_author': 'username_4', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 728730029.0, 'datetime': '2020-11-17 06:59:26+00:00', 'masked_author': 'username_4', 'text': 'In order to reduce staled issues, I am closing this issue, but feel free to open it again if needed.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Swizzling ReactLiveScope does not work
username_0: ## üêõ Bug Report

I am having problem in swizzlling the react-live scope. I have installed a fresh project with @docusaurus/theme-live-codeblock installed just to be sure but same error occurs.

### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes

## To Reproduce

1. `npm install --save @docusaurus/theme-live-codeblock`
2. add the plugin to `docusaurus.config.js`
2. `npm run swizzle @docusaurus/theme-live-codeblock ReactLiveScope`

## Expected behavior

swizzle the react-live scope and create a file **src/theme/ReactLiveScope/index.js**

## Actual Behavior

**```Component ""ReactLiveScope"" doesn't exists. ""ReactLiveScope"" is swizzled instead of ""ReactLiveScope"".                                                                    Error: Component ReactLiveScope not found.No component to swizzle```**

![image](https://user-images.githubusercontent.com/45073703/93668896-a570a600-fab1-11ea-8887-dc6f5ed89085.png)


## Your Environment

- Docusaurus version used: 2.0.0-alpha.64
- Environment name and version: Node.js v12.18.1, window's default cmd, PowerShell 7.0.3
- Operating system and version (desktop or mobile): Windows 10 Pro. Version: 2004 

## Reproducible Demo
<issue_comment>username_1: Hi

Will be back from holidays on Monday 28.

Will check new issues when I'm back. Afaik we already have an issue where swizzling fails to override original comp. In the meantime give a try to patch-package
<issue_comment>username_1: I wasn't able to reproduce

![image](https://user-images.githubusercontent.com/749374/94564497-54f30880-0268-11eb-9a81-cdc0da04ecb9.png)

Wouldn't be surprised if it was a Windows related bug, unfortunately I don't have windows üòÖ
<issue_comment>username_0: Then you may close the issue. Thank you for the response.
<issue_comment>username_1: Even if there's a valid workaround, I'd like to confirm if someone can reproduce this bug on Windows before closing ;)
<issue_comment>username_2: I have the same in MacOS:

```
docusaurus swizzle ""@docusaurus/theme-live-codeblock"" ""ReactLiveScope""

Component ""ReactLiveScope"" doesn't exists. ""ReactLiveScope"" is swizzled instead of ""ReactLiveScope"".
Error: Component ReactLiveScope not found.No component to swizzle
    at swizzle (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/lib/commands/swizzle.js:213:31)
    at /Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/bin/docusaurus.js:73:5
    at Command.<anonymous> (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/bin/docusaurus.js:113:25)
    at Command.listener (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/commander/index.js:370:29)
    at Command.emit (events.js:314:20)
    at Command.parseArgs (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/commander/index.js:892:12)
    at Command.parse (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/commander/index.js:642:21)
    at Object.<anonymous> (/Users/michel.fernandes/Google Drive/EY/Projetos/JS/beyondstyle-docs/node_modules/@docusaurus/core/bin/docusaurus.js:204:5)
    at Module._compile (internal/modules/cjs/loader.js:1075:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1096:10)
    at Module.load (internal/modules/cjs/loader.js:940:32)
    at Function.Module._load (internal/modules/cjs/loader.js:781:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)
    at internal/main/run_main_module.js:17:47
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! beyondstyle-docs@0.0.0 swizzle: `docusaurus swizzle ""@docusaurus/theme-live-codeblock"" ""ReactLiveScope""`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the beyondstyle-docs@0.0.0 swizzle script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
```
<issue_comment>username_0: If the scopes can be passed to the CodeBlock as a prop, I think it would be very helpful and most people would not need swizzling the component.
<issue_comment>username_1: Does anyone has an open-source site repro on github to see if it's a problem on your site? As it works on my computer it's hard to debug this problem.
<issue_comment>username_1: @username_0 I don't understand what you mean by that, how would you pass the scopes to the CodeBlock exactly?
<issue_comment>username_0: It was a suggestion if it is possible. Haven't looked at the code actually. I used the original react live as i didn't know how to swizzle manually.
<issue_comment>username_3: I have a similar issue with swizzle
[Local Search] [INFO]: The following documentation versions were detected: English, next
Component ""SearchBar"" doesn't exists. ""SearchBar"" is swizzled instead of ""SearchBar"".
Error: SearchBar is an internal component, and have a higher breaking change probability. If you want to swizzle it, use the ""--danger"" flag.
<issue_comment>username_0: The issue is different though and searchbar swizzle works. Run: `npm run swizzle @docusaurus/theme-classic SearchBar --danger`
<issue_comment>username_3: I am trying to get lunr search https://github.com/lelouch77/docusaurus-lunr-search . They prescribe npm run swizzle docusaurus-lunr-search SearchBar. Is the same as npm run swizzle @docusaurus/theme-classic SearchBar --danger ?
<issue_comment>username_0: In that case, run: `npm run swizzle docusaurus-lunr-search SearchBar --danger`
<issue_comment>username_3: [Local Search] [INFO]: The following documentation versions were detected: English, next
Component ""SearchBar"" doesn't exists. ""SearchBar"" is swizzled instead of ""SearchBar"".
Error: SearchBar is an internal component, and have a higher breaking change probability. If you want to swizzle it, use the ""--danger"" flag.
<issue_comment>username_0: Sorry for the typo. The command should be `npm run swizzle docusaurus-lunr-search SearchBar -- --danger`
<issue_comment>username_3: Great it progressed but I am still stuck. Firstly it gave the following message on swizzle:

[Local Search] [INFO]: The following documentation versions were detected: English, next
Component ""SearchBar"" doesn't exists. ""SearchBar"" is swizzled instead of ""SearchBar"".

Success! Copied docusaurus-lunr-search SearchBar to src/theme/SearchBar.


Then while doing a build it gives the following error message: 

docusaurus-lunr-search:: Building search docs and lunr index file
docusaurus-lunr-search:: Start scanning documents in 4 threads
TypeError: Cannot read property 'properties' of null
    at emitCurrent (
<issue_comment>username_0: Please refer to this [issue](https://github.com/lelouch77/docusaurus-lunr-search/issues/25) or create a new issue in [docusaurus-lunr-search](https://github.com/lelouch77/docusaurus-lunr-search/issues).
<issue_comment>username_3: Sure! Thanks.
<issue_comment>username_4: It seems our fault is that when we release new packages we do not mark them as `latest` version in npm.

![image](https://user-images.githubusercontent.com/4408379/98707301-ef2e8c00-2390-11eb-8a62-fa358b03156f.png)

Thus, if we execute `npm install --save @docusaurus/theme-live-codeblock`, then we get an obsolete (.39) version:

```
   ""dependencies"": {
     ""@docusaurus/theme-live-codeblock"": ""^2.0.0-alpha.39"",
   }
```

Therefore, to get the actual version (in which `ReactLiveScope` will be available for swizzle), we need to use the `next` tag, respectively execute `npm install --save @docusaurus/theme-live-codeblock@next`.

@username_0 could you please install the next (.66) version of `docusaurus/theme-live-codeblock` and tell us if this solved the issue or not?
<issue_comment>username_5: @username_4 I noticed this as well. After installing `@docusaurus/theme-live-codeblock@next` I still get the same error reported in this issue. I'm on a Mac.
<issue_comment>username_4: @username_1 this is strange, can you please provide steps to reproduce or even better demo repo?
<issue_comment>username_5: @username_1 Sure!
Here's the repo you can clone and hopefully reproduce the problem. 
Repo: https://github.com/SelectQuoteLabs/SQForm/tree/master/SQFormDocs

I'm currently using a Mac using Node v14.15.0
<issue_comment>username_4: @username_5 thanks, 

Please try two options:

- Run the command `npm run swizzle @docusaurus/theme-live-codeblock ReactLiveScope --danger`

- If that didn't help, then try swizzling component via Yarn:  `yarn swizzle @docusaurus/theme-live-codeblock ReactLiveScope`<issue_closed>
<issue_comment>username_4: In order to reduce staled issues, I am closing this issue, but feel free to open it again if needed."
kubernetes/website,674842961,23015,,"[{'action': 'opened', 'author': 'forvaidya', 'comment_id': None, 'datetime': '2020-08-07 08:08:40+00:00', 'masked_author': 'username_0', 'text': ""**This is a Bug Report**\r\n\r\n make container-serve\r\n\r\nError: Unable to locate config file or config directory. Perhaps you need to create a new site.\r\n       Run `hugo help new` for details.\r\n\r\nMakefile:71: recipe for target 'container-serve' failed\r\n\r\n<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->\r\n\r\n<!--Required Information-->\r\n**Problem:**\r\n\r\n**Proposed Solution:**\r\n\r\n**Page to Update:**\r\nhttps://kubernetes.io/...\r\n\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->"", 'title': 'Unable to make and run website under WSL ', 'type': 'issue'}
 {'action': 'created', 'author': 'forvaidya', 'comment_id': 670393884.0, 'datetime': '2020-08-07 08:16:22+00:00', 'masked_author': 'username_0', 'text': 'another question: is there a way to build it portably in windows. WSL is restrictive', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 670403611.0, 'datetime': '2020-08-07 08:39:15+00:00', 'masked_author': 'username_1', 'text': ""/triage support\r\n\r\nDid you run `make container-image` first @username_0 ?\r\n\r\n@username_0: on WSL, you might find that `make serve` works better. You'll need Hugo and NPM locally before that works."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'forvaidya', 'comment_id': 670433136.0, 'datetime': '2020-08-07 09:47:44+00:00', 'masked_author': 'username_0', 'text': 'I have done make container-image already. \r\n\r\nIs there a windows native build procedure', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'forvaidya', 'comment_id': 670442494.0, 'datetime': '2020-08-07 10:11:00+00:00', 'masked_author': 'username_0', 'text': 'On wsl it did not work, I have adjusted values in netlify.toml and ran following \r\n\r\nhugo server --buildFuture \r\nand it worked http://localhost:1313/\r\n\r\nI appreciate if container build is made available for Powershell', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 670940513.0, 'datetime': '2020-08-08 15:17:06+00:00', 'masked_author': 'username_1', 'text': '@username_0 can you explain what changes to the README would make it clear how to run a local build within WSL?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'forvaidya', 'comment_id': 670948742.0, 'datetime': '2020-08-08 16:38:58+00:00', 'masked_author': 'username_0', 'text': 'I think for windows  **hugo command** is only viable way on windows, unless a rewrite makefile in ps1 script as make is not portable.  If I can write ps1 script as a replacememt I will send pull request for sure.\r\n\r\nCan we add this note in README.\r\n\r\n```\r\nhugo server --buildFuture\r\nand it worked http://localhost:1313/\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 739569776.0, 'datetime': '2020-12-06 21:48:10+00:00', 'masked_author': 'username_1', 'text': ""@username_0 If you'd be willing to document a local preview process that works on Windows, please feel free to submit a pull request."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Unable to make and run website under WSL 
username_0: **This is a Bug Report**

 make container-serve

Error: Unable to locate config file or config directory. Perhaps you need to create a new site.
       Run `hugo help new` for details.

Makefile:71: recipe for target 'container-serve' failed

<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->
<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->

<!--Required Information-->
**Problem:**

**Proposed Solution:**

**Page to Update:**
https://kubernetes.io/...

<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->
<issue_comment>username_0: another question: is there a way to build it portably in windows. WSL is restrictive
<issue_comment>username_1: /triage support

Did you run `make container-image` first @username_0 ?

@username_0: on WSL, you might find that `make serve` works better. You'll need Hugo and NPM locally before that works.
<issue_comment>username_0: I have done make container-image already. 

Is there a windows native build procedure
<issue_comment>username_0: On wsl it did not work, I have adjusted values in netlify.toml and ran following 

hugo server --buildFuture 
and it worked http://localhost:1313/

I appreciate if container build is made available for Powershell
<issue_comment>username_1: @username_0 can you explain what changes to the README would make it clear how to run a local build within WSL?
<issue_comment>username_0: I think for windows  **hugo command** is only viable way on windows, unless a rewrite makefile in ps1 script as make is not portable.  If I can write ps1 script as a replacememt I will send pull request for sure.

Can we add this note in README.

```
hugo server --buildFuture
and it worked http://localhost:1313/
```
<issue_comment>username_1: @username_0 If you'd be willing to document a local preview process that works on Windows, please feel free to submit a pull request."
ethereum/ethereum-org-website,852176174,2797,,"[{'action': 'opened', 'author': 'StanislavBreadless', 'comment_id': None, 'datetime': '2021-04-07 08:48:51+00:00', 'masked_author': 'username_0', 'text': '**Is your feature request related to a problem? Please describe.**\r\n\r\nI very like the description of the L2 solutions as it lets the Ethereum community know more about the different ways Ethereum can be scaled today. However, I find the description somewhat biased against zero knowledge rollups :slightly_frowning_face: \r\n\r\nThe section that describes ZK rollups says that they are ""_Limited to simple transfers, not compatible with the EVM._"", which is not true at all.\r\n\r\nStarkWare is working on [Cairo & StarkNet](https://medium.com/starkware/on-the-road-to-starknet-a-permissionless-stark-powered-l2-zk-rollup-83be53640880). Even though Cairo is not EVM-compatible, it is a non-Turing-complete language that will allow much more than simple transfers.\r\n\r\nMatter Labs is working on [Solidity support & near-full EVM compatibility](https://medium.com/matter-labs/zksync-2-0-roadmap-update-zkevm-testnet-in-may-mainnet-in-august-379c66995021). This Spring, even before the launch of L2 smart contracts, zkSync will natively support NFTs and atomic swaps.\r\n\r\nAlso, the description of Optimistic Rollups says that ""_All transaction data is stored on the layer 1 chain, meaning it\'s secure and decentralized._"", which is absolutely correct. I believe that we should also mention that in ZK rollups ""_The data that is needed to restore the state is stored on the layer 1 chain, meaning that it\'s secure and decentralized_"" because that is the point of the word ""rollup"". The data is stored on-chain to protect the users of the protocol.\r\n\r\n**Describe the solution you\'d like**\r\n\r\nI propose to change the wording:\r\n\r\nFrom ""_Limited to simple transfers, not compatible with the EVM._"" to ""_Some don\'t have full EVM support._"".\r\n\r\nAlso, add ""_The data that is needed to restore the state is stored on the layer 1 chain, meaning that it\'s secure and decentralized_"" as one of the Pros of ZK rollups.\r\n\r\n**Describe alternatives you\'ve considered**\r\n\r\nI believe that any description of ZK rollups that is both accepted by the community and fairly describes their full potential that goes far beyond ""simple transfers"" is a good one :slightly_smiling_face:.\r\n\r\n**Want to contribute?**\r\n\r\nYes, but I would really love :heart: to hear what the community thinks about the proposal and if I missed something.', 'title': 'Show that zkRollups are much more than transactions', 'type': 'issue'}
 {'action': 'created', 'author': 'StanislavBreadless', 'comment_id': 814731223.0, 'datetime': '2021-04-07 08:50:32+00:00', 'masked_author': 'username_0', 'text': 'The contribution guide says that I need to comment on the issue if I am willing to contribute. \r\n\r\nI am willing to contribute :slightly_smiling_face:', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'wackerow', 'comment_id': None, 'datetime': '2021-04-22 16:22:21+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Show that zkRollups are much more than transactions
username_0: **Is your feature request related to a problem? Please describe.**

I very like the description of the L2 solutions as it lets the Ethereum community know more about the different ways Ethereum can be scaled today. However, I find the description somewhat biased against zero knowledge rollups :slightly_frowning_face: 

The section that describes ZK rollups says that they are ""_Limited to simple transfers, not compatible with the EVM._"", which is not true at all.

StarkWare is working on [Cairo & StarkNet](https://medium.com/starkware/on-the-road-to-starknet-a-permissionless-stark-powered-l2-zk-rollup-83be53640880). Even though Cairo is not EVM-compatible, it is a non-Turing-complete language that will allow much more than simple transfers.

Matter Labs is working on [Solidity support & near-full EVM compatibility](https://medium.com/matter-labs/zksync-2-0-roadmap-update-zkevm-testnet-in-may-mainnet-in-august-379c66995021). This Spring, even before the launch of L2 smart contracts, zkSync will natively support NFTs and atomic swaps.

Also, the description of Optimistic Rollups says that ""_All transaction data is stored on the layer 1 chain, meaning it's secure and decentralized._"", which is absolutely correct. I believe that we should also mention that in ZK rollups ""_The data that is needed to restore the state is stored on the layer 1 chain, meaning that it's secure and decentralized_"" because that is the point of the word ""rollup"". The data is stored on-chain to protect the users of the protocol.

**Describe the solution you'd like**

I propose to change the wording:

From ""_Limited to simple transfers, not compatible with the EVM._"" to ""_Some don't have full EVM support._"".

Also, add ""_The data that is needed to restore the state is stored on the layer 1 chain, meaning that it's secure and decentralized_"" as one of the Pros of ZK rollups.

**Describe alternatives you've considered**

I believe that any description of ZK rollups that is both accepted by the community and fairly describes their full potential that goes far beyond ""simple transfers"" is a good one :slightly_smiling_face:.

**Want to contribute?**

Yes, but I would really love :heart: to hear what the community thinks about the proposal and if I missed something.
<issue_comment>username_0: The contribution guide says that I need to comment on the issue if I am willing to contribute. 

I am willing to contribute :slightly_smiling_face:<issue_closed>"
cake-build/website,217605356,326,"{'number': 326.0, 'repo': 'website', 'user_login': 'cake-build'}","[{'action': 'opened', 'author': 'StefanOssendorf', 'comment_id': None, 'datetime': '2017-03-28T15:46:33Z', 'masked_author': 'username_0', 'text': 'Hello, \r\n\r\nsince I was struggling to get cake work on the new csproj format of a .Net Standard library on VSTS, I thought I can put a small guide to fix this issue.\r\n\r\nMaybe it can be moved to a short FAQ topic like ""Resolve error \'Failed to load msbuild Toolset v14\'"".\r\nI\'m open for all :)\r\n\r\nCheers,\r\nStefan\r\n\r\nPs: I\'ve linked the pictures to my fork, because I do not know another way. So an advice would be great!', 'title': 'VSTS - .Net Standard Library,  using Cake with a powershell script', 'type': 'issue'}
 {'action': 'created', 'author': 'StefanOssendorf', 'comment_id': 290645920.0, 'datetime': '2017-03-31 08:08:33+00:00', 'masked_author': 'username_0', 'text': 'Should I show a diff of the complete file or what exactly do you mean? Or is there a nice way to show a diff?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'StefanOssendorf', 'comment_id': 291138957.0, 'datetime': '2017-04-03 13:14:34+00:00', 'masked_author': 'username_0', 'text': 'NuGet resoltion part changed to make the part to change more clear.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Cheesebaron', 'comment_id': 291139011.0, 'datetime': '2017-04-03 13:14:51+00:00', 'masked_author': 'username_1', 'text': 'That diff change is much much better now. All green from here üëç', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'devlead', 'comment_id': 291631512.0, 'datetime': '2017-04-04 21:04:44+00:00', 'masked_author': 'username_2', 'text': '@username_0  your changes have been merged, thanks for your contribution üëç', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'StefanOssendorf', 'comment_id': 291632011.0, 'datetime': '2017-04-04 21:06:43+00:00', 'masked_author': 'username_0', 'text': ""@username_2 You're welcome :)"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: VSTS - .Net Standard Library,  using Cake with a powershell script
username_0: Hello, 

since I was struggling to get cake work on the new csproj format of a .Net Standard library on VSTS, I thought I can put a small guide to fix this issue.

Maybe it can be moved to a short FAQ topic like ""Resolve error 'Failed to load msbuild Toolset v14'"".
I'm open for all :)

Cheers,
Stefan

Ps: I've linked the pictures to my fork, because I do not know another way. So an advice would be great!
<issue_comment>username_0: Should I show a diff of the complete file or what exactly do you mean? Or is there a nice way to show a diff?
<issue_comment>username_0: NuGet resoltion part changed to make the part to change more clear.
<issue_comment>username_1: That diff change is much much better now. All green from here üëç
<issue_comment>username_2: @username_0  your changes have been merged, thanks for your contribution üëç
<issue_comment>username_0: @username_2 You're welcome :)"
gohugoio/hugo,66301129,1042,"{'number': 1042.0, 'repo': 'hugo', 'user_login': 'gohugoio'}","[{'action': 'opened', 'author': 'mdhender', 'comment_id': None, 'datetime': '2015-04-04T10:05:13Z', 'masked_author': 'username_0', 'text': 'Template developers frequently need to show variable values while\ndebugging templates. Issue #1009 requests better support for this.\n\nThere are already ways to display information about template\nvariables. This patch makes it easier for users that don\'t have\nexperience working with Go templates.\n\nThe `printf ""%#v""` idiom is powerful but requires some knowledge\nof Hugo\'s internal representation of Go value types. Not all\ntemplate designers will have that knowledge. The two functions\n`inspect` and `typeOf` provide a path towards easier to use and\nunderstand printing of variables and values.\n\nThe `inspect` function replaces the `printf` call. This version\nrelies on the default `string` conversion for the result. This\nprovides a path towards pretty-printing variables and values.\n\nTemplates may use `typeOf` to determine the best formatting\nfor variables and values. This replaces `printf %T`.\n\nReferences #1009', 'title': 'Add template debugging functions for variables', 'type': 'issue'}]","<issue_start><issue_comment>Title: Add template debugging functions for variables
username_0: Template developers frequently need to show variable values while
debugging templates. Issue #1009 requests better support for this.

There are already ways to display information about template
variables. This patch makes it easier for users that don't have
experience working with Go templates.

The `printf ""%#v""` idiom is powerful but requires some knowledge
of Hugo's internal representation of Go value types. Not all
template designers will have that knowledge. The two functions
`inspect` and `typeOf` provide a path towards easier to use and
understand printing of variables and values.

The `inspect` function replaces the `printf` call. This version
relies on the default `string` conversion for the result. This
provides a path towards pretty-printing variables and values.

Templates may use `typeOf` to determine the best formatting
for variables and values. This replaces `printf %T`.

References #1009"
RSS-Bridge/rss-bridge,1008045508,2280,,"[{'action': 'opened', 'author': 'Bockiii', 'comment_id': None, 'datetime': '2021-09-27 11:42:57+00:00', 'masked_author': 'username_0', 'text': 'Greetings,\r\n\r\nin regards to software quality, I wanted to suggest a new functionality that can run on a schedule on github (once a week/every two weeks or so) to check if a bridge returns content. For many bridges, this can be done without any interaction by the bridge maintainer. Every bridge that has no parameters or only checkbox/list selectors can be randomly checked. Bridges that have text fields need an additional function where the bridge maintainer should enter a value.\r\n\r\nEvery bridge that uses a text field needs to implement a function ""testBridge"" (using this name for the discussion, can be named something else of course) that will define a set of values that a user would chose as parameters. For text fields, at least one possible value should be entered.\r\n\r\nIdeas:\r\n- Implement a test that uses a bridge like a user would (calling the results of an rss feed link basically).\r\n- For bridges that use text fields, require an implemented function ""testBridge"" that includes example values (at least one)\r\n- For bridges that only use lists or checkboxes, the test should randomize the selections (maybe even run every bridge 2 or 3 times with randomized selections).\r\n- The test output should be limited to 2-3 items since some of the bridges return hundreds of items which would not change the result of the test, only the runtime.\r\n\r\nThis is meant as a starter so please add your ideas. Sadly, my knowledge of php is probably not enough to implement the testBridge function, maybe I can help with the github actions test though.', 'title': 'Enhancement: Test-Function to check if a bridge returns ""something""', 'type': 'issue'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 928094182.0, 'datetime': '2021-09-27 17:26:45+00:00', 'masked_author': 'username_0', 'text': ""More thoughts:\r\n\r\nInstead of implementing a test function in php and adding a test-function that bridges need to add, we could or should make the exampleValue mandatory and use that. This way, the information is actually bound to the field in question and it actually improves useability of the bridge.\r\n\r\ncode pieces needed:\r\n\r\n- github action that runs on schedule running a script\r\n- said script, doing the actual checking and providing some output\r\n- adding a warning if a text field has no exampleValue. Only for mandatory text fields!\r\n\r\nI'm currently working on the script that does the checking. As soon as I have a first working version, I'll start a PR that other people may add stuffs to"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 929092145.0, 'datetime': '2021-09-28 11:14:49+00:00', 'masked_author': 'username_0', 'text': 'Yeeeeahh... after a bunch of testing, I think doing it in php is probably going to be best honestly. Working with php code from either bash shell or powershell is a biiiiiiiitch. So... anyone with php knowledge open for doing this?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 929948519.0, 'datetime': '2021-09-29 08:18:01+00:00', 'masked_author': 'username_0', 'text': '@joshcoales I saw that you wanted to implement this in the facebook bridge a while ago. What do you think of the general approach?\r\n\r\nI suggest an additional php page outside of bridges that would show the results from looping through the bridges in the way I described before. Would you feel up to that?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 930575181.0, 'datetime': '2021-09-29 21:58:45+00:00', 'masked_author': 'username_0', 'text': ""Update: I went back to bash :)\r\n\r\nI also have a first start. There are 4 flavors of bridge:\r\n\r\n1. Bridge with no parameters\r\n2. Bridge with parameters\r\n3. Bridge based on another bridge with no parameters\r\n4. Bridge based on another bridge with additional parameters\r\n\r\nExamples for those\r\n\r\n1. Asrock news bridge\r\n2. Google bridge\r\n3. Mspabooru bridge\r\n4. Github pullrequest bridge\r\n\r\nIn the case of Mspabooru, it's even nested as that requires gelbooru which requires danbooru...\r\n\r\n1. is done and identifies empty returns and errors:\r\n![image](https://user-images.githubusercontent.com/16492843/135354291-dc6cb423-4e53-4a3b-9112-c233c3a8608b.png)\r\n\r\n(output formatting and storing will be changed in the end)\r\n\r\nNext is going to be 2, but I think that the solution will be 80% of the solution for 3 and 4."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 931229778.0, 'datetime': '2021-09-30 11:18:39+00:00', 'masked_author': 'username_0', 'text': ""Man, screw me sideways, I'm an idiot...\r\n\r\nI can get the values for all 4 types by just scraping the rss-bridge main site (with all bridges whitelisted) myself.. Thats a bunch of hours wasted..."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 931576010.0, 'datetime': '2021-09-30 18:48:07+00:00', 'masked_author': 'username_0', 'text': 'I\'m doing it in a different way now. I actually build a bridge that scrapes the rss-bridge main page, gathers all bridges, retrieves the content of those bridges and then lists all bridges with issues. \r\n\r\nI have the bridge and am listing all sites that don\'t need a parameter. I\'m working on the others, but before they can be actually tested, there is going to be some major maintenance needed on ""exampleValues"" and ""defaultValues""... more on that later.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bockiii', 'comment_id': 933603178.0, 'datetime': '2021-10-04 15:32:34+00:00', 'masked_author': 'username_0', 'text': 'Even though this has been a ""talking to the wall"" issue so far, I would love to get some input on some interpretation questions on bridges.\r\n\r\nThings that are easy:\r\n- Bridges without parameter (105 btw).\r\n- Bridges with fields that have examplevalue/defaultvalue information and have a 1-1 relation. Example: Amazon Price Tracker\r\n\r\nThings that are hard:\r\n- Bridges with multiple contexts. My idea is to randomize which context to chose for each ""test run"", which hopefully produces a valid picture over time.\r\n- Non-Mandatory fields with non 1-1-relations (e.g. Crewbay. ""status of the boat"" selection has a direct impact on selection of one of the ""position wanted"", but it\'s not deducible from the code itself.\r\n\r\nThings that are impossible:\r\n- Mandatory fields without examplevalue/defaultvalue (e.g Amazon, but this actually accounts for maaaaany bridges). There is no way to deduce a search value that could return an actual feed. For the initial release of the testing, I would skip the bridges and just mark them as ""untestable"" and adapt them one by one. Also make it mandatory for ""mandatory:true"" fields to have an example/defaultvalue for the future.\r\n- Mandatory fields with non 1-1-relations (e.g Bad Dragon, even though its broken in general, good example). If 2 checkboxes are exclusive (for example a size search, one checkbox is ""large"", one is ""small"", checking both would return no feed.\r\n\r\nI would love to get some input from you on how to handle the different bridges. I will upload my current state of bridge later.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 939275789.0, 'datetime': '2021-10-09 10:48:21+00:00', 'masked_author': 'username_1', 'text': 'Hi, Bocki!\r\nAutomatic bridge testing feature is good idea. But you need to notice, that there are abandoned bridges. So after reporting that this bridge is not working, nothing is going to happen until this bridge will be adopted by other maintainer.\r\n\r\nSo this feature must be opted in by bridge maintainer. In this case I would suggest bridge maintainer to configure his/her own github repository to send notifications, if bridge works fine. Probably it could be done via scheduled events in github actions (https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#scheduled-events). We could make a template for that maintainer to copy-paste to his/her repository.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Enhancement: Test-Function to check if a bridge returns ""something""
username_0: Greetings,

in regards to software quality, I wanted to suggest a new functionality that can run on a schedule on github (once a week/every two weeks or so) to check if a bridge returns content. For many bridges, this can be done without any interaction by the bridge maintainer. Every bridge that has no parameters or only checkbox/list selectors can be randomly checked. Bridges that have text fields need an additional function where the bridge maintainer should enter a value.

Every bridge that uses a text field needs to implement a function ""testBridge"" (using this name for the discussion, can be named something else of course) that will define a set of values that a user would chose as parameters. For text fields, at least one possible value should be entered.

Ideas:
- Implement a test that uses a bridge like a user would (calling the results of an rss feed link basically).
- For bridges that use text fields, require an implemented function ""testBridge"" that includes example values (at least one)
- For bridges that only use lists or checkboxes, the test should randomize the selections (maybe even run every bridge 2 or 3 times with randomized selections).
- The test output should be limited to 2-3 items since some of the bridges return hundreds of items which would not change the result of the test, only the runtime.

This is meant as a starter so please add your ideas. Sadly, my knowledge of php is probably not enough to implement the testBridge function, maybe I can help with the github actions test though.
<issue_comment>username_0: More thoughts:

Instead of implementing a test function in php and adding a test-function that bridges need to add, we could or should make the exampleValue mandatory and use that. This way, the information is actually bound to the field in question and it actually improves useability of the bridge.

code pieces needed:

- github action that runs on schedule running a script
- said script, doing the actual checking and providing some output
- adding a warning if a text field has no exampleValue. Only for mandatory text fields!

I'm currently working on the script that does the checking. As soon as I have a first working version, I'll start a PR that other people may add stuffs to
<issue_comment>username_0: Yeeeeahh... after a bunch of testing, I think doing it in php is probably going to be best honestly. Working with php code from either bash shell or powershell is a biiiiiiiitch. So... anyone with php knowledge open for doing this?
<issue_comment>username_0: @joshcoales I saw that you wanted to implement this in the facebook bridge a while ago. What do you think of the general approach?

I suggest an additional php page outside of bridges that would show the results from looping through the bridges in the way I described before. Would you feel up to that?
<issue_comment>username_0: Update: I went back to bash :)

I also have a first start. There are 4 flavors of bridge:

1. Bridge with no parameters
2. Bridge with parameters
3. Bridge based on another bridge with no parameters
4. Bridge based on another bridge with additional parameters

Examples for those

1. Asrock news bridge
2. Google bridge
3. Mspabooru bridge
4. Github pullrequest bridge

In the case of Mspabooru, it's even nested as that requires gelbooru which requires danbooru...

1. is done and identifies empty returns and errors:
![image](https://user-images.githubusercontent.com/16492843/135354291-dc6cb423-4e53-4a3b-9112-c233c3a8608b.png)

(output formatting and storing will be changed in the end)

Next is going to be 2, but I think that the solution will be 80% of the solution for 3 and 4.
<issue_comment>username_0: Man, screw me sideways, I'm an idiot...

I can get the values for all 4 types by just scraping the rss-bridge main site (with all bridges whitelisted) myself.. Thats a bunch of hours wasted...
<issue_comment>username_0: I'm doing it in a different way now. I actually build a bridge that scrapes the rss-bridge main page, gathers all bridges, retrieves the content of those bridges and then lists all bridges with issues. 

I have the bridge and am listing all sites that don't need a parameter. I'm working on the others, but before they can be actually tested, there is going to be some major maintenance needed on ""exampleValues"" and ""defaultValues""... more on that later.
<issue_comment>username_0: Even though this has been a ""talking to the wall"" issue so far, I would love to get some input on some interpretation questions on bridges.

Things that are easy:
- Bridges without parameter (105 btw).
- Bridges with fields that have examplevalue/defaultvalue information and have a 1-1 relation. Example: Amazon Price Tracker

Things that are hard:
- Bridges with multiple contexts. My idea is to randomize which context to chose for each ""test run"", which hopefully produces a valid picture over time.
- Non-Mandatory fields with non 1-1-relations (e.g. Crewbay. ""status of the boat"" selection has a direct impact on selection of one of the ""position wanted"", but it's not deducible from the code itself.

Things that are impossible:
- Mandatory fields without examplevalue/defaultvalue (e.g Amazon, but this actually accounts for maaaaany bridges). There is no way to deduce a search value that could return an actual feed. For the initial release of the testing, I would skip the bridges and just mark them as ""untestable"" and adapt them one by one. Also make it mandatory for ""mandatory:true"" fields to have an example/defaultvalue for the future.
- Mandatory fields with non 1-1-relations (e.g Bad Dragon, even though its broken in general, good example). If 2 checkboxes are exclusive (for example a size search, one checkbox is ""large"", one is ""small"", checking both would return no feed.

I would love to get some input from you on how to handle the different bridges. I will upload my current state of bridge later.
<issue_comment>username_1: Hi, Bocki!
Automatic bridge testing feature is good idea. But you need to notice, that there are abandoned bridges. So after reporting that this bridge is not working, nothing is going to happen until this bridge will be adopted by other maintainer.

So this feature must be opted in by bridge maintainer. In this case I would suggest bridge maintainer to configure his/her own github repository to send notifications, if bridge works fine. Probably it could be done via scheduled events in github actions (https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#scheduled-events). We could make a template for that maintainer to copy-paste to his/her repository."
