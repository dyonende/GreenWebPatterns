conda-forge/conda-forge.github.io,559929874,970,"{'number': 970.0, 'repo': 'conda-forge.github.io', 'user_login': 'conda-forge'}","[{'action': 'opened', 'author': 'msarahan', 'comment_id': None, 'datetime': '2020-02-04T19:27:43Z', 'masked_author': 'username_0', 'text': '@conda-forge/core\r\nThis PR falls under the Modifying Governance policy, please vote and/or comment on this PR.\r\nThis PR needs 75% of core to vote yea to pass.\r\nTo vote please leave Approve (yea) or Request Changes (nay) reviews.\r\nIf you would like changes to the current language please leave a comment or push to this branch.\r\nThis vote will end on February 19, after the general meeting on that day.', 'title': 'clarify rules around quorum, add timeout proposal', 'type': 'issue'}
 {'action': 'created', 'author': 'CJ-Wright', 'comment_id': 582081168.0, 'datetime': '2020-02-04 19:42:15+00:00', 'masked_author': 'username_1', 'text': ""It may be good to set a minimum quorum. I'd rather not have a vote where one yea and the rest abstaining go through. These are decisions we need to stand behind as an organization, we need some form of consensus beyond one yes and a bunch of meh."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 582084493.0, 'datetime': '2020-02-04 19:50:02+00:00', 'masked_author': 'username_2', 'text': '</details>', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 582084497.0, 'datetime': '2020-02-04 19:50:03+00:00', 'masked_author': 'username_0', 'text': 'if people are really that ""meh"" about it, does it matter anyway?  I agree in principle.  I don\'t know how to express that practically.  Some things that really, really matter just don\'t inspire as much participation as they should.  For example, when we voted on changing the compilers way back when, the turnout was abysmal.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 582428984.0, 'datetime': '2020-02-05 14:18:56+00:00', 'masked_author': 'username_0', 'text': 'To @username_1 and others requesting a minimum quorum, please suggest guidelines for such a quorum.  That is the crux of this issue.  Our current minimum quorum corresponds to the vote fraction, which is applied twice, as described in this PR\'s text.  What would you change it to?  What is enough?  Is it a fraction?  An absolute number?\r\n\r\nVotes happen because someone cares about something enough to put effort in.  If other people don\'t care enough to vote on it, should that really invalidate that person\'s initiative?  People don\'t vote for all kinds of reasons:\r\n\r\n* don\'t feel technically qualified\r\n* don\'t know a person who is being elected\r\n* tied up with work / on hiatus\r\n* can\'t be bothered\r\n* didn\'t see the email / chat\r\n* ???\r\n\r\nI don\'t want people pushing crap through any more than anyone else, but we have a serious problem here.  We need mechanisms to reject bad stuff without letting other things die on the vine.  Maybe this is where the abstain vote comes in.  Maybe it\'s more of a comment that says ""I don\'t have enough information to vote on this yet.  Could you please explain XYZ, or could Person XYZ please give a short introduction at the next meeting?""  We can\'t let things just not happen because of inaction.  That inaction is passive action, and it\'s miserable and disrespectful to the people who are expending effort and thought to get things done.  Pawning this off on ""that\'s what emeritus is for"" is irresponsible and unrealistic.  If people can\'t be bothered to vote, they sure as hell can\'t be bothered to actively check themselves in and out of emeritus status.\r\n\r\nRejection by inaction should not be a thing.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dougalsutherland', 'comment_id': 582662708.0, 'datetime': '2020-02-05 23:28:47+00:00', 'masked_author': 'username_3', 'text': 'I made some very small, hopefully uncontroversial, tweaks. Take a look and make sure you agree.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 582685472.0, 'datetime': '2020-02-06 00:57:53+00:00', 'masked_author': 'username_0', 'text': 'Thanks @username_3, those are good clarifications.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 583618196.0, 'datetime': '2020-02-07 21:21:05+00:00', 'masked_author': 'username_0', 'text': 'I think the key thing here is that we are enforcing two things:\r\n\r\n1. no one can try to sneak something past.  There must be loud communication on multiple fronts over a long time period, or else the vote cannot ""time out.""  I think this is key to the idea of the threat of anything passing with just 1 vote.  If anything passes with only one vote, we will all have been wildly irresponsible.\r\n2. If nobody can be bothered to vote, it shouldn\'t block progress.\r\n\r\nA huge part of this is changing the group\'s culture.  Right now, I think people stay silent when they are uncomfortable voting.  Really, they should say ""I don\'t feel comfortable voting yet because X, Y, Z"" and the person holding the vote needs to address those concerns.  Those concerns should be accepted in good faith, and best effort should be made to address them. That way, the vote is finite and does not end for ambiguous reasons.  People can still actively abstain if they really don\'t want to have an opinion, but  passively abstaining by not casting a vote should not deep-six the vote.\r\n\r\nFor example, for Forrest\'s election, I totally understand the concern that he\'s not well-known (yet).  It would have been wholly appropriate for anyone to say that: ""I can\'t vote on Forrest yet because I don\'t know him well enough"" - and it would then be on me as the vote organizer to figure out ways to help Forrest be known better, and the voting period would need to be extended accordingly.  I think people don\'t need to vote no unless they really disagree with something for some reason.  Here, that reason might be ""I don\'t want anyone else from Anaconda on core.""  OK, that\'s something I as vote organizer can\'t change.  Go ahead, vote no, but I hope you also communicate your concern because that\'s a larger governance issue that really should be aired and addressed.  If Forrest\'s election were to fail for this reason, then it would be appropriate to handle the larger governance issue (perhaps by defining explicit corporate membership), and reconsider Forrest afterwards depending on that outcome.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 583631299.0, 'datetime': '2020-02-07 21:52:30+00:00', 'masked_author': 'username_0', 'text': 'Yes, the burden of proof of notification is on the person who wants to declare the timeout, not on the community.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 583644746.0, 'datetime': '2020-02-07 22:31:01+00:00', 'masked_author': 'username_0', 'text': 'I added a documentation component for accountability.  I think adding a record of all of our votes (not just timed out ones) is good anyway.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 585382868.0, 'datetime': '2020-02-12 19:42:58+00:00', 'masked_author': 'username_4', 'text': 'Ping @conda-forge/core', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 587526358.0, 'datetime': '2020-02-18 15:44:34+00:00', 'masked_author': 'username_0', 'text': 'I had one other idea here: instead of a sharp cutoff at a particular time, what about having a certain fraction of required votes decrease after a given time interval, like a roll-off?\r\n\r\nFor example, start at 3/4 of all core.  After 1 week, the required quorum is reduced by 1/8 of the needed members.  That continues every week until the quorum is met and the vote is tallied.\r\n\r\nAny thoughts?  Or should we keep the cutoff?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beckermr', 'comment_id': 587526722.0, 'datetime': '2020-02-18 15:45:21+00:00', 'masked_author': 'username_5', 'text': 'I think simpler is better here maybe?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beckermr', 'comment_id': 587528154.0, 'datetime': '2020-02-18 15:48:11+00:00', 'masked_author': 'username_5', 'text': 'I had one more thought myself. Would it be too aggressive to automatically move people to emeritus after they miss a large number of votes, say 5 or 10?  \r\n\r\nWith the abstain option they donâ€™t have to say yes or no anymore. And iiuic they can move back to active at any time.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 587530381.0, 'datetime': '2020-02-18 15:52:32+00:00', 'masked_author': 'username_0', 'text': ""I definitely agree with that concept, but I'm not sure how to do the bookkeeping."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beckermr', 'comment_id': 587531938.0, 'datetime': '2020-02-18 15:55:26+00:00', 'masked_author': 'username_5', 'text': 'Right. It could be something like 5 votes in a row but the bookkeeping is a pain indeed. We vote in more than one repo and idk if all platforms for voting support an option to see who votes but not how they voted.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'isuruf', 'comment_id': 587532510.0, 'datetime': '2020-02-18 15:56:33+00:00', 'masked_author': 'username_6', 'text': ""If I understand correctly, a standard vote is 1 week, but the timeout occurs only after 2 weeks. For polys you can't extend the time right? If so, we'd have to redo the vote if we want to extend the time."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mwcraig', 'comment_id': 587535490.0, 'datetime': '2020-02-18 16:02:21+00:00', 'masked_author': 'username_7', 'text': ""As current president of our faculty senate I can vouch that this is a huge PITA. I haven't been actually keeping track of it even though we have an attendance list for each meeting.\r\n\r\nI'd recommend keeping this separate for now."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dougalsutherland', 'comment_id': 587561113.0, 'datetime': '2020-02-18 16:51:51+00:00', 'masked_author': 'username_3', 'text': 'Re: bookkeeping for sensitive votes: I think @username_2 brought up a good point in https://github.com/conda-forge/conda-forge.github.io/pull/970#discussion_r380528848. Do we want to track and make public that ""three people voted against allowing X onto core"", even if there are no names associated?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 587566672.0, 'datetime': '2020-02-18 17:02:51+00:00', 'masked_author': 'username_0', 'text': 'IMHO, yes, the history there is important.  I\'d really like reasons to be posted anonymously, too.  This is all in the spirit of improvement. As long as people can be objective and not take things personally, rejection is a powerful tool towards refinement.\r\n\r\nAs the case of Forrest highlighted, some people were concerned about having too many corporate people on core (or too many from anaconda).  If we only capture the ""no"" vote, then we can\'t distinguish that as a vote against Forrest personally from a vote against adding another person from Anaconda.\r\n\r\nFor Forrest specifically, maybe people would vote no because they don\'t know him yet.  If we know that\'s the reason, we can take steps to improve things.\r\n\r\nSimilarly, if the concern is about Anaconda people on core, then that deserves a separate discussion outside of Forrest\'s election.\r\n\r\nIf all we have is a ""no"" vote, then we can\'t get at these concerns, and we can\'t work to address them.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 587601048.0, 'datetime': '2020-02-18 18:16:48+00:00', 'masked_author': 'username_8', 'text': 'Those to me sound like different concerns. Namely...\r\n\r\n1. Do we make all vote tallies public?\r\n2. Do we track the reasons why people voted no?\r\n\r\nIt seems like we can do 2 without doing 1, which is what people seem concerned about.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 587606193.0, 'datetime': '2020-02-18 18:21:40+00:00', 'masked_author': 'username_0', 'text': 'The vote tallies are an aggregate statistic, and as such are anonymous whether the vote itself was anonymous or not.  I\'m not sure why publishing the tallies is contentious.  Maybe someone could enlighten me?\r\n\r\nAs I\'ve described above, I hope that people don\'t vote ""no"" when they want a revision.  Votes take a lot of people\'s time, and we should avoid re-doing votes as much as possible.  Revisions should ideally be made before the vote closes.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 587637685.0, 'datetime': '2020-02-18 18:42:20+00:00', 'masked_author': 'username_8', 'text': 'AIUI that was what people were discussing [here]( https://github.com/conda-forge/conda-forge.github.io/pull/970#discussion_r380528848 ). Perhaps you can ask them ðŸ™‚\r\n\r\nIn any event, it seems this started as just making majority mean majority of those who voted as opposed to all of core (seemed agreeable, but we wanted to clearly specify it). Now the discussion has grown to revamping our voting system (generating a fair bit of side discussion). Are we biting off more than we can chew? ðŸ˜‰', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 588358967.0, 'datetime': '2020-02-19 18:00:38+00:00', 'masked_author': 'username_2', 'text': ""Yes, that's correct. So you'd have to create a 2 week vote (plus advertizing it to core etc.) **upfront** to make it be able to timeout. That may not be ideal, but IMO we should let this PR pass and refine in subsequent PRs. Those subsequent PRs can be much easier put through since we'd have the initial governance change in effect by then."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'isuruf', 'comment_id': 588359468.0, 'datetime': '2020-02-19 18:01:34+00:00', 'masked_author': 'username_6', 'text': ""You can't also stop it in the middle right?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 588359541.0, 'datetime': '2020-02-19 18:01:43+00:00', 'masked_author': 'username_2', 'text': 'That was why I wanted https://github.com/conda-forge/conda-forge.github.io/pull/970#discussion_r380547258 to be added.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 588360092.0, 'datetime': '2020-02-19 18:02:55+00:00', 'masked_author': 'username_2', 'text': 'Right. Only after two weeks have passed and after the third time it has been advertized (which is right before it ends..', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 588362001.0, 'datetime': '2020-02-19 18:06:50+00:00', 'masked_author': 'username_2', 'text': 'Oh, no, wait. It says ""one day prior to proposed timeout"". So it means timing out in the middle would be possible if you have a 4 week vote.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'isuruf', 'comment_id': 588362853.0, 'datetime': '2020-02-19 18:08:38+00:00', 'masked_author': 'username_6', 'text': ""After one week, there's nothing to do because we can't even see how many yes or nos. Just the number of yes+no+abstain. So, the polls will always go to 2 weeks."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dougalsutherland', 'comment_id': 588363868.0, 'datetime': '2020-02-19 18:10:39+00:00', 'masked_author': 'username_3', 'text': ""Right...this sounds like a tooling issue with Polys for our purposes here, which I don't see a nice way around.\r\n\r\nIt was fiddly, but was Helios better on this?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 588372189.0, 'datetime': '2020-02-19 18:27:56+00:00', 'masked_author': 'username_2', 'text': 'I don\'t see that as much of a problem. Normally you\'d only want to have the total number and decide to call for a timeout if only few have voted; you wouldn\'t want to rely on the actual votes.\r\n(But yes, edge cases like 10 ""Abstain""s + 1 ""Yes"" would be possible and of course questionable. If we ever have such a situation, we might have other more general problems, though.)\r\n(A general required minimum number of votes as noted by some people may help there, too. We\'d either need concrete suggestions for that or ... puts this in a subsequent ""refinement"" PR?!?)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 588378125.0, 'datetime': '2020-02-19 18:39:05+00:00', 'masked_author': 'username_2', 'text': '@username_0, the reason for this is just that ""proposed timeout"" date is not said to be equal to the vote\'s end date. Was that intentional or can we just add a few words that clarify this?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mbargull', 'comment_id': 594693312.0, 'datetime': '2020-03-04 17:41:34+00:00', 'masked_author': 'username_2', 'text': 'This vote has passed on `2020-02-20T18:33+00:00` with `15/19 = 78.9%` of `conda-forge/core` approving.\r\n(^-- Given the new governance changes from this PR, this should be recorded in a new file under `https://github.com/conda-forge/conda-forge.github.io/tree/master/src/vote-results/`.)\r\n\r\nIf you have any further change requests/refinements to this, please feel encouraged to issue follow-up PRs.\r\n\r\nThanks everyone!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 594699354.0, 'datetime': '2020-03-04 17:49:28+00:00', 'masked_author': 'username_0', 'text': 'Thanks.  I will put up a separate PR for the folder and this result.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'msarahan', 'comment_id': 595456683.0, 'datetime': '2020-03-05 21:29:08+00:00', 'masked_author': 'username_0', 'text': 'PR at https://github.com/conda-forge/conda-forge.github.io/pull/987', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: clarify rules around quorum, add timeout proposal
username_0: @conda-forge/core
This PR falls under the Modifying Governance policy, please vote and/or comment on this PR.
This PR needs 75% of core to vote yea to pass.
To vote please leave Approve (yea) or Request Changes (nay) reviews.
If you would like changes to the current language please leave a comment or push to this branch.
This vote will end on February 19, after the general meeting on that day.
<issue_comment>username_1: It may be good to set a minimum quorum. I'd rather not have a vote where one yea and the rest abstaining go through. These are decisions we need to stand behind as an organization, we need some form of consensus beyond one yes and a bunch of meh.
<issue_comment>username_2: </details>
<issue_comment>username_0: if people are really that ""meh"" about it, does it matter anyway?  I agree in principle.  I don't know how to express that practically.  Some things that really, really matter just don't inspire as much participation as they should.  For example, when we voted on changing the compilers way back when, the turnout was abysmal.
<issue_comment>username_0: To @username_1 and others requesting a minimum quorum, please suggest guidelines for such a quorum.  That is the crux of this issue.  Our current minimum quorum corresponds to the vote fraction, which is applied twice, as described in this PR's text.  What would you change it to?  What is enough?  Is it a fraction?  An absolute number?

Votes happen because someone cares about something enough to put effort in.  If other people don't care enough to vote on it, should that really invalidate that person's initiative?  People don't vote for all kinds of reasons:

* don't feel technically qualified
* don't know a person who is being elected
* tied up with work / on hiatus
* can't be bothered
* didn't see the email / chat
* ???

I don't want people pushing crap through any more than anyone else, but we have a serious problem here.  We need mechanisms to reject bad stuff without letting other things die on the vine.  Maybe this is where the abstain vote comes in.  Maybe it's more of a comment that says ""I don't have enough information to vote on this yet.  Could you please explain XYZ, or could Person XYZ please give a short introduction at the next meeting?""  We can't let things just not happen because of inaction.  That inaction is passive action, and it's miserable and disrespectful to the people who are expending effort and thought to get things done.  Pawning this off on ""that's what emeritus is for"" is irresponsible and unrealistic.  If people can't be bothered to vote, they sure as hell can't be bothered to actively check themselves in and out of emeritus status.

Rejection by inaction should not be a thing.
<issue_comment>username_3: I made some very small, hopefully uncontroversial, tweaks. Take a look and make sure you agree.
<issue_comment>username_0: Thanks @username_3, those are good clarifications.
<issue_comment>username_0: I think the key thing here is that we are enforcing two things:

1. no one can try to sneak something past.  There must be loud communication on multiple fronts over a long time period, or else the vote cannot ""time out.""  I think this is key to the idea of the threat of anything passing with just 1 vote.  If anything passes with only one vote, we will all have been wildly irresponsible.
2. If nobody can be bothered to vote, it shouldn't block progress.

A huge part of this is changing the group's culture.  Right now, I think people stay silent when they are uncomfortable voting.  Really, they should say ""I don't feel comfortable voting yet because X, Y, Z"" and the person holding the vote needs to address those concerns.  Those concerns should be accepted in good faith, and best effort should be made to address them. That way, the vote is finite and does not end for ambiguous reasons.  People can still actively abstain if they really don't want to have an opinion, but  passively abstaining by not casting a vote should not deep-six the vote.

For example, for Forrest's election, I totally understand the concern that he's not well-known (yet).  It would have been wholly appropriate for anyone to say that: ""I can't vote on Forrest yet because I don't know him well enough"" - and it would then be on me as the vote organizer to figure out ways to help Forrest be known better, and the voting period would need to be extended accordingly.  I think people don't need to vote no unless they really disagree with something for some reason.  Here, that reason might be ""I don't want anyone else from Anaconda on core.""  OK, that's something I as vote organizer can't change.  Go ahead, vote no, but I hope you also communicate your concern because that's a larger governance issue that really should be aired and addressed.  If Forrest's election were to fail for this reason, then it would be appropriate to handle the larger governance issue (perhaps by defining explicit corporate membership), and reconsider Forrest afterwards depending on that outcome.
<issue_comment>username_0: Yes, the burden of proof of notification is on the person who wants to declare the timeout, not on the community.
<issue_comment>username_0: I added a documentation component for accountability.  I think adding a record of all of our votes (not just timed out ones) is good anyway.
<issue_comment>username_4: Ping @conda-forge/core
<issue_comment>username_0: I had one other idea here: instead of a sharp cutoff at a particular time, what about having a certain fraction of required votes decrease after a given time interval, like a roll-off?

For example, start at 3/4 of all core.  After 1 week, the required quorum is reduced by 1/8 of the needed members.  That continues every week until the quorum is met and the vote is tallied.

Any thoughts?  Or should we keep the cutoff?
<issue_comment>username_5: I think simpler is better here maybe?
<issue_comment>username_5: I had one more thought myself. Would it be too aggressive to automatically move people to emeritus after they miss a large number of votes, say 5 or 10?  

With the abstain option they donâ€™t have to say yes or no anymore. And iiuic they can move back to active at any time.
<issue_comment>username_0: I definitely agree with that concept, but I'm not sure how to do the bookkeeping.
<issue_comment>username_5: Right. It could be something like 5 votes in a row but the bookkeeping is a pain indeed. We vote in more than one repo and idk if all platforms for voting support an option to see who votes but not how they voted.
<issue_comment>username_6: If I understand correctly, a standard vote is 1 week, but the timeout occurs only after 2 weeks. For polys you can't extend the time right? If so, we'd have to redo the vote if we want to extend the time.
<issue_comment>username_7: As current president of our faculty senate I can vouch that this is a huge PITA. I haven't been actually keeping track of it even though we have an attendance list for each meeting.

I'd recommend keeping this separate for now.
<issue_comment>username_3: Re: bookkeeping for sensitive votes: I think @username_2 brought up a good point in https://github.com/conda-forge/conda-forge.github.io/pull/970#discussion_r380528848. Do we want to track and make public that ""three people voted against allowing X onto core"", even if there are no names associated?
<issue_comment>username_0: IMHO, yes, the history there is important.  I'd really like reasons to be posted anonymously, too.  This is all in the spirit of improvement. As long as people can be objective and not take things personally, rejection is a powerful tool towards refinement.

As the case of Forrest highlighted, some people were concerned about having too many corporate people on core (or too many from anaconda).  If we only capture the ""no"" vote, then we can't distinguish that as a vote against Forrest personally from a vote against adding another person from Anaconda.

For Forrest specifically, maybe people would vote no because they don't know him yet.  If we know that's the reason, we can take steps to improve things.

Similarly, if the concern is about Anaconda people on core, then that deserves a separate discussion outside of Forrest's election.

If all we have is a ""no"" vote, then we can't get at these concerns, and we can't work to address them.
<issue_comment>username_8: Those to me sound like different concerns. Namely...

1. Do we make all vote tallies public?
2. Do we track the reasons why people voted no?

It seems like we can do 2 without doing 1, which is what people seem concerned about.
<issue_comment>username_0: The vote tallies are an aggregate statistic, and as such are anonymous whether the vote itself was anonymous or not.  I'm not sure why publishing the tallies is contentious.  Maybe someone could enlighten me?

As I've described above, I hope that people don't vote ""no"" when they want a revision.  Votes take a lot of people's time, and we should avoid re-doing votes as much as possible.  Revisions should ideally be made before the vote closes.
<issue_comment>username_8: AIUI that was what people were discussing [here]( https://github.com/conda-forge/conda-forge.github.io/pull/970#discussion_r380528848 ). Perhaps you can ask them ðŸ™‚

In any event, it seems this started as just making majority mean majority of those who voted as opposed to all of core (seemed agreeable, but we wanted to clearly specify it). Now the discussion has grown to revamping our voting system (generating a fair bit of side discussion). Are we biting off more than we can chew? ðŸ˜‰
<issue_comment>username_2: Yes, that's correct. So you'd have to create a 2 week vote (plus advertizing it to core etc.) **upfront** to make it be able to timeout. That may not be ideal, but IMO we should let this PR pass and refine in subsequent PRs. Those subsequent PRs can be much easier put through since we'd have the initial governance change in effect by then.
<issue_comment>username_6: You can't also stop it in the middle right?
<issue_comment>username_2: That was why I wanted https://github.com/conda-forge/conda-forge.github.io/pull/970#discussion_r380547258 to be added.
<issue_comment>username_2: Right. Only after two weeks have passed and after the third time it has been advertized (which is right before it ends..
<issue_comment>username_2: Oh, no, wait. It says ""one day prior to proposed timeout"". So it means timing out in the middle would be possible if you have a 4 week vote.
<issue_comment>username_6: After one week, there's nothing to do because we can't even see how many yes or nos. Just the number of yes+no+abstain. So, the polls will always go to 2 weeks.
<issue_comment>username_3: Right...this sounds like a tooling issue with Polys for our purposes here, which I don't see a nice way around.

It was fiddly, but was Helios better on this?
<issue_comment>username_2: I don't see that as much of a problem. Normally you'd only want to have the total number and decide to call for a timeout if only few have voted; you wouldn't want to rely on the actual votes.
(But yes, edge cases like 10 ""Abstain""s + 1 ""Yes"" would be possible and of course questionable. If we ever have such a situation, we might have other more general problems, though.)
(A general required minimum number of votes as noted by some people may help there, too. We'd either need concrete suggestions for that or ... puts this in a subsequent ""refinement"" PR?!?)
<issue_comment>username_2: @username_0, the reason for this is just that ""proposed timeout"" date is not said to be equal to the vote's end date. Was that intentional or can we just add a few words that clarify this?
<issue_comment>username_2: This vote has passed on `2020-02-20T18:33+00:00` with `15/19 = 78.9%` of `conda-forge/core` approving.
(^-- Given the new governance changes from this PR, this should be recorded in a new file under `https://github.com/conda-forge/conda-forge.github.io/tree/master/src/vote-results/`.)

If you have any further change requests/refinements to this, please feel encouraged to issue follow-up PRs.

Thanks everyone!
<issue_comment>username_0: Thanks.  I will put up a separate PR for the folder and this result.
<issue_comment>username_0: PR at https://github.com/conda-forge/conda-forge.github.io/pull/987"
daattali/beautiful-jekyll,223287564,198,,"[{'action': 'opened', 'author': 'fiezt', 'comment_id': None, 'datetime': '2017-04-21 06:15:01+00:00', 'masked_author': 'username_0', 'text': 'When the window is scaled to only be half of a screen I have an issue where the avatar covers the menu. If I make the window less wide the menu will eventually collapse so it is not covered by the menu. How can I prevent this issue? I attached a photo of the problem.\r\n![screen shot 2017-04-20 at 11 11 15 pm](https://cloud.githubusercontent.com/assets/22989351/25264960/28dddfb4-261f-11e7-9f2f-8715ddce2c7f.png)', 'title': 'avatar covers menu', 'type': 'issue'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 296093864.0, 'datetime': '2017-04-21 06:40:12+00:00', 'masked_author': 'username_1', 'text': 'Unfortunately that\'s an issue  that happens and is going to be extremely difficult to fix because it\'s impossible to account for all cases (all screen sizes and all menu lengths). It depends on how many menu items you have, how long they are, and how side the screen is. My only ""solution"" is to try to limit the menu items to only a few (you can use submenus) and to make them short (""undergraduate background"" for example is long). I know it\'s a terrible ""solution"" but it\'s a compromise between that or making your photo cover up some menu when the screen is very small. Sorry I don\'t have a more useful suggestion!', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'daattali', 'comment_id': None, 'datetime': '2017-04-21 06:40:12+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'fiezt', 'comment_id': 296096119.0, 'datetime': '2017-04-21 06:48:21+00:00', 'masked_author': 'username_0', 'text': 'Thanks for the reply and the great theme. Is there not a way to force the menu to collapse once the menu gets to be within a margin of the avatar though?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 296096912.0, 'datetime': '2017-04-21 06:51:16+00:00', 'masked_author': 'username_1', 'text': ""No, there isn't. The menu collapsing is a feature of bootstrap (\nhttp://getbootstrap.com/css/) and that determines at what screen width it\ncollapses. You can try your luck at tinkering with the CSS yourself if you\nknow how to and you have the willpower to do so, but it isn't going to be\nfun :)\n\n---\nDean Attali\nPresident & CEO\nAttaliTech Ltd\nhttp://AttaliTech.com <http://attalitech.com>"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fiezt', 'comment_id': 296098919.0, 'datetime': '2017-04-21 06:58:36+00:00', 'masked_author': 'username_0', 'text': 'Okay that makes sense. What about moving the menu above the avatar? I am guessing that is not a quick fix though.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 296100181.0, 'datetime': '2017-04-21 07:02:29+00:00', 'masked_author': 'username_1', 'text': ""Do you mean making the menu talle permanently, or moving the avatar down permanently? Both of these are possible to do, but again require CSS. Moving the avatar down probably is fairly easy to do (I haven't looked at that code in a couple years so I'm only guessing!)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fiezt', 'comment_id': 296101092.0, 'datetime': '2017-04-21 07:05:42+00:00', 'masked_author': 'username_0', 'text': 'Yeah either would be decent solutions in my opinion. I think that moving the avatar to be below the menu would likely be the best solution to the problem.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 296102411.0, 'datetime': '2017-04-21 07:11:33+00:00', 'masked_author': 'username_1', 'text': 'OK, you still do need to know CSS for that - if you do then I can point you\nin the right direction of where to look but not if css is foreign to you\n\n---\nDean Attali\nPresident & CEO\nAttaliTech Ltd\nhttp://AttaliTech.com <http://attalitech.com>', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fiezt', 'comment_id': 296289601.0, 'datetime': '2017-04-21 19:46:16+00:00', 'masked_author': 'username_0', 'text': ""I don't know a lot about it. I program though, so I think I could pick it up. If you could point me in the right direction that would be awesome, I think I will have to use a different them if I cannot fix that issue."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 296315680.0, 'datetime': '2017-04-21 22:01:53+00:00', 'masked_author': 'username_1', 'text': ""It's possible that it's as easy as finding the position property of the avatar in `css/main.css`. Maybe try changing [this line](https://github.com/username_1/beautiful-jekyll/blob/master/css/main.css#L192) to 0 or some other value between -50 to 0"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: avatar covers menu
username_0: When the window is scaled to only be half of a screen I have an issue where the avatar covers the menu. If I make the window less wide the menu will eventually collapse so it is not covered by the menu. How can I prevent this issue? I attached a photo of the problem.
![screen shot 2017-04-20 at 11 11 15 pm](https://cloud.githubusercontent.com/assets/22989351/25264960/28dddfb4-261f-11e7-9f2f-8715ddce2c7f.png)
<issue_comment>username_1: Unfortunately that's an issue  that happens and is going to be extremely difficult to fix because it's impossible to account for all cases (all screen sizes and all menu lengths). It depends on how many menu items you have, how long they are, and how side the screen is. My only ""solution"" is to try to limit the menu items to only a few (you can use submenus) and to make them short (""undergraduate background"" for example is long). I know it's a terrible ""solution"" but it's a compromise between that or making your photo cover up some menu when the screen is very small. Sorry I don't have a more useful suggestion!<issue_closed>
<issue_comment>username_0: Thanks for the reply and the great theme. Is there not a way to force the menu to collapse once the menu gets to be within a margin of the avatar though?
<issue_comment>username_1: No, there isn't. The menu collapsing is a feature of bootstrap (
http://getbootstrap.com/css/) and that determines at what screen width it
collapses. You can try your luck at tinkering with the CSS yourself if you
know how to and you have the willpower to do so, but it isn't going to be
fun :)

---
Dean Attali
President & CEO
AttaliTech Ltd
http://AttaliTech.com <http://attalitech.com>
<issue_comment>username_0: Okay that makes sense. What about moving the menu above the avatar? I am guessing that is not a quick fix though.
<issue_comment>username_1: Do you mean making the menu talle permanently, or moving the avatar down permanently? Both of these are possible to do, but again require CSS. Moving the avatar down probably is fairly easy to do (I haven't looked at that code in a couple years so I'm only guessing!)
<issue_comment>username_0: Yeah either would be decent solutions in my opinion. I think that moving the avatar to be below the menu would likely be the best solution to the problem.
<issue_comment>username_1: OK, you still do need to know CSS for that - if you do then I can point you
in the right direction of where to look but not if css is foreign to you

---
Dean Attali
President & CEO
AttaliTech Ltd
http://AttaliTech.com <http://attalitech.com>
<issue_comment>username_0: I don't know a lot about it. I program though, so I think I could pick it up. If you could point me in the right direction that would be awesome, I think I will have to use a different them if I cannot fix that issue.
<issue_comment>username_1: It's possible that it's as easy as finding the position property of the avatar in `css/main.css`. Maybe try changing [this line](https://github.com/username_1/beautiful-jekyll/blob/master/css/main.css#L192) to 0 or some other value between -50 to 0"
gohugoio/hugo,215983584,3215,,"[{'action': 'opened', 'author': 'willpatera', 'comment_id': None, 'datetime': '2017-03-22T08:12:43Z', 'masked_author': 'username_0', 'text': ""## Overview\r\n\r\nThis is a request for an enhancement to [`GitInfo`](https://gohugo.io/extras/gitinfo/) that would enable one to use `GitInfo` for Hugo sites where the `content` directory is a `.git` submodule. \r\n\r\n## Use case / motivation\r\n\r\nI have my `content` set up as a submodule for a hugo site so that I can version content independently from the logic of the website and/or theme. \r\n\r\nI would like to be able to utilize `GitInfo` functions to show when each page was revised, by who, and when. All of this logic is available thanks to @bep et al.'s work on [gitinfo](https://github.com/spf13/hugo/blob/master/hugolib/gitinfo.go) and [gitmap](https://github.com/bep/gitmap). But, currently `GitInfo` assumes a single git repo (as far as I understand) and does not yet accommodate submodules. \r\n\r\nExample file tree, where `hugo-website` is the main `.git` repo and `content` is a submodule:\r\n\r\n```\r\n/hugo_website\r\n|--.git\r\n|--.gitmodules\r\n|-- content\r\n|    `--.git\r\n|-- themes\r\n|--...etc (other files)\r\n```\r\n\r\n## Request\r\nHere are two routes that come to mind:\r\n\r\n(a) Automatic discovery - `GitInfo` checks to see if `content` is a `.git` repository and is specified as a `submodule` in `.gitmodules`. If these conditions are met, then `repoPath` is set to `contentRoot`\r\n\r\n(b) User sets params - Allow users to set the `repoPath` for `GitInfo` via config options.\r\n\r\nWould this be useful to others and/or an enhancement the core team would consider a worthwhile addition?"", 'title': ' Support configurable repoPath in GitInfo', 'type': 'issue'}
 {'action': 'created', 'author': 'willpatera', 'comment_id': 358195604.0, 'datetime': '2018-01-17 04:44:10+00:00', 'masked_author': 'username_0', 'text': '@EddEdw I would be happy for someone to re-open this issue (and implement this functionality), but I do not have the power to do so myself. \r\n\r\nBased on the lack of comments/interest generated by my original issue, it does not seem like this feature will be implemented :tipping_hand_man:', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'oskarrough', 'comment_id': 380756278.0, 'datetime': '2018-04-12 10:29:21+00:00', 'masked_author': 'username_1', 'text': 'A use-case for this feature would be outputting last commit date from a child theme in a git submodule. Does anyone know of a workaround?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kaushalmodi', 'comment_id': 380772834.0, 'datetime': '2018-04-12 11:28:05+00:00', 'masked_author': 'username_2', 'text': '@username_1 You can use `getJSON` and GitHub (even Gitlab) API to get such info for any repo ([example][1] -- Search for `getJSON` in there).\r\n\r\nFor further discussion, please start a thread on https://discourse.gohugo.io/.\r\n\r\n[1]: https://github.com/username_2/ox-hugo/blob/master/doc/layouts/_default/examples.html', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 's8gv', 'comment_id': 616866821.0, 'datetime': '2020-04-20 23:40:39+00:00', 'masked_author': 'username_3', 'text': 'Hi I have a same issue. I need lastmodified timestamp and my content is another .git repo. \r\nI reached here through https://discourse.gohugo.io/t/gitinfo-for-content-in-separate-git-repository-submodule/5882\r\n\r\n\r\nPlease let me know if there is a workaround other than getJSON. Thanks.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title:  Support configurable repoPath in GitInfo
username_0: ## Overview

This is a request for an enhancement to [`GitInfo`](https://gohugo.io/extras/gitinfo/) that would enable one to use `GitInfo` for Hugo sites where the `content` directory is a `.git` submodule. 

## Use case / motivation

I have my `content` set up as a submodule for a hugo site so that I can version content independently from the logic of the website and/or theme. 

I would like to be able to utilize `GitInfo` functions to show when each page was revised, by who, and when. All of this logic is available thanks to @bep et al.'s work on [gitinfo](https://github.com/spf13/hugo/blob/master/hugolib/gitinfo.go) and [gitmap](https://github.com/bep/gitmap). But, currently `GitInfo` assumes a single git repo (as far as I understand) and does not yet accommodate submodules. 

Example file tree, where `hugo-website` is the main `.git` repo and `content` is a submodule:

```
/hugo_website
|--.git
|--.gitmodules
|-- content
|    `--.git
|-- themes
|--...etc (other files)
```

## Request
Here are two routes that come to mind:

(a) Automatic discovery - `GitInfo` checks to see if `content` is a `.git` repository and is specified as a `submodule` in `.gitmodules`. If these conditions are met, then `repoPath` is set to `contentRoot`

(b) User sets params - Allow users to set the `repoPath` for `GitInfo` via config options.

Would this be useful to others and/or an enhancement the core team would consider a worthwhile addition?
<issue_comment>username_0: @EddEdw I would be happy for someone to re-open this issue (and implement this functionality), but I do not have the power to do so myself. 

Based on the lack of comments/interest generated by my original issue, it does not seem like this feature will be implemented :tipping_hand_man:
<issue_comment>username_1: A use-case for this feature would be outputting last commit date from a child theme in a git submodule. Does anyone know of a workaround?
<issue_comment>username_2: @username_1 You can use `getJSON` and GitHub (even Gitlab) API to get such info for any repo ([example][1] -- Search for `getJSON` in there).

For further discussion, please start a thread on https://discourse.gohugo.io/.

[1]: https://github.com/username_2/ox-hugo/blob/master/doc/layouts/_default/examples.html
<issue_comment>username_3: Hi I have a same issue. I need lastmodified timestamp and my content is another .git repo. 
I reached here through https://discourse.gohugo.io/t/gitinfo-for-content-in-separate-git-repository-submodule/5882


Please let me know if there is a workaround other than getJSON. Thanks."
cake-build/website,336032329,545,,"[{'action': 'opened', 'author': 'Jericho', 'comment_id': None, 'datetime': '2018-06-27 00:02:56+00:00', 'masked_author': 'username_0', 'text': ""The Cake.AddinDiscoverer tool has discovered discrepencies between the YAML files currently on Cake's web site and the packages discovered on Nuget.org:\r\n\r\nYAML files to be deleted:\r\n\r\n\r\nYAML files to be created:\r\n- Cake.Android.AvdManager\r\n- Cake.Aws.ElasticBeanstalk.Dev\r\n- Cake.AWS.Lambda\r\n- Cake.AzCopy\r\n- Cake.Bower\r\n- Cake.Bridge\r\n- Cake.CachedNpm\r\n- Cake.CakeBoss\r\n- Cake.CK.Pack\r\n- Cake.ClickTwice\r\n- Cake.ConventionalChangelog\r\n- Cake.Deploy.Azure.Authentication\r\n- Cake.Deploy.Azure.ResourceManager\r\n- Cake.Deploy.Bot.LUIS\r\n- Cake.Deploy.Variables\r\n- Cake.DeployParams\r\n- Cake.DocCreator\r\n- Cake.DocumentDb\r\n- Cake.Eazfuscator.Net\r\n- Cake.Flyway\r\n- Cake.FtpDeploy\r\n- Cake.Git.NonPortable\r\n- Cake.GitHubUtility\r\n- Cake.Gradle\r\n- Cake.Graph\r\n- Cake.Handlebars\r\n- Cake.HandlebarsDotNet\r\n- Cake.Helm\r\n- Cake.HgVersion\r\n- Cake.Jira\r\n- Cake.Karma\r\n- Cake.LittleHelpers\r\n- Cake.Mage\r\n- Cake.Markdown-Pdf\r\n- Cake.Mix\r\n- Cake.MonoApiTools\r\n- Cake.Netlify\r\n- Cake.NewRelic\r\n- Cake.Npx\r\n- Cake.NSpec\r\n- Cake.NSwag.Console\r\n- Cake.NuGet\r\n- Cake.OssIndex\r\n- Cake.PinNuGetDependency\r\n- Cake.Recipe\r\n- Cake.ScheduledTasks\r\n- Cake.Scripting.Abstractions\r\n- Cake.Scripting.Transport\r\n- Cake.ServiceOrchestration\r\n- Cake.SimpleHTTPServer\r\n- Cake.SquareLogo\r\n- Cake.Storm.Android\r\n- Cake.Storm.Environment\r\n- Cake.Storm.Fluent\r\n- Cake.Storm.Fluent.Android\r\n- Cake.Storm.Fluent.DotNetCore\r\n- Cake.Storm.Fluent.iOS\r\n- Cake.Storm.Fluent.NuGet\r\n- Cake.Storm.Fluent.Transformations\r\n- Cake.Storm.iOS\r\n- Cake.Storm.JsonBuildConfiguration\r\n- Cake.Storm.Nuget\r\n- Cake.Testing\r\n- Cake.Tin\r\n- Cake.TravisCI\r\n- Cake.Umbraco.PackageUploader\r\n- Cake.UncUtils\r\n- Cake.UServer\r\n- Cake.Utility\r\n- Cake.ViewCompiler\r\n- Cake.VSforMac\r\n- Cake.WindowsAppStore\r\n- Cake.Wyam.Recipe\r\n- Cake.Xamarin.Build\r\n[Truncated]\n- Cake.Plist\r\n- Cake.Powershell\r\n- Cake.ProjHelpers\r\n- Cake.Putty\r\n- Cake.Raygun\r\n- Cake.ReSharperReports\r\n- Cake.Services\r\n- Cake.Slack\r\n- Cake.SqlServer\r\n- Cake.SqlTools\r\n- Cake.Terraform\r\n- Cake.Tfx\r\n- Cake.Topshelf\r\n- Cake.Twitter\r\n- Cake.VersionReader\r\n- Cake.VsCode\r\n- Cake.VsixSignTool\r\n- Cake.VsMetrics\r\n- Cake.WebDeploy\r\n- Cake.Webpack"", 'title': 'Synchronizing YAML files', 'type': 'issue'}
 {'action': 'closed', 'author': 'Jericho', 'comment_id': None, 'datetime': '2018-06-28 17:51:21+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Synchronizing YAML files
username_0: The Cake.AddinDiscoverer tool has discovered discrepencies between the YAML files currently on Cake's web site and the packages discovered on Nuget.org:

YAML files to be deleted:


YAML files to be created:
- Cake.Android.AvdManager
- Cake.Aws.ElasticBeanstalk.Dev
- Cake.AWS.Lambda
- Cake.AzCopy
- Cake.Bower
- Cake.Bridge
- Cake.CachedNpm
- Cake.CakeBoss
- Cake.CK.Pack
- Cake.ClickTwice
- Cake.ConventionalChangelog
- Cake.Deploy.Azure.Authentication
- Cake.Deploy.Azure.ResourceManager
- Cake.Deploy.Bot.LUIS
- Cake.Deploy.Variables
- Cake.DeployParams
- Cake.DocCreator
- Cake.DocumentDb
- Cake.Eazfuscator.Net
- Cake.Flyway
- Cake.FtpDeploy
- Cake.Git.NonPortable
- Cake.GitHubUtility
- Cake.Gradle
- Cake.Graph
- Cake.Handlebars
- Cake.HandlebarsDotNet
- Cake.Helm
- Cake.HgVersion
- Cake.Jira
- Cake.Karma
- Cake.LittleHelpers
- Cake.Mage
- Cake.Markdown-Pdf
- Cake.Mix
- Cake.MonoApiTools
- Cake.Netlify
- Cake.NewRelic
- Cake.Npx
- Cake.NSpec
- Cake.NSwag.Console
- Cake.NuGet
- Cake.OssIndex
- Cake.PinNuGetDependency
- Cake.Recipe
- Cake.ScheduledTasks
- Cake.Scripting.Abstractions
- Cake.Scripting.Transport
- Cake.ServiceOrchestration
- Cake.SimpleHTTPServer
- Cake.SquareLogo
- Cake.Storm.Android
- Cake.Storm.Environment
- Cake.Storm.Fluent
- Cake.Storm.Fluent.Android
- Cake.Storm.Fluent.DotNetCore
- Cake.Storm.Fluent.iOS
- Cake.Storm.Fluent.NuGet
- Cake.Storm.Fluent.Transformations
- Cake.Storm.iOS
- Cake.Storm.JsonBuildConfiguration
- Cake.Storm.Nuget
- Cake.Testing
- Cake.Tin
- Cake.TravisCI
- Cake.Umbraco.PackageUploader
- Cake.UncUtils
- Cake.UServer
- Cake.Utility
- Cake.ViewCompiler
- Cake.VSforMac
- Cake.WindowsAppStore
- Cake.Wyam.Recipe
- Cake.Xamarin.Build
[Truncated]
- Cake.Plist
- Cake.Powershell
- Cake.ProjHelpers
- Cake.Putty
- Cake.Raygun
- Cake.ReSharperReports
- Cake.Services
- Cake.Slack
- Cake.SqlServer
- Cake.SqlTools
- Cake.Terraform
- Cake.Tfx
- Cake.Topshelf
- Cake.Twitter
- Cake.VersionReader
- Cake.VsCode
- Cake.VsixSignTool
- Cake.VsMetrics
- Cake.WebDeploy
- Cake.Webpack<issue_closed>"
cake-build/website,180657439,169,,"[{'action': 'opened', 'author': 'xclayl', 'comment_id': None, 'datetime': '2016-10-03 14:38:44+00:00', 'masked_author': 'username_0', 'text': 'My build.cake file has this:\r\n\r\n`var version = Argument(""build_version"", ""0.9.0-beta"");`\r\n\r\nI\'m trying to pass the information to build.ps1:\r\n\r\n`powershell .\\build.ps1 -build_version=%VERSION%`\r\n\r\nThis doesn\'t seem to work.  The documentation talks about cake.exe, but that\'s some internal exe that I don\'t use directly, right?  \r\n\r\nCan you replace the documentation for cake.exe parameters with examples for build.ps1?', 'title': 'How do you pass parameters to build.cake from build.ps1?', 'type': 'issue'}
 {'action': 'created', 'author': 'devlead', 'comment_id': 251128303.0, 'datetime': '2016-10-03 14:54:11+00:00', 'masked_author': 'username_1', 'text': 'Is VERSION an environment variable? If so you can use the the [EnvironmentVariable(string)](http://cakebuild.net/api/cake.common/7bef281e/3aa917af) alias.\r\n\r\nOtherwise try `-ScriptArgs=\'--build_version=""%VERSION%""\'` after build.ps1', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'devlead', 'comment_id': 251128968.0, 'datetime': '2016-10-03 14:56:02+00:00', 'masked_author': 'username_1', 'text': '_note this issue probably better suited for the [cake-build/resources](https://github.com/cake-build/resources)_', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'xclayl', 'comment_id': 251161243.0, 'datetime': '2016-10-03 16:55:40+00:00', 'masked_author': 'username_0', 'text': 'The ScriptArgs above didn\'t work.  It errored with ""More than one build script specified.""\r\n\r\nAlso, this didn\'t work:\r\n\r\n```\r\nSET build_version=%1\r\npowershell .\\build.ps1 \r\n```\r\n\r\nI\'ll ask the resources repo people and then afterwards come back here to ask to update the documenation once I find out how to do it.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'xclayl', 'comment_id': 254047167.0, 'datetime': '2016-10-16 13:33:02+00:00', 'masked_author': 'username_0', 'text': 'PR added to document how to do this: #182', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'xclayl', 'comment_id': None, 'datetime': '2016-10-16 13:33:03+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: How do you pass parameters to build.cake from build.ps1?
username_0: My build.cake file has this:

`var version = Argument(""build_version"", ""0.9.0-beta"");`

I'm trying to pass the information to build.ps1:

`powershell .\build.ps1 -build_version=%VERSION%`

This doesn't seem to work.  The documentation talks about cake.exe, but that's some internal exe that I don't use directly, right?  

Can you replace the documentation for cake.exe parameters with examples for build.ps1?
<issue_comment>username_1: Is VERSION an environment variable? If so you can use the the [EnvironmentVariable(string)](http://cakebuild.net/api/cake.common/7bef281e/3aa917af) alias.

Otherwise try `-ScriptArgs='--build_version=""%VERSION%""'` after build.ps1
<issue_comment>username_1: _note this issue probably better suited for the [cake-build/resources](https://github.com/cake-build/resources)_
<issue_comment>username_0: The ScriptArgs above didn't work.  It errored with ""More than one build script specified.""

Also, this didn't work:

```
SET build_version=%1
powershell .\build.ps1 
```

I'll ask the resources repo people and then afterwards come back here to ask to update the documenation once I find out how to do it.
<issue_comment>username_0: PR added to document how to do this: #182<issue_closed>"
elixir-lang/elixir-lang.github.com,322276377,1119,"{'number': 1119.0, 'repo': 'elixir-lang.github.com', 'user_login': 'elixir-lang'}","[{'action': 'opened', 'author': 'gmile', 'comment_id': None, 'datetime': '2018-05-11T12:19:12Z', 'masked_author': 'username_0', 'text': 'This also bumps Jekyll from 3.5.1 to 3.7.3', 'title': 'Bump pages gem from 150 to 183', 'type': 'issue'}
 {'action': 'created', 'author': 'josevalim', 'comment_id': 388367432.0, 'datetime': '2018-05-11 13:43:13+00:00', 'masked_author': 'username_1', 'text': 'Is there a reason to? :) I am fine with keeping it stale since it works.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gmile', 'comment_id': 388386837.0, 'datetime': '2018-05-11 14:50:23+00:00', 'masked_author': 'username_0', 'text': 'No problem!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'josevalim', 'comment_id': 388389211.0, 'datetime': '2018-05-11 14:58:17+00:00', 'masked_author': 'username_1', 'text': 'Right now the gap is gemfile changes, so we should be fine. It looks like we are not a power user of jekyll anyway. :) Thanks!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Bump pages gem from 150 to 183
username_0: This also bumps Jekyll from 3.5.1 to 3.7.3
<issue_comment>username_1: Is there a reason to? :) I am fine with keeping it stale since it works.
<issue_comment>username_0: No problem!
<issue_comment>username_1: Right now the gap is gemfile changes, so we should be fine. It looks like we are not a power user of jekyll anyway. :) Thanks!"
getnikola/nikola,492441551,3295,,"[{'action': 'opened', 'author': 'mardy', 'comment_id': None, 'datetime': '2019-09-11 20:06:45+00:00', 'masked_author': 'username_0', 'text': 'I\'m working towards the goal of supporting [webmention](https://www.w3.org/TR/webmention/) in my site. When I\'m writing a post which is a reply to someone else\'s blog, and I send it as a webmention, I would like that â€” if my reply is accepted and shown in the original post â€” my name, avatar, homepage, and e-mail can be parsed by the webmention engine powering the target website and properly shown above my reply.\r\n\r\nMost of the above actually happens only at the discretion of the target\'s website, but a precondition for that to be feasible is to have my microformats [h-card](http://microformats.org/wiki/h-card) embedded into my posts\' [h-entry](http://microformats.org/wiki/h-entry). Posts generated by Nikola already have the proper `h-entry` markings, and with #3294 they will also have a basic `h-card` containing just the author\'s name. However, other fields are missing and it would be nice to get them in there too.\r\n\r\nFor posts that don\'t have a specific author set, Nikola uses the default author from `conf.py`; there are already a few variables that could be presented in the `h-card`:\r\n\r\n- `SITE_URL`\r\n- `BLOG_EMAIL`\r\n\r\nWe just miss a `BLOG_AUTHOR_AVATAR`, but we could even use the image from the `FAVICONS` variable or require that such additional fields be entered in the `AUTHORS_DATA` dictionary I\'m describing below (might be the best option, in fact).\r\n\r\nFor other authors, a reasonable url is their automatically generated index page; however, e-mail and avatars are missing, so we could introduce an optional variable for them:\r\n\r\n```\r\nAUTHORS_DATA = {\r\n    ""Juanjo Conti"": {\r\n        ""email"": ""hzdkv@example.com"",\r\n    },\r\n    ""Roberto Alsina"": {\r\n        ""avatar"": ""/photos/me.jpg"",\r\n    },\r\n}\r\n```\r\nwith all data being optional.\r\n\r\nIn the theme the new data can be shown as an invisible `<span>` element, how I\'m doing [here](https://gitlab.com/username_0/username_0.it/commit/a393d7add2dc06b77b5e8964dfb0955f3bae5f24). But we might want to add a config variable like `SHOW_AUTHOR_AVATAR`; or we can also assume that, if an avatar is given, then it must always be shown (and those who don\'t want it â€” like me â€” can still go and modify their theme).', 'title': ""Add more author's information in post headers (using microformats markings)"", 'type': 'issue'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 530546081.0, 'datetime': '2019-09-11 20:12:09+00:00', 'masked_author': 'username_1', 'text': 'An invisible `<span>` element is just plain wrong.  Iâ€™m not really convinced why this is something that Nikola should do out of the box. Customizing themes for this is really simple, and are there really that many things that use that special markup? How would Nikola benefit from invisible `<span>`s everywhere? Are you sure search engines are happy to see invisible `<span>`s anywhere on a site?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mardy', 'comment_id': 530560335.0, 'datetime': '2019-09-11 20:51:00+00:00', 'masked_author': 'username_0', 'text': 'Maybe we should treat the two issues separately: adding the data is one thing, adding the markup is another.\r\n\r\nThe addition of the authors data can be valuable: we can add their e-mail and photo in their index page, which I believe is not trivial to do with a theme customization (or then, why do we have the `AUTHOR_PAGES_DESCRIPTIONS` variable?).\r\n\r\nAnd a similar mechanism could then be used to set images on tags and categories, by the way.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 530573968.0, 'datetime': '2019-09-11 21:29:55+00:00', 'masked_author': 'username_1', 'text': 'It is fairly simple to add your author data to `global_context` and modify the template that generates author pages to show it.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add more author's information in post headers (using microformats markings)
username_0: I'm working towards the goal of supporting [webmention](https://www.w3.org/TR/webmention/) in my site. When I'm writing a post which is a reply to someone else's blog, and I send it as a webmention, I would like that â€” if my reply is accepted and shown in the original post â€” my name, avatar, homepage, and e-mail can be parsed by the webmention engine powering the target website and properly shown above my reply.

Most of the above actually happens only at the discretion of the target's website, but a precondition for that to be feasible is to have my microformats [h-card](http://microformats.org/wiki/h-card) embedded into my posts' [h-entry](http://microformats.org/wiki/h-entry). Posts generated by Nikola already have the proper `h-entry` markings, and with #3294 they will also have a basic `h-card` containing just the author's name. However, other fields are missing and it would be nice to get them in there too.

For posts that don't have a specific author set, Nikola uses the default author from `conf.py`; there are already a few variables that could be presented in the `h-card`:

- `SITE_URL`
- `BLOG_EMAIL`

We just miss a `BLOG_AUTHOR_AVATAR`, but we could even use the image from the `FAVICONS` variable or require that such additional fields be entered in the `AUTHORS_DATA` dictionary I'm describing below (might be the best option, in fact).

For other authors, a reasonable url is their automatically generated index page; however, e-mail and avatars are missing, so we could introduce an optional variable for them:

```
AUTHORS_DATA = {
    ""Juanjo Conti"": {
        ""email"": ""jc@mail.me"",
    },
    ""Roberto Alsina"": {
        ""avatar"": ""/photos/me.jpg"",
    },
}
```
with all data being optional.

In the theme the new data can be shown as an invisible `<span>` element, how I'm doing [here](https://gitlab.com/username_0/username_0.it/commit/a393d7add2dc06b77b5e8964dfb0955f3bae5f24). But we might want to add a config variable like `SHOW_AUTHOR_AVATAR`; or we can also assume that, if an avatar is given, then it must always be shown (and those who don't want it â€” like me â€” can still go and modify their theme).
<issue_comment>username_1: An invisible `<span>` element is just plain wrong.  Iâ€™m not really convinced why this is something that Nikola should do out of the box. Customizing themes for this is really simple, and are there really that many things that use that special markup? How would Nikola benefit from invisible `<span>`s everywhere? Are you sure search engines are happy to see invisible `<span>`s anywhere on a site?
<issue_comment>username_0: Maybe we should treat the two issues separately: adding the data is one thing, adding the markup is another.

The addition of the authors data can be valuable: we can add their e-mail and photo in their index page, which I believe is not trivial to do with a theme customization (or then, why do we have the `AUTHOR_PAGES_DESCRIPTIONS` variable?).

And a similar mechanism could then be used to set images on tags and categories, by the way.
<issue_comment>username_1: It is fairly simple to add your author data to `global_context` and modify the template that generates author pages to show it."
conda-forge/conda-forge.github.io,671809404,1123,,"[{'action': 'opened', 'author': 'vibhaKulka', 'comment_id': None, 'datetime': '2020-08-03 05:41:42+00:00', 'masked_author': 'username_0', 'text': 'Continuing from issue https://github.com/conda-forge/conda-smithy/issues/1359\r\n\r\nOpening an issue to start building packages on s390x .\r\n \r\nWe have were various internal  discussions on having a channel with s390x build packages . \r\n\r\nI am tagging my team members who will work on all the requirements that is needed to enable package builds on s390x.\r\n\r\nPlease let us know , what are the next steps .\r\n\r\nThanks,\r\nVibha Kulkarni', 'title': 'Building packages on s390x architecture', 'type': 'issue'}
 {'action': 'created', 'author': 'vibhaKulka', 'comment_id': 667815989.0, 'datetime': '2020-08-03 05:46:05+00:00', 'masked_author': 'username_0', 'text': '@username_3 @@username_4 @ravigumm', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vibhaKulka', 'comment_id': 668396597.0, 'datetime': '2020-08-04 05:59:33+00:00', 'masked_author': 'username_0', 'text': '@username_1 @jjhelmus', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'isuruf', 'comment_id': 668399522.0, 'datetime': '2020-08-04 06:08:34+00:00', 'masked_author': 'username_1', 'text': ""First steps in order would be,\r\n1. Ask for volunteers for supporting s390x to create a team in conda-forge. (At least two people who'll respond to github issues quickly)\r\n2. Ask Anaconda, Inc to support uploading s390x packages to anaconda.org.\r\n3. Send a PR to repackage the centos sysroot for s390x in https://github.com/conda-forge/linux-sysroot-feedstock/\r\n4. Build binutils for s390x in https://github.com/conda-forge/binutils-feedstock/\r\n5. Build a cross compiler for s390x in https://github.com/conda-forge/ctng-compilers-feedstock\r\n6. Build a cross-native compiler for s390x in https://github.com/conda-forge/ctng-compilers-feedstock"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CJ-Wright', 'comment_id': 668714003.0, 'datetime': '2020-08-04 17:02:18+00:00', 'masked_author': 'username_2', 'text': '1. After you get together a group of people for 1, please tell core so we can make the appropriate help team\r\n2. Once you are ready to do a full scale build out contact the bot team (`@conda-forge/bot`) and we can work with you to setup the architecture migration.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vibhaKulka', 'comment_id': 669000727.0, 'datetime': '2020-08-05 06:09:54+00:00', 'masked_author': 'username_0', 'text': '@username_1 @username_2 Thank you for your response . We will take a look at the all the items and get back to you .', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chandrureddy', 'comment_id': 671189816.0, 'datetime': '2020-08-10 06:42:51+00:00', 'masked_author': 'username_3', 'text': '@username_1 and @username_2 thank you very much for your support !\r\n\r\nWe are looking on the different details that are outlined in the comment https://github.com/conda-forge/conda-forge.github.io/issues/1123#issuecomment-668399522\r\n\r\nSince there is no official support in CentOS for s390x platform at this point in time we are relying on clefos which has all equivalent CentOS binaries/packages.\r\n\r\nhttps://www.sinenomine.net/products/linux/clefos/packages', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pradghos', 'comment_id': 673952638.0, 'datetime': '2020-08-14 08:17:43+00:00', 'masked_author': 'username_4', 'text': '@username_1 Regarding `ctng-compilers-feedstock`, It seems `crosstool-NG` samples (i.e `powerpc64le-unknown-linux-gnu` ) along with `ctng_vendor` are taking care of the builds of `cross compiler` and `cross-native compiler` depending upon which build arch is being used. \r\n\r\nJust for example One of scenario would be -  \r\n\r\n```\r\n[EXTRA]  Dumping internal crosstool-NG configuration\r\n[EXTRA]    Building a toolchain for:\r\n[EXTRA]      build  = powerpc64le-unknown-linux-gnu\r\n[EXTRA]      host   = powerpc64le-unknown-linux-gnu\r\n[EXTRA]      target = powerpc64le-conda_cos7-linux-gnu\r\n```\r\n\r\nProbably we may need to have similar approach for s390x in `crosstool-NG` itself. \r\n\r\nPls let me know if anything I have missed out here. Thank you !', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pradghos', 'comment_id': 673955449.0, 'datetime': '2020-08-14 08:24:35+00:00', 'masked_author': 'username_4', 'text': 'I see same version of all `rpm`s used in `linux-sysroot-feedstock` are available in `http://download.sinenomine.net/clefos/7/os/s390x` .. expect the `tzdata-2019c-1.el7.noarch.rpm` which is coming from `http://download.sinenomine.net/clefos/7/os/noarch`.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'isuruf', 'comment_id': 674343931.0, 'datetime': '2020-08-15 03:52:42+00:00', 'masked_author': 'username_1', 'text': ""Using clefos is fine. You can already build `cross` compilers with the current `ctng-compilers-feedstock`. This is enough to cross compile other packages and to bootstrap a `conda` installer. `cross-native` are currently not supported in `ctng-compilers-feedstock`, but it shouldn't be too much work to do it."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pradghos', 'comment_id': 678819154.0, 'datetime': '2020-08-23 20:12:12+00:00', 'masked_author': 'username_4', 'text': '@username_1 : Looks like I cant create a personal fork for `conda-forge/crosstool-ng` because same name repository is already exists. \r\nOnce it will merge , I will create PR https://github.com/conda-forge/crosstool-ng . For time being, I have created PR for https://github.com/conda-forge/crosstool-ng-feedstock/pull/15 and added it as patch for now . I will clean it up from here later. Please let me know if you are fine.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pradghos', 'comment_id': 680143349.0, 'datetime': '2020-08-25 16:48:03+00:00', 'masked_author': 'username_4', 'text': '@jakirkham yes, I was able to create the PR and its merged  :-)  .. Thanks to @username_1 for guiding me there ...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pradghos', 'comment_id': 681510455.0, 'datetime': '2020-08-27 05:16:39+00:00', 'masked_author': 'username_4', 'text': '@username_1  created PR for cdt similar to the way ppc64le,aarch64 treating today - https://github.com/conda/conda-build/pull/4030, \r\nconsidering the clefos7 is equivalent to CentOS7', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Building packages on s390x architecture
username_0: Continuing from issue https://github.com/conda-forge/conda-smithy/issues/1359

Opening an issue to start building packages on s390x .
 
We have were various internal  discussions on having a channel with s390x build packages . 

I am tagging my team members who will work on all the requirements that is needed to enable package builds on s390x.

Please let us know , what are the next steps .

Thanks,
Vibha Kulkarni
<issue_comment>username_0: @username_3 @@username_4 @ravigumm
<issue_comment>username_0: @username_1 @jjhelmus
<issue_comment>username_1: First steps in order would be,
1. Ask for volunteers for supporting s390x to create a team in conda-forge. (At least two people who'll respond to github issues quickly)
2. Ask Anaconda, Inc to support uploading s390x packages to anaconda.org.
3. Send a PR to repackage the centos sysroot for s390x in https://github.com/conda-forge/linux-sysroot-feedstock/
4. Build binutils for s390x in https://github.com/conda-forge/binutils-feedstock/
5. Build a cross compiler for s390x in https://github.com/conda-forge/ctng-compilers-feedstock
6. Build a cross-native compiler for s390x in https://github.com/conda-forge/ctng-compilers-feedstock
<issue_comment>username_2: 1. After you get together a group of people for 1, please tell core so we can make the appropriate help team
2. Once you are ready to do a full scale build out contact the bot team (`@conda-forge/bot`) and we can work with you to setup the architecture migration.
<issue_comment>username_0: @username_1 @username_2 Thank you for your response . We will take a look at the all the items and get back to you .
<issue_comment>username_3: @username_1 and @username_2 thank you very much for your support !

We are looking on the different details that are outlined in the comment https://github.com/conda-forge/conda-forge.github.io/issues/1123#issuecomment-668399522

Since there is no official support in CentOS for s390x platform at this point in time we are relying on clefos which has all equivalent CentOS binaries/packages.

https://www.sinenomine.net/products/linux/clefos/packages
<issue_comment>username_4: @username_1 Regarding `ctng-compilers-feedstock`, It seems `crosstool-NG` samples (i.e `powerpc64le-unknown-linux-gnu` ) along with `ctng_vendor` are taking care of the builds of `cross compiler` and `cross-native compiler` depending upon which build arch is being used. 

Just for example One of scenario would be -  

```
[EXTRA]  Dumping internal crosstool-NG configuration
[EXTRA]    Building a toolchain for:
[EXTRA]      build  = powerpc64le-unknown-linux-gnu
[EXTRA]      host   = powerpc64le-unknown-linux-gnu
[EXTRA]      target = powerpc64le-conda_cos7-linux-gnu
```

Probably we may need to have similar approach for s390x in `crosstool-NG` itself. 

Pls let me know if anything I have missed out here. Thank you !
<issue_comment>username_4: I see same version of all `rpm`s used in `linux-sysroot-feedstock` are available in `http://download.sinenomine.net/clefos/7/os/s390x` .. expect the `tzdata-2019c-1.el7.noarch.rpm` which is coming from `http://download.sinenomine.net/clefos/7/os/noarch`.
<issue_comment>username_1: Using clefos is fine. You can already build `cross` compilers with the current `ctng-compilers-feedstock`. This is enough to cross compile other packages and to bootstrap a `conda` installer. `cross-native` are currently not supported in `ctng-compilers-feedstock`, but it shouldn't be too much work to do it.
<issue_comment>username_4: @username_1 : Looks like I cant create a personal fork for `conda-forge/crosstool-ng` because same name repository is already exists. 
Once it will merge , I will create PR https://github.com/conda-forge/crosstool-ng . For time being, I have created PR for https://github.com/conda-forge/crosstool-ng-feedstock/pull/15 and added it as patch for now . I will clean it up from here later. Please let me know if you are fine.
<issue_comment>username_4: @jakirkham yes, I was able to create the PR and its merged  :-)  .. Thanks to @username_1 for guiding me there ...
<issue_comment>username_4: @username_1  created PR for cdt similar to the way ppc64le,aarch64 treating today - https://github.com/conda/conda-build/pull/4030, 
considering the clefos7 is equivalent to CentOS7"
flutter/website,848718877,5573,,"[{'action': 'opened', 'author': 'Gene-Dana', 'comment_id': None, 'datetime': '2021-04-01 19:10:00+00:00', 'masked_author': 'username_0', 'text': ""Hi there everyone ! I see that we already have a couple documents about [adding Flutter](https://flutter.dev/docs/development/add-to-app) to existing Android and iOS apps, and one of the questions I hear the most is 'How can we add Flutter to an existing Web App?' or vice versa.\r\n\r\nBefore Vue became very popular, I remember that this capability really convinced me to invest the time and energy to learn and understand Vue. With it's popularity now, it seems like I was not the only one ! \r\n\r\nI did a little investigation and I'm not sure if this is even possible ! If it is, I would like to know how ! Whether that means adding in a script directly to the index.html or perhaps editing the built main.dart.js, I think it would really help convince users to adopt Flutter Web as real contender in the web framework scene.\r\n\r\nAnd.. of course, adding this into the docs ! \r\n\r\nAnything I can do to help, please let me know. I would love to extend our value proposition of flexibility into this domain !"", 'title': 'Add Flutter to existing Web App', 'type': 'issue'}
 {'action': 'created', 'author': 'sfshaza2', 'comment_id': 812281792.0, 'datetime': '2021-04-02 02:27:06+00:00', 'masked_author': 'username_1', 'text': ""I don't know the answer. @mariamhas @username_2, can you weigh in?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'johnpryan', 'comment_id': 812681355.0, 'datetime': '2021-04-02 19:39:57+00:00', 'masked_author': 'username_2', 'text': ""This isn't a workflow we support through our tools right now, but you can use an `<iframe>` element that points to the Flutter app."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sfshaza2', 'comment_id': 812696403.0, 'datetime': '2021-04-02 20:23:05+00:00', 'masked_author': 'username_1', 'text': ""That's a good point, @username_2. @username_0, if this is an important feature for you, file an issue on the flutter/flutter repo, or perhaps someone already has and you can upvote it. Also, we do pay attention to our quarterly user satisfaction surveys to see what features are most important to our devs.\r\n\r\nI'm closing this issue."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'sfshaza2', 'comment_id': None, 'datetime': '2021-04-02 20:23:06+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'Gene-Dana', 'comment_id': 812713777.0, 'datetime': '2021-04-02 21:00:39+00:00', 'masked_author': 'username_0', 'text': 'Perhaps this is a document that we can add to the site?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'johnpryan', 'comment_id': 812768319.0, 'datetime': '2021-04-03 00:54:08+00:00', 'masked_author': 'username_2', 'text': 'I was going to suggest we add it to the web FAQ, but [it looks like we already have](https://flutter.dev/docs/development/platform-integration/web#how-do-i-embed-a-flutter-web-app-in-a-web-page)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Gene-Dana', 'comment_id': 812810991.0, 'datetime': '2021-04-03 04:52:05+00:00', 'masked_author': 'username_0', 'text': 'Wow awesome thank you!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add Flutter to existing Web App
username_0: Hi there everyone ! I see that we already have a couple documents about [adding Flutter](https://flutter.dev/docs/development/add-to-app) to existing Android and iOS apps, and one of the questions I hear the most is 'How can we add Flutter to an existing Web App?' or vice versa.

Before Vue became very popular, I remember that this capability really convinced me to invest the time and energy to learn and understand Vue. With it's popularity now, it seems like I was not the only one ! 

I did a little investigation and I'm not sure if this is even possible ! If it is, I would like to know how ! Whether that means adding in a script directly to the index.html or perhaps editing the built main.dart.js, I think it would really help convince users to adopt Flutter Web as real contender in the web framework scene.

And.. of course, adding this into the docs ! 

Anything I can do to help, please let me know. I would love to extend our value proposition of flexibility into this domain !
<issue_comment>username_1: I don't know the answer. @mariamhas @username_2, can you weigh in?
<issue_comment>username_2: This isn't a workflow we support through our tools right now, but you can use an `<iframe>` element that points to the Flutter app.
<issue_comment>username_1: That's a good point, @username_2. @username_0, if this is an important feature for you, file an issue on the flutter/flutter repo, or perhaps someone already has and you can upvote it. Also, we do pay attention to our quarterly user satisfaction surveys to see what features are most important to our devs.

I'm closing this issue.<issue_closed>
<issue_comment>username_0: Perhaps this is a document that we can add to the site?
<issue_comment>username_2: I was going to suggest we add it to the web FAQ, but [it looks like we already have](https://flutter.dev/docs/development/platform-integration/web#how-do-i-embed-a-flutter-web-app-in-a-web-page)
<issue_comment>username_0: Wow awesome thank you!"
jaspervdj/hakyll,1056082979,904,,"[{'action': 'opened', 'author': 'malteneuss', 'comment_id': None, 'datetime': '2021-11-17 12:39:40+00:00', 'masked_author': 'username_0', 'text': ""Every time i work on my Hakyll-generated blog after some time i need to rewrap my head around the relation between the content files and `Pattern`, `Identifier`, `Item` and `Compiler` etc., and i always end up having to look at the Hakyll source code. So, it would be nice to extend the documentation with more info and possibly more small usage examples.\r\n\r\nI'll be willing to help with that if there's a need from others as well and the willingness to merge changes in small increments.\r\n\r\nps: I'm asking before investing time, because there are pending PRs being unresolved for years. I'm heavily invested in Hakyll (see [my blog](https://lambdablob.com)) and would like thrive even more."", 'title': 'improve documentation', 'type': 'issue'}
 {'action': 'created', 'author': 'Minoru', 'comment_id': 971726588.0, 'datetime': '2021-11-17 16:07:21+00:00', 'masked_author': 'username_1', 'text': ""I'll gladly merge those PRs!\r\n\r\nI haven't worked up the courage to go through the backlog of PRs though; their authors have probably moved on by now, so I can't request any changes\xa0â€” it's either merge as-is, close, or take it upon myself to bring it to mergeable state. I don't know when I'll have energy for that, but I at least keep abreast of all the new PRs.\r\n\r\nDo you want to keep this issue open so you can reference it, or should it be closed? It can't really be resolved, because there's no clear way to tell when the documentation was improved :)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'malteneuss', 'comment_id': 972822611.0, 'datetime': '2021-11-18 12:29:27+00:00', 'masked_author': 'username_0', 'text': ""Perfect. I'll start working on it on the weekend. \r\n\r\nI would like to keep this ticket open for referencing and for discussions if some other people feel the need to mention parts they find confusing. \r\n\r\nRegarding the open PRs/tickets, from project management people at my company i learned that it's beneficial to limit WIP items to a minimum. PRs and issues that haven't been touched for years (and that aren't absolutely essential) will most likely never be finished. It also may leave a bad impression on people that have to decide between Hakyll and another generator (i'm thinking of Non-Haskellers like me in the past when i had to decide between XMonad and another window manager. XMonad felt active enough to give it a try). Maybe we could use an autoclose bot to close issues after a year or so of inactivity? Would it help to add a policy that people who want to contribute code should open an issue first to get feedback? Especially if there is enough time from the maintainers, before investing time in preparing the PR?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Minoru', 'comment_id': 974035947.0, 'datetime': '2021-11-19 12:36:58+00:00', 'masked_author': 'username_1', 'text': 'I agree that PRs should be closed after a while. I just haven\'t had the heart to do it :)\r\n\r\nI disagree that old issues should be closed. The ""stale bot"" that\'s so popular on GitHub is quite annoying, making me check in once a few months to say that yes, the issue is still relevant. In my own projects, I keep old issues open either because I still think they should be fixed, or because I like the ideas but can\'t implement them just yet.\r\n\r\nI don\'t think Hakyll sees enough activity to warrant any new policies. Contributors are free to pick whatever route they\'re comfortable with, and from the reviewer\'s perspective, I\'m fine with that.\r\n\r\nI should note that I\'m not the author of Hakyll, I\'m just trying to keep the place tidy :) So the above is my opinion, and what I\'m leaning towards.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'malteneuss', 'comment_id': 974189974.0, 'datetime': '2021-11-19 15:52:49+00:00', 'masked_author': 'username_0', 'text': ""Ok, maybe i should have used the term suggestion or encourage to avoid frustration with bigger changes^^ . I certainly would be frustrated if i had invested a lot of time in making my changes PR-ready only to find out that there's no interest or time to merge them. However, i see that it would be overkill for the many small PRs like version bumps or fixing typos that frequently get merged."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Minoru', 'comment_id': 974685073.0, 'datetime': '2021-11-20 17:42:18+00:00', 'masked_author': 'username_1', 'text': ""Yup, `examptLabels` would work, but I still think that only a human can decide if it's time to close an issue. So I'm still opposed to the idea of a bot doing it.\r\n\r\nI don't know if/when I find energy to go through the existing issues and close the ones that look hopeless, but I closed #794 now. One down, 97 to go :) Thanks for pointing it out!"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'malteneuss', 'comment_id': None, 'datetime': '2022-03-12 21:57:06+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: improve documentation
username_0: Every time i work on my Hakyll-generated blog after some time i need to rewrap my head around the relation between the content files and `Pattern`, `Identifier`, `Item` and `Compiler` etc., and i always end up having to look at the Hakyll source code. So, it would be nice to extend the documentation with more info and possibly more small usage examples.

I'll be willing to help with that if there's a need from others as well and the willingness to merge changes in small increments.

ps: I'm asking before investing time, because there are pending PRs being unresolved for years. I'm heavily invested in Hakyll (see [my blog](https://lambdablob.com)) and would like thrive even more.
<issue_comment>username_1: I'll gladly merge those PRs!

I haven't worked up the courage to go through the backlog of PRs though; their authors have probably moved on by now, so I can't request any changesÂ â€” it's either merge as-is, close, or take it upon myself to bring it to mergeable state. I don't know when I'll have energy for that, but I at least keep abreast of all the new PRs.

Do you want to keep this issue open so you can reference it, or should it be closed? It can't really be resolved, because there's no clear way to tell when the documentation was improved :)
<issue_comment>username_0: Perfect. I'll start working on it on the weekend. 

I would like to keep this ticket open for referencing and for discussions if some other people feel the need to mention parts they find confusing. 

Regarding the open PRs/tickets, from project management people at my company i learned that it's beneficial to limit WIP items to a minimum. PRs and issues that haven't been touched for years (and that aren't absolutely essential) will most likely never be finished. It also may leave a bad impression on people that have to decide between Hakyll and another generator (i'm thinking of Non-Haskellers like me in the past when i had to decide between XMonad and another window manager. XMonad felt active enough to give it a try). Maybe we could use an autoclose bot to close issues after a year or so of inactivity? Would it help to add a policy that people who want to contribute code should open an issue first to get feedback? Especially if there is enough time from the maintainers, before investing time in preparing the PR?
<issue_comment>username_1: I agree that PRs should be closed after a while. I just haven't had the heart to do it :)

I disagree that old issues should be closed. The ""stale bot"" that's so popular on GitHub is quite annoying, making me check in once a few months to say that yes, the issue is still relevant. In my own projects, I keep old issues open either because I still think they should be fixed, or because I like the ideas but can't implement them just yet.

I don't think Hakyll sees enough activity to warrant any new policies. Contributors are free to pick whatever route they're comfortable with, and from the reviewer's perspective, I'm fine with that.

I should note that I'm not the author of Hakyll, I'm just trying to keep the place tidy :) So the above is my opinion, and what I'm leaning towards.
<issue_comment>username_0: Ok, maybe i should have used the term suggestion or encourage to avoid frustration with bigger changes^^ . I certainly would be frustrated if i had invested a lot of time in making my changes PR-ready only to find out that there's no interest or time to merge them. However, i see that it would be overkill for the many small PRs like version bumps or fixing typos that frequently get merged.
<issue_comment>username_1: Yup, `examptLabels` would work, but I still think that only a human can decide if it's time to close an issue. So I'm still opposed to the idea of a bot doing it.

I don't know if/when I find energy to go through the existing issues and close the ones that look hopeless, but I closed #794 now. One down, 97 to go :) Thanks for pointing it out!<issue_closed>"
kubernetes/website,352511898,9975,"{'number': 9975.0, 'repo': 'website', 'user_login': 'kubernetes'}","[{'action': 'opened', 'author': 'dduportal', 'comment_id': None, 'datetime': '2018-08-21T12:15:07Z', 'masked_author': 'username_0', 'text': 'Hello dear maintainer and reviewers.\r\n\r\nThanks for this awesome documentation!\r\n\r\nWhile browsing it, I found a markdown rendering issue in the section ""Install with Powershell from PSGallery"" in the page [Install and Set Up kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/).\r\n\r\nI took the opportunity to apply a few code styling to the script/command names of the ""Update"" bullet, as well as adapting the the variable to Windows\'s style (given the context of this section).\r\n\r\nI try to follow the https://kubernetes.io/docs/contribute/style/style-guide/ , but don\'t hesitate to point me any error or misleading I could have done in this proposition.\r\n\r\nOnly got  an issue with the CLA: it appears to be in 404, as well as the signing form (from the https://kubernetes.io/docs/contribute/start/#sign-the-cla , both links are in 404 when writing these lines: https://kubernetes.io/docs/imported/community/guide/ and https://kubernetes.io/docs/imported/community/guide/#sign-the-cla.\r\n\r\n\r\nThanks in advance for your time!', 'title': 'Fix Markdown on documentation for install-kubectl', 'type': 'issue'}
 {'action': 'created', 'author': 'bradtopol', 'comment_id': 415087441.0, 'datetime': '2018-08-22 16:07:20+00:00', 'masked_author': 'username_1', 'text': 'Hi @username_0 Thank you for your contribution. Please sign the CLA so we can accept your PR for review.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dduportal', 'comment_id': 415137855.0, 'datetime': '2018-08-22 18:44:49+00:00', 'masked_author': 'username_0', 'text': 'Hello @username_1 , it has been done: CLA is signed.\r\n\r\nLooks like the bots saw the change: the check is passing for cla and label had been added to the PR.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kbarnard10', 'comment_id': 415175190.0, 'datetime': '2018-08-22 20:50:42+00:00', 'masked_author': 'username_2', 'text': '@username_0 Can you resolve the merge conflicts?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dduportal', 'comment_id': 415315150.0, 'datetime': '2018-08-23 07:11:00+00:00', 'masked_author': 'username_0', 'text': 'Hello @username_2 ! The conflict had been resolved. Any feedback welcome, because I am not an English native so my writing might not be very good.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bradtopol', 'comment_id': 415528680.0, 'datetime': '2018-08-23 18:50:20+00:00', 'masked_author': 'username_1', 'text': 'Hi @username_0 the * you added are not rendering properly. Please see my inline comments on how to fix this and have the section look like similar sections in the document.  Thanks!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bradtopol', 'comment_id': 416708722.0, 'datetime': '2018-08-28 19:19:59+00:00', 'masked_author': 'username_1', 'text': 'Hi @username_0 there are still some issues that need to be fixed. See my inline comments. Thanks for working on this!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dduportal', 'comment_id': 416910468.0, 'datetime': '2018-08-29 10:51:21+00:00', 'masked_author': 'username_0', 'text': 'Hello @username_1 ! \r\n\r\nYour feedback had been taken in account. I had to experiment a bit to figure out how to achieve the correct rendering, and squashed the ""experiments"" commits.\r\n\r\nThe bullet rendering is behaving as expected, as well as the notes: the `{{note}}` markups had to be indented to be part of the bullet block (and not reseting the bullet numbering).\r\nHowever, the content of these notes should NOT be indented, to avoid rendering it all bold.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tengqm', 'comment_id': 417299272.0, 'datetime': '2018-08-30 12:20:08+00:00', 'masked_author': 'username_3', 'text': '/lgtm\r\nPreview looks good now. Defer to Brad for approval.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bradtopol', 'comment_id': 423271555.0, 'datetime': '2018-09-20 17:41:36+00:00', 'masked_author': 'username_1', 'text': 'Great job!\r\n/lgtm\r\n/approve', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Fix Markdown on documentation for install-kubectl
username_0: Hello dear maintainer and reviewers.

Thanks for this awesome documentation!

While browsing it, I found a markdown rendering issue in the section ""Install with Powershell from PSGallery"" in the page [Install and Set Up kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/).

I took the opportunity to apply a few code styling to the script/command names of the ""Update"" bullet, as well as adapting the the variable to Windows's style (given the context of this section).

I try to follow the https://kubernetes.io/docs/contribute/style/style-guide/ , but don't hesitate to point me any error or misleading I could have done in this proposition.

Only got  an issue with the CLA: it appears to be in 404, as well as the signing form (from the https://kubernetes.io/docs/contribute/start/#sign-the-cla , both links are in 404 when writing these lines: https://kubernetes.io/docs/imported/community/guide/ and https://kubernetes.io/docs/imported/community/guide/#sign-the-cla.


Thanks in advance for your time!
<issue_comment>username_1: Hi @username_0 Thank you for your contribution. Please sign the CLA so we can accept your PR for review.
<issue_comment>username_0: Hello @username_1 , it has been done: CLA is signed.

Looks like the bots saw the change: the check is passing for cla and label had been added to the PR.
<issue_comment>username_2: @username_0 Can you resolve the merge conflicts?
<issue_comment>username_0: Hello @username_2 ! The conflict had been resolved. Any feedback welcome, because I am not an English native so my writing might not be very good.
<issue_comment>username_1: Hi @username_0 the * you added are not rendering properly. Please see my inline comments on how to fix this and have the section look like similar sections in the document.  Thanks!
<issue_comment>username_1: Hi @username_0 there are still some issues that need to be fixed. See my inline comments. Thanks for working on this!
<issue_comment>username_0: Hello @username_1 ! 

Your feedback had been taken in account. I had to experiment a bit to figure out how to achieve the correct rendering, and squashed the ""experiments"" commits.

The bullet rendering is behaving as expected, as well as the notes: the `{{note}}` markups had to be indented to be part of the bullet block (and not reseting the bullet numbering).
However, the content of these notes should NOT be indented, to avoid rendering it all bold.
<issue_comment>username_3: /lgtm
Preview looks good now. Defer to Brad for approval.
<issue_comment>username_1: Great job!
/lgtm
/approve"
