gohugoio/hugo,238194424,3639,"{'number': 3639.0, 'repo': 'hugo', 'user_login': 'gohugoio'}","[{'action': 'opened', 'author': 'yihui', 'comment_id': None, 'datetime': '2017-06-23T16:38:06Z', 'masked_author': 'username_0', 'text': '1. Set `disqus_identifier`, `disqus_title`, and `disqus_url` only if the user has explicitly provided them in the metadata of a post. Two reasons:\r\n\r\n    1. If Hugo does not set them explicitly, Disqus knows how to fetch them anyway. The shortname is the only required variable for Disqus.\r\n\r\n    1. If Hugo hardcodes them, there are two problems:\r\n\r\n        1. `disqus_identifier` is hardcoded to `.Permalink`, which is identical to `disqus_url` in the current template. This is not only redundant, but also defeats the purpose of `disqus_identifier`: the identifier is introduced to instruct Disqus to load the same discussion thread for a page even if its URL has been changed. In other words, it is supposed to be a fixed value, independent of the page URL. Ideally this should be provided by the user _explicitly_.\r\n\r\n        1. `disqus_url` is redundant because Disqus also uses `.Permalink` as its default value. There is one scenario in which Hugo\'s `.Permalink` will fail Disqus: `baseurl = ""/""` in config.toml.<sup>1</sup> In this case, `.Permalink` does not contain the full URL (e.g., `/2017/06/23/hello-world/`). However, if you do not hardcode `disqus_url` to `.Permalink`, Disqus will continue to work, because it basically uses `window.location.href`.\r\n\r\n1. Do not load Disqus when the website is previewed locally, otherwise it is very confusing and even frustrating (e.g. comments sent to an unexpected URL by accident).\r\n\r\nI believe these two changes will greatly improve the user experience with Disqus for those who just uses the default Disqus template in Hugo.\r\n\r\n---\r\n\r\n1. In case you wonder why I set `baseurl = ""/""`: I know the disadvantages, e.g., sitemap.xml won\'t work, but I want all URLs on my website to be portable, i.e., not tied to my domain. The solution is `.RelPermalink` in the theme/templates but most theme authors just use `.Permalink` and I cannot fix these themes. The most important reason for making URLs portable is Netlify\'s preview for pull requests: the best way to make the preview websites work is `baseurl = ""/""` before other theme authors change `.Permalink` to `.RelPermalink` and use `relURL`.', 'title': 'Improve the built-in Disqus template', 'type': 'issue'}
 {'action': 'created', 'author': 'yihui', 'comment_id': 310752862.0, 'datetime': '2017-06-23 19:26:21+00:00', 'masked_author': 'username_0', 'text': 'I think AppVeyor sent the wrong status to Github: https://ci.appveyor.com/project/bep/hugo/build/1.0.69 (success here)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'anthonyfok', 'comment_id': 311037732.0, 'datetime': '2017-06-26 11:52:30+00:00', 'masked_author': 'username_1', 'text': 'Possibly related:\r\n\r\n[**Same Disqus Comments Showing up on Every Post?**](https://discourse.gohugo.io/t/same-disqus-comments-showing-up-on-every-post/7176)\r\nhttps://discourse.gohugo.io/t/same-disqus-comments-showing-up-on-every-post/7176', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yihui', 'comment_id': 311370147.0, 'datetime': '2017-06-27 14:10:32+00:00', 'masked_author': 'username_0', 'text': 'Thanks for merging my first PR to Hugo! ðŸŽ‰  Yes, I have used Disqus for quite a few years, and I think I\'m fairly familiar with Disqus. Since you were okay with this PR, I\'ll submit another one shortly, which will not be as important as this one but will make the code a little bit cleaner.\r\n\r\nAnd just in case anyone run into problems after this PR, below is the original template code:\r\n\r\n```html\r\n{{ if .Site.DisqusShortname }}<div id=""disqus_thread""></div>\r\n<script type=""text/javascript"">\r\n    var disqus_shortname = \'{{ .Site.DisqusShortname }}\';\r\n    var disqus_identifier = \'{{with .GetParam ""disqus_identifier"" }}{{ . }}{{ else }}{{ .Permalink }}{{end}}\';\r\n    var disqus_title = \'{{with .GetParam ""disqus_title"" }}{{ . }}{{ else }}{{ .Title }}{{end}}\';\r\n    var disqus_url = \'{{with .GetParam ""disqus_url"" }}{{ . | html  }}{{ else }}{{ .Permalink }}{{end}}\';\r\n    (function() {\r\n        var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\'; dsq.async = true;\r\n        dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n        (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n    })();\r\n</script>\r\n<noscript>Please enable JavaScript to view the <a href=""http://disqus.com/?ref_noscript"">comments powered by Disqus.</a></noscript>\r\n<a href=""http://disqus.com"" class=""dsq-brlink"">comments powered by <span class=""logo-disqus"">Disqus</span></a>{{end}}\r\n```\r\n\r\nIf it is desirable for a user to revert to the old template, the above code can be saved to `layouts/partials/disqus.html`. Then replace `{{ template ""_internal/disqus.html"" . }}` with `{{ partial ""disqus.html"" . }}`.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tombennet', 'comment_id': 316067684.0, 'datetime': '2017-07-18 13:43:28+00:00', 'masked_author': 'username_2', 'text': ""Hey @username_0 - thanks for this contribution. Am I right in thinking that this change negates the [advice in the Hugo docs](https://gohugo.io/templates/internal/#disqus) on conditionally loading Disqus? Given that the built-in Disqus template now does not load on localhost, the suggestion that users create a separate partial seems redundant. If so, let me know - I'm happy to submit a PR updating the docs."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yihui', 'comment_id': 316083069.0, 'datetime': '2017-07-18 14:32:47+00:00', 'masked_author': 'username_0', 'text': '@username_2 Yes, you are right. The docs should be updated, and there is no need to use a separate partial only for this purpose. Thanks!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Improve the built-in Disqus template
username_0: 1. Set `disqus_identifier`, `disqus_title`, and `disqus_url` only if the user has explicitly provided them in the metadata of a post. Two reasons:

    1. If Hugo does not set them explicitly, Disqus knows how to fetch them anyway. The shortname is the only required variable for Disqus.

    1. If Hugo hardcodes them, there are two problems:

        1. `disqus_identifier` is hardcoded to `.Permalink`, which is identical to `disqus_url` in the current template. This is not only redundant, but also defeats the purpose of `disqus_identifier`: the identifier is introduced to instruct Disqus to load the same discussion thread for a page even if its URL has been changed. In other words, it is supposed to be a fixed value, independent of the page URL. Ideally this should be provided by the user _explicitly_.

        1. `disqus_url` is redundant because Disqus also uses `.Permalink` as its default value. There is one scenario in which Hugo's `.Permalink` will fail Disqus: `baseurl = ""/""` in config.toml.<sup>1</sup> In this case, `.Permalink` does not contain the full URL (e.g., `/2017/06/23/hello-world/`). However, if you do not hardcode `disqus_url` to `.Permalink`, Disqus will continue to work, because it basically uses `window.location.href`.

1. Do not load Disqus when the website is previewed locally, otherwise it is very confusing and even frustrating (e.g. comments sent to an unexpected URL by accident).

I believe these two changes will greatly improve the user experience with Disqus for those who just uses the default Disqus template in Hugo.

---

1. In case you wonder why I set `baseurl = ""/""`: I know the disadvantages, e.g., sitemap.xml won't work, but I want all URLs on my website to be portable, i.e., not tied to my domain. The solution is `.RelPermalink` in the theme/templates but most theme authors just use `.Permalink` and I cannot fix these themes. The most important reason for making URLs portable is Netlify's preview for pull requests: the best way to make the preview websites work is `baseurl = ""/""` before other theme authors change `.Permalink` to `.RelPermalink` and use `relURL`.
<issue_comment>username_0: I think AppVeyor sent the wrong status to Github: https://ci.appveyor.com/project/bep/hugo/build/1.0.69 (success here)
<issue_comment>username_1: Possibly related:

[**Same Disqus Comments Showing up on Every Post?**](https://discourse.gohugo.io/t/same-disqus-comments-showing-up-on-every-post/7176)
https://discourse.gohugo.io/t/same-disqus-comments-showing-up-on-every-post/7176
<issue_comment>username_0: Thanks for merging my first PR to Hugo! ðŸŽ‰  Yes, I have used Disqus for quite a few years, and I think I'm fairly familiar with Disqus. Since you were okay with this PR, I'll submit another one shortly, which will not be as important as this one but will make the code a little bit cleaner.

And just in case anyone run into problems after this PR, below is the original template code:

```html
{{ if .Site.DisqusShortname }}<div id=""disqus_thread""></div>
<script type=""text/javascript"">
    var disqus_shortname = '{{ .Site.DisqusShortname }}';
    var disqus_identifier = '{{with .GetParam ""disqus_identifier"" }}{{ . }}{{ else }}{{ .Permalink }}{{end}}';
    var disqus_title = '{{with .GetParam ""disqus_title"" }}{{ . }}{{ else }}{{ .Title }}{{end}}';
    var disqus_url = '{{with .GetParam ""disqus_url"" }}{{ . | html  }}{{ else }}{{ .Permalink }}{{end}}';
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href=""http://disqus.com/?ref_noscript"">comments powered by Disqus.</a></noscript>
<a href=""http://disqus.com"" class=""dsq-brlink"">comments powered by <span class=""logo-disqus"">Disqus</span></a>{{end}}
```

If it is desirable for a user to revert to the old template, the above code can be saved to `layouts/partials/disqus.html`. Then replace `{{ template ""_internal/disqus.html"" . }}` with `{{ partial ""disqus.html"" . }}`.
<issue_comment>username_2: Hey @username_0 - thanks for this contribution. Am I right in thinking that this change negates the [advice in the Hugo docs](https://gohugo.io/templates/internal/#disqus) on conditionally loading Disqus? Given that the built-in Disqus template now does not load on localhost, the suggestion that users create a separate partial seems redundant. If so, let me know - I'm happy to submit a PR updating the docs.
<issue_comment>username_0: @username_2 Yes, you are right. The docs should be updated, and there is no need to use a separate partial only for this purpose. Thanks!"
processing/p5.js-website,572787410,557,,"[{'action': 'opened', 'author': 'DivyamAhuja', 'comment_id': None, 'datetime': '2020-02-28 14:23:49+00:00', 'masked_author': 'username_0', 'text': ""Hi! Currently p5 website lacks Hindi( ISO 639-1 hi) Translation. I do not know if it's good to add but I will like to contribute by adding Hindi Translation and may even want to take it as GSoC 2020 project.\r\nSo suggestions about it will be helpful.\r\n @username_2 \r\n\r\nThanks"", 'title': 'Hindi Translation for Website', 'type': 'issue'}
 {'action': 'created', 'author': 'limzykenneth', 'comment_id': 592930220.0, 'datetime': '2020-02-29 10:27:22+00:00', 'masked_author': 'username_1', 'text': ""I can't say too much about GSoC decision making so this is not about the possibility of proposing this for GSoC, just a heads up. \r\n\r\nThere is already existing effort to translate the website into Hindi, you can see the progress on [this branch](https://github.com/processing/p5.js-website/tree/hindi). Mainly only the reference is left. The JSON file that tracks the reference is going out of date which I want to fix at some point but I haven't got around to it yet. \r\n\r\nYou can start by looking at that branch and see if there are enough stuff for you to work on over the period of GSoC, as well as familiarize yourself with how the system works."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lmccart', 'comment_id': 593645290.0, 'datetime': '2020-03-02 22:00:17+00:00', 'masked_author': 'username_2', 'text': '@username_0 we are hoping to finish the translation that @username_1 has linked to, so this could be a good GSOC project. right now it is missing some website pages and updates as well as the reference translation.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shaharyar-shamshi', 'comment_id': 593794012.0, 'datetime': '2020-03-03 06:42:22+00:00', 'masked_author': 'username_3', 'text': '@username_1 @username_2 I have conversation with the saber and this Gsoc instead of individual language translation I have proposed to make the translation engine which would make translation work fast and easy and automatic and I would like to mentor this project meanwhile one student has discussed with me on discourse regarding the proposal you can have better idea of it on\r\nhttps://www.linkedin.com/posts/shaharyarshamshi_username_3-overview-activity-6609863230078717953-ap7Q\r\nMaking it generic will take effort looking forward for your suggestions', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'DivyamAhuja', 'comment_id': 594440020.0, 'datetime': '2020-03-04 10:24:51+00:00', 'masked_author': 'username_0', 'text': ""So @username_2 what's your opinion about it....If such automatic engine is feasible than I guess that will help the progress a lot..\r\nand @username_3 How are you thinking of implementing such engine ... cause idk what library or algorithm/techniques will be used"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'limzykenneth', 'comment_id': 594447815.0, 'datetime': '2020-03-04 10:42:40+00:00', 'masked_author': 'username_1', 'text': ""@username_3 I'm afraid I will have to give a hard pass on machine translation (ie Google Translate) without human oversight. Machine translation, even the best ones we have today, isn't perfect and in some circumstances cannot be perfect. \r\n\r\nAdding an additional official translation on the website comes with a degree of promise that the information on there is accurate, with machine translation we cannot guarantee that. This is especially true for languages with less overall users as with machine learning, the more data you have the better the model, languages with less users and hence less data available will certainly be underserved in this case.\r\n\r\nMachine translation can be used but the result must be checked by a fluent user of the language and corrected if necessary."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'DivyamAhuja', 'comment_id': 594464264.0, 'datetime': '2020-03-04 11:19:10+00:00', 'masked_author': 'username_0', 'text': 'I agree with @username_1 on this point....for now Machine Translation needs human oversight even though we have had much development in Machine Translation in recent years', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shaharyar-shamshi', 'comment_id': 594563319.0, 'datetime': '2020-03-04 14:39:32+00:00', 'masked_author': 'username_3', 'text': '@username_1 ya obviously there will be some human intervention , at least one percent , & that  could reach as high as ten percent but with this we can reduce the time of translation drastically. I have implemented this in one of the product which support approx 20-30 languages and after fully testing it we deployed and to be honest our development time reduce by 99 percent and also with accuracy more than 90 percent so I think we could go with machine translation but with some human intervention just for testing purpose @username_0  your suggestions?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ayushjainrksh', 'comment_id': 594623372.0, 'datetime': '2020-03-04 15:56:38+00:00', 'masked_author': 'username_4', 'text': ""Hi @username_1 . I was going through the issue and read about the plan of developing a translation engine by @username_3 . Well I must agree that this would really decrease the time and effort required in the international process. Moreover, the processing community can reach a more vast audience.\r\n\r\nI read Shaharyar's blog on how he applied the model on a product and it worked really great. I tried out the model for myself and it worked with great accuracy (100% for Hindi translation). I wrote a script and applied it to convert the references. It is working with perfection as I can confirm. \r\n\r\nAbout human intervention and relaibility, I would say the best scenario would be that the person test the translation by like giving it a read once and rectifying the error if any. Honestly, a human  translator is also prone to making errors in such a large translation file. So the best option would be to develop a translation engine and the person working on a certain language can test the translation. What's your opinion?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'DivyamAhuja', 'comment_id': 594672976.0, 'datetime': '2020-03-04 17:14:53+00:00', 'masked_author': 'username_0', 'text': ""@username_1 I think you can implement this and then not add translation to release website unless it's verified by Human Translator....this way translation work can be simplified.....and authenticity of Translation can be guaranteed too"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'DivyamAhuja', 'comment_id': 596215959.0, 'datetime': '2020-03-08 15:11:47+00:00', 'masked_author': 'username_0', 'text': 'So any updates on this issue? Should we go with translation engine or human translation?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sandeepcoder097', 'comment_id': 599127458.0, 'datetime': '2020-03-14 19:50:11+00:00', 'masked_author': 'username_5', 'text': 'i think machine translation is not a good idea so we should go with human translation and I want to work on that.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sandeepcoder097', 'comment_id': 599134221.0, 'datetime': '2020-03-14 20:59:32+00:00', 'masked_author': 'username_5', 'text': ""I have explored a bit and It looks like we don't need to make neither any translation engine nor we need human translation as chrome itself gives the option to translate any webpage in any language.\r\n\r\n![image](https://user-images.githubusercontent.com/31854379/76690252-59592a80-6664-11ea-9ed2-6c53db5fca63.png)\r\n\r\nThis google translate option provides numerous options for different languages.\r\n_if translate option not available on the search bar then one can right click on chrome to translate the webpage and it works fine..._"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lmccart', 'comment_id': 599231305.0, 'datetime': '2020-03-15 16:18:57+00:00', 'masked_author': 'username_2', 'text': ""Thanks all. Yes, Chrome and some other browsers provide an automatic machine translation. I think it is important to have a human translation built into our site because the machine translation can be very inaccurate sometimes. I'd suggest we proceed with human translations only for the p5 site. There seems to be a lot of energy around Hindi, so it also creates another opportunity for people to get involved with the project by contributing translation."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'DivyamAhuja', 'comment_id': 599232640.0, 'datetime': '2020-03-15 16:28:08+00:00', 'masked_author': 'username_0', 'text': 'Contributing to language translation is a nice way to start with open source contributions I think.\r\nI was initially thinking of translating site to Hindi as prospective GSoC project but now am thinking of merging 2-3 ideas along with site translation for GSoC project proposal', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sandeepcoder097', 'comment_id': 599247338.0, 'datetime': '2020-03-15 18:32:48+00:00', 'masked_author': 'username_5', 'text': 'so @username_0 are working for language translation or should i work on that?', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'lmccart', 'comment_id': None, 'datetime': '2021-04-02 06:24:43+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'lmccart', 'comment_id': 812346205.0, 'datetime': '2021-04-02 06:24:43+00:00', 'masked_author': 'username_2', 'text': 'tracked in https://github.com/processing/p5.js-website/issues/420', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Hindi Translation for Website
username_0: Hi! Currently p5 website lacks Hindi( ISO 639-1 hi) Translation. I do not know if it's good to add but I will like to contribute by adding Hindi Translation and may even want to take it as GSoC 2020 project.
So suggestions about it will be helpful.
 @username_2 

Thanks
<issue_comment>username_1: I can't say too much about GSoC decision making so this is not about the possibility of proposing this for GSoC, just a heads up. 

There is already existing effort to translate the website into Hindi, you can see the progress on [this branch](https://github.com/processing/p5.js-website/tree/hindi). Mainly only the reference is left. The JSON file that tracks the reference is going out of date which I want to fix at some point but I haven't got around to it yet. 

You can start by looking at that branch and see if there are enough stuff for you to work on over the period of GSoC, as well as familiarize yourself with how the system works.
<issue_comment>username_2: @username_0 we are hoping to finish the translation that @username_1 has linked to, so this could be a good GSOC project. right now it is missing some website pages and updates as well as the reference translation.
<issue_comment>username_3: @username_1 @username_2 I have conversation with the saber and this Gsoc instead of individual language translation I have proposed to make the translation engine which would make translation work fast and easy and automatic and I would like to mentor this project meanwhile one student has discussed with me on discourse regarding the proposal you can have better idea of it on
https://www.linkedin.com/posts/shaharyarshamshi_username_3-overview-activity-6609863230078717953-ap7Q
Making it generic will take effort looking forward for your suggestions
<issue_comment>username_0: So @username_2 what's your opinion about it....If such automatic engine is feasible than I guess that will help the progress a lot..
and @username_3 How are you thinking of implementing such engine ... cause idk what library or algorithm/techniques will be used
<issue_comment>username_1: @username_3 I'm afraid I will have to give a hard pass on machine translation (ie Google Translate) without human oversight. Machine translation, even the best ones we have today, isn't perfect and in some circumstances cannot be perfect. 

Adding an additional official translation on the website comes with a degree of promise that the information on there is accurate, with machine translation we cannot guarantee that. This is especially true for languages with less overall users as with machine learning, the more data you have the better the model, languages with less users and hence less data available will certainly be underserved in this case.

Machine translation can be used but the result must be checked by a fluent user of the language and corrected if necessary.
<issue_comment>username_0: I agree with @username_1 on this point....for now Machine Translation needs human oversight even though we have had much development in Machine Translation in recent years
<issue_comment>username_3: @username_1 ya obviously there will be some human intervention , at least one percent , & that  could reach as high as ten percent but with this we can reduce the time of translation drastically. I have implemented this in one of the product which support approx 20-30 languages and after fully testing it we deployed and to be honest our development time reduce by 99 percent and also with accuracy more than 90 percent so I think we could go with machine translation but with some human intervention just for testing purpose @username_0  your suggestions?
<issue_comment>username_4: Hi @username_1 . I was going through the issue and read about the plan of developing a translation engine by @username_3 . Well I must agree that this would really decrease the time and effort required in the international process. Moreover, the processing community can reach a more vast audience.

I read Shaharyar's blog on how he applied the model on a product and it worked really great. I tried out the model for myself and it worked with great accuracy (100% for Hindi translation). I wrote a script and applied it to convert the references. It is working with perfection as I can confirm. 

About human intervention and relaibility, I would say the best scenario would be that the person test the translation by like giving it a read once and rectifying the error if any. Honestly, a human  translator is also prone to making errors in such a large translation file. So the best option would be to develop a translation engine and the person working on a certain language can test the translation. What's your opinion?
<issue_comment>username_0: @username_1 I think you can implement this and then not add translation to release website unless it's verified by Human Translator....this way translation work can be simplified.....and authenticity of Translation can be guaranteed too
<issue_comment>username_0: So any updates on this issue? Should we go with translation engine or human translation?
<issue_comment>username_5: i think machine translation is not a good idea so we should go with human translation and I want to work on that.
<issue_comment>username_5: I have explored a bit and It looks like we don't need to make neither any translation engine nor we need human translation as chrome itself gives the option to translate any webpage in any language.

![image](https://user-images.githubusercontent.com/31854379/76690252-59592a80-6664-11ea-9ed2-6c53db5fca63.png)

This google translate option provides numerous options for different languages.
_if translate option not available on the search bar then one can right click on chrome to translate the webpage and it works fine..._
<issue_comment>username_2: Thanks all. Yes, Chrome and some other browsers provide an automatic machine translation. I think it is important to have a human translation built into our site because the machine translation can be very inaccurate sometimes. I'd suggest we proceed with human translations only for the p5 site. There seems to be a lot of energy around Hindi, so it also creates another opportunity for people to get involved with the project by contributing translation.
<issue_comment>username_0: Contributing to language translation is a nice way to start with open source contributions I think.
I was initially thinking of translating site to Hindi as prospective GSoC project but now am thinking of merging 2-3 ideas along with site translation for GSoC project proposal
<issue_comment>username_5: so @username_0 are working for language translation or should i work on that?<issue_closed>
<issue_comment>username_2: tracked in https://github.com/processing/p5.js-website/issues/420"
kubernetes/website,604237826,20483,,"[{'action': 'opened', 'author': 'KnotGud', 'comment_id': None, 'datetime': '2020-04-21 19:42:22+00:00', 'masked_author': 'username_0', 'text': ""**This is a Bug Report**\r\n\r\n<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->\r\n\r\n<!--Required Information-->\r\n**Problem:**\r\nPowershell markdown code block in `{{ note }}` block doesn't render correctly\r\n**Proposed Solution:**\r\nMove markdown code block out of `{{ note }}` block or change code block to inline code snippet\r\n**Page to Update:**\r\nhttps://kubernetes.io/docs/tasks/administer-cluster/kubeadm/adding-windows-nodes/\r\n\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->\r\nAttached Screenshot of issue\r\n![image](https://user-images.githubusercontent.com/23423568/79906291-5fad9580-83cc-11ea-9ea3-42a41d5499ca.png)"", 'title': 'Issue with k8s.io/docs/tasks/administer-cluster/kubeadm/adding-windows-nodes/', 'type': 'issue'}
 {'action': 'closed', 'author': 'KnotGud', 'comment_id': None, 'datetime': '2020-04-21 19:51:21+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'KnotGud', 'comment_id': 617378438.0, 'datetime': '2020-04-21 19:51:21+00:00', 'masked_author': 'username_0', 'text': 'Duplicate of #20130', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Issue with k8s.io/docs/tasks/administer-cluster/kubeadm/adding-windows-nodes/
username_0: **This is a Bug Report**

<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->
<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->

<!--Required Information-->
**Problem:**
Powershell markdown code block in `{{ note }}` block doesn't render correctly
**Proposed Solution:**
Move markdown code block out of `{{ note }}` block or change code block to inline code snippet
**Page to Update:**
https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/adding-windows-nodes/

<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->
Attached Screenshot of issue
![image](https://user-images.githubusercontent.com/23423568/79906291-5fad9580-83cc-11ea-9ea3-42a41d5499ca.png)<issue_closed>
<issue_comment>username_0: Duplicate of #20130"
longhorn/website,652161997,159,"{'number': 159.0, 'repo': 'website', 'user_login': 'longhorn'}","[{'action': 'opened', 'author': 'catherineluse', 'comment_id': None, 'datetime': '2020-07-07T09:26:41Z', 'masked_author': 'username_0', 'text': '', 'title': 'Edit RWX workloads doc', 'type': 'issue'}
 {'action': 'created', 'author': 'joshimoo', 'comment_id': 655082021.0, 'datetime': '2020-07-07 19:38:51+00:00', 'masked_author': 'username_1', 'text': '@username_0 I updated the diagrams, please replace the rwx-01.png and rwx-02.png with the files from the archive below.\r\nThe archive also includes the powerpoint source file I used to create the diagrams, in case you want to adjust the color scheme?\r\n[2020.07.07-longhorn-rwx-diagrams.zip](https://github.com/longhorn/website/files/4886834/2020.07.07-longhorn-rwx-diagrams.zip)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'catherineluse', 'comment_id': 655736960.0, 'datetime': '2020-07-08 20:23:24+00:00', 'masked_author': 'username_0', 'text': 'I added the revised diagrams', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Edit RWX workloads doc
username_0: 
<issue_comment>username_1: @username_0 I updated the diagrams, please replace the rwx-01.png and rwx-02.png with the files from the archive below.
The archive also includes the powerpoint source file I used to create the diagrams, in case you want to adjust the color scheme?
[2020.07.07-longhorn-rwx-diagrams.zip](https://github.com/longhorn/website/files/4886834/2020.07.07-longhorn-rwx-diagrams.zip)
<issue_comment>username_0: I added the revised diagrams"
emberjs/website,327857799,3371,"{'number': 3371.0, 'repo': 'website', 'user_login': 'emberjs'}","[{'action': 'opened', 'author': 'shx-dev', 'comment_id': None, 'datetime': '2018-05-30T18:57:46Z', 'masked_author': 'username_0', 'text': 'Including our logo on the users section. Ember.js powers our entire front-end architecture.', 'title': ""Including SHX's logo on the users section"", 'type': 'issue'}
 {'action': 'created', 'author': 'kennethlarsen', 'comment_id': 398699289.0, 'datetime': '2018-06-20 10:16:16+00:00', 'masked_author': 'username_1', 'text': '@username_0 Thank you for your PR!\r\nThere seems to be a small merge conflict. \r\n\r\nDid you also remember to fill out this form? https://airtable.com/shrZSLswT03VpzY1D', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shx-dev', 'comment_id': 400501710.0, 'datetime': '2018-06-27 00:10:56+00:00', 'masked_author': 'username_0', 'text': '@username_1 Hey! Yes I did fill out the form after submitting the PR. Just fixed the merge conflict by placing our logo at the bottom of the list.\r\nIs there anything else I have to do?\r\n\r\nThank you!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sivakumar-kailasam', 'comment_id': 400518043.0, 'datetime': '2018-06-27 01:57:36+00:00', 'masked_author': 'username_2', 'text': 'Thanks @username_0', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Including SHX's logo on the users section
username_0: Including our logo on the users section. Ember.js powers our entire front-end architecture.
<issue_comment>username_1: @username_0 Thank you for your PR!
There seems to be a small merge conflict. 

Did you also remember to fill out this form? https://airtable.com/shrZSLswT03VpzY1D
<issue_comment>username_0: @username_1 Hey! Yes I did fill out the form after submitting the PR. Just fixed the merge conflict by placing our logo at the bottom of the list.
Is there anything else I have to do?

Thank you!
<issue_comment>username_2: Thanks @username_0"
