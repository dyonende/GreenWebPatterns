ethereum/ethereum-org-website,1103982480,5106,,"[{'action': 'opened', 'author': 'joyboy114', 'comment_id': None, 'datetime': '2022-01-14 18:19:34+00:00', 'masked_author': 'username_0', 'text': 'As time is growing, market competition becomes more fierce. So less skilled get paid lesser. \r\nRide sharing has become one such example. Where there should be actually no dependence on third party as central authority.\r\nSimilar to this many handloom businesses pay very less and earn very high margin profit on the cost of development of working people.\r\nWe can create a unified solution for such problems \r\nAnd I think with the power of decentralised power of blockchain we can attain this goal.', 'title': 'DApp for ride sharing', 'type': 'issue'}
 {'action': 'created', 'author': 'wackerow', 'comment_id': 1013509167.0, 'datetime': '2022-01-14 22:14:34+00:00', 'masked_author': 'username_1', 'text': ""Hey @username_0, agree, but this is the repo for issue regarding the ethereum.org website. If you have ideas for apps I'd encourage you to get involved in the community to find others who may be interested in this. Gonna close this for now since it's off topic for this repo."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'wackerow', 'comment_id': None, 'datetime': '2022-01-14 22:14:34+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: DApp for ride sharing
username_0: As time is growing, market competition becomes more fierce. So less skilled get paid lesser. 
Ride sharing has become one such example. Where there should be actually no dependence on third party as central authority.
Similar to this many handloom businesses pay very less and earn very high margin profit on the cost of development of working people.
We can create a unified solution for such problems 
And I think with the power of decentralised power of blockchain we can attain this goal.
<issue_comment>username_1: Hey @username_0, agree, but this is the repo for issue regarding the ethereum.org website. If you have ideas for apps I'd encourage you to get involved in the community to find others who may be interested in this. Gonna close this for now since it's off topic for this repo.<issue_closed>"
erlef/website,559883058,120,,"[{'action': 'opened', 'author': 'benoitc', 'comment_id': None, 'datetime': '2020-02-04 17:53:57+00:00', 'masked_author': 'username_0', 'text': ""It's unclear from the contact page how to subscribe to the mailing-list. Maybe we can add a short description to it or at list links to subscribe/unsubscribe/post. \r\n\r\nAlso shouldn't we advertise the group chats?"", 'title': 'contact links', 'type': 'issue'}
 {'action': 'created', 'author': 'starbelly', 'comment_id': 585557360.0, 'datetime': '2020-02-13 05:25:07+00:00', 'masked_author': 'username_1', 'text': 'Yes I agree. I am hesitant about doing anything with the subscribe/unsubscribe etc until the new design is in prod as this is a particular area that has been worked on. \r\n\r\nAs for the group chats, yes.... we should replicate content from erlang.org and elixir-lang.org community pages to form our own. Likewise, we will be adding an endpoint for performing slack invites for erlang.slack.com that is related to this.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'paulo-ferraz-oliveira', 'comment_id': 793188456.0, 'datetime': '2021-03-09 00:05:32+00:00', 'masked_author': 'username_2', 'text': 'Do you mean ""the newsletter""? I was unaware that there was a mailing list.\r\n\r\n@username_1, is this issue updated? Because it seems mostly everything\'s taken care of, already.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'starbelly', 'comment_id': 799870063.0, 'datetime': '2021-03-16 01:17:39+00:00', 'masked_author': 'username_1', 'text': 'Yes, I think this is resolved by other commits and issues. @username_0 if you still feel something is missing please re-open or open more specific issues.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'starbelly', 'comment_id': None, 'datetime': '2021-03-16 01:17:39+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'reopened', 'author': 'benoitc', 'comment_id': None, 'datetime': '2021-03-16 02:59:46+00:00', 'masked_author': 'username_0', 'text': ""It's unclear from the contact page how to subscribe to the mailing-list. Maybe we can add a short description to it or at list links to subscribe/unsubscribe/post. \r\n\r\nAlso shouldn't we advertise the group chats?"", 'title': 'contact links', 'type': 'issue'}
 {'action': 'closed', 'author': 'benoitc', 'comment_id': None, 'datetime': '2021-03-16 03:00:16+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'benoitc', 'comment_id': 799905799.0, 'datetime': '2021-03-16 03:00:16+00:00', 'masked_author': 'username_0', 'text': 'I still think we should advertise the', 'title': None, 'type': 'comment'}
 {'action': 'reopened', 'author': 'benoitc', 'comment_id': None, 'datetime': '2021-03-16 03:00:26+00:00', 'masked_author': 'username_0', 'text': ""It's unclear from the contact page how to subscribe to the mailing-list. Maybe we can add a short description to it or at list links to subscribe/unsubscribe/post. \r\n\r\nAlso shouldn't we advertise the group chats?"", 'title': 'contact links', 'type': 'issue'}
 {'action': 'created', 'author': 'benoitc', 'comment_id': 799911378.0, 'datetime': '2021-03-16 03:16:10+00:00', 'masked_author': 'username_0', 'text': 'we discussed about it on a chat  but right  let’s be more specific.\r\n\r\nWhen subscribing to the «\xa0newsletter\xa0» in contact page it would be interesting to describe what kind of news are expected and their fréquence. also as some other site do we could add a way to unsubscribe to it from the website. \r\n\r\nas for the chats. We didn’t opened yet at that time the slack, but I was thinking to describe its existence there and in working groups page . This would help people to find each discussions more easily.  What people think about it?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'starbelly', 'comment_id': 799914478.0, 'datetime': '2021-03-16 03:24:54+00:00', 'masked_author': 'username_1', 'text': 'Right now we do the bare minimum, which is for every working group that has a slack channel there is a link that shows up on the working group page : \r\n\r\n<img width=""1201"" alt=""Screen Shot 2021-03-15 at 10 20 15 PM"" src=""https://user-images.githubusercontent.com/39971740/111251123-a0159380-85dc-11eb-8f0d-abd2117d532f.png"">\r\n\r\nThe rules for this link are as follows : \r\n\r\n -  If you are logged in and you have already requested a slack invite it is direct link to the slack (i.e., will open up in web browser or slack app and focus on the channel linked to)\r\n - if you are logged in and you have not requested a slack invite, it links to /members/profile where you can request one\r\n - if you are not logged in or you have not requested a slack invite it will redirect to you /slack-invite/erlef\r\n \r\n I do agree we need more content around describing working groups, etc. and I believe #273 alludes to that problem.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'benoitc', 'comment_id': 800039574.0, 'datetime': '2021-03-16 07:55:41+00:00', 'masked_author': 'username_0', 'text': '-- \nSent from my Mobile', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'starbelly', 'comment_id': 800386415.0, 'datetime': '2021-03-16 15:56:48+00:00', 'masked_author': 'username_1', 'text': 'All in due time my friend, but yes, we want to empower working groups with the tools they need to add/change things within their group(s) and for the site. No disagreement there.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: contact links
username_0: It's unclear from the contact page how to subscribe to the mailing-list. Maybe we can add a short description to it or at list links to subscribe/unsubscribe/post. 

Also shouldn't we advertise the group chats?
<issue_comment>username_1: Yes I agree. I am hesitant about doing anything with the subscribe/unsubscribe etc until the new design is in prod as this is a particular area that has been worked on. 

As for the group chats, yes.... we should replicate content from erlang.org and elixir-lang.org community pages to form our own. Likewise, we will be adding an endpoint for performing slack invites for erlang.slack.com that is related to this.
<issue_comment>username_2: Do you mean ""the newsletter""? I was unaware that there was a mailing list.

@username_1, is this issue updated? Because it seems mostly everything's taken care of, already.
<issue_comment>username_1: Yes, I think this is resolved by other commits and issues. @username_0 if you still feel something is missing please re-open or open more specific issues.<issue_closed>
<issue_comment>username_0: It's unclear from the contact page how to subscribe to the mailing-list. Maybe we can add a short description to it or at list links to subscribe/unsubscribe/post. 

Also shouldn't we advertise the group chats?<issue_closed>
<issue_comment>username_0: I still think we should advertise the
<issue_comment>username_0: It's unclear from the contact page how to subscribe to the mailing-list. Maybe we can add a short description to it or at list links to subscribe/unsubscribe/post. 

Also shouldn't we advertise the group chats?
<issue_comment>username_0: we discussed about it on a chat  but right  let’s be more specific.

When subscribing to the « newsletter » in contact page it would be interesting to describe what kind of news are expected and their fréquence. also as some other site do we could add a way to unsubscribe to it from the website. 

as for the chats. We didn’t opened yet at that time the slack, but I was thinking to describe its existence there and in working groups page . This would help people to find each discussions more easily.  What people think about it?
<issue_comment>username_1: Right now we do the bare minimum, which is for every working group that has a slack channel there is a link that shows up on the working group page : 

<img width=""1201"" alt=""Screen Shot 2021-03-15 at 10 20 15 PM"" src=""https://user-images.githubusercontent.com/39971740/111251123-a0159380-85dc-11eb-8f0d-abd2117d532f.png"">

The rules for this link are as follows : 

 -  If you are logged in and you have already requested a slack invite it is direct link to the slack (i.e., will open up in web browser or slack app and focus on the channel linked to)
 - if you are logged in and you have not requested a slack invite, it links to /members/profile where you can request one
 - if you are not logged in or you have not requested a slack invite it will redirect to you /slack-invite/erlef
 
 I do agree we need more content around describing working groups, etc. and I believe #273 alludes to that problem.
<issue_comment>username_0: -- 
Sent from my Mobile
<issue_comment>username_1: All in due time my friend, but yes, we want to empower working groups with the tools they need to add/change things within their group(s) and for the site. No disagreement there."
open-telemetry/opentelemetry.io,1186157520,1252,,"[{'action': 'opened', 'author': 'geff10', 'comment_id': None, 'datetime': '2022-03-30 09:27:56+00:00', 'masked_author': 'username_0', 'text': 'This line does not work for me in Powershell:\r\n./bin/otelcorecol_* --config ./examples/local/otel-config.yaml\r\n\r\nError message: ""./bin/otelcorecol_* : The term \'./bin/otelcorecol_*\' is not recognized as the name of a cmdlet, function, script file,\r\nor operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try\r\n again.\r\nAt line:1 char:1\r\n+ ./bin/otelcorecol_* --config ./examples/local/otel-config.yaml\r\n+ ~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (./bin/otelcorecol_*:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException""', 'title': 'Getting Started - bad line of Windows command', 'type': 'issue'}
 {'action': 'created', 'author': 'austinlparker', 'comment_id': 1083141189.0, 'datetime': '2022-03-30 13:28:10+00:00', 'masked_author': 'username_1', 'text': 'Thanks -- there is a note under those instructions that say the commands only work in bash.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geff10', 'comment_id': 1083156526.0, 'datetime': '2022-03-30 13:41:53+00:00', 'masked_author': 'username_0', 'text': 'Actually, it did not work neither in bash shell, but I realized that it was partly about the lack of `make` in Windows, so I downloaded the Windows version of it. However, it still does not work neither with git bash: ""makefile:153: *** multiple target patterns.  Stop."", neither with PS or cmd. Powershell tells bit more: ""FIND: Parameter format not correct\r\nAccess denied -"" - which I assume means that there is no FIND on Windows, which is not a surprise, but this part of documentation should be about Windows. Am I missing something?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'austinlparker', 'comment_id': 1083166409.0, 'datetime': '2022-03-30 13:50:47+00:00', 'masked_author': 'username_1', 'text': ""That part of the documentation isn't about running the collector on Windows specifically, it's supposed to be general instructions for running it locally."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Getting Started - bad line of Windows command
username_0: This line does not work for me in Powershell:
./bin/otelcorecol_* --config ./examples/local/otel-config.yaml

Error message: ""./bin/otelcorecol_* : The term './bin/otelcorecol_*' is not recognized as the name of a cmdlet, function, script file,
or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
 again.
At line:1 char:1
+ ./bin/otelcorecol_* --config ./examples/local/otel-config.yaml
+ ~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (./bin/otelcorecol_*:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException""
<issue_comment>username_1: Thanks -- there is a note under those instructions that say the commands only work in bash.
<issue_comment>username_0: Actually, it did not work neither in bash shell, but I realized that it was partly about the lack of `make` in Windows, so I downloaded the Windows version of it. However, it still does not work neither with git bash: ""makefile:153: *** multiple target patterns.  Stop."", neither with PS or cmd. Powershell tells bit more: ""FIND: Parameter format not correct
Access denied -"" - which I assume means that there is no FIND on Windows, which is not a surprise, but this part of documentation should be about Windows. Am I missing something?
<issue_comment>username_1: That part of the documentation isn't about running the collector on Windows specifically, it's supposed to be general instructions for running it locally."
oVirt/ovirt-site,1074577620,2653,"{'number': 2653.0, 'repo': 'ovirt-site', 'user_login': 'oVirt'}","[{'action': 'opened', 'author': 'stoobie', 'comment_id': None, 'datetime': '2021-12-08T16:11:17Z', 'masked_author': 'username_0', 'text': 'Bug fix\r\n\r\nFixes https://bugzilla.redhat.com/show_bug.cgi?id=2014790\r\n\r\nChanges proposed in this pull request:\r\n- Updated topics on Storage consideration as per https://bugzilla.redhat.com/show_bug.cgi?id=2014790#c1:\r\n  - https://github.com/oVirt/ovirt-site/pull/2653/files#diff-f07c76203bba9d6afcb62d5b09264276dd2e011fc6b39b98057025ccf5d4415e \r\n  - https://github.com/oVirt/ovirt-site/pull/2653/files#diff-840c2951c1ffae1691ee0fa5bf02f1e75fb24f0aeefde0abeeafc7e1dd8c3e86\r\n- Lots of other editing fixes, not connected to technical content.\r\n\r\nI confirm that this pull request was submitted according to the [contribution guidelines](https://github.com/oVirt/ovirt-site/blob/master/CONTRIBUTING.md): @username_0 \r\nThis pull request needs review by: @sleviim', 'title': 'BZ2014790: [Docs] [DisasterRecovery] highlight that failovers cannot occur if the SPM is the point of failure if Power Management is not configured', 'type': 'issue'}
 {'action': 'created', 'author': 'RichardHoch', 'comment_id': 1002554948.0, 'datetime': '2021-12-29 11:43:40+00:00', 'masked_author': 'username_1', 'text': '@username_0 -- a number of minor comments, but otherwise, LGTM!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: BZ2014790: [Docs] [DisasterRecovery] highlight that failovers cannot occur if the SPM is the point of failure if Power Management is not configured
username_0: Bug fix

Fixes https://bugzilla.redhat.com/show_bug.cgi?id=2014790

Changes proposed in this pull request:
- Updated topics on Storage consideration as per https://bugzilla.redhat.com/show_bug.cgi?id=2014790#c1:
  - https://github.com/oVirt/ovirt-site/pull/2653/files#diff-f07c76203bba9d6afcb62d5b09264276dd2e011fc6b39b98057025ccf5d4415e 
  - https://github.com/oVirt/ovirt-site/pull/2653/files#diff-840c2951c1ffae1691ee0fa5bf02f1e75fb24f0aeefde0abeeafc7e1dd8c3e86
- Lots of other editing fixes, not connected to technical content.

I confirm that this pull request was submitted according to the [contribution guidelines](https://github.com/oVirt/ovirt-site/blob/master/CONTRIBUTING.md): @username_0 
This pull request needs review by: @sleviim
<issue_comment>username_1: @username_0 -- a number of minor comments, but otherwise, LGTM!"
jscraftcamp/website,553134981,820,,"[{'action': 'opened', 'author': 'Narigo', 'comment_id': None, 'datetime': '2020-01-21 21:17:46+00:00', 'masked_author': 'username_0', 'text': ""## Why food?\r\n\r\nNo Food, no craftsmanship! Even the best people/coder need a full stomach - help us get some delicious energy-restorings for our guests. Of course as a sponsor you can either have a say in what to serve or you can leave it completely up to us to choose the right developers nutriment. And last year we got them all fed, so it's not as hard as it sounds :).\r\n\r\n## How does it work?\r\n\r\nWe need about 800,- (8,- pP)\r\n\r\nLast year we asked some food companies for offers and had the sponsor confirm that amount up front. Once the food was delivered on the day the sponsor pulled out the credit card and made all attendees happy by enabling them to fill up their stomaches. And boy, they had been happier and their energy levels had been restored and they went for another half a day ... [until the party][party].\r\n\r\n[party]: https://github.com/jscraftcamp/website/issues/201"", 'title': 'Sponsor needed for lunch on Friday 🍱 🍔 🍕 🌮 🍇 - 💰💰💰💰💰💰💰💰💰', 'type': 'issue'}
 {'action': 'created', 'author': 'lowsky', 'comment_id': 584521284.0, 'datetime': '2020-02-11 08:19:58+00:00', 'masked_author': 'username_1', 'text': 'Hetzner will be sponsoring the Friday lunch (again 👍)\r\n\r\nLogo bitte unser “neues"" verwenden, siehe Anhang!\r\nVerlinkung, wenn möglich, bitte auf https://www.hetzner.de/cloud', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Sponsor needed for lunch on Friday 🍱 🍔 🍕 🌮 🍇 - 💰💰💰💰💰💰💰💰💰
username_0: ## Why food?

No Food, no craftsmanship! Even the best people/coder need a full stomach - help us get some delicious energy-restorings for our guests. Of course as a sponsor you can either have a say in what to serve or you can leave it completely up to us to choose the right developers nutriment. And last year we got them all fed, so it's not as hard as it sounds :).

## How does it work?

We need about 800,- (8,- pP)

Last year we asked some food companies for offers and had the sponsor confirm that amount up front. Once the food was delivered on the day the sponsor pulled out the credit card and made all attendees happy by enabling them to fill up their stomaches. And boy, they had been happier and their energy levels had been restored and they went for another half a day ... [until the party][party].

[party]: https://github.com/jscraftcamp/website/issues/201
<issue_comment>username_1: Hetzner will be sponsoring the Friday lunch (again 👍)

Logo bitte unser “neues"" verwenden, siehe Anhang!
Verlinkung, wenn möglich, bitte auf https://www.hetzner.de/cloud"
kubernetes/website,751861366,25259,"{'number': 25259.0, 'repo': 'website', 'user_login': 'kubernetes'}","[{'action': 'opened', 'author': 'nate-double-u', 'comment_id': None, 'datetime': '2020-11-26T23:14:10Z', 'masked_author': 'username_0', 'text': 'Adding instructions for how to validate `kubectl` binaries against checksum files (Linux, MacOS, Windows)\r\n\r\nUpdating numbered lists to use markdown syntax (""1."" for each entry, rather than ""1. 2. 3. etc.""), should make it easier to add and remove list items in future as the renderer enumerates these automatically.\r\n\r\nfixes: https://github.com/kubernetes/website/issues/25040', 'title': 'Updating /docs/tasks/tools/install-kubectl', 'type': 'issue'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 734505104.0, 'datetime': '2020-11-26 23:18:44+00:00', 'masked_author': 'username_0', 'text': 'Tested on:\r\n* Ubuntu 20.04.1 LTS (using \r\n* macOS Catalina Version 10.15.7 (using `terminal` app, no non-standard applications need be installed)\r\n* Windows 10 Pro (using `Command Prompt`, no non-standard applications installed _to my knowledge_. We may want to retest on a fresh install)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 734506163.0, 'datetime': '2020-11-26 23:25:50+00:00', 'masked_author': 'username_0', 'text': ""Page updated deploy preview: https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/\r\n\r\nI'm not particularly happy with the [Windows](https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/#install-kubectl-on-windows) and [MacOS](https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/#install-kubectl-on-macos) sections yet, as I haven't found a way to programmatically validate the binary against the checksum file like I do in the Linux section -- I have to do a bit more research into the MacOS and Windows tools. If anyone knows a better way off the top of their head, I'd appreciate a pointer."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 734508091.0, 'datetime': '2020-11-26 23:38:15+00:00', 'masked_author': 'username_0', 'text': '@username_1 I followed your suggestion in https://github.com/kubernetes/website/issues/25040#issuecomment-730509056 about using `{{< param ""fullversion"" >}}` to build the urls for the curl commands.\r\n\r\nWhile I was building the new sections I noticed that the curl command (at least in the _[Install kubectl binary with curl on Linux](https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/#install-kubectl-on-linux)_ section) doesn\'t download the same version of the binary as the url below built using `{{< param ""fullversion"" >}}`. \r\n\r\nIn this case I think the following curl command downloads version v1.19.4, even though `{{< param ""fullversion"" >}}` renders v1.19.0.\r\n```\r\ncurl -LO ""https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl""\r\n```\r\n\r\nIn this case, should I be using the the `{{< skew ... >}}` shortcode instead to try to get the next version?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 734585559.0, 'datetime': '2020-11-27 02:48:44+00:00', 'masked_author': 'username_0', 'text': 'Links updated to download from https://dl.k8s.io/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 734912966.0, 'datetime': '2020-11-27 16:34:42+00:00', 'masked_author': 'username_1', 'text': 'The difference in patch version comes down to the website getting a (manual) update per minor release but nothing happening on patch releases.\r\nI suspect we can do something about that. The story for downloading the latest version Kubernetes proper is also [not great](https://github.com/kubernetes/website/issues/20293).\r\n\r\nI think we ought to find the simplest way of getting a Kubernetes release metadata file published, make that publication happen, and update based on that. There are other options though.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 734950913.0, 'datetime': '2020-11-27 18:46:16+00:00', 'masked_author': 'username_0', 'text': ""I figured something like this was happening (hence the comment edit -- still not sure of the etiquette of those kinds of edits...).\r\n\r\nI think in this case I'm going to try to be consistent with the the stable release where offered, i.e. I'll link to the stable release sha as well (and may do a little to make it more obvious what is being downloaded 'latest' vs 'latest stable'). If someone is going through the instructions to download, verify, and install, it would be irritating for the supplied sha to be for a different version than was just linked to."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 735015873.0, 'datetime': '2020-11-28 00:14:00+00:00', 'masked_author': 'username_0', 'text': 'I\'ve found a way to automate the validation on MacOS the way we are doing in Linux, and I\'ve found a workaround with PowerShell that we can use for Windows (though I\'m still not thrilled with that method).\r\n\r\nI\'ve also done a Markdown cleanup pass. \r\n* Updating numbered lists to use markdown syntax (""1."" for each entry), should make it easier to add and remove list items in future\r\n* Updating spacing throughout', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 735020297.0, 'datetime': '2020-11-28 00:48:23+00:00', 'masked_author': 'username_0', 'text': 'I like how we use the tabs in the [_Install on Windows using Chocolatey or Scoop_ section](https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-on-windows-using-chocolatey-or-scoop)\r\n\r\nCould we consider using a similar _Linux_, _macOS_, _Windows_ tab structure and create a _Install kubectl_ section containing it? It may help to shorten the page, and give people an opportunity to get directly to what they are looking for without a lot of scrolling.\r\n\r\nWe may also be able to de-duplicate some of the instructions doing it that way, but I think this work would be well outside the scope of this PR.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 735290767.0, 'datetime': '2020-11-28 21:08:58+00:00', 'masked_author': 'username_0', 'text': ""The last push cleans up the Windows Validation section's formatting a bit."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 735294007.0, 'datetime': '2020-11-28 21:41:54+00:00', 'masked_author': 'username_0', 'text': 'The last push adds some syntax highlighting to the command snippets.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 746963162.0, 'datetime': '2020-12-16 20:28:55+00:00', 'masked_author': 'username_0', 'text': '@tcarland, would you like to take a look at this PR? I think it solves your issue https://github.com/kubernetes/website/issues/25040', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 747065925.0, 'datetime': '2020-12-16 21:58:28+00:00', 'masked_author': 'username_1', 'text': '/sig security', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 747066460.0, 'datetime': '2020-12-16 21:59:39+00:00', 'masked_author': 'username_1', 'text': 'Also relevant to SIG CLI, mind.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 747066493.0, 'datetime': '2020-12-16 21:59:42+00:00', 'masked_author': 'username_1', 'text': 'Sounds fine to me.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 747712688.0, 'datetime': '2020-12-17 21:28:14+00:00', 'masked_author': 'username_0', 'text': 'The latest push picks out the incorrectly updated spacing changes I introduced.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kbhawkey', 'comment_id': 748233326.0, 'datetime': '2020-12-18 18:00:19+00:00', 'masked_author': 'username_2', 'text': 'Thanks @username_0 .\r\nI think the changes are looking good. Noted a few nits, otherwise 👍', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 748288195.0, 'datetime': '2020-12-18 19:50:20+00:00', 'masked_author': 'username_0', 'text': 'Latest push updates copy as per PR feedback, and update Linux-specific `install` instructions to use install command, as well as\r\nmacOS-specific instructions to `chown root` the install to provide a trusted kubectl.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nate-double-u', 'comment_id': 763092944.0, 'datetime': '2021-01-19 19:59:53+00:00', 'masked_author': 'username_0', 'text': 'Thanks everyone, I appreciate all the feedback on this one!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Updating /docs/tasks/tools/install-kubectl
username_0: Adding instructions for how to validate `kubectl` binaries against checksum files (Linux, MacOS, Windows)

Updating numbered lists to use markdown syntax (""1."" for each entry, rather than ""1. 2. 3. etc.""), should make it easier to add and remove list items in future as the renderer enumerates these automatically.

fixes: https://github.com/kubernetes/website/issues/25040
<issue_comment>username_0: Tested on:
* Ubuntu 20.04.1 LTS (using 
* macOS Catalina Version 10.15.7 (using `terminal` app, no non-standard applications need be installed)
* Windows 10 Pro (using `Command Prompt`, no non-standard applications installed _to my knowledge_. We may want to retest on a fresh install)
<issue_comment>username_0: Page updated deploy preview: https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/

I'm not particularly happy with the [Windows](https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/#install-kubectl-on-windows) and [MacOS](https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/#install-kubectl-on-macos) sections yet, as I haven't found a way to programmatically validate the binary against the checksum file like I do in the Linux section -- I have to do a bit more research into the MacOS and Windows tools. If anyone knows a better way off the top of their head, I'd appreciate a pointer.
<issue_comment>username_0: @username_1 I followed your suggestion in https://github.com/kubernetes/website/issues/25040#issuecomment-730509056 about using `{{< param ""fullversion"" >}}` to build the urls for the curl commands.

While I was building the new sections I noticed that the curl command (at least in the _[Install kubectl binary with curl on Linux](https://deploy-preview-25259--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl/#install-kubectl-on-linux)_ section) doesn't download the same version of the binary as the url below built using `{{< param ""fullversion"" >}}`. 

In this case I think the following curl command downloads version v1.19.4, even though `{{< param ""fullversion"" >}}` renders v1.19.0.
```
curl -LO ""https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl""
```

In this case, should I be using the the `{{< skew ... >}}` shortcode instead to try to get the next version?
<issue_comment>username_0: Links updated to download from https://dl.k8s.io/
<issue_comment>username_1: The difference in patch version comes down to the website getting a (manual) update per minor release but nothing happening on patch releases.
I suspect we can do something about that. The story for downloading the latest version Kubernetes proper is also [not great](https://github.com/kubernetes/website/issues/20293).

I think we ought to find the simplest way of getting a Kubernetes release metadata file published, make that publication happen, and update based on that. There are other options though.
<issue_comment>username_0: I figured something like this was happening (hence the comment edit -- still not sure of the etiquette of those kinds of edits...).

I think in this case I'm going to try to be consistent with the the stable release where offered, i.e. I'll link to the stable release sha as well (and may do a little to make it more obvious what is being downloaded 'latest' vs 'latest stable'). If someone is going through the instructions to download, verify, and install, it would be irritating for the supplied sha to be for a different version than was just linked to.
<issue_comment>username_0: I've found a way to automate the validation on MacOS the way we are doing in Linux, and I've found a workaround with PowerShell that we can use for Windows (though I'm still not thrilled with that method).

I've also done a Markdown cleanup pass. 
* Updating numbered lists to use markdown syntax (""1."" for each entry), should make it easier to add and remove list items in future
* Updating spacing throughout
<issue_comment>username_0: I like how we use the tabs in the [_Install on Windows using Chocolatey or Scoop_ section](https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-on-windows-using-chocolatey-or-scoop)

Could we consider using a similar _Linux_, _macOS_, _Windows_ tab structure and create a _Install kubectl_ section containing it? It may help to shorten the page, and give people an opportunity to get directly to what they are looking for without a lot of scrolling.

We may also be able to de-duplicate some of the instructions doing it that way, but I think this work would be well outside the scope of this PR.
<issue_comment>username_0: The last push cleans up the Windows Validation section's formatting a bit.
<issue_comment>username_0: The last push adds some syntax highlighting to the command snippets.
<issue_comment>username_0: @tcarland, would you like to take a look at this PR? I think it solves your issue https://github.com/kubernetes/website/issues/25040
<issue_comment>username_1: /sig security
<issue_comment>username_1: Also relevant to SIG CLI, mind.
<issue_comment>username_1: Sounds fine to me.
<issue_comment>username_0: The latest push picks out the incorrectly updated spacing changes I introduced.
<issue_comment>username_2: Thanks @username_0 .
I think the changes are looking good. Noted a few nits, otherwise 👍
<issue_comment>username_0: Latest push updates copy as per PR feedback, and update Linux-specific `install` instructions to use install command, as well as
macOS-specific instructions to `chown root` the install to provide a trusted kubectl.
<issue_comment>username_0: Thanks everyone, I appreciate all the feedback on this one!"
gohugoio/hugo,260815480,3915,,"[{'action': 'opened', 'author': 'mckern', 'comment_id': None, 'datetime': '2017-09-27 01:08:09+00:00', 'masked_author': 'username_0', 'text': 'I\'ve been using the highlighting shortcode (`{{< highlight ini ""linenos=table"" >}}\r\n` to output line numbers into one column and code into another, so I can style numbers separately. Is this feature gone forever unless I fallback to Pygments?', 'title': ""Chroma doesn't output highlighting in a table"", 'type': 'issue'}
 {'action': 'created', 'author': 'moorereason', 'comment_id': 332384149.0, 'datetime': '2017-09-27 01:41:49+00:00', 'masked_author': 'username_1', 'text': 'I don\'t know that it\'s ""gone forever"", but it\'s not supported currently.  Keep in mind that Chroma is *brand new*, as in, 4 months old.  I think the Hugo team only heard about it a few weeks ago.  Give Alec and the community time to add features, and we\'ll see how this plays out.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'moorereason', 'comment_id': 332384340.0, 'datetime': '2017-09-27 01:43:03+00:00', 'masked_author': 'username_1', 'text': ""@username_0, please see Alec's comment: https://github.com/username_2/chroma/issues/45#issuecomment-332383732."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'moorereason', 'comment_id': 332387955.0, 'datetime': '2017-09-27 02:08:57+00:00', 'masked_author': 'username_1', 'text': '@username_0, if you set `pygmentsUseClasses = true` in your site config, you should get something like this that you can style:\r\n\r\n```html\r\n<div class=""highlight""><pre class=""chroma""><code class=""language-text"" data-lang=""text""><span class=""ln"">1</span>interface Tunnel0\r\n<span class=""ln"">2</span>description GRE tunnel to other location\r\n<span class=""ln"">3</span>ip address 192.168.254.1 255.255.255.252\r\n<span class=""ln"">4</span>tunnel source FastEthernet0/0\r\n<span class=""ln"">5</span>tunnel destination 172.31.254.1\r\n<span class=""ln"">6</span>crypto map tunnel-ipsec-map</code></pre>\r\n</div>\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mckern', 'comment_id': 332388639.0, 'datetime': '2017-09-27 02:13:46+00:00', 'masked_author': 'username_0', 'text': ""Thank you for the suggestion. I tried that but it doesn't work for what I specifically want. [Here's an example](http://ryanusername_0.com/2013/08/vmware-fusion-vm-power-states-and-you/) of what I'm doing -- I use the `linenos=table` the table has the benefit that line numbers are not copied into the buffer if someone copies lines out of a code block. I can keep using Pygments -- the speed isn't a problem for me. But the incompleteness of the Chroma paired with it being the new default (instead of an option to disable) is frustrating."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'moorereason', 'comment_id': 332389979.0, 'datetime': '2017-09-27 02:23:00+00:00', 'masked_author': 'username_1', 'text': '@username_0,\r\nCan you use the `user-select: none` style to accomplish the same thing?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'alecthomas', 'comment_id': 332390590.0, 'datetime': '2017-09-27 02:27:16+00:00', 'masked_author': 'username_2', 'text': ""@username_0 I do want to add table support, for the exact reason that copy+pasting is much more convenient. It's on The List™."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 332423536.0, 'datetime': '2017-09-27 06:36:25+00:00', 'masked_author': 'username_3', 'text': 'Also note that I kept the options syntax identical between Chrome and Pygments (for several reasons), but that also means that you should just transparently and eventually ""get more"".', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bep', 'comment_id': None, 'datetime': '2017-10-14 14:00:30+00:00', 'masked_author': 'username_3', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'mckern', 'comment_id': 337090660.0, 'datetime': '2017-10-17 01:30:37+00:00', 'masked_author': 'username_0', 'text': ""Hey, just chiming in to say thanks for this. The constant iteration and improvement on Hugo is so impressive, and turning around something like this in less than a month? It's amazing. Thanks again."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Chroma doesn't output highlighting in a table
username_0: I've been using the highlighting shortcode (`{{< highlight ini ""linenos=table"" >}}
` to output line numbers into one column and code into another, so I can style numbers separately. Is this feature gone forever unless I fallback to Pygments?
<issue_comment>username_1: I don't know that it's ""gone forever"", but it's not supported currently.  Keep in mind that Chroma is *brand new*, as in, 4 months old.  I think the Hugo team only heard about it a few weeks ago.  Give Alec and the community time to add features, and we'll see how this plays out.
<issue_comment>username_1: @username_0, please see Alec's comment: https://github.com/username_2/chroma/issues/45#issuecomment-332383732.
<issue_comment>username_1: @username_0, if you set `pygmentsUseClasses = true` in your site config, you should get something like this that you can style:

```html
<div class=""highlight""><pre class=""chroma""><code class=""language-text"" data-lang=""text""><span class=""ln"">1</span>interface Tunnel0
<span class=""ln"">2</span>description GRE tunnel to other location
<span class=""ln"">3</span>ip address 192.168.254.1 255.255.255.252
<span class=""ln"">4</span>tunnel source FastEthernet0/0
<span class=""ln"">5</span>tunnel destination 172.31.254.1
<span class=""ln"">6</span>crypto map tunnel-ipsec-map</code></pre>
</div>
```
<issue_comment>username_0: Thank you for the suggestion. I tried that but it doesn't work for what I specifically want. [Here's an example](http://ryanusername_0.com/2013/08/vmware-fusion-vm-power-states-and-you/) of what I'm doing -- I use the `linenos=table` the table has the benefit that line numbers are not copied into the buffer if someone copies lines out of a code block. I can keep using Pygments -- the speed isn't a problem for me. But the incompleteness of the Chroma paired with it being the new default (instead of an option to disable) is frustrating.
<issue_comment>username_1: @username_0,
Can you use the `user-select: none` style to accomplish the same thing?
<issue_comment>username_2: @username_0 I do want to add table support, for the exact reason that copy+pasting is much more convenient. It's on The List™.
<issue_comment>username_3: Also note that I kept the options syntax identical between Chrome and Pygments (for several reasons), but that also means that you should just transparently and eventually ""get more"".<issue_closed>
<issue_comment>username_0: Hey, just chiming in to say thanks for this. The constant iteration and improvement on Hugo is so impressive, and turning around something like this in less than a month? It's amazing. Thanks again."
LukeSmithxyz/based.cooking,830892421,143,,"[{'action': 'opened', 'author': 'tarsiec', 'comment_id': None, 'datetime': '2021-03-13 12:50:49+00:00', 'masked_author': 'username_0', 'text': ""Every recipe in the site has a different (or no) system of measure, some use metric and others imperial. It'd be a nice feature to have either different pages to see the recipes in metric or imperial, or some other feature like that (obviously without the use of JavaScript). Or maybe just have them all in metric, whichever works."", 'title': 'Inconsistent use of systems of measure', 'type': 'issue'}
 {'action': 'created', 'author': 'siggines', 'comment_id': 798565642.0, 'datetime': '2021-03-13 16:09:12+00:00', 'masked_author': 'username_1', 'text': 'Just use a metric-imperial converter, I have one /username_1/unit-conversions . Also helps show how they can be converted, which is helpful to understand so you can convert in your head when reading future uses of the imperial.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Godje', 'comment_id': 798893343.0, 'datetime': '2021-03-14 11:48:00+00:00', 'masked_author': 'username_2', 'text': 'I suggest putting something in the ""Rules of submission"", and ""About this site"" description, that the recipes must be submitted in *one* form of system. The conversion would be up to the person reading the recipe.\r\n\r\nThis way we are avoiding the author hastily approximating in both systems of measurement (ex. https://based.cooking/beef-jerky), where either one of them is not correct or doesn\'t match the other.\r\n\r\n**Or** the other way of solving this is in the rules of submission to have the person do the conversion of both. This way we are ensuring the quality of submissions is held to a higher standard. Since we want this website to be actually used by a normal human person, rather than a bunch of ""special"" people like ourselves.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Godje', 'comment_id': 798894478.0, 'datetime': '2021-03-14 11:57:11+00:00', 'masked_author': 'username_2', 'text': 'Take my words back.\r\n\r\nAnd suggest that we put in the section like a ""dictonary"" of sorts. A person might have to do 3 or so look ups on the bloated interwebs to see what cL means (centiliter). \r\n\r\nWhile the amount of contributors to this website is growing, it would be useful in the rules of submission to have an outlined way of writing Tablespoon vs Teaspoon (etc.), until we see recipes with ""4ts of lemon squeezed lemon juice"" and leave the reader guessing.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'owwk', 'comment_id': 798927036.0, 'datetime': '2021-03-14 15:29:27+00:00', 'masked_author': 'username_3', 'text': ""Just require that all recipes include both, with one in brackets. Recipe books in countries that have switched to using metric do this.\r\n\r\ne.g. \r\nFlour 600g (21oz)\r\n\r\nWhether the metric or imperial measurement is in brackets doesn't really matter, but it would be nice it it was kept consistent across the site."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Godje', 'comment_id': 800127778.0, 'datetime': '2021-03-16 10:10:48+00:00', 'masked_author': 'username_2', 'text': 'Thinking technically, during compile time we could put in a pre-processor with some sort of custom tag recognition and convert it automatically. And round to nearest 1st or 2nd decimal spot.\r\n\r\nAlthough that\'s ""too accurate"" lol :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'murphym18', 'comment_id': 800845523.0, 'datetime': '2021-03-17 06:56:56+00:00', 'masked_author': 'username_4', 'text': 'Unit conversion can be pretty tricky. [This video](https://www.youtube.com/watch?v=TE8xg3d8dBg) does a pretty good job explaining the problems.\r\n\r\nSometimes direct unit conversions plus some clever rounding is good enough. But even simple recipes can be deceptively tricky to convert. Consider the [roasted chicken breast](https://based.cooking/roasted-chicken-breast) recipe that I added. It\'s almost a recipe that someone in Europe could follow. But it calls for ""1/4 stick of butter."" That much butter only makes sense to Americans and Canadians. A direct conversion would give a result of 28.35 grams (1/4 stick = 1 oz = 28.35 grams). But the exact amount of butter isn\'t too important (I use a generous amount of butter so that I can make a pan sauce out of the extra). \r\n\r\nI think the best way to fix that recipe is for someone from outside North America to edit it. It\'s not obvious how people measure butter through out the world. I looked at pictures of butter in a German supermarket. They sold it as a single brick massing 125 grams or 250 grams. And I think it would be silly to actually measure out 25 grams of butter. I thought about using the British idiom: ""a large knob of butter."" (I guess that\'s about 25 grams). Overall, I\'m not sure. It would be useful to know what people actually do when they measure butter.\r\n\r\nUntil then, I thought about updating my recipe to say ""about 25 grams"" or something. But even that might be awkward. What if saying 25 grams is like saying ""0.3 inches?"" (In case you don\'t know, inches are usually measured as fractions where the denominator is a power of 2. So ""0.3 inches"" would probably be specified as ""5/16 inches"" or ""19/64 inches"" as those are idiomatic values). I\'m pretty sure most people just uses a digital kitchen scale (so ""25 grams"" is fine). But what if analog kitchen scale are more common? How do those analog scales divide the units?\r\n\r\nAnother idea is to put something in the README that encourages people to make pull requests for unit conversion. But I think this only makes sense when the contributor specifies a roughly equivalent amount and does so idiomatically. Even then, I\'m sure there will be many recipes that don\'t convert well. And putting something like that in the README might cause more harm than good. \r\n\r\nA computer program that converts units is still probably valuable. Though, a human could probably do a better job. I think it would be good if such a program didn\'t output units if someone manually converted them. And it might be good to style the units different when a computer converted them. I\'m not sure.\r\n\r\nMaybe we should train a model to detect when equivalent units are missing. (🤣 I\'m only half joking).', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'LukeSmithxyz', 'comment_id': None, 'datetime': '2021-03-18 01:38:46+00:00', 'masked_author': 'username_5', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'LukeSmithxyz', 'comment_id': 801551681.0, 'datetime': '2021-03-18 01:38:46+00:00', 'masked_author': 'username_5', 'text': 'I am fine with people using whatever measurement system they want. Autoconverting measurements is absurdly impossible. Me nit-picking every PR to format everything exactly the same is going to be too annoying too. I\'ve already realized I\'m going to have to leave some things to personal idiosyncracy.\r\n\r\nEvery English speaker is used to using both measurement systems so I don\'t really think this is a huge issue outside of being displeasurable to one\'s autism.\r\n\r\nIf I were to choose one, I would enforce the American measurements, of course. There really is something truly absurd to me about measuring food in soulless French revolutionary bugman measurements. It seems cold and alien. ""No, I don\'t want to use that \'cup\' thing there to make a measurement, I would rather calculate the ingredients to my confection in SI because it can be multiplied and divided equally by 10.""', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Dko1905', 'comment_id': 809210824.0, 'datetime': '2021-03-29 09:08:29+00:00', 'masked_author': 'username_6', 'text': ""I would say you are overreacting a bit there, it's simpler when using one unified system for everything. But let's not start that discussion."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tarsiec', 'comment_id': 810914029.0, 'datetime': '2021-03-31 09:18:28+00:00', 'masked_author': 'username_0', 'text': 'Well that\'s just because you\'ve been using the imperial system all of your life, but to the rest of the world using things like ""cups"" to measure volume just seems archaic and purposefully overcomplicated.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Inconsistent use of systems of measure
username_0: Every recipe in the site has a different (or no) system of measure, some use metric and others imperial. It'd be a nice feature to have either different pages to see the recipes in metric or imperial, or some other feature like that (obviously without the use of JavaScript). Or maybe just have them all in metric, whichever works.
<issue_comment>username_1: Just use a metric-imperial converter, I have one /username_1/unit-conversions . Also helps show how they can be converted, which is helpful to understand so you can convert in your head when reading future uses of the imperial.
<issue_comment>username_2: I suggest putting something in the ""Rules of submission"", and ""About this site"" description, that the recipes must be submitted in *one* form of system. The conversion would be up to the person reading the recipe.

This way we are avoiding the author hastily approximating in both systems of measurement (ex. https://based.cooking/beef-jerky), where either one of them is not correct or doesn't match the other.

**Or** the other way of solving this is in the rules of submission to have the person do the conversion of both. This way we are ensuring the quality of submissions is held to a higher standard. Since we want this website to be actually used by a normal human person, rather than a bunch of ""special"" people like ourselves.
<issue_comment>username_2: Take my words back.

And suggest that we put in the section like a ""dictonary"" of sorts. A person might have to do 3 or so look ups on the bloated interwebs to see what cL means (centiliter). 

While the amount of contributors to this website is growing, it would be useful in the rules of submission to have an outlined way of writing Tablespoon vs Teaspoon (etc.), until we see recipes with ""4ts of lemon squeezed lemon juice"" and leave the reader guessing.
<issue_comment>username_3: Just require that all recipes include both, with one in brackets. Recipe books in countries that have switched to using metric do this.

e.g. 
Flour 600g (21oz)

Whether the metric or imperial measurement is in brackets doesn't really matter, but it would be nice it it was kept consistent across the site.
<issue_comment>username_2: Thinking technically, during compile time we could put in a pre-processor with some sort of custom tag recognition and convert it automatically. And round to nearest 1st or 2nd decimal spot.

Although that's ""too accurate"" lol :)
<issue_comment>username_4: Unit conversion can be pretty tricky. [This video](https://www.youtube.com/watch?v=TE8xg3d8dBg) does a pretty good job explaining the problems.

Sometimes direct unit conversions plus some clever rounding is good enough. But even simple recipes can be deceptively tricky to convert. Consider the [roasted chicken breast](https://based.cooking/roasted-chicken-breast) recipe that I added. It's almost a recipe that someone in Europe could follow. But it calls for ""1/4 stick of butter."" That much butter only makes sense to Americans and Canadians. A direct conversion would give a result of 28.35 grams (1/4 stick = 1 oz = 28.35 grams). But the exact amount of butter isn't too important (I use a generous amount of butter so that I can make a pan sauce out of the extra). 

I think the best way to fix that recipe is for someone from outside North America to edit it. It's not obvious how people measure butter through out the world. I looked at pictures of butter in a German supermarket. They sold it as a single brick massing 125 grams or 250 grams. And I think it would be silly to actually measure out 25 grams of butter. I thought about using the British idiom: ""a large knob of butter."" (I guess that's about 25 grams). Overall, I'm not sure. It would be useful to know what people actually do when they measure butter.

Until then, I thought about updating my recipe to say ""about 25 grams"" or something. But even that might be awkward. What if saying 25 grams is like saying ""0.3 inches?"" (In case you don't know, inches are usually measured as fractions where the denominator is a power of 2. So ""0.3 inches"" would probably be specified as ""5/16 inches"" or ""19/64 inches"" as those are idiomatic values). I'm pretty sure most people just uses a digital kitchen scale (so ""25 grams"" is fine). But what if analog kitchen scale are more common? How do those analog scales divide the units?

Another idea is to put something in the README that encourages people to make pull requests for unit conversion. But I think this only makes sense when the contributor specifies a roughly equivalent amount and does so idiomatically. Even then, I'm sure there will be many recipes that don't convert well. And putting something like that in the README might cause more harm than good. 

A computer program that converts units is still probably valuable. Though, a human could probably do a better job. I think it would be good if such a program didn't output units if someone manually converted them. And it might be good to style the units different when a computer converted them. I'm not sure.

Maybe we should train a model to detect when equivalent units are missing. (🤣 I'm only half joking).<issue_closed>
<issue_comment>username_5: I am fine with people using whatever measurement system they want. Autoconverting measurements is absurdly impossible. Me nit-picking every PR to format everything exactly the same is going to be too annoying too. I've already realized I'm going to have to leave some things to personal idiosyncracy.

Every English speaker is used to using both measurement systems so I don't really think this is a huge issue outside of being displeasurable to one's autism.

If I were to choose one, I would enforce the American measurements, of course. There really is something truly absurd to me about measuring food in soulless French revolutionary bugman measurements. It seems cold and alien. ""No, I don't want to use that 'cup' thing there to make a measurement, I would rather calculate the ingredients to my confection in SI because it can be multiplied and divided equally by 10.""
<issue_comment>username_6: I would say you are overreacting a bit there, it's simpler when using one unified system for everything. But let's not start that discussion.
<issue_comment>username_0: Well that's just because you've been using the imperial system all of your life, but to the rest of the world using things like ""cups"" to measure volume just seems archaic and purposefully overcomplicated."
flutter/website,318374805,980,"{'number': 980.0, 'repo': 'website', 'user_login': 'flutter'}","[{'action': 'opened', 'author': 'rock3r', 'comment_id': None, 'datetime': '2018-04-27T11:30:36Z', 'masked_author': 'username_0', 'text': ""This PR is for the fifth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.\r\n\r\nFollowing the same rough format as the `flutter-for-android.md` document, with iOS details instead.\r\n\r\nThe following sections have been created:\r\n\r\n* What is the equivalent to ViewControllers in Flutter?\r\n* How do I listen to iOS lifecycle events?\r\n\r\n⚠️ **This requires #979 to be merged first!** ⚠️"", 'title': 'Flutter for iOS — ViewControllers section', 'type': 'issue'}
 {'action': 'created', 'author': 'rock3r', 'comment_id': 385896391.0, 'datetime': '2018-05-02 08:02:33+00:00', 'masked_author': 'username_0', 'text': 'Contents covered in #993, closing this. Will address comments on that one.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Flutter for iOS — ViewControllers section
username_0: This PR is for the fifth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.

Following the same rough format as the `flutter-for-android.md` document, with iOS details instead.

The following sections have been created:

* What is the equivalent to ViewControllers in Flutter?
* How do I listen to iOS lifecycle events?

⚠️ **This requires #979 to be merged first!** ⚠️
<issue_comment>username_0: Contents covered in #993, closing this. Will address comments on that one."
gohugoio/hugo,481726479,6235,,"[{'action': 'opened', 'author': 'jeremyf', 'comment_id': None, 'datetime': '2019-08-16 18:16:05+00:00', 'masked_author': 'username_0', 'text': 'First, thank you for your continued effort on supporting a great open source project. I appreciate the time and energy you put forward into this endeavor.\r\n\r\nUsing v0.56.3 I get the following output and what I consider a successfully built page:\r\n\r\n```console\r\n                   |  EN   \r\n+------------------+------+\r\n  Pages            | 1482  \r\n  Paginator pages  |   86  \r\n  Non-page files   |    0  \r\n  Static files     |   73  \r\n  Processed images |  330  \r\n  Aliases          |    7  \r\n  Sitemaps         |    1  \r\n  Cleaned          |    0  \r\n```\r\n\r\nWhen I switch from v0.56.3 to v0.57.0, I get the following and the site won\'t build:\r\n\r\n```console\r\nBuilding sites … ERROR 2019/08/16 14:05:17 render of ""section"" failed: ""~/git/takeonrules.github.io/themes/hugo-tufte/layouts/_default/page.html:24:13"": execute of template failed: template: _default/page.html:3:5: executing ""_default/page.html"" at <partial ""head.html"" .>: error calling partial: ""~/git/takeonrules.github.io/themes/hugo-tufte/layouts/partials/head.html:24:13"": execute of template failed: template: partials/head.html:31:9: executing ""partials/head.html"" at <partial ""jsonld.json"" .>: error calling partial: ""~/git/takeonrules.github.io/layouts/partials/jsonld.json:24:13"": execute of template failed: template: partials/jsonld.json:64:4: executing ""partials/jsonld.json"" at <partial ""single-jsonld.json"" .>: error calling partial: ""~/git/takeonrules.github.io/layouts/partials/single-jsonld.json:24:13"": execute of template failed: template: partials/single-jsonld.json:24:13: executing ""partials/single-jsonld.json"" at <.Content>: error calling Content: runtime error: invalid memory address or nil pointer dereference\r\n```\r\n\r\nWhen I switch from v0.57.0 to v0.57.1, I get the following output. The homepage does not show pagination, however I can direct link to the posts. Notice the paginator pages count drops to 0.\r\n\r\n```console\r\n\r\n                   |  EN   \r\n+------------------+------+\r\n  Pages            | 1488  \r\n  Paginator pages  |    0  \r\n  Non-page files   |    0  \r\n  Static files     |   73  \r\n  Processed images |  212  \r\n  Aliases          |    7  \r\n  Sitemaps         |    1  \r\n  Cleaned          |    0  \r\n```\r\n\r\nThe pagination logic I\'ve fiddled with using 0.57.1 is found https://github.com/username_0/hugo-tufte/blob/master/layouts/index.html#L5\r\n\r\nI am using the following theme: https://github.com/username_0/hugo-tufte.', 'title': 'Breaking changes from v0.56.3 to v0.57.0 and v0.57.1', 'type': 'issue'}
 {'action': 'created', 'author': 'bep', 'comment_id': 522110304.0, 'datetime': '2019-08-16 18:38:08+00:00', 'masked_author': 'username_1', 'text': ""I'm sorry for the noise and trouble, but this is a change I have wanted to do for a long time, and since we needed to do 2 more related, but more subtle, changes, now was the time.\r\n\r\nSee https://github.com/username_0/hugo-tufte/pull/1"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeremyf', 'comment_id': 522158597.0, 'datetime': '2019-08-16 21:34:02+00:00', 'masked_author': 'username_0', 'text': ""@username_1 Thanks for the quick response. I tested your PR against v0.56.3 and it works. I tested against v0.57.1 and I get the same behavior as reported. I'm prepared to work on a greater refactor of the site and even extract content (as it sits separate and non-publicly) to provide a test case.\r\n\r\nI have a functioning install, so this is not an urgent issue. But I would love to be able to stay on a more up to date version of Hugo. So let me know how I can further help.\r\n\r\nAgain thank you!"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bep', 'comment_id': None, 'datetime': '2019-08-17 12:47:24+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'jeremyf', 'comment_id': 522236290.0, 'datetime': '2019-08-17 13:25:55+00:00', 'masked_author': 'username_0', 'text': 'As a follow-on, I did some more digging in my hugo build. I had two paginators declared. One for the main page HTML version and a second for the JSON+LD/Schema.org generation. Originally both paginators had the following (note these were in different files):\r\n\r\n```console\r\n# For HTML\r\n{{ $paginator := .Paginate (where .Pages ""Type"" ""post"") 5 }}\r\n\r\n# For Schema.org\r\n{{ $jsonPaginator := .Paginate (where .Pages ""Type"" ""post"") 5 }}\r\n\r\n# Result of hugo serve\r\n                   |  EN   \r\n+------------------+------+\r\n  Pages            | 1490  \r\n  Paginator pages  |    0  \r\n  Non-page files   |    0  \r\n  Static files     |   73  \r\n  Processed images |  214  \r\n  Aliases          |    7  \r\n  Sitemaps         |    1  \r\n  Cleaned          |    0  \r\n```\r\n\r\nWhen I merged @username_1\'s PR, I had the following:\r\n\r\n```console\r\n# For HTML\r\n{{ $paginator := .Paginate (where .Site.RegularPages ""Type"" ""post"") 5 }}\r\n\r\n# For Schema.org\r\n{{ $jsonPaginator := .Paginate (where .Pages ""Type"" ""post"") 5 }}\r\n\r\n# Result of hugo serve\r\n                   |  EN   \r\n+------------------+------+\r\n  Pages            | 1490  \r\n  Paginator pages  |    0  \r\n  Non-page files   |    0  \r\n  Static files     |   73  \r\n  Processed images |  214  \r\n  Aliases          |    7  \r\n  Sitemaps         |    1  \r\n  Cleaned          |    0  \r\n```\r\n\r\nWhen I changed both paginators to use `.Site.RegularPages` instead of `.Pages`, my pagination worked.\r\n\r\n```console\r\n# For HTML\r\n{{ $paginator := .Paginate (where .Site.RegularPages ""Type"" ""post"") 5 }}\r\n\r\n# For Schema.org\r\n{{ $jsonPaginator := .Paginate (where .Site.RegularPages ""Type"" ""post"") 5 }}\r\n\r\n                   |  EN   \r\n+------------------+------+\r\n  Pages            | 1490  \r\n  Paginator pages  |   87  \r\n  Non-page files   |    0  \r\n  Static files     |   73  \r\n  Processed images |  332  \r\n  Aliases          |    7  \r\n  Sitemaps         |    1  \r\n  Cleaned          |    0  \r\n```\r\n\r\nAgain many thanks to @username_1 for your contributions to Hugo.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Breaking changes from v0.56.3 to v0.57.0 and v0.57.1
username_0: First, thank you for your continued effort on supporting a great open source project. I appreciate the time and energy you put forward into this endeavor.

Using v0.56.3 I get the following output and what I consider a successfully built page:

```console
                   |  EN   
+------------------+------+
  Pages            | 1482  
  Paginator pages  |   86  
  Non-page files   |    0  
  Static files     |   73  
  Processed images |  330  
  Aliases          |    7  
  Sitemaps         |    1  
  Cleaned          |    0  
```

When I switch from v0.56.3 to v0.57.0, I get the following and the site won't build:

```console
Building sites … ERROR 2019/08/16 14:05:17 render of ""section"" failed: ""~/git/takeonrules.github.io/themes/hugo-tufte/layouts/_default/page.html:24:13"": execute of template failed: template: _default/page.html:3:5: executing ""_default/page.html"" at <partial ""head.html"" .>: error calling partial: ""~/git/takeonrules.github.io/themes/hugo-tufte/layouts/partials/head.html:24:13"": execute of template failed: template: partials/head.html:31:9: executing ""partials/head.html"" at <partial ""jsonld.json"" .>: error calling partial: ""~/git/takeonrules.github.io/layouts/partials/jsonld.json:24:13"": execute of template failed: template: partials/jsonld.json:64:4: executing ""partials/jsonld.json"" at <partial ""single-jsonld.json"" .>: error calling partial: ""~/git/takeonrules.github.io/layouts/partials/single-jsonld.json:24:13"": execute of template failed: template: partials/single-jsonld.json:24:13: executing ""partials/single-jsonld.json"" at <.Content>: error calling Content: runtime error: invalid memory address or nil pointer dereference
```

When I switch from v0.57.0 to v0.57.1, I get the following output. The homepage does not show pagination, however I can direct link to the posts. Notice the paginator pages count drops to 0.

```console

                   |  EN   
+------------------+------+
  Pages            | 1488  
  Paginator pages  |    0  
  Non-page files   |    0  
  Static files     |   73  
  Processed images |  212  
  Aliases          |    7  
  Sitemaps         |    1  
  Cleaned          |    0  
```

The pagination logic I've fiddled with using 0.57.1 is found https://github.com/username_0/hugo-tufte/blob/master/layouts/index.html#L5

I am using the following theme: https://github.com/username_0/hugo-tufte.
<issue_comment>username_1: I'm sorry for the noise and trouble, but this is a change I have wanted to do for a long time, and since we needed to do 2 more related, but more subtle, changes, now was the time.

See https://github.com/username_0/hugo-tufte/pull/1
<issue_comment>username_0: @username_1 Thanks for the quick response. I tested your PR against v0.56.3 and it works. I tested against v0.57.1 and I get the same behavior as reported. I'm prepared to work on a greater refactor of the site and even extract content (as it sits separate and non-publicly) to provide a test case.

I have a functioning install, so this is not an urgent issue. But I would love to be able to stay on a more up to date version of Hugo. So let me know how I can further help.

Again thank you!<issue_closed>
<issue_comment>username_0: As a follow-on, I did some more digging in my hugo build. I had two paginators declared. One for the main page HTML version and a second for the JSON+LD/Schema.org generation. Originally both paginators had the following (note these were in different files):

```console
# For HTML
{{ $paginator := .Paginate (where .Pages ""Type"" ""post"") 5 }}

# For Schema.org
{{ $jsonPaginator := .Paginate (where .Pages ""Type"" ""post"") 5 }}

# Result of hugo serve
                   |  EN   
+------------------+------+
  Pages            | 1490  
  Paginator pages  |    0  
  Non-page files   |    0  
  Static files     |   73  
  Processed images |  214  
  Aliases          |    7  
  Sitemaps         |    1  
  Cleaned          |    0  
```

When I merged @username_1's PR, I had the following:

```console
# For HTML
{{ $paginator := .Paginate (where .Site.RegularPages ""Type"" ""post"") 5 }}

# For Schema.org
{{ $jsonPaginator := .Paginate (where .Pages ""Type"" ""post"") 5 }}

# Result of hugo serve
                   |  EN   
+------------------+------+
  Pages            | 1490  
  Paginator pages  |    0  
  Non-page files   |    0  
  Static files     |   73  
  Processed images |  214  
  Aliases          |    7  
  Sitemaps         |    1  
  Cleaned          |    0  
```

When I changed both paginators to use `.Site.RegularPages` instead of `.Pages`, my pagination worked.

```console
# For HTML
{{ $paginator := .Paginate (where .Site.RegularPages ""Type"" ""post"") 5 }}

# For Schema.org
{{ $jsonPaginator := .Paginate (where .Site.RegularPages ""Type"" ""post"") 5 }}

                   |  EN   
+------------------+------+
  Pages            | 1490  
  Paginator pages  |   87  
  Non-page files   |    0  
  Static files     |   73  
  Processed images |  332  
  Aliases          |    7  
  Sitemaps         |    1  
  Cleaned          |    0  
```

Again many thanks to @username_1 for your contributions to Hugo."
facebook/docusaurus,703631525,3459,"{'number': 3459.0, 'repo': 'docusaurus', 'user_login': 'facebook'}","[{'action': 'opened', 'author': 'jeremyhager', 'comment_id': None, 'datetime': '2020-09-17T14:15:49Z', 'masked_author': 'username_0', 'text': '- Specified batch command is for cmd\r\n- Added powershell as an option for deployment, changed outer quotes to single in deployment command\r\n- This affects the following versioned docs:\r\n  - 2.0.0-alpha.63\r\n  - 2.0.0-alpha.64\r\n  - Next (Dev)\r\n<!--\r\nThank you for sending the PR! We appreciate you spending the time to work on these changes.\r\n\r\nHelp us understand your motivation by explaining why you decided to make this change.\r\n\r\nYou can learn more about contributing to Docusaurus here: https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md\r\n\r\nHappy contributing!\r\n\r\n-->\r\n\r\n## Motivation\r\nRefs: #3389\r\n\r\nThe documentation for deploying in a Windows environment may not be as specific as it needs to be, example issue: #3389. Because of this I have added a powershell command for Windows and have specified that one is for command prompt (title cmd) and the other is for PowerShell (title powershell). \r\n\r\n### Have you read the [Contributing Guidelines on pull requests](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#pull-requests)?\r\n\r\nYes\r\n\r\n## Test Plan\r\n1. ran `yarn build`\r\n2. `cd website`\r\n3. `yarn start`\r\n4. Implemented changes\r\n5. Confirmed changes were made on versioned docs specified above\r\n\r\n**Current (before changes):**\r\n![image](https://user-images.githubusercontent.com/47301461/93482921-14cd7680-f8b5-11ea-823e-bcd7328e9e2e.png)\r\n\r\n**Proposed (after changes):**\r\n![image](https://user-images.githubusercontent.com/47301461/93482312-6b868080-f8b4-11ea-805e-01511a48aed7.png)\r\n\r\n## Related PRs.\r\nN/A\r\n\r\n(If this PR adds or changes functionality, please take some time to update the docs at https://github.com/facebook/docusaurus, and link to your PR here.)', 'title': 'docs(v2): adding and specifying powershell and cmd for deployment in windows section', 'type': 'issue'}
 {'action': 'created', 'author': 'jeremyhager', 'comment_id': 694452780.0, 'datetime': '2020-09-17 19:30:37+00:00', 'masked_author': 'username_0', 'text': ""I've updated the docs to include the change - bundled bash, powershell, and cmd together so they are all tabs:\r\n![image](https://user-images.githubusercontent.com/47301461/93518354-8d4a2c80-f8e1-11ea-9a19-00603b5d2b14.png)\r\n\r\n(bash is default). Let me know what you think"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeremyhager', 'comment_id': 694910939.0, 'datetime': '2020-09-18 14:44:19+00:00', 'masked_author': 'username_0', 'text': 'Done and done. Noticed you specified ""**B**ash"" vs ""_b_ash"" as well as ""**P**ower**S**hell"", so I\'ve updated the labels to reflect that:\r\n![image](https://user-images.githubusercontent.com/47301461/93611116-bd95d780-f982-11ea-851d-6e054af128cd.png)\r\n\r\nHad some issues with spaces and using `<Tab>` strangely, however it\'s been resolved now.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 695176837.0, 'datetime': '2020-09-19 07:16:20+00:00', 'masked_author': 'username_1', 'text': '@username_0 thank you!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeremyhager', 'comment_id': 695335387.0, 'datetime': '2020-09-19 17:30:16+00:00', 'masked_author': 'username_0', 'text': 'Thank you!!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: docs(v2): adding and specifying powershell and cmd for deployment in windows section
username_0: - Specified batch command is for cmd
- Added powershell as an option for deployment, changed outer quotes to single in deployment command
- This affects the following versioned docs:
  - 2.0.0-alpha.63
  - 2.0.0-alpha.64
  - Next (Dev)
<!--
Thank you for sending the PR! We appreciate you spending the time to work on these changes.

Help us understand your motivation by explaining why you decided to make this change.

You can learn more about contributing to Docusaurus here: https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md

Happy contributing!

-->

## Motivation
Refs: #3389

The documentation for deploying in a Windows environment may not be as specific as it needs to be, example issue: #3389. Because of this I have added a powershell command for Windows and have specified that one is for command prompt (title cmd) and the other is for PowerShell (title powershell). 

### Have you read the [Contributing Guidelines on pull requests](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#pull-requests)?

Yes

## Test Plan
1. ran `yarn build`
2. `cd website`
3. `yarn start`
4. Implemented changes
5. Confirmed changes were made on versioned docs specified above

**Current (before changes):**
![image](https://user-images.githubusercontent.com/47301461/93482921-14cd7680-f8b5-11ea-823e-bcd7328e9e2e.png)

**Proposed (after changes):**
![image](https://user-images.githubusercontent.com/47301461/93482312-6b868080-f8b4-11ea-805e-01511a48aed7.png)

## Related PRs.
N/A

(If this PR adds or changes functionality, please take some time to update the docs at https://github.com/facebook/docusaurus, and link to your PR here.)
<issue_comment>username_0: I've updated the docs to include the change - bundled bash, powershell, and cmd together so they are all tabs:
![image](https://user-images.githubusercontent.com/47301461/93518354-8d4a2c80-f8e1-11ea-9a19-00603b5d2b14.png)

(bash is default). Let me know what you think
<issue_comment>username_0: Done and done. Noticed you specified ""**B**ash"" vs ""_b_ash"" as well as ""**P**ower**S**hell"", so I've updated the labels to reflect that:
![image](https://user-images.githubusercontent.com/47301461/93611116-bd95d780-f982-11ea-851d-6e054af128cd.png)

Had some issues with spaces and using `<Tab>` strangely, however it's been resolved now.
<issue_comment>username_1: @username_0 thank you!
<issue_comment>username_0: Thank you!!"
daattali/beautiful-jekyll,971009277,850,,"[{'action': 'opened', 'author': 'VMois', 'comment_id': None, 'datetime': '2021-08-14 22:57:24+00:00', 'masked_author': 'username_0', 'text': 'I have recently got access to a [Polywork](https://www.polywork.com) and want to put my Polywork link on my personal website (of course, powered by `beautiful-jekyll`). There is already support for LinkedIn, Twitter, etc. icons in the footer. I would like to add support for the Polywork icon too.\r\n\r\nPolywork has freely available icons [here](https://drive.google.com/drive/u/0/folders/1LpVFyw8rsxggJwdi_gTslglOofvorKCY).\r\n\r\nWhat do you think? Will any additional design work be needed for Polywork icons? If not, I think I can work on the coding part.\r\n\r\nThank you.', 'title': 'Add support for PolyWork icon in the footer', 'type': 'issue'}
 {'action': 'closed', 'author': 'daattali', 'comment_id': None, 'datetime': '2021-08-14 23:41:46+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 898971423.0, 'datetime': '2021-08-14 23:41:46+00:00', 'masked_author': 'username_1', 'text': ""Any icon that is supported by fontawesome can be included. You can see the list of icons they currently support here https://fontawesome.com/v5.15/icons\r\n\r\nThey do continuously add new ones, so perhaps one day if polywork will become popular enough they'll add their icon. You can also request fontawesome to add polywork's icon to their library.\r\n\r\nIf the icon is not on fontawesome, I won't be able to add it to the template's footer, but of course the template is open source so you can always modify it yourself to manually add your own. It just won't be using the framework that all the other icons use, you'll need to know a bit of HTML and jekyll to add it to your site."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'VMois', 'comment_id': 899102452.0, 'datetime': '2021-08-15 20:00:49+00:00', 'masked_author': 'username_0', 'text': 'I found the request for the PolyWork icon - https://github.com/FortAwesome/Font-Awesome/issues/18038. If anyone is interested in the icon, please, go to the request and hit ""thumbs up"".', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 899178518.0, 'datetime': '2021-08-16 02:59:45+00:00', 'masked_author': 'username_1', 'text': 'When it gets added, feel free to open an issue here again', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add support for PolyWork icon in the footer
username_0: I have recently got access to a [Polywork](https://www.polywork.com) and want to put my Polywork link on my personal website (of course, powered by `beautiful-jekyll`). There is already support for LinkedIn, Twitter, etc. icons in the footer. I would like to add support for the Polywork icon too.

Polywork has freely available icons [here](https://drive.google.com/drive/u/0/folders/1LpVFyw8rsxggJwdi_gTslglOofvorKCY).

What do you think? Will any additional design work be needed for Polywork icons? If not, I think I can work on the coding part.

Thank you.<issue_closed>
<issue_comment>username_1: Any icon that is supported by fontawesome can be included. You can see the list of icons they currently support here https://fontawesome.com/v5.15/icons

They do continuously add new ones, so perhaps one day if polywork will become popular enough they'll add their icon. You can also request fontawesome to add polywork's icon to their library.

If the icon is not on fontawesome, I won't be able to add it to the template's footer, but of course the template is open source so you can always modify it yourself to manually add your own. It just won't be using the framework that all the other icons use, you'll need to know a bit of HTML and jekyll to add it to your site.
<issue_comment>username_0: I found the request for the PolyWork icon - https://github.com/FortAwesome/Font-Awesome/issues/18038. If anyone is interested in the icon, please, go to the request and hit ""thumbs up"".
<issue_comment>username_1: When it gets added, feel free to open an issue here again"
conda-forge/conda-forge.github.io,409477608,711,,"[{'action': 'opened', 'author': 'epruesse', 'comment_id': None, 'datetime': '2019-02-12 20:06:44+00:00', 'masked_author': 'username_0', 'text': '(moved from https://github.com/conda-forge/staged-recipes/issues/7714)\r\n\r\nIt would be great if there was a way to find the feedstock repo given a package name. Since this information is conda-forge specific, it will never be included on the `conda` side of things.\r\n\r\nIncidentally, there is a discrepancy on the website - the `Packages` link really displays `Feedstocks`.', 'title': 'Package -> Feedstock mapping', 'type': 'issue'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462915167.0, 'datetime': '2019-02-12 20:10:18+00:00', 'masked_author': 'username_1', 'text': 'I believe that you can find this info in [libcflib](https://github.com/regro/libcflib) and [libcfgraph](https://github.com/regro/libcfgraph)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462915303.0, 'datetime': '2019-02-12 20:10:44+00:00', 'masked_author': 'username_1', 'text': 'And PRs welcome if you want to change anything about how this works', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'epruesse', 'comment_id': 462933188.0, 'datetime': '2019-02-12 21:02:02+00:00', 'masked_author': 'username_0', 'text': ""Well - I could download that whole massive thing and traverse the `parent_recipe` in the `json` files, true. I was just hoping that there might be a step inside of CF pipeline where it's trivial to export that data. It would also allow to have a `package` list here that points to the `feedstocks`, rather than just listing the feedstocks. With `outputs` seeing more use, the distinction has become relevant.\r\n\r\nFYI: My use case is the link-out to CF from the Bioconda package docs (e.g. https://bioconda.github.io/recipes/arb-bio/README.html) - some of the CF links work, but some lead to 404 because the feedstock has a name different from the package."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462935826.0, 'datetime': '2019-02-12 21:09:32+00:00', 'masked_author': 'username_1', 'text': 'Well, you don\'t have to download libcflib.  This is definitely in alpha, but we provide a hosted version of `python -m libcflib.rest` at http://35.192.108.152.  This is what is used in the `elm-src/` dir in this repo to power the search and artifact views on conda-forge.org.  So you can do something like the following to get an artifact JSON.\r\n\r\n```\r\n$ curl ""http://35.192.108.152/artifact?pkg=rever&channel=conda-forge&arch=linux-64&name=rever-0.2.3-py36_0.json""\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462938521.0, 'datetime': '2019-02-12 21:17:04+00:00', 'masked_author': 'username_1', 'text': ""Actually, unfortunately, it might only be in https://github.com/regro/cf-graph3 in the graph.pkl object.  We haven't finished migrating that data yet. @username_2 would know more"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'epruesse', 'comment_id': 462944084.0, 'datetime': '2019-02-12 21:32:32+00:00', 'masked_author': 'username_0', 'text': ""While the `graph.pkl` at 22MB is quite manageable, it does contain references to types I can't easily load. `frozendict` is ok, but there is no package containing `conda_forge_tick` as far as I can tell?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462945144.0, 'datetime': '2019-02-12 21:35:46+00:00', 'masked_author': 'username_1', 'text': '`conda_forge_tick` lives in https://github.com/regro/cf-scripts', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'epruesse', 'comment_id': 462946341.0, 'datetime': '2019-02-12 21:39:15+00:00', 'masked_author': 'username_0', 'text': ""Well, yes - I can `pip install` it. But I'd prefer to have only `conda install`ed things in the docker container building our docs."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462947880.0, 'datetime': '2019-02-12 21:43:39+00:00', 'masked_author': 'username_1', 'text': 'Yep, these are common issues I have with the way cf-scripts works right now.  Any help is most appreciated!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'scopatz', 'comment_id': 462948227.0, 'datetime': '2019-02-12 21:44:34+00:00', 'masked_author': 'username_1', 'text': 'Even just switching the graph.pkl over to a JSON format would be a huge help and should be relatively easy to do in cf-scripts', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CJ-Wright', 'comment_id': 462952648.0, 'datetime': '2019-02-12 21:57:31+00:00', 'masked_author': 'username_2', 'text': 'I would gladly merge a cf-scripts-feedstock!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 464163686.0, 'datetime': '2019-02-15 19:07:23+00:00', 'masked_author': 'username_3', 'text': 'Are there issues for these over at cf-scripts?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CJ-Wright', 'comment_id': 465601768.0, 'datetime': '2019-02-20 14:36:04+00:00', 'masked_author': 'username_2', 'text': ""Their might be an issue for the json translation I'm not sure about the package part"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 583996667.0, 'datetime': '2020-02-10 07:52:43+00:00', 'masked_author': 'username_3', 'text': ""I wonder if we could populate some of the relevant webpage content in each feedstock's repo. This way it could be made available in the listing, but the main listing wouldn't need to track it all."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CJ-Wright', 'comment_id': 584022196.0, 'datetime': '2020-02-10 09:05:58+00:00', 'masked_author': 'username_2', 'text': 'Can you expand on that some? What data do you want to see?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 584029604.0, 'datetime': '2020-02-10 09:24:31+00:00', 'masked_author': 'username_3', 'text': ""I'm mostly thinking of the OP's question. How do we include useful info about packages in feedstocks on the webpage.\r\n\r\nAm mostly thinking of content conda-smithy might add during a re-render since it is already passing over the recipe data and committing to the feedstock."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beckermr', 'comment_id': 736594391.0, 'datetime': '2020-12-01 14:41:52+00:00', 'masked_author': 'username_4', 'text': 'We have the conda-forge/feedstock-outputs repo now that stores this master mapping for all of conda-forge. I am closing this issue.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'beckermr', 'comment_id': None, 'datetime': '2020-12-01 14:41:52+00:00', 'masked_author': 'username_4', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 736706653.0, 'datetime': '2020-12-01 17:35:41+00:00', 'masked_author': 'username_3', 'text': ""We'd discussed having a link to the recipe added to Anaconda.org at one point as well. Maybe this is something else we should consider?\r\n\r\ncc @chenghlee"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beckermr', 'comment_id': 736707924.0, 'datetime': '2020-12-01 17:37:39+00:00', 'masked_author': 'username_4', 'text': ""Let's make a new issue somewhere to track this."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 736713637.0, 'datetime': '2020-12-01 17:47:08+00:00', 'masked_author': 'username_3', 'text': 'We do already just have to find it 😄', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 736714080.0, 'datetime': '2020-12-01 17:47:54+00:00', 'masked_author': 'username_3', 'text': 'https://github.com/conda/conda-build/issues/2462', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Package -> Feedstock mapping
username_0: (moved from https://github.com/conda-forge/staged-recipes/issues/7714)

It would be great if there was a way to find the feedstock repo given a package name. Since this information is conda-forge specific, it will never be included on the `conda` side of things.

Incidentally, there is a discrepancy on the website - the `Packages` link really displays `Feedstocks`.
<issue_comment>username_1: I believe that you can find this info in [libcflib](https://github.com/regro/libcflib) and [libcfgraph](https://github.com/regro/libcfgraph)
<issue_comment>username_1: And PRs welcome if you want to change anything about how this works
<issue_comment>username_0: Well - I could download that whole massive thing and traverse the `parent_recipe` in the `json` files, true. I was just hoping that there might be a step inside of CF pipeline where it's trivial to export that data. It would also allow to have a `package` list here that points to the `feedstocks`, rather than just listing the feedstocks. With `outputs` seeing more use, the distinction has become relevant.

FYI: My use case is the link-out to CF from the Bioconda package docs (e.g. https://bioconda.github.io/recipes/arb-bio/README.html) - some of the CF links work, but some lead to 404 because the feedstock has a name different from the package.
<issue_comment>username_1: Well, you don't have to download libcflib.  This is definitely in alpha, but we provide a hosted version of `python -m libcflib.rest` at http://35.192.108.152.  This is what is used in the `elm-src/` dir in this repo to power the search and artifact views on conda-forge.org.  So you can do something like the following to get an artifact JSON.

```
$ curl ""http://35.192.108.152/artifact?pkg=rever&channel=conda-forge&arch=linux-64&name=rever-0.2.3-py36_0.json""
```
<issue_comment>username_1: Actually, unfortunately, it might only be in https://github.com/regro/cf-graph3 in the graph.pkl object.  We haven't finished migrating that data yet. @username_2 would know more
<issue_comment>username_0: While the `graph.pkl` at 22MB is quite manageable, it does contain references to types I can't easily load. `frozendict` is ok, but there is no package containing `conda_forge_tick` as far as I can tell?
<issue_comment>username_1: `conda_forge_tick` lives in https://github.com/regro/cf-scripts
<issue_comment>username_0: Well, yes - I can `pip install` it. But I'd prefer to have only `conda install`ed things in the docker container building our docs.
<issue_comment>username_1: Yep, these are common issues I have with the way cf-scripts works right now.  Any help is most appreciated!
<issue_comment>username_1: Even just switching the graph.pkl over to a JSON format would be a huge help and should be relatively easy to do in cf-scripts
<issue_comment>username_2: I would gladly merge a cf-scripts-feedstock!
<issue_comment>username_3: Are there issues for these over at cf-scripts?
<issue_comment>username_2: Their might be an issue for the json translation I'm not sure about the package part
<issue_comment>username_3: I wonder if we could populate some of the relevant webpage content in each feedstock's repo. This way it could be made available in the listing, but the main listing wouldn't need to track it all.
<issue_comment>username_2: Can you expand on that some? What data do you want to see?
<issue_comment>username_3: I'm mostly thinking of the OP's question. How do we include useful info about packages in feedstocks on the webpage.

Am mostly thinking of content conda-smithy might add during a re-render since it is already passing over the recipe data and committing to the feedstock.
<issue_comment>username_4: We have the conda-forge/feedstock-outputs repo now that stores this master mapping for all of conda-forge. I am closing this issue.<issue_closed>
<issue_comment>username_3: We'd discussed having a link to the recipe added to Anaconda.org at one point as well. Maybe this is something else we should consider?

cc @chenghlee
<issue_comment>username_4: Let's make a new issue somewhere to track this.
<issue_comment>username_3: We do already just have to find it 😄
<issue_comment>username_3: https://github.com/conda/conda-build/issues/2462"
carbon-design-system/carbon-website,567089786,922,,"[{'action': 'opened', 'author': 'vpicone', 'comment_id': None, 'datetime': '2020-02-18 18:51:31+00:00', 'masked_author': 'username_0', 'text': '### Summary\r\n\r\nAdd the ability for website users to give low-friction quick feedback on each page.\r\n\r\nExamples:\r\n1. [gatsby](https://www.gatsbyjs.org/docs/) – bottom right\r\n2. [watson health](https://pages.github.ibm.com/Watson-Health/index.html) – bottom right\r\n\r\n### Justification\r\n\r\nOur current team objective is to significantly scale the engagement, collaboration, and enthusiastic adoption of Carbon by IBM product teams. Allowing per-page feedback will allow us to get real-time feedback on our documentation and components.\r\n\r\n### Desired UX and success metrics\r\n\r\nUsers can click an unobtrusive button to open a modeless dialog which allows them to give feedback (e.g. positive, negative, and neutral) as well as a comment. These survey responses should be viewable in a dashboard.', 'title': 'Add modeless feedback dialog for each page', 'type': 'issue'}
 {'action': 'created', 'author': 'mattrosno', 'comment_id': 588398186.0, 'datetime': '2020-02-19 19:17:45+00:00', 'masked_author': 'username_1', 'text': 'Who\'s the intended audience for the submissions?\r\n\r\nGitHub issues are more than just bugs and feature requests. We have an issue template for question, ""usage question or discussion about Carbon components"". Would it make more sense to direct people to open an issue, or us have a GitHub bot that opens an issue on their behalf so there\'s greater visibility and the team can respond?\r\n\r\nIf powered by a SurveyGizmo form, how is the team to get notified so they can respond in a timely manner?\r\n\r\nHow can we power this by GitHub issues so the feedback form is useful to other sites using our Gatsby theme?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vpicone', 'comment_id': 588425073.0, 'datetime': '2020-02-19 20:10:50+00:00', 'masked_author': 'username_0', 'text': ""Github issues (human or bot generated) isn't the right way to go about this for several reasons:\r\n\r\n1. Signing into GitHub and filling out a massive template introduces a lot of friction. It also necessitates a response from the team. The advantage of these low-friction, low=commitment feedback dialogs is that there's no response expected. This is a distinct advantage compared to an ever-growing list of issues piling up on the monorepo.\r\n\r\n2. It's not just issues, it's quick feedback/comments/reactions as well. Should we open an issue every time someone marks a document helpful? It helps us capture things that aren't serious enough to warrant a github issue.\r\n\r\nThere's a reason Gatsby uses this method as oppose to directing everyone to open a new issue: https://www.gatsbyjs.org/docs/ (bottom right)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mattrosno', 'comment_id': 588507861.0, 'datetime': '2020-02-19 22:33:49+00:00', 'masked_author': 'username_1', 'text': ""If the intended audience of who receives the responses is just the core team and not all repo maintainers, and if [SurveyGizmo's Slack integration](https://help.surveygizmo.com/help/slack-integration) lets us route responses to one of our channels, then this makes sense.\r\n\r\nUltimately I want to save this type of information in our backend as events so we can include it alongside other data we collect for reporting. But, until we spin up a backend, let's use what we have. (We can always backfill our backend with SurveyGizmo data if we eventually power the form ourselves.)\r\n\r\nI'm wanting to use a new channel `carbon-live` for a live view of other events that we start to capture. For example, when a sub-system publishes a component, developer essentials badge is issued, etc. Maybe we start that channel with this data. Since it's not all actionable, maybe we don't want to put that all in `-support` to avoid noise there.\r\n\r\nIn terms of responding to the inbound, maybe we thread-reply to the Slack message to designate that you're replying directly, so we know when somebody's followed up if a follow-up is necessary. We can come up with some convention in Slack to not step on any toes as we reply to the feedback."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vpicone', 'comment_id': 588526982.0, 'datetime': '2020-02-19 23:25:02+00:00', 'masked_author': 'username_0', 'text': ""@username_1 our 'backend' would source data from a variety of places (notion, github, surveygizmo, etc.) I don't see the point of storing it all on a database. Those services allow you to query for past events/specific ranges and they do a much better job of it than we would rolling our own.\r\n\r\nEither way, that sort of effort requires smaller efforts like this one."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeanservaas', 'comment_id': 596591644.0, 'datetime': '2020-03-09 15:13:31+00:00', 'masked_author': 'username_2', 'text': ""## Feedback component visual specs\r\n\r\n\r\n### Specs\r\n\r\n![Color_and_type](https://user-images.githubusercontent.com/43144260/76228295-89c94080-61ee-11ea-9365-24d53ced0735.png)\r\n\r\n![Spacing](https://user-images.githubusercontent.com/43144260/76228282-85048c80-61ee-11ea-8e5b-4395b4d4d3d4.png)\r\n\r\n\r\n\r\n\r\n### Responsive behavior\r\n\r\nI spec'd this pretty fast so I don't have a view at each breakpoint, but I'm thinking it would respond like the Gatsby feedback component and hold it's size at each breakpoint and then respond like our dialogs at mobile. \r\n\r\n### Context\r\n\r\n**Closed**\r\n\r\n![context_closed](https://user-images.githubusercontent.com/43144260/76227883-f7c13800-61ed-11ea-9a8e-8b9859c6b0c5.png)\r\n\r\n**Open**\r\n\r\n![context_open](https://user-images.githubusercontent.com/43144260/76227891-fa239200-61ed-11ea-898f-2878305d9dca.png)"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add modeless feedback dialog for each page
username_0: ### Summary

Add the ability for website users to give low-friction quick feedback on each page.

Examples:
1. [gatsby](https://www.gatsbyjs.org/docs/) – bottom right
2. [watson health](https://pages.github.ibm.com/Watson-Health/index.html) – bottom right

### Justification

Our current team objective is to significantly scale the engagement, collaboration, and enthusiastic adoption of Carbon by IBM product teams. Allowing per-page feedback will allow us to get real-time feedback on our documentation and components.

### Desired UX and success metrics

Users can click an unobtrusive button to open a modeless dialog which allows them to give feedback (e.g. positive, negative, and neutral) as well as a comment. These survey responses should be viewable in a dashboard.
<issue_comment>username_1: Who's the intended audience for the submissions?

GitHub issues are more than just bugs and feature requests. We have an issue template for question, ""usage question or discussion about Carbon components"". Would it make more sense to direct people to open an issue, or us have a GitHub bot that opens an issue on their behalf so there's greater visibility and the team can respond?

If powered by a SurveyGizmo form, how is the team to get notified so they can respond in a timely manner?

How can we power this by GitHub issues so the feedback form is useful to other sites using our Gatsby theme?
<issue_comment>username_0: Github issues (human or bot generated) isn't the right way to go about this for several reasons:

1. Signing into GitHub and filling out a massive template introduces a lot of friction. It also necessitates a response from the team. The advantage of these low-friction, low=commitment feedback dialogs is that there's no response expected. This is a distinct advantage compared to an ever-growing list of issues piling up on the monorepo.

2. It's not just issues, it's quick feedback/comments/reactions as well. Should we open an issue every time someone marks a document helpful? It helps us capture things that aren't serious enough to warrant a github issue.

There's a reason Gatsby uses this method as oppose to directing everyone to open a new issue: https://www.gatsbyjs.org/docs/ (bottom right).
<issue_comment>username_1: If the intended audience of who receives the responses is just the core team and not all repo maintainers, and if [SurveyGizmo's Slack integration](https://help.surveygizmo.com/help/slack-integration) lets us route responses to one of our channels, then this makes sense.

Ultimately I want to save this type of information in our backend as events so we can include it alongside other data we collect for reporting. But, until we spin up a backend, let's use what we have. (We can always backfill our backend with SurveyGizmo data if we eventually power the form ourselves.)

I'm wanting to use a new channel `carbon-live` for a live view of other events that we start to capture. For example, when a sub-system publishes a component, developer essentials badge is issued, etc. Maybe we start that channel with this data. Since it's not all actionable, maybe we don't want to put that all in `-support` to avoid noise there.

In terms of responding to the inbound, maybe we thread-reply to the Slack message to designate that you're replying directly, so we know when somebody's followed up if a follow-up is necessary. We can come up with some convention in Slack to not step on any toes as we reply to the feedback.
<issue_comment>username_0: @username_1 our 'backend' would source data from a variety of places (notion, github, surveygizmo, etc.) I don't see the point of storing it all on a database. Those services allow you to query for past events/specific ranges and they do a much better job of it than we would rolling our own.

Either way, that sort of effort requires smaller efforts like this one.
<issue_comment>username_2: ## Feedback component visual specs


### Specs

![Color_and_type](https://user-images.githubusercontent.com/43144260/76228295-89c94080-61ee-11ea-9365-24d53ced0735.png)

![Spacing](https://user-images.githubusercontent.com/43144260/76228282-85048c80-61ee-11ea-8e5b-4395b4d4d3d4.png)




### Responsive behavior

I spec'd this pretty fast so I don't have a view at each breakpoint, but I'm thinking it would respond like the Gatsby feedback component and hold it's size at each breakpoint and then respond like our dialogs at mobile. 

### Context

**Closed**

![context_closed](https://user-images.githubusercontent.com/43144260/76227883-f7c13800-61ed-11ea-9a8e-8b9859c6b0c5.png)

**Open**

![context_open](https://user-images.githubusercontent.com/43144260/76227891-fa239200-61ed-11ea-898f-2878305d9dca.png)"
