kubernetes/website,315145523,8116,,"[{'action': 'opened', 'author': 'zacharysarah', 'comment_id': None, 'datetime': '2018-04-17 16:49:16+00:00', 'masked_author': 'username_0', 'text': '## About the Summit\r\n\r\n### When\r\n\r\n9 May 2018, 9:30am-4pm, 5-7pm dinner/drinks\r\n\r\n### Where\r\n\r\nPortland, OR, USA [CENTRL Office Pearl](https://goo.gl/maps/vZAMHRePHEU2) (three blocks from Write the Docs)\r\n\r\n### What\r\n\r\nOur first-ever summit for Kubernetes docs! Our goals for this summit are:\r\n- Get to know each other\r\n- Set our priorities for the rest of 2018\r\n\r\n### Why\r\n\r\n- Setting shared priorities for the year helps us focus our time and energy effectively. Clear priorities let us say yes to the projects that move us closer to our goals. \r\n- While a globally distributed team has advantages and flexibility, this is an opportunity to get to know each other as more than faces on a screen. \r\n\r\n## Agenda\r\n\r\nTime | Activity\r\n---|---\r\n9:30am | Kickoff at CENTRL Office Pearl\r\n10am-11am | Get to know each other\r\n11am-12:00pm | Set values, mission, strategy: <br>- Who we are<br>- What we do<br>- Why we do it\r\n12:00pm-1:30pm | Lunch\r\n1:30pm-2:30pm | Initiatives from CNCF: <br>- Specific projects that derive from these initiatives\r\n3pm-4pm | Start, Stop, Continue:<br>- What should the team start doing?<br>- What should the team stop doing?<br>- What should the team continue doing? \r\n4pm-5pm | Free time before dinner\r\n5pm-7pm | Dinner w/ Drinks @ [Tilt](https://goo.gl/maps/pdLg3DhffXH2)', 'title': '2018 Kubernetes SIG Docs Summit', 'type': 'issue'}]","<issue_start><issue_comment>Title: 2018 Kubernetes SIG Docs Summit
username_0: ## About the Summit

### When

9 May 2018, 9:30am-4pm, 5-7pm dinner/drinks

### Where

Portland, OR, USA [CENTRL Office Pearl](https://goo.gl/maps/vZAMHRePHEU2) (three blocks from Write the Docs)

### What

Our first-ever summit for Kubernetes docs! Our goals for this summit are:
- Get to know each other
- Set our priorities for the rest of 2018

### Why

- Setting shared priorities for the year helps us focus our time and energy effectively. Clear priorities let us say yes to the projects that move us closer to our goals. 
- While a globally distributed team has advantages and flexibility, this is an opportunity to get to know each other as more than faces on a screen. 

## Agenda

Time | Activity
---|---
9:30am | Kickoff at CENTRL Office Pearl
10am-11am | Get to know each other
11am-12:00pm | Set values, mission, strategy: <br>- Who we are<br>- What we do<br>- Why we do it
12:00pm-1:30pm | Lunch
1:30pm-2:30pm | Initiatives from CNCF: <br>- Specific projects that derive from these initiatives
3pm-4pm | Start, Stop, Continue:<br>- What should the team start doing?<br>- What should the team stop doing?<br>- What should the team continue doing? 
4pm-5pm | Free time before dinner
5pm-7pm | Dinner w/ Drinks @ [Tilt](https://goo.gl/maps/pdLg3DhffXH2)"
department-of-veterans-affairs/vets-website,438351888,10003,"{'number': 10003.0, 'repo': 'vets-website', 'user_login': 'department-of-veterans-affairs'}","[{'action': 'opened', 'author': 'ncksllvn', 'comment_id': None, 'datetime': '2019-04-29T14:42:54Z', 'masked_author': 'username_0', 'text': 'Goes with https://github.com/department-of-veterans-affairs/vagov-content/pull/410 (`search-breadcrumbs` branch of vagov-content)\r\n\r\nFor faster startup and reloads, start locally using `npm run watch -- --entry=search,static-pages`.\r\n\r\nTicket - https://github.com/department-of-veterans-affairs/vets.gov-team/issues/14813\r\n\r\n---\r\n## Description\r\nThis pull request modifies the Search app to use React-powered breadcrumbs instead of plain HTML so that browser focus can more easily be controlled.\r\n\r\n- On the first render of the search results, browser focus should remain on the breadcrumbs.\r\n- On subsequent result sets, browser focus should be applied to the heading for top recommendation, or the first link title.\r\n\r\nTicket - https://github.com/department-of-veterans-affairs/vets.gov-team/issues/14813\r\n\r\n## Testing done\r\nLocal testing\r\n\r\n## Screenshots\r\nHow are people recording those fancy GIFs?\r\n\r\n## Acceptance criteria\r\n- [x] Screenreader support is improved on the search app.\r\n\r\n## Definition of done\r\n- [x] Events are logged appropriately\r\n- [x] Documentation has been updated, if applicable\r\n- [x] A link has been provided to the originating GitHub issue (or connected to it via ZenHub)\r\n- [x] No sensitive information (i.e. PII/credentials/internal URLs/etc.) is captured in logging, hardcoded, or specs', 'title': '[Search] Improve screenreader support', 'type': 'issue'}
 {'action': 'created', 'author': 'ncksllvn', 'comment_id': 488390417.0, 'datetime': '2019-05-01 19:36:32+00:00', 'masked_author': 'username_0', 'text': 'Thanks @username_1! Focus outline has been removed, and the Content PR to remove the breadcrumbs out of Markdown is here, https://github.com/department-of-veterans-affairs/vagov-content/pull/410.\r\n\r\n@aubreyarcangel Can you take a look at this as well when you get the chance?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ncksllvn', 'comment_id': 488752981.0, 'datetime': '2019-05-02 17:05:54+00:00', 'masked_author': 'username_0', 'text': ""@username_1 @aubreyarcangel I'd like to merge this today, along with the [content PR](https://github.com/department-of-veterans-affairs/vagov-content/pull/410). Do you mind taking a look again when you have time?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1Copenut', 'comment_id': 488795318.0, 'datetime': '2019-05-02 19:11:30+00:00', 'masked_author': 'username_1', 'text': '@username_0 LGTM. I tested briefly on Chrome, Safari and Firefox on MacOS. Will test in Staging when ready.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ncksllvn', 'comment_id': 488838517.0, 'datetime': '2019-05-02 21:27:47+00:00', 'masked_author': 'username_0', 'text': 'Thanks @username_1!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1Copenut', 'comment_id': 489130469.0, 'datetime': '2019-05-03 15:13:54+00:00', 'masked_author': 'username_1', 'text': ""@username_0 @aubreyarcangel I tested this in Staging with JAWS and NVDA. The results were very positive!\r\n\r\n* **JAWS + IE11:** Announced top results header, number of results, breadcrumb change\r\n* **JAWS + Chrome:** Announced top results header, search string change\r\n* **NVDA + Firefox:** Announced top results header, partial search string change\r\n\r\nHow should we handle the open PR https://github.com/department-of-veterans-affairs/vets-website/pull/9743 ? Since we're handling the changes in React now, should that PR be closed without merging?\r\n\r\nThank you both for working through this on multiple iterations. I am thrilled to see how screen readers are behaving with search results now. I have some ideas for small results string readout improvements, and will put those in as an improvement ticket."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ncksllvn', 'comment_id': 489152183.0, 'datetime': '2019-05-03 16:11:26+00:00', 'masked_author': 'username_0', 'text': 'I think PR https://github.com/department-of-veterans-affairs/vets-website/pull/9743 provided us with some great insight into how to structure our components to handle browser focus naturally, but I think it can be closed now. Thanks @aubreyarcangel for your work on that!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [Search] Improve screenreader support
username_0: Goes with https://github.com/department-of-veterans-affairs/vagov-content/pull/410 (`search-breadcrumbs` branch of vagov-content)

For faster startup and reloads, start locally using `npm run watch -- --entry=search,static-pages`.

Ticket - https://github.com/department-of-veterans-affairs/vets.gov-team/issues/14813

---
## Description
This pull request modifies the Search app to use React-powered breadcrumbs instead of plain HTML so that browser focus can more easily be controlled.

- On the first render of the search results, browser focus should remain on the breadcrumbs.
- On subsequent result sets, browser focus should be applied to the heading for top recommendation, or the first link title.

Ticket - https://github.com/department-of-veterans-affairs/vets.gov-team/issues/14813

## Testing done
Local testing

## Screenshots
How are people recording those fancy GIFs?

## Acceptance criteria
- [x] Screenreader support is improved on the search app.

## Definition of done
- [x] Events are logged appropriately
- [x] Documentation has been updated, if applicable
- [x] A link has been provided to the originating GitHub issue (or connected to it via ZenHub)
- [x] No sensitive information (i.e. PII/credentials/internal URLs/etc.) is captured in logging, hardcoded, or specs
<issue_comment>username_0: Thanks @username_1! Focus outline has been removed, and the Content PR to remove the breadcrumbs out of Markdown is here, https://github.com/department-of-veterans-affairs/vagov-content/pull/410.

@aubreyarcangel Can you take a look at this as well when you get the chance?
<issue_comment>username_0: @username_1 @aubreyarcangel I'd like to merge this today, along with the [content PR](https://github.com/department-of-veterans-affairs/vagov-content/pull/410). Do you mind taking a look again when you have time?
<issue_comment>username_1: @username_0 LGTM. I tested briefly on Chrome, Safari and Firefox on MacOS. Will test in Staging when ready.
<issue_comment>username_0: Thanks @username_1!
<issue_comment>username_1: @username_0 @aubreyarcangel I tested this in Staging with JAWS and NVDA. The results were very positive!

* **JAWS + IE11:** Announced top results header, number of results, breadcrumb change
* **JAWS + Chrome:** Announced top results header, search string change
* **NVDA + Firefox:** Announced top results header, partial search string change

How should we handle the open PR https://github.com/department-of-veterans-affairs/vets-website/pull/9743 ? Since we're handling the changes in React now, should that PR be closed without merging?

Thank you both for working through this on multiple iterations. I am thrilled to see how screen readers are behaving with search results now. I have some ideas for small results string readout improvements, and will put those in as an improvement ticket.
<issue_comment>username_0: I think PR https://github.com/department-of-veterans-affairs/vets-website/pull/9743 provided us with some great insight into how to structure our components to handle browser focus naturally, but I think it can be closed now. Thanks @aubreyarcangel for your work on that!"
nodejs/nodejs.org,639863072,3257,,"[{'action': 'opened', 'author': 'MylesBorins', 'comment_id': None, 'datetime': '2020-06-16 17:57:07+00:00', 'masked_author': 'username_0', 'text': ""Hey All,\r\n\r\nWe received an email report that the links on the BLM landing page were hard to read for those who can't distinguish color contrast well.\r\n\r\nDid a quick report and saw that there are indeed some accessibility improvements we can make on the page\r\n\r\nhttps://try.powermapper.com/demo/Report/577ee505-f5f6-425e-b1ca-450447bd7cce\r\n\r\nI've not run this across the entire site, but as the BLM landing page borrows a bunch of the broader styles it might be a site wide issue. i'll try and find some time to fix this, but if anyone wants to take a pass at it first please don't wait for me."", 'title': 'Accessibility issues with BLM landing page (and maybe entire site?)', 'type': 'issue'}
 {'action': 'created', 'author': 'davidfekke', 'comment_id': 644952105.0, 'datetime': '2020-06-16 18:57:43+00:00', 'masked_author': 'username_1', 'text': 'A lot of organizations have a banner and link for supporting the BLM movement. It might be a better UX experience to move the BLM support to another page, and have a link to it on the homepage.\r\n\r\nI know I came to the nodejs.org site the other day to try to download the installer, and I had to search for awhile until I found it at the bottom of the page.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nschonni', 'comment_id': 644960446.0, 'datetime': '2020-06-16 19:12:27+00:00', 'masked_author': 'username_2', 'text': ""@username_1 that already happened in #3246\r\n\r\n@username_0 Looking at Wave, I'm not seeing any contrast issues flagged https://wave.webaim.org/report#/https://nodejs.org/en/black-lives-matter/ but that can sometimes be subjective, even if the ration is correct"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MylesBorins', 'comment_id': 644968361.0, 'datetime': '2020-06-16 19:29:27+00:00', 'masked_author': 'username_0', 'text': '@username_1 the change to make a banner landed yesterday. The original plan was to replace the landing page for a week.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Trott', 'comment_id': 645139630.0, 'datetime': '2020-06-17 04:21:33+00:00', 'masked_author': 'username_3', 'text': 'https://wave.webaim.org/report#/https://nodejs.org/en/black-lives-matter/ flags 32 color contrast issues for me, all in links. \r\n\r\n<img width=""523"" alt=""Screen Shot 2020-06-16 at 9 20 58 PM"" src=""https://user-images.githubusercontent.com/718899/84854758-4c5b2700-b017-11ea-8557-2befb8b70075.png"">', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nschonni', 'comment_id': 645140410.0, 'datetime': '2020-06-17 04:23:56+00:00', 'masked_author': 'username_2', 'text': ""Weird, maybe a browser related thing? I'm running in Firefox\r\n![image](https://user-images.githubusercontent.com/1297909/84854902-c946ca80-b030-11ea-86d1-056a1360eb1c.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Trott', 'comment_id': 645141230.0, 'datetime': '2020-06-17 04:26:23+00:00', 'masked_author': 'username_3', 'text': ""I get the same 32 errors in Firefox too. I'm on macOS."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nschonni', 'comment_id': 645143747.0, 'datetime': '2020-06-17 04:34:04+00:00', 'masked_author': 'username_2', 'text': ""OK, think I figured out why I wasn't seeing it. I use Stylish for custom CSS, and even though I toggled it off, it seems like it was still picked up in the iframe"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'XhmikosR', 'comment_id': 646224835.0, 'datetime': '2020-06-18 18:10:32+00:00', 'masked_author': 'username_4', 'text': 'The main page passes WCAG2AA AFAICT. I remember I checked it in the past also.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'MylesBorins', 'comment_id': None, 'datetime': '2020-06-20 00:14:01+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Accessibility issues with BLM landing page (and maybe entire site?)
username_0: Hey All,

We received an email report that the links on the BLM landing page were hard to read for those who can't distinguish color contrast well.

Did a quick report and saw that there are indeed some accessibility improvements we can make on the page

https://try.powermapper.com/demo/Report/577ee505-f5f6-425e-b1ca-450447bd7cce

I've not run this across the entire site, but as the BLM landing page borrows a bunch of the broader styles it might be a site wide issue. i'll try and find some time to fix this, but if anyone wants to take a pass at it first please don't wait for me.
<issue_comment>username_1: A lot of organizations have a banner and link for supporting the BLM movement. It might be a better UX experience to move the BLM support to another page, and have a link to it on the homepage.

I know I came to the nodejs.org site the other day to try to download the installer, and I had to search for awhile until I found it at the bottom of the page.
<issue_comment>username_2: @username_1 that already happened in #3246

@username_0 Looking at Wave, I'm not seeing any contrast issues flagged https://wave.webaim.org/report#/https://nodejs.org/en/black-lives-matter/ but that can sometimes be subjective, even if the ration is correct
<issue_comment>username_0: @username_1 the change to make a banner landed yesterday. The original plan was to replace the landing page for a week.
<issue_comment>username_3: https://wave.webaim.org/report#/https://nodejs.org/en/black-lives-matter/ flags 32 color contrast issues for me, all in links. 

<img width=""523"" alt=""Screen Shot 2020-06-16 at 9 20 58 PM"" src=""https://user-images.githubusercontent.com/718899/84854758-4c5b2700-b017-11ea-8557-2befb8b70075.png"">
<issue_comment>username_2: Weird, maybe a browser related thing? I'm running in Firefox
![image](https://user-images.githubusercontent.com/1297909/84854902-c946ca80-b030-11ea-86d1-056a1360eb1c.png)
<issue_comment>username_3: I get the same 32 errors in Firefox too. I'm on macOS.
<issue_comment>username_2: OK, think I figured out why I wasn't seeing it. I use Stylish for custom CSS, and even though I toggled it off, it seems like it was still picked up in the iframe
<issue_comment>username_4: The main page passes WCAG2AA AFAICT. I remember I checked it in the past also.<issue_closed>"
kubernetes/website,278327136,6525,,"[{'action': 'opened', 'author': 'jbpivotal', 'comment_id': None, 'datetime': '2017-12-01 01:21:41+00:00', 'masked_author': 'username_0', 'text': '<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n\r\n<!--Required Information-->\r\n\r\n**This is a...** \r\n<!-- choose one by changing [ ] to [x] -->\r\n- [x] Feature Request\r\n- [ ] Bug Report\r\n\r\n**Problem:**\r\nThe term `Master` in `Master Components` is potentially offensive to people of color and women, and I suggest we use a more inclusive synonym.\r\n\r\n**Proposed Solution:**\r\nSuggest renaming to ""Primary Components"" or ""Leader Components""\r\n\r\nFrom [cmu.edu](https://www.cs.cmu.edu/~mjw/Language/NonSexist/vuw.non-sexist-language-guidelines.txt):\r\n```\r\nThe word ""master"", like ""mistress"", originally meant one\r\nexerting control, as over a household.  ""Mistress"" is now more\r\ncommonly used to mean lover and sometimes teacher.  Master\r\nis now used in a variety of ways, but still largely with the\r\nsense of power and control and, implicitly, maleness.\r\n```\r\n\r\nFrom [django](https://github.com/django/django/pull/2692):\r\n`replaced occurrences of master/slave terminology with leader/follower`\r\n\r\nFrom [drupal.org](https://www.drupal.org/project/drupal/issues/2275877):\r\n`Replace ""master/slave"" terminology with ""primary/replica""`\r\n\r\n\r\n\r\n**Page to Update:**\r\nhttp://kubernetes.io/docs/concepts/overview/components/\r\n\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->', 'title': 'Re-name Master Components to a more inclusive synonym', 'type': 'issue'}
 {'action': 'created', 'author': 'zacharysarah', 'comment_id': 360632089.0, 'datetime': '2018-01-25 23:12:58+00:00', 'masked_author': 'username_1', 'text': ""@username_0 👋 Thanks for the proposal and the supporting documentation. I agree that it's a priority change.\r\n\r\n/cc @sarahnovotny, @username_2"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'parispittman', 'comment_id': 360636917.0, 'datetime': '2018-01-25 23:36:28+00:00', 'masked_author': 'username_2', 'text': 'I will take this to the next Contribex meeting on Jan 31st at 530pm UTC. We will need to get this in front of the k-dev crowd as well. \r\n\r\nAgree with Zach, thanks for bringing this up @username_0!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ConnorDoyle', 'comment_id': 360641692.0, 'datetime': '2018-01-26 00:02:04+00:00', 'masked_author': 'username_3', 'text': 'Another historical point of reference: https://docs.google.com/document/d/1P8_4wdk29I6NoVTjbFkRl05-tfxV9PY4WLoRNvExupM/edit#heading=h.9g7fqjh6652v\r\n\r\nMesos originally had ""masters and slaves"" and transitioned to ""masters and agents"". So, ""masters"" was retained but the most offensive term (according to most who chimed in at the time) was removed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jbpivotal', 'comment_id': 360655965.0, 'datetime': '2018-01-26 01:23:01+00:00', 'masked_author': 'username_0', 'text': 'Glad to, @username_1 and @username_2. Thanks for the support.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'idvoretskyi', 'comment_id': 360754126.0, 'datetime': '2018-01-26 11:05:06+00:00', 'masked_author': 'username_4', 'text': '""Control Plane"" is widely used as an alternative naming for ""Master"" in Kubernetes, so we may consider this naming option.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'idvoretskyi', 'comment_id': 362010974.0, 'datetime': '2018-01-31 17:39:26+00:00', 'masked_author': 'username_4', 'text': 'cc @kubernetes/sig-architecture-bugs', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bgrant0607', 'comment_id': 362013666.0, 'datetime': '2018-01-31 17:48:10+00:00', 'masked_author': 'username_5', 'text': 'I usually use ""control plane"".\r\n\r\nMinion->node rename:\r\nhttps://github.com/kubernetes/kubernetes/issues/1111', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bgrant0607', 'comment_id': 362013877.0, 'datetime': '2018-01-31 17:48:52+00:00', 'masked_author': 'username_5', 'text': 'https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/architecture.md#cluster-control-plane-aka-master', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bgrant0607', 'comment_id': 362014240.0, 'datetime': '2018-01-31 17:50:00+00:00', 'masked_author': 'username_5', 'text': 'cc @kubernetes/steering-committee', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jbeda', 'comment_id': 362015972.0, 'datetime': '2018-01-31 17:55:41+00:00', 'masked_author': 'username_6', 'text': ""I like control plane a lot also.  But I think that this is going to be a long effort and I'd love to get more perspectives from around the project.  This came up in ContribX and the plan was to talk about it a bit in SIG-architecture."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'timothysc', 'comment_id': 362073519.0, 'datetime': '2018-01-31 21:17:20+00:00', 'masked_author': 'username_7', 'text': ""I'm not opposed to this, but someone needs to drive all the touchpoints to make this change which may be non-trivial.  Distributed systems literature is clearly the source here and it goes back 30+ years, not justifying it, but taxonomy refs do matter.  If we change it, it should match other literature."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'smarterclayton', 'comment_id': 362323379.0, 'datetime': '2018-02-01 16:36:12+00:00', 'masked_author': 'username_8', 'text': 'I\'m generally ok with ""control plane"", master is too imprecise anyway.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'smarterclayton', 'comment_id': 362325004.0, 'datetime': '2018-02-01 16:40:58+00:00', 'masked_author': 'username_8', 'text': 'To tie this back to a general problem we have had - we don\'t have a single component that controls everything else, we don\'t have a single set of machines.  Instead we have ""run levels"" (an emerging way of describing that various core components depend on other core components being set first), and we need to separate out the things that are monolithic into individual pieces.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jbeda', 'comment_id': 362331500.0, 'datetime': '2018-02-01 17:00:05+00:00', 'masked_author': 'username_6', 'text': 'The thinking coming out of SIG-architecture:\r\n\r\n1. As @username_8 mentions, master isn\'t a great term from a technical point of view. It isn\'t a concept that really exists in the core system.  Moving to more accurate/descriptive language here will help people communicate more effectively.\r\n2. It is worthwhile to move away from the term ""master"" but this will be a long process. Our primary goal initially is to ""stop digging a hole"" and make sure that going forward we use new language.\r\n3. We can open issues and make this a ""help wanted"" type of thing as we create incentives over time to change the name.\r\n\r\nComplicating this is that pretty much every github link has the word ""master"" in it so simply grepping the code base is somewhat difficult.\r\n\r\nAlso, the preferred replacement seems to be either ""control plane"" or a more specific aspect of the control plane as appropriate (API server, etcd, etc).  But that term isn\'t final. We want to socialize this at the community meeting.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tpepper', 'comment_id': 362335943.0, 'datetime': '2018-02-01 17:12:04+00:00', 'masked_author': 'username_9', 'text': 'The github links with ""master"" next to them can be greppable with some exclusion as they\'re preceded by ""tree/"", ""blob/"", ""raw/"", etc.  We should be able to define and share a solid regexp that trims out those git links for helper folks searching for areas to clean.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bgrant0607', 'comment_id': 362341837.0, 'datetime': '2018-02-01 17:31:52+00:00', 'masked_author': 'username_5', 'text': 'Examples of more specific/precise things we will need terms for:\r\n* cluster control plane\r\n* nucleus apiserver\r\n* dedicated infrastructure nodes', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jfoy', 'comment_id': 362365527.0, 'datetime': '2018-02-01 18:54:16+00:00', 'masked_author': 'username_10', 'text': 'In our environment we refer to members of the control plane as Controllers and other nodes as Workers. ""Controller"" is an overloaded term here, so probably not ideal to adopt more widely, but Coordinators, Centers, or Orchestrators might work.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'omkensey', 'comment_id': 362405075.0, 'datetime': '2018-02-01 21:19:43+00:00', 'masked_author': 'username_11', 'text': 'I don\'t like ""leader"" only because (and this may be just my skew on it) to me that implies a node elected by a pool of nodes to do something, as in etcd.\r\n\r\n""Control plane"" seems a little unwieldy to me, as do the various polysyllabic terms like ""coordinator"".\r\n\r\nI like ""controller"" best since that\'s a term people already recognize and is used for an analogous machine role in e.g. Active Directory.  Yes, it\'s slightly overloaded in this project, but context would help a lot.  I\'m hard-pressed to come up with a situation where ""controller"" is a) ambiguous b) in a context where it matters that c) isn\'t easily fixed with minor rewording.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'danderson', 'comment_id': 362413004.0, 'datetime': '2018-02-01 21:47:54+00:00', 'masked_author': 'username_12', 'text': 'For reference, in the GKE world (hi! GKE SRE here), we use ""masters"" and ""control plane"" fairly interchangeably. For the individual components of the control plane, we just call them by their name (apiserver, controller manager, scheduler...), or collectively ""control plane pods.""\r\n\r\n""Controller"" would be nice as a shorter thing to say, but it\'s already heavily overloaded, and my personal experience at Google (where overloading terms is basically a sport at this point), if a term is too overloaded, people don\'t use it, or qualify it to the point where it\'s as/more verbose as ""control plane.""\r\n\r\nTongue in cheek: take a page from Starcraft, and call it the Overmind. A hive intelligence is not _too_ stretched an analogy for k8s.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jfoy', 'comment_id': 362419938.0, 'datetime': '2018-02-01 22:13:48+00:00', 'masked_author': 'username_10', 'text': 'Oh, I like the idea of calling dedicated control-plane components Queens.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'erriapo', 'comment_id': 362450451.0, 'datetime': '2018-02-02 00:46:44+00:00', 'masked_author': 'username_13', 'text': 'May I suggest using ""Supervisor components"". IMHO **Supervisor** is a great stand-in for **Master**.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'markyjackson-taulia', 'comment_id': 362464353.0, 'datetime': '2018-02-02 02:12:33+00:00', 'masked_author': 'username_14', 'text': 'I applaud this so very much!!!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'markyjackson-taulia', 'comment_id': 362466439.0, 'datetime': '2018-02-02 02:25:42+00:00', 'masked_author': 'username_14', 'text': 'I vote cluster control plane', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bgrant0607', 'comment_id': 362466737.0, 'datetime': '2018-02-02 02:27:28+00:00', 'masked_author': 'username_5', 'text': 'A couple quick comments (sorry):\r\n\r\n1. Controller already has a use in the system. Reusing would be very confusing.\r\n2. While I sympathize with the desire for conciseness, Supervisor is equally imprecise as master.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'swade1987', 'comment_id': 362545085.0, 'datetime': '2018-02-02 10:15:02+00:00', 'masked_author': 'username_15', 'text': 'I think `Control Plane` makes sense to me.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'roldancer', 'comment_id': 362594671.0, 'datetime': '2018-02-02 14:03:20+00:00', 'masked_author': 'username_16', 'text': '""Control Plane"" is a widely adopted term ...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ShahNawazKhan', 'comment_id': 362783701.0, 'datetime': '2018-02-03 06:09:22+00:00', 'masked_author': 'username_17', 'text': 'Control plane is a term used in Software Defined Networking with ""Controller"" name used for module/s that manage the data plane. In the NFV domain, ""Orchestrator"" is the name used for the kind of things the K8S master does. Considering that k8s already uses ""controllers"", adopting the terms of control plane and even orchestrator will align it with the terminologies used elsewhere.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mark-chilvers', 'comment_id': 362811641.0, 'datetime': '2018-02-03 14:14:57+00:00', 'masked_author': 'username_18', 'text': '""wheelhouse components""', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dzolnierz', 'comment_id': 362846098.0, 'datetime': '2018-02-03 19:14:03+00:00', 'masked_author': 'username_19', 'text': 'You should rename a ""master"" branch as well.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'davidopp', 'comment_id': 363038285.0, 'datetime': '2018-02-05 10:08:34+00:00', 'masked_author': 'username_20', 'text': 'IME people use ""control plane"" to refer to some components that are not generally considered part of the ""master"" e.g. kubelet and kube-proxy. So I don\'t think it\'s a good substitute for ""master.""', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tizbac', 'comment_id': 363040753.0, 'datetime': '2018-02-05 10:17:59+00:00', 'masked_author': 'username_21', 'text': 'Seriously as with other instances of that problem, for me it looks completely retarded and ridicolous\r\nWhoever is offended by terms that have been used in IT for over 30 years, has to rethink it, master and slave are the correct term if one part of the software or hardware is completely controlled by another part of the software or hardware.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'swade1987', 'comment_id': 363041229.0, 'datetime': '2018-02-05 10:19:48+00:00', 'masked_author': 'username_15', 'text': '@username_21 can I advise you don\'t use words like ""retarded"" in a public forum.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Flukas88', 'comment_id': 363051700.0, 'datetime': '2018-02-05 11:01:18+00:00', 'masked_author': 'username_22', 'text': 'I\'d use ""ill advised"" then', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MonsieurCellophane', 'comment_id': 363064166.0, 'datetime': '2018-02-05 11:57:43+00:00', 'masked_author': 'username_23', 'text': 'Really. This richly deserves a ""not a technical requirement/NOTABUG/WONTFIX"" I cant envision a single man/hour wasted on this useless drivel.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'esolitos', 'comment_id': 363080119.0, 'datetime': '2018-02-05 13:10:41+00:00', 'masked_author': 'username_24', 'text': 'No please, not again.\r\nPlease don\'t waste the time fo N+1 people into a non real issue.\r\nI\'d really really go an poll the majority of people working in CS/IT asking if _ANYONE_ has _EVER_ felt discriminated by the naming master/slave. My speculation is that the % of ""offended"" people would be less than 1%.\r\n\r\nThis term is _NOT_ related whatsoever from the ""master race"" concept or the ""slave trade"", as pointed out by others the master/slave nomenclature has been used in IT for _decades_ to indicate that a specific part of a system id dependant on another part, if you see in any way a connection on the white masters and `$skin-color` slaves, I have a bad news for you: you are the racist, because you imply that this master/slave concept applies to humans. The fact that someone believed it in the past, doesn\'t make it real, and it\'s not changing the present that you erase the mistakes of the past.\r\n\r\nCalling *ware components master/slave has never made anyone racist. Ever.\r\n\r\nSorry for this small rant, but I\'ve seen far to many projects wasting time on this _non issue_ in the past, creating long/eternal threads just to settle a damn nomenclature issue which no one was offended in the first place.\r\n\r\nPS: The fact that this issue is raised and discussed purely by white caucasian men should make you think a little...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'taifu', 'comment_id': 363085864.0, 'datetime': '2018-02-05 13:34:23+00:00', 'masked_author': 'username_25', 'text': ""I can't believe this. Really. I can't. This is ridiculous"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'teknoraver', 'comment_id': 363087859.0, 'datetime': '2018-02-05 13:42:58+00:00', 'masked_author': 'username_26', 'text': 'Am I the only one finding this ridiculous?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'brendandburns', 'comment_id': 363093448.0, 'datetime': '2018-02-05 14:04:20+00:00', 'masked_author': 'username_27', 'text': ""Before this discussion goes too much further, I'd like to remind everyone that this (and all kubernetes community forums) are covered by the CNCF code of conduct:\n\nhttps://github.com/<https://github.com/cncf/foundation/blob/master/code-of-conduct.md>cncf<https://github.com/cncf/foundation/blob/master/code-of-conduct.md>/foundation/blob/master/code-of-conduct.md<https://github.com/cncf/foundation/blob/master/code-of-conduct.md>\n\nI expect everyone to keep this discussion respectful and professional.\n\nThank you in advance for respecting our community and _all_ of its members.\n\n--brendan"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'taifu', 'comment_id': 363108549.0, 'datetime': '2018-02-05 14:56:31+00:00', 'masked_author': 'username_25', 'text': 'Is it possible to express contrariety seeing so much time and word wasted for such a worthless problem? Master and server are two technical words and nobody, really, nobody with a grain of salt could seriously regard this as a real problem', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bgrant0607', 'comment_id': None, 'datetime': '2018-02-05 15:14:11+00:00', 'masked_author': 'username_5', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'bgrant0607', 'comment_id': 363114049.0, 'datetime': '2018-02-05 15:14:11+00:00', 'masked_author': 'username_5', 'text': 'This conversation is no longer constructive and respectful. I am closing this issue.  \r\n\r\nWe have already started to move towards more specific terms for technical reasons. That terminology will be discussed further in SIG Architecture.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 673582504.0, 'datetime': '2020-08-13 16:38:08+00:00', 'masked_author': 'username_28', 'text': '/wg naming', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Re-name Master Components to a more inclusive synonym
username_0: <!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->

<!--Required Information-->

**This is a...** 
<!-- choose one by changing [ ] to [x] -->
- [x] Feature Request
- [ ] Bug Report

**Problem:**
The term `Master` in `Master Components` is potentially offensive to people of color and women, and I suggest we use a more inclusive synonym.

**Proposed Solution:**
Suggest renaming to ""Primary Components"" or ""Leader Components""

From [cmu.edu](https://www.cs.cmu.edu/~mjw/Language/NonSexist/vuw.non-sexist-language-guidelines.txt):
```
The word ""master"", like ""mistress"", originally meant one
exerting control, as over a household.  ""Mistress"" is now more
commonly used to mean lover and sometimes teacher.  Master
is now used in a variety of ways, but still largely with the
sense of power and control and, implicitly, maleness.
```

From [django](https://github.com/django/django/pull/2692):
`replaced occurrences of master/slave terminology with leader/follower`

From [drupal.org](https://www.drupal.org/project/drupal/issues/2275877):
`Replace ""master/slave"" terminology with ""primary/replica""`



**Page to Update:**
http://kubernetes.io/docs/concepts/overview/components/

<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->
<issue_comment>username_1: @username_0 👋 Thanks for the proposal and the supporting documentation. I agree that it's a priority change.

/cc @sarahnovotny, @username_2
<issue_comment>username_2: I will take this to the next Contribex meeting on Jan 31st at 530pm UTC. We will need to get this in front of the k-dev crowd as well. 

Agree with Zach, thanks for bringing this up @username_0!
<issue_comment>username_3: Another historical point of reference: https://docs.google.com/document/d/1P8_4wdk29I6NoVTjbFkRl05-tfxV9PY4WLoRNvExupM/edit#heading=h.9g7fqjh6652v

Mesos originally had ""masters and slaves"" and transitioned to ""masters and agents"". So, ""masters"" was retained but the most offensive term (according to most who chimed in at the time) was removed.
<issue_comment>username_0: Glad to, @username_1 and @username_2. Thanks for the support.
<issue_comment>username_4: ""Control Plane"" is widely used as an alternative naming for ""Master"" in Kubernetes, so we may consider this naming option.
<issue_comment>username_4: cc @kubernetes/sig-architecture-bugs
<issue_comment>username_5: I usually use ""control plane"".

Minion->node rename:
https://github.com/kubernetes/kubernetes/issues/1111
<issue_comment>username_5: https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/architecture.md#cluster-control-plane-aka-master
<issue_comment>username_5: cc @kubernetes/steering-committee
<issue_comment>username_6: I like control plane a lot also.  But I think that this is going to be a long effort and I'd love to get more perspectives from around the project.  This came up in ContribX and the plan was to talk about it a bit in SIG-architecture.
<issue_comment>username_7: I'm not opposed to this, but someone needs to drive all the touchpoints to make this change which may be non-trivial.  Distributed systems literature is clearly the source here and it goes back 30+ years, not justifying it, but taxonomy refs do matter.  If we change it, it should match other literature.
<issue_comment>username_8: I'm generally ok with ""control plane"", master is too imprecise anyway.
<issue_comment>username_8: To tie this back to a general problem we have had - we don't have a single component that controls everything else, we don't have a single set of machines.  Instead we have ""run levels"" (an emerging way of describing that various core components depend on other core components being set first), and we need to separate out the things that are monolithic into individual pieces.
<issue_comment>username_6: The thinking coming out of SIG-architecture:

1. As @username_8 mentions, master isn't a great term from a technical point of view. It isn't a concept that really exists in the core system.  Moving to more accurate/descriptive language here will help people communicate more effectively.
2. It is worthwhile to move away from the term ""master"" but this will be a long process. Our primary goal initially is to ""stop digging a hole"" and make sure that going forward we use new language.
3. We can open issues and make this a ""help wanted"" type of thing as we create incentives over time to change the name.

Complicating this is that pretty much every github link has the word ""master"" in it so simply grepping the code base is somewhat difficult.

Also, the preferred replacement seems to be either ""control plane"" or a more specific aspect of the control plane as appropriate (API server, etcd, etc).  But that term isn't final. We want to socialize this at the community meeting.
<issue_comment>username_9: The github links with ""master"" next to them can be greppable with some exclusion as they're preceded by ""tree/"", ""blob/"", ""raw/"", etc.  We should be able to define and share a solid regexp that trims out those git links for helper folks searching for areas to clean.
<issue_comment>username_5: Examples of more specific/precise things we will need terms for:
* cluster control plane
* nucleus apiserver
* dedicated infrastructure nodes
<issue_comment>username_10: In our environment we refer to members of the control plane as Controllers and other nodes as Workers. ""Controller"" is an overloaded term here, so probably not ideal to adopt more widely, but Coordinators, Centers, or Orchestrators might work.
<issue_comment>username_11: I don't like ""leader"" only because (and this may be just my skew on it) to me that implies a node elected by a pool of nodes to do something, as in etcd.

""Control plane"" seems a little unwieldy to me, as do the various polysyllabic terms like ""coordinator"".

I like ""controller"" best since that's a term people already recognize and is used for an analogous machine role in e.g. Active Directory.  Yes, it's slightly overloaded in this project, but context would help a lot.  I'm hard-pressed to come up with a situation where ""controller"" is a) ambiguous b) in a context where it matters that c) isn't easily fixed with minor rewording.
<issue_comment>username_12: For reference, in the GKE world (hi! GKE SRE here), we use ""masters"" and ""control plane"" fairly interchangeably. For the individual components of the control plane, we just call them by their name (apiserver, controller manager, scheduler...), or collectively ""control plane pods.""

""Controller"" would be nice as a shorter thing to say, but it's already heavily overloaded, and my personal experience at Google (where overloading terms is basically a sport at this point), if a term is too overloaded, people don't use it, or qualify it to the point where it's as/more verbose as ""control plane.""

Tongue in cheek: take a page from Starcraft, and call it the Overmind. A hive intelligence is not _too_ stretched an analogy for k8s.
<issue_comment>username_10: Oh, I like the idea of calling dedicated control-plane components Queens.
<issue_comment>username_13: May I suggest using ""Supervisor components"". IMHO **Supervisor** is a great stand-in for **Master**.
<issue_comment>username_14: I applaud this so very much!!!
<issue_comment>username_14: I vote cluster control plane
<issue_comment>username_5: A couple quick comments (sorry):

1. Controller already has a use in the system. Reusing would be very confusing.
2. While I sympathize with the desire for conciseness, Supervisor is equally imprecise as master.
<issue_comment>username_15: I think `Control Plane` makes sense to me.
<issue_comment>username_16: ""Control Plane"" is a widely adopted term ...
<issue_comment>username_17: Control plane is a term used in Software Defined Networking with ""Controller"" name used for module/s that manage the data plane. In the NFV domain, ""Orchestrator"" is the name used for the kind of things the K8S master does. Considering that k8s already uses ""controllers"", adopting the terms of control plane and even orchestrator will align it with the terminologies used elsewhere.
<issue_comment>username_18: ""wheelhouse components""
<issue_comment>username_19: You should rename a ""master"" branch as well.
<issue_comment>username_20: IME people use ""control plane"" to refer to some components that are not generally considered part of the ""master"" e.g. kubelet and kube-proxy. So I don't think it's a good substitute for ""master.""
<issue_comment>username_21: Seriously as with other instances of that problem, for me it looks completely retarded and ridicolous
Whoever is offended by terms that have been used in IT for over 30 years, has to rethink it, master and slave are the correct term if one part of the software or hardware is completely controlled by another part of the software or hardware.
<issue_comment>username_15: @username_21 can I advise you don't use words like ""retarded"" in a public forum.
<issue_comment>username_22: I'd use ""ill advised"" then
<issue_comment>username_23: Really. This richly deserves a ""not a technical requirement/NOTABUG/WONTFIX"" I cant envision a single man/hour wasted on this useless drivel.
<issue_comment>username_24: No please, not again.
Please don't waste the time fo N+1 people into a non real issue.
I'd really really go an poll the majority of people working in CS/IT asking if _ANYONE_ has _EVER_ felt discriminated by the naming master/slave. My speculation is that the % of ""offended"" people would be less than 1%.

This term is _NOT_ related whatsoever from the ""master race"" concept or the ""slave trade"", as pointed out by others the master/slave nomenclature has been used in IT for _decades_ to indicate that a specific part of a system id dependant on another part, if you see in any way a connection on the white masters and `$skin-color` slaves, I have a bad news for you: you are the racist, because you imply that this master/slave concept applies to humans. The fact that someone believed it in the past, doesn't make it real, and it's not changing the present that you erase the mistakes of the past.

Calling *ware components master/slave has never made anyone racist. Ever.

Sorry for this small rant, but I've seen far to many projects wasting time on this _non issue_ in the past, creating long/eternal threads just to settle a damn nomenclature issue which no one was offended in the first place.

PS: The fact that this issue is raised and discussed purely by white caucasian men should make you think a little...
<issue_comment>username_25: I can't believe this. Really. I can't. This is ridiculous
<issue_comment>username_26: Am I the only one finding this ridiculous?
<issue_comment>username_27: Before this discussion goes too much further, I'd like to remind everyone that this (and all kubernetes community forums) are covered by the CNCF code of conduct:

https://github.com/<https://github.com/cncf/foundation/blob/master/code-of-conduct.md>cncf<https://github.com/cncf/foundation/blob/master/code-of-conduct.md>/foundation/blob/master/code-of-conduct.md<https://github.com/cncf/foundation/blob/master/code-of-conduct.md>

I expect everyone to keep this discussion respectful and professional.

Thank you in advance for respecting our community and _all_ of its members.

--brendan
<issue_comment>username_25: Is it possible to express contrariety seeing so much time and word wasted for such a worthless problem? Master and server are two technical words and nobody, really, nobody with a grain of salt could seriously regard this as a real problem<issue_closed>
<issue_comment>username_5: This conversation is no longer constructive and respectful. I am closing this issue.  

We have already started to move towards more specific terms for technical reasons. That terminology will be discussed further in SIG Architecture.
<issue_comment>username_28: /wg naming"
getnikola/nikola,611230694,3405,"{'number': 3405.0, 'repo': 'nikola', 'user_login': 'getnikola'}","[{'action': 'opened', 'author': 'ncdulo', 'comment_id': None, 'datetime': '2020-05-02T16:56:44Z', 'masked_author': 'username_0', 'text': '### Pull Request Checklist\r\n\r\n- [x] I’ve read the [guidelines for contributing](https://github.com/getnikola/nikola/blob/master/CONTRIBUTING.rst).\r\n- [x] I updated AUTHORS.txt and CHANGES.txt (if the change is non-trivial) and documentation (if applicable).\r\n- [x] I tested my changes.\r\n\r\n### Description\r\nIn reference to issue #3404 this pull request adds a variation of the base Typogrify filter without the ampersand filtering. The only change made to the standard `filters.typogrify` is removal of the `typo.amp()` call. This has been tested on my own site using Nikola 8.0.4, and from a test site using Nikola `master`. The work for this PR is based off of `master`.\r\n\r\nThis pull fixes #3404', 'title': 'Variant of Typogrify filter without ampersand', 'type': 'issue'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 624000130.0, 'datetime': '2020-05-05 11:30:12+00:00', 'masked_author': 'username_1', 'text': 'Perhaps the filters could just be fixed to ignore some tags?\r\n\r\nWe could take the `typogrify` function, change the applyfilters thing, and fix this (and possibly other bugs) without an extra filter and without having still more broken things: https://github.com/mintchaos/typogrify/blob/master/typogrify/filters.py#L348', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ncdulo', 'comment_id': 624007309.0, 'datetime': '2020-05-05 11:48:27+00:00', 'masked_author': 'username_0', 'text': ""That sounds like a great solution. I was thinking something similar the other day. More of a way to pass a set of parameters to the `typogrify` function which define a selection of filters to run. That way a user would be pick exactly the set of Typogrify filters to run. I did not further pursue that solution because I was unsure of how those parameters might be passed around, and just haven't really had the energy to dig too deeply into it.\n\nI'm at work so I can't take a deep look at the code right now, but will check it out later on. From what you mention, it looks like yours would be a better fitting solution. I'm all for reducing the duplication, and preventing other issues from arising."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ncdulo', 'comment_id': 658441897.0, 'datetime': '2020-07-14 22:20:01+00:00', 'masked_author': 'username_0', 'text': ""With this pull request being two months old, and life situations pulling me away from working towards a more appropriate fix, I don't foresee myself able to commit to any further work on this in the near future. I'd rather not leave this hanging, open on the PR board if no work is being done. If someone wants to pick this up and handle the issue more properly than the solution I came up with that would be great. I'd really like to see the original issue fixed in Nikola. Otherwise it may be time to close this one.\r\n\r\nThanks to the project developers for taking the time to offer suggestions towards a better fix here, and through other mediums. I'll continue maintaining the original fix implemented in my private (for unrelated reasons) Nikola source repo that powers my website."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 665957744.0, 'datetime': '2020-07-29 22:13:42+00:00', 'masked_author': 'username_1', 'text': 'I implemented the full fix in pull request #3447.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Variant of Typogrify filter without ampersand
username_0: ### Pull Request Checklist

- [x] I’ve read the [guidelines for contributing](https://github.com/getnikola/nikola/blob/master/CONTRIBUTING.rst).
- [x] I updated AUTHORS.txt and CHANGES.txt (if the change is non-trivial) and documentation (if applicable).
- [x] I tested my changes.

### Description
In reference to issue #3404 this pull request adds a variation of the base Typogrify filter without the ampersand filtering. The only change made to the standard `filters.typogrify` is removal of the `typo.amp()` call. This has been tested on my own site using Nikola 8.0.4, and from a test site using Nikola `master`. The work for this PR is based off of `master`.

This pull fixes #3404
<issue_comment>username_1: Perhaps the filters could just be fixed to ignore some tags?

We could take the `typogrify` function, change the applyfilters thing, and fix this (and possibly other bugs) without an extra filter and without having still more broken things: https://github.com/mintchaos/typogrify/blob/master/typogrify/filters.py#L348
<issue_comment>username_0: That sounds like a great solution. I was thinking something similar the other day. More of a way to pass a set of parameters to the `typogrify` function which define a selection of filters to run. That way a user would be pick exactly the set of Typogrify filters to run. I did not further pursue that solution because I was unsure of how those parameters might be passed around, and just haven't really had the energy to dig too deeply into it.

I'm at work so I can't take a deep look at the code right now, but will check it out later on. From what you mention, it looks like yours would be a better fitting solution. I'm all for reducing the duplication, and preventing other issues from arising.
<issue_comment>username_0: With this pull request being two months old, and life situations pulling me away from working towards a more appropriate fix, I don't foresee myself able to commit to any further work on this in the near future. I'd rather not leave this hanging, open on the PR board if no work is being done. If someone wants to pick this up and handle the issue more properly than the solution I came up with that would be great. I'd really like to see the original issue fixed in Nikola. Otherwise it may be time to close this one.

Thanks to the project developers for taking the time to offer suggestions towards a better fix here, and through other mediums. I'll continue maintaining the original fix implemented in my private (for unrelated reasons) Nikola source repo that powers my website.
<issue_comment>username_1: I implemented the full fix in pull request #3447."
kubernetes/website,319509704,8286,,"[{'action': 'opened', 'author': 'Rasoul2669', 'comment_id': None, 'datetime': '2018-05-02 11:11:06+00:00', 'masked_author': 'username_0', 'text': '<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n\r\n<!--Required Information-->\r\nkubelet can not start!\r\n\r\n**This is a...** \r\n<!-- choose one by changing [ ] to [x] -->\r\n- [ ] Feature Request\r\n- [x ] Bug Report\r\n\r\n**Problem:**\r\nI want to install Kubernetes on Raspberry Pi 3; but it faces a problem while I want to run the command ""kubeadm init --pod-network-cidr 10.244.0.0/16"". Here is the error after ""kubeadm init --pod-network-cidr 10.244.0.0/16"" completion:\r\n\r\nkubeadm init --pod-network-cidr 10.244.0.0/16\r\n\r\n[init] Using Kubernetes version: v1.10.2\r\n[init] Using Authorization modes: [Node RBAC]\r\n[preflight] Running pre-flight checks.\r\n\t[WARNING SystemVerification]: docker version is greater than the most recently validated version. Docker version: 18.03.0-ce. Max validated version: 17.03\r\n\t[WARNING FileExisting-crictl]: crictl not found in system path\r\nSuggestion: go get github.com/kubernetes-incubator/cri-tools/cmd/crictl\r\n[certificates] Generated ca certificate and key.\r\n[certificates] Generated apiserver certificate and key.\r\n[certificates] apiserver serving cert is signed for DNS names [kubemaster kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 10.244.10.2]\r\n[certificates] Generated apiserver-kubelet-client certificate and key.\r\n[certificates] Generated etcd/ca certificate and key.\r\n[certificates] Generated etcd/server certificate and key.\r\n[certificates] etcd/server serving cert is signed for DNS names [localhost] and IPs [127.0.0.1]\r\n[certificates] Generated etcd/peer certificate and key.\r\n[certificates] etcd/peer serving cert is signed for DNS names [kubemaster] and IPs [10.244.10.2]\r\n[certificates] Generated etcd/healthcheck-client certificate and key.\r\n[certificates] Generated apiserver-etcd-client certificate and key.\r\n[certificates] Generated sa key and public key.\r\n[certificates] Generated front-proxy-ca certificate and key.\r\n[certificates] Generated front-proxy-client certificate and key.\r\n[certificates] Valid certificates and keys now exist in ""/etc/kubernetes/pki""\r\n[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/admin.conf""\r\n[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/kubelet.conf""\r\n[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/controller-manager.conf""\r\n[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/scheduler.conf""\r\n[controlplane] Wrote Static Pod manifest for component kube-apiserver to ""/etc/kubernetes/manifests/kube-apiserver.yaml""\r\n[controlplane] Wrote Static Pod manifest for component kube-controller-manager to ""/etc/kubernetes/manifests/kube-controller-manager.yaml""\r\n[controlplane] Wrote Static Pod manifest for component kube-scheduler to ""/etc/kubernetes/manifests/kube-scheduler.yaml""\r\n[etcd] Wrote Static Pod manifest for a local etcd instance to ""/etc/kubernetes/manifests/etcd.yaml""\r\n[init] Waiting for the kubelet to boot up the control plane as Static Pods from directory ""/etc/kubernetes/manifests"".\r\n[init] This might take a minute or longer if the control plane images have to be pulled.\r\n\r\nUnfortunately, an error has occurred:\r\n\ttimed out waiting for the condition\r\n\r\nThis error is likely caused by:\r\n\t- The kubelet is not running\r\n\t- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)\r\n\t- Either there is no internet connection, or imagePullPolicy is set to ""Never"",\r\n\t  so the kubelet cannot pull or find the following control plane images:\r\n\t\t- k8s.gcr.io/kube-apiserver-arm:v1.10.2\r\n\t\t- k8s.gcr.io/kube-controller-manager-arm:v1.10.2\r\n\t\t- k8s.gcr.io/kube-scheduler-arm:v1.10.2\r\n\t\t- k8s.gcr.io/etcd-arm:3.1.12 (only if no external etcd endpoints are configured)\r\n\r\nIf you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:\r\n\t- \'systemctl status kubelet\'\r\n\t- \'journalctl -xeu kubelet\'\r\ncouldn\'t initialize a Kubernetes cluster\r\n\r\n**Proposed Solution:**\r\n\r\n\r\n**Page to Update:**\r\nhttps://kubernetes.io/...\r\n\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->\r\nI tried to install the previous versions of the kubeadm, kubelet, and kubectl; but the problem persist! \r\nThese is the output of the kubelet version: \r\nI0502 07:56:25.302275   12986 feature_gate.go:226] feature gates: &{{} map[]}\r\nW0502 07:56:25.354562   12986 cni.go:171] Unable to update cni config: No networks found in /etc/cni/net.d\r\nW0502 07:56:25.397542   12986 hostport_manager.go:68] The binary conntrack is not installed, this can cause failures in network connection cleanup.\r\n[Truncated]\nI0502 07:56:25.909479   12986 volume_manager.go:247] Starting Kubelet Volume Manager\r\nI0502 07:56:25.916317   12986 desired_state_of_world_populator.go:129] Desired state populator starts to run\r\nI0502 07:56:25.936712   12986 server.go:299] Adding debug handlers to kubelet server.\r\nI0502 07:56:26.010665   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]\r\nI0502 07:56:26.113943   12986 reconciler.go:154] Reconciler: start to sync state\r\nI0502 07:56:26.211586   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]\r\nI0502 07:56:26.611997   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]\r\nI0502 07:56:27.412349   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]\r\nW0502 07:56:28.036823   12986 nvidia.go:74] Error reading ""/sys/bus/pci/devices/"": open /sys/bus/pci/devices/: no such file or directory\r\nI0502 07:56:28.843386   12986 kubelet_node_status.go:271] Setting node annotation to enable volume controller attach/detach\r\nI0502 07:56:28.856889   12986 cpu_manager.go:155] [cpumanager] starting with none policy\r\nI0502 07:56:28.857342   12986 cpu_manager.go:156] [cpumanager] reconciling every 10s\r\nI0502 07:56:28.857453   12986 policy_none.go:42] [cpumanager] none policy: Start\r\nStarting Device Plugin manager\r\nI0502 07:56:28.862520   12986 kubelet_node_status.go:271] Setting node annotation to enable volume controller attach/detach\r\nW0502 07:56:28.863176   12986 container_manager_linux.go:791] CPUAccounting not enabled for pid: 12986\r\nW0502 07:56:28.863321   12986 container_manager_linux.go:794] MemoryAccounting not enabled for pid: 12986\r\nE0502 07:56:28.948327   12986 summary.go:102] Failed to get system container stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get cgroup stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get container info for ""/user.slice/user-1000.slice/session-c1.scope"": unknown container ""/user.slice/user-1000.slice/session-c1.scope""\r\nI0502 07:56:38.948895   12986 kubelet_node_status.go:271] Setting node annotation to enable volume controller attach/detach\r\nE0502 07:56:39.051451   12986 summary.go:102] Failed to get system container stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get cgroup stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get container info for ""/user.slice/user-1000.slice/session-c1.scope"": unknown container ""/user.slice/user-1000.slice/session-c1.scope""', 'title': 'Issue with k8s.io/docs/setup/independent/troubleshooting-kubeadm/', 'type': 'issue'}
 {'action': 'created', 'author': 'zacharysarah', 'comment_id': 387134712.0, 'datetime': '2018-05-07 17:09:06+00:00', 'masked_author': 'username_1', 'text': '@username_0 :wave: This issue sounds more like a request for support and less like an issue specifically for docs. You can bring your question to the `#kubernetes-users` channel in [Kubernetes slack](http://slack.k8s.io/). You can also search resources like [Stack Overflow](https://stackoverflow.com/) for answers to similar questions.\r\n\r\nIf after seeking support you discover an issue with documentation, please feel free to reopen this issue.\r\n\r\nYou can also open issues for Kubernetes functionality in https://github.com/kubernetes/kubernetes.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'zacharysarah', 'comment_id': None, 'datetime': '2018-05-07 17:09:07+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Issue with k8s.io/docs/setup/independent/troubleshooting-kubeadm/
username_0: <!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->

<!--Required Information-->
kubelet can not start!

**This is a...** 
<!-- choose one by changing [ ] to [x] -->
- [ ] Feature Request
- [x ] Bug Report

**Problem:**
I want to install Kubernetes on Raspberry Pi 3; but it faces a problem while I want to run the command ""kubeadm init --pod-network-cidr 10.244.0.0/16"". Here is the error after ""kubeadm init --pod-network-cidr 10.244.0.0/16"" completion:

kubeadm init --pod-network-cidr 10.244.0.0/16

[init] Using Kubernetes version: v1.10.2
[init] Using Authorization modes: [Node RBAC]
[preflight] Running pre-flight checks.
	[WARNING SystemVerification]: docker version is greater than the most recently validated version. Docker version: 18.03.0-ce. Max validated version: 17.03
	[WARNING FileExisting-crictl]: crictl not found in system path
Suggestion: go get github.com/kubernetes-incubator/cri-tools/cmd/crictl
[certificates] Generated ca certificate and key.
[certificates] Generated apiserver certificate and key.
[certificates] apiserver serving cert is signed for DNS names [kubemaster kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 10.244.10.2]
[certificates] Generated apiserver-kubelet-client certificate and key.
[certificates] Generated etcd/ca certificate and key.
[certificates] Generated etcd/server certificate and key.
[certificates] etcd/server serving cert is signed for DNS names [localhost] and IPs [127.0.0.1]
[certificates] Generated etcd/peer certificate and key.
[certificates] etcd/peer serving cert is signed for DNS names [kubemaster] and IPs [10.244.10.2]
[certificates] Generated etcd/healthcheck-client certificate and key.
[certificates] Generated apiserver-etcd-client certificate and key.
[certificates] Generated sa key and public key.
[certificates] Generated front-proxy-ca certificate and key.
[certificates] Generated front-proxy-client certificate and key.
[certificates] Valid certificates and keys now exist in ""/etc/kubernetes/pki""
[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/admin.conf""
[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/kubelet.conf""
[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/controller-manager.conf""
[kubeconfig] Wrote KubeConfig file to disk: ""/etc/kubernetes/scheduler.conf""
[controlplane] Wrote Static Pod manifest for component kube-apiserver to ""/etc/kubernetes/manifests/kube-apiserver.yaml""
[controlplane] Wrote Static Pod manifest for component kube-controller-manager to ""/etc/kubernetes/manifests/kube-controller-manager.yaml""
[controlplane] Wrote Static Pod manifest for component kube-scheduler to ""/etc/kubernetes/manifests/kube-scheduler.yaml""
[etcd] Wrote Static Pod manifest for a local etcd instance to ""/etc/kubernetes/manifests/etcd.yaml""
[init] Waiting for the kubelet to boot up the control plane as Static Pods from directory ""/etc/kubernetes/manifests"".
[init] This might take a minute or longer if the control plane images have to be pulled.

Unfortunately, an error has occurred:
	timed out waiting for the condition

This error is likely caused by:
	- The kubelet is not running
	- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)
	- Either there is no internet connection, or imagePullPolicy is set to ""Never"",
	  so the kubelet cannot pull or find the following control plane images:
		- k8s.gcr.io/kube-apiserver-arm:v1.10.2
		- k8s.gcr.io/kube-controller-manager-arm:v1.10.2
		- k8s.gcr.io/kube-scheduler-arm:v1.10.2
		- k8s.gcr.io/etcd-arm:3.1.12 (only if no external etcd endpoints are configured)

If you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:
	- 'systemctl status kubelet'
	- 'journalctl -xeu kubelet'
couldn't initialize a Kubernetes cluster

**Proposed Solution:**


**Page to Update:**
https://kubernetes.io/...

<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->
I tried to install the previous versions of the kubeadm, kubelet, and kubectl; but the problem persist! 
These is the output of the kubelet version: 
I0502 07:56:25.302275   12986 feature_gate.go:226] feature gates: &{{} map[]}
W0502 07:56:25.354562   12986 cni.go:171] Unable to update cni config: No networks found in /etc/cni/net.d
W0502 07:56:25.397542   12986 hostport_manager.go:68] The binary conntrack is not installed, this can cause failures in network connection cleanup.
[Truncated]
I0502 07:56:25.909479   12986 volume_manager.go:247] Starting Kubelet Volume Manager
I0502 07:56:25.916317   12986 desired_state_of_world_populator.go:129] Desired state populator starts to run
I0502 07:56:25.936712   12986 server.go:299] Adding debug handlers to kubelet server.
I0502 07:56:26.010665   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]
I0502 07:56:26.113943   12986 reconciler.go:154] Reconciler: start to sync state
I0502 07:56:26.211586   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]
I0502 07:56:26.611997   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]
I0502 07:56:27.412349   12986 kubelet.go:1794] skipping pod synchronization - [container runtime is down]
W0502 07:56:28.036823   12986 nvidia.go:74] Error reading ""/sys/bus/pci/devices/"": open /sys/bus/pci/devices/: no such file or directory
I0502 07:56:28.843386   12986 kubelet_node_status.go:271] Setting node annotation to enable volume controller attach/detach
I0502 07:56:28.856889   12986 cpu_manager.go:155] [cpumanager] starting with none policy
I0502 07:56:28.857342   12986 cpu_manager.go:156] [cpumanager] reconciling every 10s
I0502 07:56:28.857453   12986 policy_none.go:42] [cpumanager] none policy: Start
Starting Device Plugin manager
I0502 07:56:28.862520   12986 kubelet_node_status.go:271] Setting node annotation to enable volume controller attach/detach
W0502 07:56:28.863176   12986 container_manager_linux.go:791] CPUAccounting not enabled for pid: 12986
W0502 07:56:28.863321   12986 container_manager_linux.go:794] MemoryAccounting not enabled for pid: 12986
E0502 07:56:28.948327   12986 summary.go:102] Failed to get system container stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get cgroup stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get container info for ""/user.slice/user-1000.slice/session-c1.scope"": unknown container ""/user.slice/user-1000.slice/session-c1.scope""
I0502 07:56:38.948895   12986 kubelet_node_status.go:271] Setting node annotation to enable volume controller attach/detach
E0502 07:56:39.051451   12986 summary.go:102] Failed to get system container stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get cgroup stats for ""/user.slice/user-1000.slice/session-c1.scope"": failed to get container info for ""/user.slice/user-1000.slice/session-c1.scope"": unknown container ""/user.slice/user-1000.slice/session-c1.scope""
<issue_comment>username_1: @username_0 :wave: This issue sounds more like a request for support and less like an issue specifically for docs. You can bring your question to the `#kubernetes-users` channel in [Kubernetes slack](http://slack.k8s.io/). You can also search resources like [Stack Overflow](https://stackoverflow.com/) for answers to similar questions.

If after seeking support you discover an issue with documentation, please feel free to reopen this issue.

You can also open issues for Kubernetes functionality in https://github.com/kubernetes/kubernetes.<issue_closed>"
kubernetes/website,164770527,814,,"[{'action': 'opened', 'author': 'ericchiang', 'comment_id': None, 'datetime': '2016-07-11T06:47:01Z', 'masked_author': 'username_0', 'text': ""Currently a lot of general authorization concepts are split up between the ABAC, RBAC, and webhook sections. These topics include:\n- Non-resource paths (/apis, /swagger).\n- What verbs to expect and what powers they grant.\n- Dealing with service accounts.\n\nCurrently I have to read the entire document to learn all the necessary information. For instance, RBAC doesn't mention non-resource paths, so if a user only reads that section they'll miss something critical (see example[0]).\n\ncc @erictune @liggitt \n\n[0] https://stackoverflow.com/questions/38299105/how-to-use-rbac-in-kubernetes"", 'title': 'admin/authorization: general concepts should be separated from plugin specific info', 'type': 'issue'}
 {'action': 'created', 'author': 'tengqm', 'comment_id': 355477108.0, 'datetime': '2018-01-05 05:38:07+00:00', 'masked_author': 'username_1', 'text': 'em... still relevant\r\n/remove-lifecycle stale', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: admin/authorization: general concepts should be separated from plugin specific info
username_0: Currently a lot of general authorization concepts are split up between the ABAC, RBAC, and webhook sections. These topics include:
- Non-resource paths (/apis, /swagger).
- What verbs to expect and what powers they grant.
- Dealing with service accounts.

Currently I have to read the entire document to learn all the necessary information. For instance, RBAC doesn't mention non-resource paths, so if a user only reads that section they'll miss something critical (see example[0]).

cc @erictune @liggitt 

[0] https://stackoverflow.com/questions/38299105/how-to-use-rbac-in-kubernetes
<issue_comment>username_1: em... still relevant
/remove-lifecycle stale"
gohugoio/hugo,339539400,4921,,"[{'action': 'opened', 'author': 'grote', 'comment_id': None, 'datetime': '2018-07-09T17:25:23Z', 'masked_author': 'username_0', 'text': 'I am importing the material-components-web library like this in my `.scss` file:\r\n\r\n```sass\r\n@import ""node_modules/material-components-web/material-components-web"";\r\n```\r\nIt seems to find the library correctly in my `node_modules` folder which is in the root of my project. However, this imports sub-libraries that hugo can\'t find:\r\n\r\n```\r\nerror: failed to transform resource: SCSS processing failed: file ""/home/user/website/node_modules/material-components-web/material-components-web.scss"", line 17, col 1: File to import not found or unreadable: @material/button/mdc-button.\r\n```\r\n\r\nThe file `node_modules/@material/button/mdc-button.scss` exists, but can\'t be found.\r\n\r\nThe error message complains about this line in the library:\r\n```sass\r\n@import ""@material/button/mdc-button"";\r\n```\r\n\r\nIt seems it doesn\'t know where to find the `@material` folder. This works fine with webpack though.', 'title': 'Sass recursive @imports not found', 'type': 'issue'}
 {'action': 'created', 'author': 'bep', 'comment_id': 403560584.0, 'datetime': '2018-07-09 17:40:18+00:00', 'masked_author': 'username_1', 'text': 'In general:\r\n\r\n* I have tested this with several SASS frameworks without any issue\r\n* This is powered by LibSASS so you should check their issue tracker', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pamubay', 'comment_id': 403636840.0, 'datetime': '2018-07-09 22:11:59+00:00', 'masked_author': 'username_2', 'text': 'Because the `@import` relative path is relative to `material-components-web.scss` path.\r\n\r\n```\r\nnode_modules/\r\n├── @material\r\n│\xa0\xa0 ├── animation\r\n│\xa0\xa0 ├── auto-init\r\n│\xa0\xa0 ├── base\r\n│\xa0\xa0 ├── button\r\n│\xa0\xa0 │\xa0\xa0 ├── mdc-button-scss\r\n│\xa0\xa0 │\xa0\xa0 └── ...\r\n│\xa0\xa0 ├── card\r\n│\xa0\xa0 └── ...\r\n├── material-components-web\r\n│\xa0\xa0 ├── material-components-web.scss\r\n│\xa0\xa0 └── ...\r\n│\r\n```\r\nyou need to change all `@import` path from `@material` to `../@material`\r\n```\r\n@import ""@material/button/mdc-button"";\r\n```\r\nto\r\n```\r\n@import ""../@material/button/mdc-button"";\r\n```\r\n\r\ni believe that `@import` using `@material` path is resolved by `sass-loader` as explained in it\'s documentation [here](https://github.com/material-components/material-components-web#include-css-for-a-component) \r\n(P.S. I\'m not quite understand `npm` and `nodejs` thing though)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'grote', 'comment_id': 404010330.0, 'datetime': '2018-07-11 00:51:15+00:00', 'masked_author': 'username_0', 'text': 'Thanks for pointing me to this thread. This sounds like the problem I am having as well. With the exception that it seems to find the initial `material-components-web.scss` file just fine, but not the one that is imported there like this:\r\n\r\n```sass\r\n@import ""@material/button/mdc-button"";\r\n```\r\n\r\nThis is most likely, because the `@material` folder is inside `node_modules` which in turn is not part of the `ImportPath`.\r\n\r\n@username_2 changing all the imports isn\'t feasible, because they are inside `node_modules` which is managed by npm. So changed there get overridden with each update.\r\n\r\nManaging this SASS dependency with a git submodule instead also doesn\'t work, because the files there also use the strange [@ syntax](https://github.com/material-components/material-components-web/blob/master/packages/material-components-web/material-components-web.scss#L17) which isn\'t even part of [their repository folder structure](https://github.com/material-components/material-components-web/tree/master/packages).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'grote', 'comment_id': 404172270.0, 'datetime': '2018-07-11 13:37:44+00:00', 'masked_author': 'username_0', 'text': 'When trying to compile the SASS locally with\r\n\r\n    sass themes/test/static/css/styles.scss\r\n\r\nit fails like hugo does. But if I add some import paths like so:\r\n\r\n    sass -I . -I ./node_modules/ themes/test/static/css/styles.scss\r\n\r\nIt works. So having a feature to provide several paths for a `sassInputPath` config option would totally solve my issue and make Hugo even more awesome! :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 404602189.0, 'datetime': '2018-07-12 18:12:52+00:00', 'masked_author': 'username_1', 'text': 'I will have to think a little before I add this. \r\n\r\nThe niceness of the current restrictions is that it plays nicely with themes; the override paths are obvious and installation is mostly straightforward. `node_modules`, on the other hand, is usually a dumping ground that would not love to have in my Hugo project -- and certainly not inherit automatically from some theme I found on the internet.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bep', 'comment_id': None, 'datetime': '2018-07-20 15:50:46+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Sass recursive @imports not found
username_0: I am importing the material-components-web library like this in my `.scss` file:

```sass
@import ""node_modules/material-components-web/material-components-web"";
```
It seems to find the library correctly in my `node_modules` folder which is in the root of my project. However, this imports sub-libraries that hugo can't find:

```
error: failed to transform resource: SCSS processing failed: file ""/home/user/website/node_modules/material-components-web/material-components-web.scss"", line 17, col 1: File to import not found or unreadable: @material/button/mdc-button.
```

The file `node_modules/@material/button/mdc-button.scss` exists, but can't be found.

The error message complains about this line in the library:
```sass
@import ""@material/button/mdc-button"";
```

It seems it doesn't know where to find the `@material` folder. This works fine with webpack though.
<issue_comment>username_1: In general:

* I have tested this with several SASS frameworks without any issue
* This is powered by LibSASS so you should check their issue tracker
<issue_comment>username_2: Because the `@import` relative path is relative to `material-components-web.scss` path.

```
node_modules/
├── @material
│   ├── animation
│   ├── auto-init
│   ├── base
│   ├── button
│   │   ├── mdc-button-scss
│   │   └── ...
│   ├── card
│   └── ...
├── material-components-web
│   ├── material-components-web.scss
│   └── ...
│
```
you need to change all `@import` path from `@material` to `../@material`
```
@import ""@material/button/mdc-button"";
```
to
```
@import ""../@material/button/mdc-button"";
```

i believe that `@import` using `@material` path is resolved by `sass-loader` as explained in it's documentation [here](https://github.com/material-components/material-components-web#include-css-for-a-component) 
(P.S. I'm not quite understand `npm` and `nodejs` thing though)
<issue_comment>username_0: Thanks for pointing me to this thread. This sounds like the problem I am having as well. With the exception that it seems to find the initial `material-components-web.scss` file just fine, but not the one that is imported there like this:

```sass
@import ""@material/button/mdc-button"";
```

This is most likely, because the `@material` folder is inside `node_modules` which in turn is not part of the `ImportPath`.

@username_2 changing all the imports isn't feasible, because they are inside `node_modules` which is managed by npm. So changed there get overridden with each update.

Managing this SASS dependency with a git submodule instead also doesn't work, because the files there also use the strange [@ syntax](https://github.com/material-components/material-components-web/blob/master/packages/material-components-web/material-components-web.scss#L17) which isn't even part of [their repository folder structure](https://github.com/material-components/material-components-web/tree/master/packages).
<issue_comment>username_0: When trying to compile the SASS locally with

    sass themes/test/static/css/styles.scss

it fails like hugo does. But if I add some import paths like so:

    sass -I . -I ./node_modules/ themes/test/static/css/styles.scss

It works. So having a feature to provide several paths for a `sassInputPath` config option would totally solve my issue and make Hugo even more awesome! :)
<issue_comment>username_1: I will have to think a little before I add this. 

The niceness of the current restrictions is that it plays nicely with themes; the override paths are obvious and installation is mostly straightforward. `node_modules`, on the other hand, is usually a dumping ground that would not love to have in my Hugo project -- and certainly not inherit automatically from some theme I found on the internet.<issue_closed>"
ethereum/ethereum-org-website,949327677,3446,,"[{'action': 'opened', 'author': 'samajammin', 'comment_id': None, 'datetime': '2021-07-21 05:05:12+00:00', 'masked_author': 'username_0', 'text': ""_To make our work more accessible and to foster more community collaboration, our team publishes an overview of our quarterly roadmap goals. See last quarter's roadmap here: #2849._\r\n\r\n**Greetings fellow Ethereans!**\r\n\r\nHappy L2 summer 😎  (or winter for our friends in the southern hemisphere)! Hope you're enjoying your time in this space - we know we are! As always, [our vision with ethereum.org](https://ethereum.org/en/about/) is to create the best portal for Ethereum's growing community, and to serve as the front door to Ethereum for the millions of new visitors each month.\r\n\r\n## Content updates\r\n\r\nIn Q3 our [ethereum.org](http://ethereum.org) product focus will be to keep pace with all the incredible progress in the space so that our broader community can stay informed on developments on Ethereum network upgrades, Layer 2 projects, developer tooling, user applications and more.\r\n\r\nThank you to the hundreds of folks who have contributed content so far ❤️\r\n\r\n[Learn how to get involved](https://ethereum.org/en/contributing/)\r\n\r\n## CLR funding round for Eth2 projects\r\n\r\nNew funding mechanisms for public goods offer massive potential for the Ethereum ecosystem and the world beyond crypto. While not directly related to ethereum.org, our team is part of the Ethereum Foundation, which is one of the largest funders of grants and public goods within the ecosystem. We want to increase the cultural momentum around ecosystem funding for public goods as well as experiment with mechanisms in which support is allocated to the ecosystem.\r\n\r\nWe'll continue our work from Q2 with teams in the space, aiming to launch a [CLR.fund](https://blog.clr.fund/clr-fund-explained-pt-1/) round for Eth2 projects on an L2 mainnet by the end of Q3.\r\n\r\nThis work will also allow our team to stay on top of the latest tools, technologies, and best practices involved with dapp development, from testing and deployment tools to identity solutions and Layer 2 technologies. We plan to to bring these first-hand insights back into [our developer resources](https://ethereum.org/en/developers/).\r\n\r\n[Learn more, follow along & get involved](https://github.com/ethereum/clrfund)\r\n\r\n## Translation Program\r\n\r\nThanks to our >1,400 volunteer translators over the past couple years, [ethereum.org now supports 35 languages](https://ethereum.org/en/languages/)! Yet as the website has grown & is constantly updated to keep pace with the developments in the space, many of our languages have fallen somewhat out of date. We'll be making a push in Q3 to update 20+ of our translations to more recent versions of our website content.\r\n\r\nWith our new Translation Program Lead, @lukassim, we also plan to improve our [supporting documentation](https://ethereum.org/en/contributing/translation-program/) & improve use of our translation tools to improve consistency and quality throughout the translation process.\r\n\r\n[Learn how to get involved](https://ethereum.org/en/contributing/translation-program/)\r\n\r\n## Community growth\r\n\r\nAs you can see from all our goals above, our success is driven by our open source community of collaborators. Contributors come in many shapes & sizes - translators, developers, copywriters, designers, experts & amateurs. We want to continue to educate & empower folks who are curious to get involved in the Ethereum ecosystem & our ethereum.org community.\r\n\r\nOur new Community Lead, @minimalsm, will be leading efforts to support & empower our growing ethereum.org community. Stay tuned for the specific initiatives we plan to roll out this quarter!\r\n\r\nHave ideas? Reach out on [our Discord server](https://discord.gg/CetY6Y4) or here on GitHub.\r\n\r\n## How does that sound?\r\n\r\nWe appreciate feedback on our roadmap. Our guiding principles are based on delivering the most value in the shortest time, so if there's something you think we should work on, please let us know! We welcome ideas and PRs from anyone in the community.\r\n\r\n[More on contributing](https://ethereum.org/en/contributing/)"", 'title': '2021, Q3 ethereum.org product roadmap', 'type': 'issue'}
 {'action': 'created', 'author': 'tarekladjal1998', 'comment_id': 883930016.0, 'datetime': '2021-07-21 06:32:46+00:00', 'masked_author': 'username_1', 'text': 'Come baby to support you in my YouTube channel 4.35 million 💪', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 900016037.0, 'datetime': '2021-08-17 06:01:09+00:00', 'masked_author': 'username_0', 'text': 'Adding more concrete goals for Q3 around the Translation Program:\r\n\r\n- Initiatives\r\n    - Release content version 2.3 in Crowdin\r\n    - Build out translator resources to include different mediums and types of guides\r\n    - Establish plan for Crowdin GitHub integration (to build in Q4)\r\n    - Plan out leaderboard & acknowledge page (to build in Q4)\r\n    - Create language-specific groups for top 20 languages to connect translators\r\n    - Conduct vendor research (including cost analysis) & recommend a path forward\r\n- Metrics\r\n    - 3000 project members in Crowdin by Q4\r\n    - 5 new languages translated to v2.0\r\n    - 2 additional languages translated to v2.2\r\n    - 25 new language versions added to the site\r\n    - Record month with over 300,000 words translated by community members (existing best month at 290k)\r\n\r\nThanks @lukassim for spearheading these initiatives! 😄', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 908578748.0, 'datetime': '2021-08-30 18:22:42+00:00', 'masked_author': 'username_0', 'text': ""Adding more concrete goals for Q3 around Community Growth:\r\n\r\n- Initiatives\r\n    - Build out Learn Pages\r\n    - Restart community blog posts\r\n    - Gamify community and contributions\r\n        - Scope out leaderboards (to build in Q4)\r\n        - POAP levels\r\n        - Helpfulness indicators\r\n    - Investigate contribution collaboration opportunities\r\n    - Build Ethereum.org's twitter presence\r\n- Metrics\r\n    - 15% increase in total GitHub contributors (396 → 455)\r\n    - Recruit at least 1 new ethereum.org community guide by Q4\r\n    - Publish 5 new Learn pages:\r\n        - Governance\r\n        - Security (w/ section on scams)\r\n        - Decentralization\r\n        - Smart contracts\r\n        - Energy consumption\r\n    - Establish collaboration/partnership with 1 person/organization by end of Q3\r\n    - Translation Program blog post announcement re: new content version\r\n    - Hit average of 10 Discord messages per communicator\r\n    - Hit 20k Twitter followers by Q4\r\n\r\nThanks @minimalsm for spearheading these initiatives! 😄"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'HoneyCivik', 'comment_id': 919149401.0, 'datetime': '2021-09-14 13:25:33+00:00', 'masked_author': 'username_2', 'text': '""Contract Address""\r\n""""""0x5296FE5e8467fbE27Fb048dbE19F3447b3A0e708""""\r\n""Token Name"": ""Etherscan.io\'\' token\r\n""Token Symbol"" : ""ETH\'\'\r\n""divisor"" :""18""\r\n""Token Type"" : ""ERC 20\'\'\r\n""BlueCheck mark"" : ""TRUE""', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tarekladjal1998', 'comment_id': 919150698.0, 'datetime': '2021-09-14 13:27:05+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'HoneyCivik', 'comment_id': 919267325.0, 'datetime': '2021-09-14 15:34:54+00:00', 'masked_author': 'username_2', 'text': ""I don't know bro\r\nSorry \r\nHow Can i take token?\r\n😔😔😔"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kekekekke', 'comment_id': 923500829.0, 'datetime': '2021-09-21 01:22:28+00:00', 'masked_author': 'username_3', 'text': 'Should reduce the cost of gas mainly, I wish you more and more 🔥', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: 2021, Q3 ethereum.org product roadmap
username_0: _To make our work more accessible and to foster more community collaboration, our team publishes an overview of our quarterly roadmap goals. See last quarter's roadmap here: #2849._

**Greetings fellow Ethereans!**

Happy L2 summer 😎  (or winter for our friends in the southern hemisphere)! Hope you're enjoying your time in this space - we know we are! As always, [our vision with ethereum.org](https://ethereum.org/en/about/) is to create the best portal for Ethereum's growing community, and to serve as the front door to Ethereum for the millions of new visitors each month.

## Content updates

In Q3 our [ethereum.org](http://ethereum.org) product focus will be to keep pace with all the incredible progress in the space so that our broader community can stay informed on developments on Ethereum network upgrades, Layer 2 projects, developer tooling, user applications and more.

Thank you to the hundreds of folks who have contributed content so far ❤️

[Learn how to get involved](https://ethereum.org/en/contributing/)

## CLR funding round for Eth2 projects

New funding mechanisms for public goods offer massive potential for the Ethereum ecosystem and the world beyond crypto. While not directly related to ethereum.org, our team is part of the Ethereum Foundation, which is one of the largest funders of grants and public goods within the ecosystem. We want to increase the cultural momentum around ecosystem funding for public goods as well as experiment with mechanisms in which support is allocated to the ecosystem.

We'll continue our work from Q2 with teams in the space, aiming to launch a [CLR.fund](https://blog.clr.fund/clr-fund-explained-pt-1/) round for Eth2 projects on an L2 mainnet by the end of Q3.

This work will also allow our team to stay on top of the latest tools, technologies, and best practices involved with dapp development, from testing and deployment tools to identity solutions and Layer 2 technologies. We plan to to bring these first-hand insights back into [our developer resources](https://ethereum.org/en/developers/).

[Learn more, follow along & get involved](https://github.com/ethereum/clrfund)

## Translation Program

Thanks to our >1,400 volunteer translators over the past couple years, [ethereum.org now supports 35 languages](https://ethereum.org/en/languages/)! Yet as the website has grown & is constantly updated to keep pace with the developments in the space, many of our languages have fallen somewhat out of date. We'll be making a push in Q3 to update 20+ of our translations to more recent versions of our website content.

With our new Translation Program Lead, @lukassim, we also plan to improve our [supporting documentation](https://ethereum.org/en/contributing/translation-program/) & improve use of our translation tools to improve consistency and quality throughout the translation process.

[Learn how to get involved](https://ethereum.org/en/contributing/translation-program/)

## Community growth

As you can see from all our goals above, our success is driven by our open source community of collaborators. Contributors come in many shapes & sizes - translators, developers, copywriters, designers, experts & amateurs. We want to continue to educate & empower folks who are curious to get involved in the Ethereum ecosystem & our ethereum.org community.

Our new Community Lead, @minimalsm, will be leading efforts to support & empower our growing ethereum.org community. Stay tuned for the specific initiatives we plan to roll out this quarter!

Have ideas? Reach out on [our Discord server](https://discord.gg/CetY6Y4) or here on GitHub.

## How does that sound?

We appreciate feedback on our roadmap. Our guiding principles are based on delivering the most value in the shortest time, so if there's something you think we should work on, please let us know! We welcome ideas and PRs from anyone in the community.

[More on contributing](https://ethereum.org/en/contributing/)
<issue_comment>username_1: Come baby to support you in my YouTube channel 4.35 million 💪
<issue_comment>username_0: Adding more concrete goals for Q3 around the Translation Program:

- Initiatives
    - Release content version 2.3 in Crowdin
    - Build out translator resources to include different mediums and types of guides
    - Establish plan for Crowdin GitHub integration (to build in Q4)
    - Plan out leaderboard & acknowledge page (to build in Q4)
    - Create language-specific groups for top 20 languages to connect translators
    - Conduct vendor research (including cost analysis) & recommend a path forward
- Metrics
    - 3000 project members in Crowdin by Q4
    - 5 new languages translated to v2.0
    - 2 additional languages translated to v2.2
    - 25 new language versions added to the site
    - Record month with over 300,000 words translated by community members (existing best month at 290k)

Thanks @lukassim for spearheading these initiatives! 😄
<issue_comment>username_0: Adding more concrete goals for Q3 around Community Growth:

- Initiatives
    - Build out Learn Pages
    - Restart community blog posts
    - Gamify community and contributions
        - Scope out leaderboards (to build in Q4)
        - POAP levels
        - Helpfulness indicators
    - Investigate contribution collaboration opportunities
    - Build Ethereum.org's twitter presence
- Metrics
    - 15% increase in total GitHub contributors (396 → 455)
    - Recruit at least 1 new ethereum.org community guide by Q4
    - Publish 5 new Learn pages:
        - Governance
        - Security (w/ section on scams)
        - Decentralization
        - Smart contracts
        - Energy consumption
    - Establish collaboration/partnership with 1 person/organization by end of Q3
    - Translation Program blog post announcement re: new content version
    - Hit average of 10 Discord messages per communicator
    - Hit 20k Twitter followers by Q4

Thanks @minimalsm for spearheading these initiatives! 😄
<issue_comment>username_2: ""Contract Address""
""""""0x5296FE5e8467fbE27Fb048dbE19F3447b3A0e708""""
""Token Name"": ""Etherscan.io'' token
""Token Symbol"" : ""ETH''
""divisor"" :""18""
""Token Type"" : ""ERC 20''
""BlueCheck mark"" : ""TRUE""
<issue_comment>username_2: I don't know bro
Sorry 
How Can i take token?
😔😔😔
<issue_comment>username_3: Should reduce the cost of gas mainly, I wish you more and more 🔥"
