newrelic/developer-website,1045224236,1856,,"[{'action': 'opened', 'author': 'zstix', 'comment_id': None, 'datetime': '2021-11-04T21:27:33Z', 'masked_author': 'username_0', 'text': ""## Description\r\nOnce we have fully swapped [the landing page](https://github.com/newrelic/developer-website/issues/1853) and [the detail page](https://github.com/newrelic/developer-website/issues/1854) over to being powered by Gatsby SSR functions, we no longer need to have a Github workflow that runs every few hours to make API requests and build up a JSON file.\r\n\r\nThis ticket is to clean up that functionality and the files we are no longer using.\r\n\r\n## Acceptance Criteria\r\n* [x] https://github.com/newrelic/developer-website/issues/1853 (landing page via SSR)\r\n* [ ] https://github.com/newrelic/developer-website/issues/1855 (search and filter via SSR)\r\n* [x] https://github.com/newrelic/developer-website/issues/1854 (details page via SSR)\r\n* [x] Remove the [Github workflow](https://github.com/newrelic/developer-website/blob/develop/.github/workflows/fetch-quickstarts.yml)\r\n* [x] Remove the [fetch quickstarts script](https://github.com/newrelic/developer-website/blob/develop/scripts/actions/fetch-quickstarts.js) (and related tests)\r\n* [x] Remove the [quickstarts JSON file](https://github.com/newrelic/developer-website/blob/main/src/data/quickstarts.json)\r\n* [x] Remove any code that references the quickstart JSON file ([example](https://github.com/newrelic/developer-website/blob/develop/scripts/list-quickstart-urls.js))\r\n* [x] Edit the way we give related resources the quickstart slugs (we'll need to make an api call since we don't have quickstarts in the gatsby schema anymore)\r\n* [ ] Remove any secrets we no longer need (New Relic API key?)\r\n* [ ] Notify Virtuoso & Developer Experience teams that we are no longer hitting the Open Install Library service"", 'title': '[Public Catalog] Remove code / automation for manually fetching quickstarts', 'type': 'issue'}
 {'action': 'created', 'author': 'nr-kkenney', 'comment_id': 997106125.0, 'datetime': '2021-12-18 00:28:18+00:00', 'masked_author': 'username_1', 'text': ""PR #1968 should be the last code change cleanup wise.\r\n\r\nIm not sure about the acceptance criteria that links to another ticket 🙈 \r\n\r\nThe last two acceptance criteria should be blocked by the `feature/gatsby-ssr` being merged. We can't affect the current workflows (removing the api key) until we are ready to swap to using the api in site."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jpvajda', 'comment_id': 999043201.0, 'datetime': '2021-12-21 19:38:11+00:00', 'masked_author': 'username_2', 'text': 'blocked by this lack of functionality of Gatsby Cloud not supporting private environment variables.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [Public Catalog] Remove code / automation for manually fetching quickstarts
username_0: ## Description
Once we have fully swapped [the landing page](https://github.com/newrelic/developer-website/issues/1853) and [the detail page](https://github.com/newrelic/developer-website/issues/1854) over to being powered by Gatsby SSR functions, we no longer need to have a Github workflow that runs every few hours to make API requests and build up a JSON file.

This ticket is to clean up that functionality and the files we are no longer using.

## Acceptance Criteria
* [x] https://github.com/newrelic/developer-website/issues/1853 (landing page via SSR)
* [ ] https://github.com/newrelic/developer-website/issues/1855 (search and filter via SSR)
* [x] https://github.com/newrelic/developer-website/issues/1854 (details page via SSR)
* [x] Remove the [Github workflow](https://github.com/newrelic/developer-website/blob/develop/.github/workflows/fetch-quickstarts.yml)
* [x] Remove the [fetch quickstarts script](https://github.com/newrelic/developer-website/blob/develop/scripts/actions/fetch-quickstarts.js) (and related tests)
* [x] Remove the [quickstarts JSON file](https://github.com/newrelic/developer-website/blob/main/src/data/quickstarts.json)
* [x] Remove any code that references the quickstart JSON file ([example](https://github.com/newrelic/developer-website/blob/develop/scripts/list-quickstart-urls.js))
* [x] Edit the way we give related resources the quickstart slugs (we'll need to make an api call since we don't have quickstarts in the gatsby schema anymore)
* [ ] Remove any secrets we no longer need (New Relic API key?)
* [ ] Notify Virtuoso & Developer Experience teams that we are no longer hitting the Open Install Library service
<issue_comment>username_1: PR #1968 should be the last code change cleanup wise.

Im not sure about the acceptance criteria that links to another ticket 🙈 

The last two acceptance criteria should be blocked by the `feature/gatsby-ssr` being merged. We can't affect the current workflows (removing the api key) until we are ready to swap to using the api in site.
<issue_comment>username_2: blocked by this lack of functionality of Gatsby Cloud not supporting private environment variables."
bitcoin-core/bitcoincore.org,860424286,763,,"[{'action': 'opened', 'author': 'SatoshiNakamotogmx', 'comment_id': None, 'datetime': '2021-04-17 14:36:05+00:00', 'masked_author': 'username_0', 'text': ""Guess who..\n\n![IMG_20210417_072739.jpg](https://user-images.githubusercontent.com/56095058/115116491-94f0b300-9f4e-11eb-8ff0-b213a068c828.jpg)\nTop corner of the first transaction sent to harold \n\n![IMG_20210417_072124.jpg](https://user-images.githubusercontent.com/56095058/115116492-98843a00-9f4e-11eb-9390-7b76de307fe5.jpg)\n\nOh yeah when I was hijacked\n![IMG_20210417_073017.jpg](https://user-images.githubusercontent.com/56095058/115116547-da14e500-9f4e-11eb-9bd9-742839a5a563.jpg)\nP\n\n  You want any more evidence let me know .  Maybe the team can get time for little old me. I still got the pre paid card as well. \n\n  My wife's health wasn't working out she died in 2013 I had to leave to care for the woman I love family first. \n\n  I just want to help people nothing more."", 'title': 'Long time no see', 'type': 'issue'}
 {'action': 'created', 'author': 'SatoshiNakamotogmx', 'comment_id': 821834629.0, 'datetime': '2021-04-17 14:50:32+00:00', 'masked_author': 'username_0', 'text': ""My name is not on the list I'm a nobody who met the team and helped them the very night they know nothing about me ..  the last time I spoke to them they asked how will we know it's you.  After receiving the project I noticed some changes had to be done the changes were based on security.  Who ran network and how coins were distribution and the small block size so no hacker could overtake the blocks also no machine no matter how powerful can get two blocks in a row.  After that I got hit in the face with dust lol and said see ya later didn't expect the router to start screeming lol.  My fault for opening a email from a guy emaing my wife lol with the message what we spoke about.  So in a sense my wife who passed I believe got me involved.  Something happened that night that after they scanned my face with the computer screen shit got really crazy.  Impressive was the message.  Am I the only one left from the team?"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'harding', 'comment_id': None, 'datetime': '2021-04-17 17:56:48+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Long time no see
username_0: Guess who..

![IMG_20210417_072739.jpg](https://user-images.githubusercontent.com/56095058/115116491-94f0b300-9f4e-11eb-8ff0-b213a068c828.jpg)
Top corner of the first transaction sent to harold 

![IMG_20210417_072124.jpg](https://user-images.githubusercontent.com/56095058/115116492-98843a00-9f4e-11eb-9390-7b76de307fe5.jpg)

Oh yeah when I was hijacked
![IMG_20210417_073017.jpg](https://user-images.githubusercontent.com/56095058/115116547-da14e500-9f4e-11eb-9bd9-742839a5a563.jpg)
P

  You want any more evidence let me know .  Maybe the team can get time for little old me. I still got the pre paid card as well. 

  My wife's health wasn't working out she died in 2013 I had to leave to care for the woman I love family first. 

  I just want to help people nothing more.
<issue_comment>username_0: My name is not on the list I'm a nobody who met the team and helped them the very night they know nothing about me ..  the last time I spoke to them they asked how will we know it's you.  After receiving the project I noticed some changes had to be done the changes were based on security.  Who ran network and how coins were distribution and the small block size so no hacker could overtake the blocks also no machine no matter how powerful can get two blocks in a row.  After that I got hit in the face with dust lol and said see ya later didn't expect the router to start screeming lol.  My fault for opening a email from a guy emaing my wife lol with the message what we spoke about.  So in a sense my wife who passed I believe got me involved.  Something happened that night that after they scanned my face with the computer screen shit got really crazy.  Impressive was the message.  Am I the only one left from the team?<issue_closed>"
istio/istio.io,517236197,5344,"{'number': 5344.0, 'repo': 'istio.io', 'user_login': 'istio'}","[{'action': 'opened', 'author': 'sdake', 'comment_id': None, 'datetime': '2019-11-04T15:43:48Z', 'masked_author': 'username_0', 'text': 'Closes https://github.com/istio/istio.io/issues/5343', 'title': 'Update tablegen documentation', 'type': 'issue'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 549416635.0, 'datetime': '2019-11-04 15:51:05+00:00', 'masked_author': 'username_1', 'text': 'Do we also need to update the diff file? That is, content/en/news/2019/announcing-1.4/helm-changes/index.md?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 549418470.0, 'datetime': '2019-11-04 15:55:00+00:00', 'masked_author': 'username_0', 'text': ""@username_1 possibly - I am doing these one file at a time as the script is not well maintained.  Further complicating issues is a lack of cross repo gating between istio/istio/install and istio.github.io - permitting people to check in invalid text in values.yaml. I don't think it is worth our time to make this tool more resilient nor add cross-repo gating as hopefully helm will have one big git rm -rf from the repos.\r\n\r\nCheers\r\n-steve"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 549419110.0, 'datetime': '2019-11-04 15:56:20+00:00', 'masked_author': 'username_0', 'text': 'lovely rendering: https://deploy-preview-5344--preliminary-istio.netlify.com/docs/reference/config/installation-options/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 549422215.0, 'datetime': '2019-11-04 16:03:17+00:00', 'masked_author': 'username_1', 'text': ""In the page needs updated text and link. We could try to make this automatically updated, but it's probably not worth the work given Helm's ultimate fate."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nrjpoddar', 'comment_id': 549544434.0, 'datetime': '2019-11-04 21:00:04+00:00', 'masked_author': 'username_2', 'text': ""@username_0 We need to regenerate Helm reference docs for release-1.3 branch too. I know there's one discrepancy with protocol sniffing i.e.\r\n\r\n```diff\r\n- | `pilot.enableProtocolSniffing` | `false` | `if protocol sniffing is enabled. Default to false.` |\r\n+ | `pilot.enableProtocolSniffingForOutbound` | `true` | `if protocol sniffing is enabled for inbound` |\r\n+ | `pilot.enableProtocolSniffingForInbound` | `false` | `Resources for a small pilot install` |\r\n```"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 549605992.0, 'datetime': '2019-11-05 00:15:55+00:00', 'masked_author': 'username_0', 'text': 'if by we you mean you, feel free :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 549612497.0, 'datetime': '2019-11-05 00:42:24+00:00', 'masked_author': 'username_1', 'text': ""@username_2 The 1.3 docs will disappear on the 12th and move to the archive, so I don't think we want to spend any time fixing tooling in that side of things. If you want to submit a PR in the release-1.3 branch to manually update these files, that's fine, but I don't know whether it's worthwhile."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nrjpoddar', 'comment_id': 549613226.0, 'datetime': '2019-11-05 00:45:43+00:00', 'masked_author': 'username_2', 'text': 'Thanks @username_1 & @username_0, your comments make sense. I will generate a manual diff, I was unclear if manual edits were acceptable or not.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nrjpoddar', 'comment_id': 549615111.0, 'datetime': '2019-11-05 00:54:42+00:00', 'masked_author': 'username_2', 'text': 'Added https://github.com/istio/istio.io/pull/5350', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 549657666.0, 'datetime': '2019-11-05 04:26:20+00:00', 'masked_author': 'username_0', 'text': '`:` characters in comments are being processed incorrectly.  The result is commenting does not match with their contents.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 551361723.0, 'datetime': '2019-11-08 02:51:13+00:00', 'masked_author': 'username_0', 'text': 'On PTO until Nov 10, Traveling Nov 15 for KubeCon, this is at risk for not making the release.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 551884020.0, 'datetime': '2019-11-08 15:59:40+00:00', 'masked_author': 'username_1', 'text': 'I might try and write a Go program to take care of this, and probably output HTML rather than markdown, which would make handling the descriptions a lot simpler.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552212722.0, 'datetime': '2019-11-10 16:57:10+00:00', 'masked_author': 'username_0', 'text': ""Prior to writing this the first time, I looked high and low for a golang library that would keep the comments intact while parsing YAML into data structures.  Unfortunately I could find no such library.  It was a stretch to find a python library at the time (a few years ago).  I did find ruamel which maintains comments, but was very rough around the edges.  Ruamel has matured and has subsumed PyYAML as the cononiical YAML parsing library.  The greatest feature of Ruamel is round tripping - which permits keeping track of comments.\r\n\r\nThis new version uses the parser objects to keep track of the comments directly instead of (as prior) parsing part of the yaml on its own.  Thesee parser objects are new additions to the yaml pasing in 0.15 of Ruamel.\r\n\r\nI didn't expect to be home until this evening, but my Father decided to head home this morning so I do have some time to take a look at this work today.\r\n\r\nOutputting directly to HTML is viable, but I'd like  to just be able to build a dictionary with a data structure of key->(value, description) for easy output into any DSL (be it YAML or HTML).\r\n\r\nIf you can let me know if you are able to find a newer golang yaml library that preserves comments, that would be a preferrable approach I think, so we have a smaller language footprint across our tools (Golang,and shell and a bit of C:).  Makes maintenance easier for the next poor individual that has to look at our code 😁 \r\n\r\nCheers\r\n-steve"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552212994.0, 'datetime': '2019-11-10 17:00:40+00:00', 'masked_author': 'username_0', 'text': ""Haven't tried this, but this might be an option: https://github.com/kubernetes/kubernetes/issues/15157#issuecomment-403151628"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552213608.0, 'datetime': '2019-11-10 17:08:00+00:00', 'masked_author': 'username_0', 'text': ""@username_1 here is a fork of go-yaml which may support comment tokens..\r\n\r\nhttps://github.com/mozilla-services/yaml\r\n\r\nHaven't tried using it though.\r\n\r\nCheers\r\n-steve"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'howardjohn', 'comment_id': 552215434.0, 'datetime': '2019-11-10 17:29:56+00:00', 'masked_author': 'username_3', 'text': ""One thing to consider is with the operator we have proto so we don't need to do all this yaml stuff"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 552215673.0, 'datetime': '2019-11-10 17:33:07+00:00', 'masked_author': 'username_1', 'text': ""@username_0 I'll take a look, that might just be enough.\r\n\r\n@username_3 Do you think we can trivially and mechanically start from the protos and generate this helm-friendly stuff? I wrote a Go-based values.yaml->md converter yesterday in less than an hour to replace the Python code, so it's pretty easy. I was just missing support for retrieving the comments from the YAML, which apparently Steve's link will let me do."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nrjpoddar', 'comment_id': 552216130.0, 'datetime': '2019-11-10 17:38:25+00:00', 'masked_author': 'username_2', 'text': ""We use `https://github.com/kubernetes/gengo` in Istio client-go to parse files and create custom generators based on specific tags. This tool automatically tracks comments and bunch of other Go related things. I'm not sure how generic it is to use for non-go related file parsing.\r\n\r\nHere's an example of its usage: https://github.com/istio/tools/tree/master/cmd/kubetype-gen Might be an overkill for this effort but the k8s library is pretty powerful, so just wanted to mention it here."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 552216903.0, 'datetime': '2019-11-10 17:46:43+00:00', 'masked_author': 'username_1', 'text': ""@username_0 Nope, that update won't work. Most of the Golang YAML parsers insist on just unmarshaling to a struct. What I need is more of a DOM or AST-like model so I don't need to know the structure of the file and can just walk it dynamically. The only parser I found that does this for Go is go-gypsy, but it doesn't do comments.\r\n\r\n@username_2 I'll check it out, maybe it'll fit the bill."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'howardjohn', 'comment_id': 552217111.0, 'datetime': '2019-11-10 17:48:48+00:00', 'masked_author': 'username_3', 'text': ""@username_1 I am not 100% sure I understand your question, so I will just dump all context I have here\r\n\r\nWe have the two install methods, helm and operator, with corresponding doc pages on configuration options. This one for helm, and the operator one, which is generated from proto: https://preliminary.istio.io/docs/reference/config/istio.operator.v1alpha12.pb/.\r\n\r\nThese are fairly similar, although there are some differences, so its not just that one is yaml and one is proto -- they represent different objects.\r\n\r\nOne thing I have found is the operator proto docs are not great. The doc gen works well for our other CRDs since they are small, but there are like 100s of objects in the ICP proto. It would be nice to display them like the helm one, or my preference if there was a way to display it something like:\r\n\r\n```\r\n# doc for some field\r\nsomeField:\r\n  # doc for some int\r\n  someInt: int\r\n  someString: int\r\n  someListOfStrings: [string]\r\n```\r\n\r\nThen its really easy to map that to your own config file since you can just copy the whole object over, replace what you want and delete what you don't? Maybe this is just reinventing a new schema though :slightly_smiling_face:"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552265993.0, 'datetime': '2019-11-11 02:15:12+00:00', 'masked_author': 'username_0', 'text': ""about this PR, I have a comment parser using ruamel that works well.  The code generates HTML as to not have to deal with making the content MD compliant.\r\n\r\nOur values.yaml files are not properly docified in my opinion.  They have stuff that is before and after comments that may or may not be related to the target key/value pair.\r\n\r\nWhat I have is pretty close to working and far simpler then the last trainwreck of a home built yaml parser.  ruamel is well maintained as a dependency and is the default in python3 for any type of real development (In the python world, once a library hits the standard lib it's api is frozen, so there is no improvement on the feature set)..\r\n\r\nI am not anHTML wizard so not sure which tags to add to the tables.  If someone can help out here, we can merge this work as is.  Overall it works pretty well.\r\n\r\nCheers\r\n-steve"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552266500.0, 'datetime': '2019-11-11 02:18:26+00:00', 'masked_author': 'username_0', 'text': ""comments aren't quite right - but pretty close (this is only the main values.yaml - although adding the others is trivial, I just wanted to see if my hand edited HTML rendered properly.  \r\n\r\nhttps://deploy-preview-5344--preliminary-istio.netlify.com/docs/reference/config/installation-options/"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552273497.0, 'datetime': '2019-11-11 02:57:40+00:00', 'masked_author': 'username_0', 'text': '@username_3 while I agree this yaml to html conversion is low value in the future, at present it seems very high value until a full transition is made.  I would havce liked to have dumped this code from the repo in 1.4, but it does need to be maintained until helm is gone.\r\n\r\nCheers\r\n-steve', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geeknoid', 'comment_id': 552455909.0, 'datetime': '2019-11-11 13:58:05+00:00', 'masked_author': 'username_1', 'text': 'This is close, but still needs some TLC:\r\n\r\n- When processing the description, you need to remove leading # symbols.\r\n\r\n- You went a little too extreme on the html front. Instead of producing a full HTML document, I wanted to just generate an HTML table and insert it into the same markdown document as we had before. So instead of inserting a markdown table into the markdown doc, insert an HTML table into the markdown doc.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 552464220.0, 'datetime': '2019-11-11 14:20:24+00:00', 'masked_author': 'username_0', 'text': '`#` comment stripping is done\r\n\r\nHow do I insert HTML into MD?  I know how to generate the html table and I know how to insert it, but not sure what tags in md are needed so MD understands it is reading HTML now instead of MD.  Any examples?\r\n\r\nCheers\r\n-steve', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 567607603.0, 'datetime': '2019-12-19 18:29:18+00:00', 'masked_author': 'username_0', 'text': ""I'm not sure how to proceed with this work. The library this code is dependent on doesn't properly round trip comments, and there is no golang library to do the same. Given the istiod plans, and the fact istiod is auto-generated from protos, the most expedient process would be to manually update the comments and remove this automation that has never really worked well."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dgn', 'comment_id': 594685074.0, 'datetime': '2020-03-04 17:30:29+00:00', 'masked_author': 'username_4', 'text': '@username_0 this is marked as P0 for 1.5.0 - is this still required?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 605444979.0, 'datetime': '2020-03-28 13:05:03+00:00', 'masked_author': 'username_0', 'text': ""@username_2 manual edits are the path forward for release-1.5 changes. For release 1.6, I'll speak with @johnma14 about writing a simple golang generator that leaves out the description field for ... helmv3."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sdake', 'comment_id': 605445195.0, 'datetime': '2020-03-28 13:07:12+00:00', 'masked_author': 'username_0', 'text': '@username_4 This is no longer P0 for 1.5. For 1.6, we should start afresh with a golang generator integrated into the build tools container that @johnma14 suggested to me.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Update tablegen documentation
username_0: Closes https://github.com/istio/istio.io/issues/5343
<issue_comment>username_1: Do we also need to update the diff file? That is, content/en/news/2019/announcing-1.4/helm-changes/index.md?
<issue_comment>username_0: @username_1 possibly - I am doing these one file at a time as the script is not well maintained.  Further complicating issues is a lack of cross repo gating between istio/istio/install and istio.github.io - permitting people to check in invalid text in values.yaml. I don't think it is worth our time to make this tool more resilient nor add cross-repo gating as hopefully helm will have one big git rm -rf from the repos.

Cheers
-steve
<issue_comment>username_0: lovely rendering: https://deploy-preview-5344--preliminary-istio.netlify.com/docs/reference/config/installation-options/
<issue_comment>username_1: In the page needs updated text and link. We could try to make this automatically updated, but it's probably not worth the work given Helm's ultimate fate.
<issue_comment>username_2: @username_0 We need to regenerate Helm reference docs for release-1.3 branch too. I know there's one discrepancy with protocol sniffing i.e.

```diff
- | `pilot.enableProtocolSniffing` | `false` | `if protocol sniffing is enabled. Default to false.` |
+ | `pilot.enableProtocolSniffingForOutbound` | `true` | `if protocol sniffing is enabled for inbound` |
+ | `pilot.enableProtocolSniffingForInbound` | `false` | `Resources for a small pilot install` |
```
<issue_comment>username_0: if by we you mean you, feel free :)
<issue_comment>username_1: @username_2 The 1.3 docs will disappear on the 12th and move to the archive, so I don't think we want to spend any time fixing tooling in that side of things. If you want to submit a PR in the release-1.3 branch to manually update these files, that's fine, but I don't know whether it's worthwhile.
<issue_comment>username_2: Thanks @username_1 & @username_0, your comments make sense. I will generate a manual diff, I was unclear if manual edits were acceptable or not.
<issue_comment>username_2: Added https://github.com/istio/istio.io/pull/5350
<issue_comment>username_0: `:` characters in comments are being processed incorrectly.  The result is commenting does not match with their contents.
<issue_comment>username_0: On PTO until Nov 10, Traveling Nov 15 for KubeCon, this is at risk for not making the release.
<issue_comment>username_1: I might try and write a Go program to take care of this, and probably output HTML rather than markdown, which would make handling the descriptions a lot simpler.
<issue_comment>username_0: Prior to writing this the first time, I looked high and low for a golang library that would keep the comments intact while parsing YAML into data structures.  Unfortunately I could find no such library.  It was a stretch to find a python library at the time (a few years ago).  I did find ruamel which maintains comments, but was very rough around the edges.  Ruamel has matured and has subsumed PyYAML as the cononiical YAML parsing library.  The greatest feature of Ruamel is round tripping - which permits keeping track of comments.

This new version uses the parser objects to keep track of the comments directly instead of (as prior) parsing part of the yaml on its own.  Thesee parser objects are new additions to the yaml pasing in 0.15 of Ruamel.

I didn't expect to be home until this evening, but my Father decided to head home this morning so I do have some time to take a look at this work today.

Outputting directly to HTML is viable, but I'd like  to just be able to build a dictionary with a data structure of key->(value, description) for easy output into any DSL (be it YAML or HTML).

If you can let me know if you are able to find a newer golang yaml library that preserves comments, that would be a preferrable approach I think, so we have a smaller language footprint across our tools (Golang,and shell and a bit of C:).  Makes maintenance easier for the next poor individual that has to look at our code 😁 

Cheers
-steve
<issue_comment>username_0: Haven't tried this, but this might be an option: https://github.com/kubernetes/kubernetes/issues/15157#issuecomment-403151628
<issue_comment>username_0: @username_1 here is a fork of go-yaml which may support comment tokens..

https://github.com/mozilla-services/yaml

Haven't tried using it though.

Cheers
-steve
<issue_comment>username_3: One thing to consider is with the operator we have proto so we don't need to do all this yaml stuff
<issue_comment>username_1: @username_0 I'll take a look, that might just be enough.

@username_3 Do you think we can trivially and mechanically start from the protos and generate this helm-friendly stuff? I wrote a Go-based values.yaml->md converter yesterday in less than an hour to replace the Python code, so it's pretty easy. I was just missing support for retrieving the comments from the YAML, which apparently Steve's link will let me do.
<issue_comment>username_2: We use `https://github.com/kubernetes/gengo` in Istio client-go to parse files and create custom generators based on specific tags. This tool automatically tracks comments and bunch of other Go related things. I'm not sure how generic it is to use for non-go related file parsing.

Here's an example of its usage: https://github.com/istio/tools/tree/master/cmd/kubetype-gen Might be an overkill for this effort but the k8s library is pretty powerful, so just wanted to mention it here.
<issue_comment>username_1: @username_0 Nope, that update won't work. Most of the Golang YAML parsers insist on just unmarshaling to a struct. What I need is more of a DOM or AST-like model so I don't need to know the structure of the file and can just walk it dynamically. The only parser I found that does this for Go is go-gypsy, but it doesn't do comments.

@username_2 I'll check it out, maybe it'll fit the bill.
<issue_comment>username_3: @username_1 I am not 100% sure I understand your question, so I will just dump all context I have here

We have the two install methods, helm and operator, with corresponding doc pages on configuration options. This one for helm, and the operator one, which is generated from proto: https://preliminary.istio.io/docs/reference/config/istio.operator.v1alpha12.pb/.

These are fairly similar, although there are some differences, so its not just that one is yaml and one is proto -- they represent different objects.

One thing I have found is the operator proto docs are not great. The doc gen works well for our other CRDs since they are small, but there are like 100s of objects in the ICP proto. It would be nice to display them like the helm one, or my preference if there was a way to display it something like:

```
# doc for some field
someField:
  # doc for some int
  someInt: int
  someString: int
  someListOfStrings: [string]
```

Then its really easy to map that to your own config file since you can just copy the whole object over, replace what you want and delete what you don't? Maybe this is just reinventing a new schema though :slightly_smiling_face:
<issue_comment>username_0: about this PR, I have a comment parser using ruamel that works well.  The code generates HTML as to not have to deal with making the content MD compliant.

Our values.yaml files are not properly docified in my opinion.  They have stuff that is before and after comments that may or may not be related to the target key/value pair.

What I have is pretty close to working and far simpler then the last trainwreck of a home built yaml parser.  ruamel is well maintained as a dependency and is the default in python3 for any type of real development (In the python world, once a library hits the standard lib it's api is frozen, so there is no improvement on the feature set)..

I am not anHTML wizard so not sure which tags to add to the tables.  If someone can help out here, we can merge this work as is.  Overall it works pretty well.

Cheers
-steve
<issue_comment>username_0: comments aren't quite right - but pretty close (this is only the main values.yaml - although adding the others is trivial, I just wanted to see if my hand edited HTML rendered properly.  

https://deploy-preview-5344--preliminary-istio.netlify.com/docs/reference/config/installation-options/
<issue_comment>username_0: @username_3 while I agree this yaml to html conversion is low value in the future, at present it seems very high value until a full transition is made.  I would havce liked to have dumped this code from the repo in 1.4, but it does need to be maintained until helm is gone.

Cheers
-steve
<issue_comment>username_1: This is close, but still needs some TLC:

- When processing the description, you need to remove leading # symbols.

- You went a little too extreme on the html front. Instead of producing a full HTML document, I wanted to just generate an HTML table and insert it into the same markdown document as we had before. So instead of inserting a markdown table into the markdown doc, insert an HTML table into the markdown doc.
<issue_comment>username_0: `#` comment stripping is done

How do I insert HTML into MD?  I know how to generate the html table and I know how to insert it, but not sure what tags in md are needed so MD understands it is reading HTML now instead of MD.  Any examples?

Cheers
-steve
<issue_comment>username_0: I'm not sure how to proceed with this work. The library this code is dependent on doesn't properly round trip comments, and there is no golang library to do the same. Given the istiod plans, and the fact istiod is auto-generated from protos, the most expedient process would be to manually update the comments and remove this automation that has never really worked well.
<issue_comment>username_4: @username_0 this is marked as P0 for 1.5.0 - is this still required?
<issue_comment>username_0: @username_2 manual edits are the path forward for release-1.5 changes. For release 1.6, I'll speak with @johnma14 about writing a simple golang generator that leaves out the description field for ... helmv3.
<issue_comment>username_0: @username_4 This is no longer P0 for 1.5. For 1.6, we should start afresh with a golang generator integrated into the build tools container that @johnma14 suggested to me."
kubernetes/website,464923252,15323,,"[{'action': 'opened', 'author': 'vjohnk', 'comment_id': None, 'datetime': '2019-07-07 07:20:53+00:00', 'masked_author': 'username_0', 'text': '**This is a Bug Report**\r\n\r\n<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. --> minikube does not get created with minikube start --vm-driver=none\r\nMy setup is parrot os --> virtualbox --> centos 7 ---> minikubu installation done.\r\n\r\nPlease note:- normal setup done on parrot os did workfine as i had the \r\negrep --color \'vmx|svm\' /proc/cpuinfo output, which i did not get out of vm running centos\r\n\r\n<!--Required Information-->\r\n**Problem:**\r\n[root@centos-train ~]# minikube start --vm-driver=none\r\n* minikube v1.2.0 on linux (amd64)\r\n* Creating none VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\r\n* Configuring environment for Kubernetes v1.15.0 on Docker 1.13.1\r\n* Downloading kubeadm v1.15.0\r\n* Downloading kubelet v1.15.0\r\n* Pulling images ...\r\n* Launching Kubernetes ... \r\n\r\nX Error starting cluster: cmd failed: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap\r\n\r\n: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap\r\n output: [init] Using Kubernetes version: v1.15.0\r\n[preflight] Running pre-flight checks\r\n\t[WARNING Firewalld]: firewalld is active, please ensure ports [8443 10250] are open or your cluster may not function correctly\r\n\t[WARNING Swap]: running with swap on is not supported. Please disable swap\r\n\t[WARNING FileExisting-socat]: socat not found in system path\r\n\t[WARNING Hostname]: hostname ""minikube"" could not be reached\r\n\t[WARNING Hostname]: hostname ""minikube"": lookup minikube on 8.8.8.8:53: no such host\r\n\t[WARNING Service-Kubelet]: kubelet service is not enabled, please run \'systemctl enable kubelet.service\'\r\nerror execution phase preflight: [preflight] Some fatal errors occurred:\r\n\t[ERROR NumCPU]: the number of available CPUs 1 is less than the required 2\r\n[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`\r\n: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap\r\n.: exit status 1\r\n\r\n* Sorry that minikube crashed. If this was unexpected, we would love to hear from you:\r\n  - https://github.com/kubernetes/minikube/issues/new\r\n\r\n**Proposed Solution:**\r\nPlease check if we can add any steps like any ports that need to be enabled or swapoff -a to be performed or the ports to be opened  like 8443 10250 or any other steps that can stop the errors that are pasted above\r\n\r\n**Page to Update:**\r\nhttps://kubernetes.io/...\r\nhttps://kubernetes.io/docs/tasks/tools/install-minikube/\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->', 'title': 'Issue with k8s.io/docs/tasks/tools/install-minikube/', 'type': 'issue'}
 {'action': 'created', 'author': 'tengqm', 'comment_id': 509600218.0, 'datetime': '2019-07-09 11:14:07+00:00', 'masked_author': 'username_1', 'text': 'The error message says you need more VCPUs.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vjohnk', 'comment_id': 509622630.0, 'datetime': '2019-07-09 12:30:26+00:00', 'masked_author': 'username_0', 'text': '*******************I wanted to show you this error*****************\r\n\r\nAs per the error shown is there anything that can be included in the article like turning off firewall \r\nor all the port that needs to be allowed \r\n\r\n[root@centos ~]# minikube start --vm-driver=none\r\n* minikube v1.2.0 on linux (amd64)\r\n* Creating none VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...\r\n* Configuring environment for Kubernetes v1.15.0 on Docker 1.13.1\r\n* Downloading kubeadm v1.15.0\r\n* Downloading kubelet v1.15.0\r\n* Pulling images ...\r\n* Launching Kubernetes ...\r\n\r\nX Error starting cluster: cmd failed: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap\r\n\r\n: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap\r\n output: [init] Using Kubernetes version: v1.15.0\r\n[preflight] Running pre-flight checks\r\n        [WARNING Firewalld]: firewalld is active, please ensure ports [8443 10250] are open or your cluster may not function correctly\r\n        [WARNING Hostname]: hostname ""minikube"" could not be reached\r\n        [WARNING Hostname]: hostname ""minikube"": lookup minikube on 8.8.8.8:53: no such host\r\n[preflight] Pulling images required for setting up a Kubernetes cluster\r\n[preflight] This might take a minute or two, depending on the speed of your internet connection\r\n[preflight] You can also perform this action in beforehand using \'kubeadm config images pull\'\r\n[kubelet-start] Writing kubelet environment file with flags to file ""/var/lib/kubelet/kubeadm-flags.env""\r\n[kubelet-start] Writing kubelet configuration to file ""/var/lib/kubelet/config.yaml""\r\n[kubelet-start] Activating the kubelet service\r\n[certs] Using certificateDir folder ""/var/lib/minikube/certs/""\r\n[certs] Using existing ca certificate authority\r\n[certs] Using existing apiserver certificate and key on disk\r\n[certs] Generating ""apiserver-kubelet-client"" certificate and key\r\n[certs] Generating ""front-proxy-ca"" certificate and key\r\n[certs] Generating ""front-proxy-client"" certificate and key\r\n[certs] Generating ""etcd/ca"" certificate and key\r\n[certs] Generating ""etcd/server"" certificate and key\r\n[certs] etcd/server serving cert is signed for DNS names [minikube localhost] and IPs [192.168.1.221 127.0.0.1 ::1]\r\n[certs] Generating ""etcd/healthcheck-client"" certificate and key\r\n[certs] Generating ""apiserver-etcd-client"" certificate and key\r\n[certs] Generating ""etcd/peer"" certificate and key\r\n[certs] etcd/peer serving cert is signed for DNS names [minikube localhost] and IPs [192.168.1.221 127.0.0.1 ::1]\r\n[certs] Generating ""sa"" key and public key\r\n[kubeconfig] Using kubeconfig folder ""/etc/kubernetes""\r\n[kubeconfig] Writing ""admin.conf"" kubeconfig file\r\n[kubeconfig] Writing ""kubelet.conf"" kubeconfig file\r\n[kubeconfig] Writing ""controller-manager.conf"" kubeconfig file\r\n[kubeconfig] Writing ""scheduler.conf"" kubeconfig file\r\n[control-plane] Using manifest folder ""/etc/kubernetes/manifests""\r\n[control-plane] Creating static Pod manifest for ""kube-apiserver""\r\n[control-plane] Creating static Pod manifest for ""kube-controller-manager""\r\n[control-plane] Creating static Pod manifest for ""kube-scheduler""\r\n[etcd] Creating static Pod manifest for local etcd in ""/etc/kubernetes/manifests""\r\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory ""/etc/kubernetes/manifests"". This can take up to 4m0s\r\n[kubelet-check] Initial timeout of 40s passed.\r\n[kubelet-check] It seems like the kubelet isn\'t running or healthy.\r\n[kubelet-check] The HTTP call equal to \'curl -sSL http://localhost:10248/healthz\' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.\r\n[kubelet-check] It seems like the kubelet isn\'t running or healthy.\r\n[kubelet-check] The HTTP call equal to \'curl -sSL http://localhost:10248/healthz\' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.\r\n[kubelet-check] It seems like the kubelet isn\'t running or healthy.\r\n[kubelet-check] The HTTP call equal to \'curl -sSL http://localhost:10248/healthz\' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.\r\n[kubelet-check] It seems like the kubelet isn\'t running or healthy.\r\n[kubelet-check] The HTTP call equal to \'curl -sSL http://localhost:10248/healthz\' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.\r\n[kubelet-check] It seems like the kubelet isn\'t running or healthy.\r\n[kubelet-check] The HTTP call equal to \'curl -sSL http://localhost:10248/healthz\' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.\r\n\r\nUnfortunately, an error has occurred:\r\n        timed out waiting for the condition\r\n\r\nThis error is likely caused by:\r\n        - The kubelet is not running\r\n        - The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)\r\n\r\nIf you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:\r\n        - \'systemctl status kubelet\'\r\n        - \'journalctl -xeu kubelet\'\r\n\r\nAdditionally, a control plane component may have crashed or exited when started by the container runtime.\r\nTo troubleshoot, list all containers using your preferred container runtimes CLI, e.g. docker.\r\nHere is one example how you may list all Kubernetes containers running in docker:\r\n        - \'docker ps -a | grep kube | grep -v pause\'\r\n        Once you have found the failing container, you can inspect its logs with:\r\n        - \'docker logs CONTAINERID\'\r\nerror execution phase wait-control-plane: couldn\'t initialize a Kubernetes cluster\r\n: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap\r\n.: exit status 1\r\n\r\n* Sorry that minikube crashed. If this was unexpected, we would love to hear from you:\r\n  - https://github.com/kubernetes/minikube/issues/new', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'RA489', 'comment_id': 517152299.0, 'datetime': '2019-08-01 07:11:44+00:00', 'masked_author': 'username_2', 'text': '@username_0 Did you completely nuked the previous installation?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'RA489', 'comment_id': 517152379.0, 'datetime': '2019-08-01 07:11:58+00:00', 'masked_author': 'username_2', 'text': '/assign @username_2', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vjohnk', 'comment_id': 517155063.0, 'datetime': '2019-08-01 07:19:43+00:00', 'masked_author': 'username_0', 'text': '@username_2 Yes I did', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'RA489', 'comment_id': 517156545.0, 'datetime': '2019-08-01 07:23:44+00:00', 'masked_author': 'username_2', 'text': '@username_0 Thanks! Also can you please confirm if these ports 8443 10250 opened?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vjohnk', 'comment_id': 517166646.0, 'datetime': '2019-08-01 07:50:38+00:00', 'masked_author': 'username_0', 'text': 'No they were not....', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'RA489', 'comment_id': 517167220.0, 'datetime': '2019-08-01 07:52:07+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thecrudge', 'comment_id': 519261066.0, 'datetime': '2019-08-07 20:42:04+00:00', 'masked_author': 'username_3', 'text': '/triage support', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Issue with k8s.io/docs/tasks/tools/install-minikube/
username_0: **This is a Bug Report**

<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->
<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. --> minikube does not get created with minikube start --vm-driver=none
My setup is parrot os --> virtualbox --> centos 7 ---> minikubu installation done.

Please note:- normal setup done on parrot os did workfine as i had the 
egrep --color 'vmx|svm' /proc/cpuinfo output, which i did not get out of vm running centos

<!--Required Information-->
**Problem:**
[root@centos-train ~]# minikube start --vm-driver=none
* minikube v1.2.0 on linux (amd64)
* Creating none VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...
* Configuring environment for Kubernetes v1.15.0 on Docker 1.13.1
* Downloading kubeadm v1.15.0
* Downloading kubelet v1.15.0
* Pulling images ...
* Launching Kubernetes ... 

X Error starting cluster: cmd failed: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap

: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap
 output: [init] Using Kubernetes version: v1.15.0
[preflight] Running pre-flight checks
	[WARNING Firewalld]: firewalld is active, please ensure ports [8443 10250] are open or your cluster may not function correctly
	[WARNING Swap]: running with swap on is not supported. Please disable swap
	[WARNING FileExisting-socat]: socat not found in system path
	[WARNING Hostname]: hostname ""minikube"" could not be reached
	[WARNING Hostname]: hostname ""minikube"": lookup minikube on 8.8.8.8:53: no such host
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
error execution phase preflight: [preflight] Some fatal errors occurred:
	[ERROR NumCPU]: the number of available CPUs 1 is less than the required 2
[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`
: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap
.: exit status 1

* Sorry that minikube crashed. If this was unexpected, we would love to hear from you:
  - https://github.com/kubernetes/minikube/issues/new

**Proposed Solution:**
Please check if we can add any steps like any ports that need to be enabled or swapoff -a to be performed or the ports to be opened  like 8443 10250 or any other steps that can stop the errors that are pasted above

**Page to Update:**
https://kubernetes.io/...
https://kubernetes.io/docs/tasks/tools/install-minikube/
<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->
<issue_comment>username_1: The error message says you need more VCPUs.
<issue_comment>username_0: *******************I wanted to show you this error*****************

As per the error shown is there anything that can be included in the article like turning off firewall 
or all the port that needs to be allowed 

[root@centos ~]# minikube start --vm-driver=none
* minikube v1.2.0 on linux (amd64)
* Creating none VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...
* Configuring environment for Kubernetes v1.15.0 on Docker 1.13.1
* Downloading kubeadm v1.15.0
* Downloading kubelet v1.15.0
* Pulling images ...
* Launching Kubernetes ...

X Error starting cluster: cmd failed: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap

: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap
 output: [init] Using Kubernetes version: v1.15.0
[preflight] Running pre-flight checks
        [WARNING Firewalld]: firewalld is active, please ensure ports [8443 10250] are open or your cluster may not function correctly
        [WARNING Hostname]: hostname ""minikube"" could not be reached
        [WARNING Hostname]: hostname ""minikube"": lookup minikube on 8.8.8.8:53: no such host
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[kubelet-start] Writing kubelet environment file with flags to file ""/var/lib/kubelet/kubeadm-flags.env""
[kubelet-start] Writing kubelet configuration to file ""/var/lib/kubelet/config.yaml""
[kubelet-start] Activating the kubelet service
[certs] Using certificateDir folder ""/var/lib/minikube/certs/""
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk
[certs] Generating ""apiserver-kubelet-client"" certificate and key
[certs] Generating ""front-proxy-ca"" certificate and key
[certs] Generating ""front-proxy-client"" certificate and key
[certs] Generating ""etcd/ca"" certificate and key
[certs] Generating ""etcd/server"" certificate and key
[certs] etcd/server serving cert is signed for DNS names [minikube localhost] and IPs [192.168.1.221 127.0.0.1 ::1]
[certs] Generating ""etcd/healthcheck-client"" certificate and key
[certs] Generating ""apiserver-etcd-client"" certificate and key
[certs] Generating ""etcd/peer"" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [minikube localhost] and IPs [192.168.1.221 127.0.0.1 ::1]
[certs] Generating ""sa"" key and public key
[kubeconfig] Using kubeconfig folder ""/etc/kubernetes""
[kubeconfig] Writing ""admin.conf"" kubeconfig file
[kubeconfig] Writing ""kubelet.conf"" kubeconfig file
[kubeconfig] Writing ""controller-manager.conf"" kubeconfig file
[kubeconfig] Writing ""scheduler.conf"" kubeconfig file
[control-plane] Using manifest folder ""/etc/kubernetes/manifests""
[control-plane] Creating static Pod manifest for ""kube-apiserver""
[control-plane] Creating static Pod manifest for ""kube-controller-manager""
[control-plane] Creating static Pod manifest for ""kube-scheduler""
[etcd] Creating static Pod manifest for local etcd in ""/etc/kubernetes/manifests""
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory ""/etc/kubernetes/manifests"". This can take up to 4m0s
[kubelet-check] Initial timeout of 40s passed.
[kubelet-check] It seems like the kubelet isn't running or healthy.
[kubelet-check] The HTTP call equal to 'curl -sSL http://localhost:10248/healthz' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.
[kubelet-check] It seems like the kubelet isn't running or healthy.
[kubelet-check] The HTTP call equal to 'curl -sSL http://localhost:10248/healthz' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.
[kubelet-check] It seems like the kubelet isn't running or healthy.
[kubelet-check] The HTTP call equal to 'curl -sSL http://localhost:10248/healthz' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.
[kubelet-check] It seems like the kubelet isn't running or healthy.
[kubelet-check] The HTTP call equal to 'curl -sSL http://localhost:10248/healthz' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.
[kubelet-check] It seems like the kubelet isn't running or healthy.
[kubelet-check] The HTTP call equal to 'curl -sSL http://localhost:10248/healthz' failed with error: Get http://localhost:10248/healthz: dial tcp [::1]:10248: connect: connection refused.

Unfortunately, an error has occurred:
        timed out waiting for the condition

This error is likely caused by:
        - The kubelet is not running
        - The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)

If you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:
        - 'systemctl status kubelet'
        - 'journalctl -xeu kubelet'

Additionally, a control plane component may have crashed or exited when started by the container runtime.
To troubleshoot, list all containers using your preferred container runtimes CLI, e.g. docker.
Here is one example how you may list all Kubernetes containers running in docker:
        - 'docker ps -a | grep kube | grep -v pause'
        Once you have found the failing container, you can inspect its logs with:
        - 'docker logs CONTAINERID'
error execution phase wait-control-plane: couldn't initialize a Kubernetes cluster
: running command: sudo /usr/bin/kubeadm init --config /var/lib/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--data-minikube,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap
.: exit status 1

* Sorry that minikube crashed. If this was unexpected, we would love to hear from you:
  - https://github.com/kubernetes/minikube/issues/new
<issue_comment>username_2: @username_0 Did you completely nuked the previous installation?
<issue_comment>username_2: /assign @username_2
<issue_comment>username_0: @username_2 Yes I did
<issue_comment>username_2: @username_0 Thanks! Also can you please confirm if these ports 8443 10250 opened?
<issue_comment>username_0: No they were not....
<issue_comment>username_3: /triage support"
exercism/website-copy,460527996,1117,"{'number': 1117.0, 'repo': 'website-copy', 'user_login': 'exercism'}","[{'action': 'opened', 'author': 'iHiD', 'comment_id': None, 'datetime': '2019-06-25T16:38:36Z', 'masked_author': 'username_0', 'text': ""Would appreciate any comments on this.\r\n\r\n~I'm playing with the idea of using unicode character as our internal delimiter.~\r\n\r\nI've now been overruled by @NobbZ and instead switched to this being ERB."", 'title': 'Add Ruby Two-Fer approval comments', 'type': 'issue'}
 {'action': 'created', 'author': 'SleeplessByte', 'comment_id': 505632098.0, 'datetime': '2019-06-25 21:36:39+00:00', 'masked_author': 'username_1', 'text': ""FWIW, I don't think the comment in https://github.com/exercism/website-copy/pull/1117/files#diff-af721afcdadb1d218ddcf55438f846d4 is factually _true_. Both the mentor notes and almost every single code-base I've worked with preferred `format('...', named: 'value', other: 'value')` over interpolation."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'iHiD', 'comment_id': 505634295.0, 'datetime': '2019-06-25 21:44:03+00:00', 'masked_author': 'username_0', 'text': ""@username_1 I've honestly never seen `sprintf` used in the wild in Ruby. And I can't really remember seeing `format` or `%` often either. Whereas interpolation is everywhere. Even 95% of the solutions approvable solutions that people submit use interpolation, which makes me think that's what they're finding when they Google.\r\n\r\nIf you can show me some data pointing the other way, I'm happy to be proven wrong."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SleeplessByte', 'comment_id': 505651248.0, 'datetime': '2019-06-25 22:50:17+00:00', 'masked_author': 'username_1', 'text': ""You can also barely find people using `.codepoints` and will find them use `.bytes` all the time. Just because it's plentiful, doesn't mean it's idiomatic or _right_, in this case.\r\n\r\n1. The fact that rubocop [has this as a setting](https://github.com/rubocop-hq/rubocop/blob/ca01b3e18816b5a326d18ef3904128acc2891c52/spec/rubocop/cop/style/format_string_spec.rb#L191), and its default is to prefer [`format` and `sprintf` over `%`](https://github.com/rubocop-hq/ruby-style-guide#sprintf)\r\n1. [batsov](https://batsov.com/articles/2013/06/27/the-elements-of-style-in-ruby-number-2-favor-sprintf-format-over-string-number-percent/) also added [`String#format`](https://www.rubydoc.info/gems/powerpack/String#format-instance_method) to his [powerpack]((https://github.com/bbatsov/powerpack).\r\n1. [This](https://idiosyncratic-ruby.com/49-what-the-format.html) guide on idiosyncratic Ruby.\r\n1. [This styleguide](https://relishapp.com/womply/ruby-style-guide/docs/strings) by cucumber on their relish project which favours interpolation and `format`.\r\n1. The postgresql adapter in rails [uses](https://github.com/rails/rails/blob/4dcb46182a4aaa57f44f3eb722c1db54fa0ff843/activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb#L53) [format](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/activerecord/lib/active_record/connection_adapters/postgresql/oid/date.rb#L13) a few [times](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/activerecord/lib/active_record/connection_adapters/postgresql/oid/date_time.rb#L13), granted for actual formatting (adding leading zero's etc). The rest of rails uses `sprintf` [for](https://github.com/rails/rails/blob/98a57aa5f610bc66af31af409c72173cdeeb3c9e/activesupport/lib/active_support/duration/iso8601_serializer.rb#L28) [messages](https://github.com/rails/rails/blob/db4b77aca147ec3c7376d803fc6ccb14c9195352/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L60) [here](https://github.com/rails/rails/blob/db4b77aca147ec3c7376d803fc6ccb14c9195352/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L100) and [there](https://github.com/rails/rails/blob/db4b77aca147ec3c7376d803fc6ccb14c9195352/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L102) but also [again](https://github.com/rails/rails/blob/aeba121a83965d242ed6d7fd46e9c166079a3230/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L126) for [number](https://github.com/rails/rails/blob/98a57aa5f610bc66af31af409c72173cdeeb3c9e/actionview/lib/action_view/helpers/date_helper.rb#L1003) [formatting](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/tools/line_statistics#L30).\r\n1. The five people in [this recent feature request](https://bugs.ruby-lang.org/issues/15927) definitely use it.\r\n1. [This book](https://books.google.nl/books?id=jcUbTcr5XWwC&pg=PA48&lpg=PA48&source=bl&ots=fKGhw92AhA&sig=ACfU3U2fYS57JiGDbR-QfLmUXT2eNSNSkA&hl=en&sa=X&ved=2ahUKEwiks5y21IXjAhXN-6QKHTxBAr44ChDoATAFegQICRAB#v=onepage&q=ruby%20format%20vs%20interpolation&f=false) talks about it in detail\r\n1. It is used in [these](https://github.com/exercism/ruby/blob/5f131e59358227e313f15ce2c2313a0526409380/exercises/clock/.meta/solutions/clock.rb#L24) [examples](https://github.com/exercism/ruby/blob/5f131e59358227e313f15ce2c2313a0526409380/exercises/phone-number/.meta/solutions/phone_number.rb#L14) in `exercism/ruby`.\r\n1. It's very hard to search on GH for `%` syntax, but [here](https://github.com/parasquid/upcloudify/blob/master/lib/upcloudify.rb#L26) is an example\r\n1. Finally, the `ruby/ruby` mri implementation codebase uses it in the following libs: [`pp`](https://github.com/ruby/ruby/blob/fc9f19abe853bcef2b348e2d6d7c555b677ab28d/lib/pp.rb#L365), [`rdoc/generator`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/rdoc/generator/markup.rb#L52) [`libexec/racc`](https://github.com/ruby/ruby/blob/b93508b32c8f11bd468a885745338eab259bd2cd/libexec/racc#L102)  ([again](https://github.com/ruby/ruby/blob/b93508b32c8f11bd468a885745338eab259bd2cd/lib/racc/state.rb#L145)) [`drb/unix`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/drb/unix.rb#L78) [`webrick`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/webrick/httpserver.rb#L156) [`e2mmap`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/e2mmap.rb#L150) [`irb`](https://github.com/ruby/ruby/blob/70e87d9660af24fb93cac1312b6e1990602c1396/lib/irb/workspace.rb#L153) [`set`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/set.rb#L636) [`sync`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/sync.rb#L53) [`time`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/time.rb#L651) [`ipaddr`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/ipaddr.rb#L226) [`fileutils`](https://github.com/ruby/ruby/blob/746812ee9645ff821a039136f9576b7c8f18b920/lib/fileutils.rb#L1042) [`help_command`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/rubygems/commands/help_command.rb#L344) [`uri`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/uri/rfc2396_parser.rb#L309), the following tools: [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/attribute.rb#L41) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/trace_instructions.rb#L27) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/bare_instructions.rb#L52) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/c_expr.rb#L39) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/operands_unifications.rb#L90) and these samples: [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/list2.rb#L9) [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/list3.rb#L11) [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/list.rb#L64) [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/openssl/c_rehash.rb#L160). In these cases, sometimes it's actual formatting, and sometimes it's using unnamed parameters and sometimes it's using named paramters to build a string.\r\n\r\nObvi, I won't give you the examples on which I've worked, because I'm biased, but this should show that it ís actually used in the wild. There are plenty of reasons you _don't_ want string interpolation, because you don't want to destructure a hash you already have, because you want to format the variable, or because you _want to store the format string in a file_/_use templating without a lib_/_want translatable strings_. It's _far_ easier to move from `sprintf` / `%` / `format` to something like `I18n`, then from `#{}`."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kotp', 'comment_id': 505856236.0, 'datetime': '2019-06-26 12:37:11+00:00', 'masked_author': 'username_2', 'text': 'Rubocop setting for point 1 is one of the first things I change in preference of `String#%`.\r\n\r\nThe blog incompletely, and perhaps incorrectly, states the first reason to prefer `sprintf` over `String#%` with ""% takes either a single element or an array of elements as its sole argument"".  It takes a single argument.  I think that part is important.  The argument can be an array or hash as well as the author refers to as a ""single element"".\r\n\r\nAnd I used to avoid using it, when it first came out... but it has grown on me.  The argument about the `a % b` being unclear without context can be said for other ""operator"" methods as well... So I don\'t think the argument against it is that strong.\r\n\r\nMy main reason for using `Kernel#sprintf` and it\'s alias `/format` or using `String#%` vs interpolation is the lack of formatting for interpolation.  The formatting codes make it clear in the format and friends what is intended to be used as arguments (or at least what the formatting is expected to be) when reading the code.\r\n\r\nBut another difficulty is when you use string interpolation and try to format... then we end up often seeing a mix of both being used, which makes it look and read even worse.\r\n\r\nI agree, it may be common to use interpolation rather than substitution... but that doesn\'t make it right.  Between using `sprintf`, `format` or `%` I leave it to the student to form their own opinion, while exposing the ones they did not use (and mentioning the aliasing that is going on, as well as the full documentation being available for `String#%` in the `Kernel` documentation.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'iHiD', 'comment_id': 506040254.0, 'datetime': '2019-06-26 20:53:04+00:00', 'masked_author': 'username_0', 'text': 'Thank you all. I\'ve changed the wording slightly to try and be less opinionated. I\'m going to merge this because I need something on master to develop against to get this feature live. \r\n\r\nHowever, I would love PRs to improve the language, including links to articles on Ruby strings etc. With reference to the debate on the ""normality"" of interpolation, I\'m not precious on pushing people towards interpolation, but I would like to make people aware of its existence.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add Ruby Two-Fer approval comments
username_0: Would appreciate any comments on this.

~I'm playing with the idea of using unicode character as our internal delimiter.~

I've now been overruled by @NobbZ and instead switched to this being ERB.
<issue_comment>username_1: FWIW, I don't think the comment in https://github.com/exercism/website-copy/pull/1117/files#diff-af721afcdadb1d218ddcf55438f846d4 is factually _true_. Both the mentor notes and almost every single code-base I've worked with preferred `format('...', named: 'value', other: 'value')` over interpolation.
<issue_comment>username_0: @username_1 I've honestly never seen `sprintf` used in the wild in Ruby. And I can't really remember seeing `format` or `%` often either. Whereas interpolation is everywhere. Even 95% of the solutions approvable solutions that people submit use interpolation, which makes me think that's what they're finding when they Google.

If you can show me some data pointing the other way, I'm happy to be proven wrong.
<issue_comment>username_1: You can also barely find people using `.codepoints` and will find them use `.bytes` all the time. Just because it's plentiful, doesn't mean it's idiomatic or _right_, in this case.

1. The fact that rubocop [has this as a setting](https://github.com/rubocop-hq/rubocop/blob/ca01b3e18816b5a326d18ef3904128acc2891c52/spec/rubocop/cop/style/format_string_spec.rb#L191), and its default is to prefer [`format` and `sprintf` over `%`](https://github.com/rubocop-hq/ruby-style-guide#sprintf)
1. [batsov](https://batsov.com/articles/2013/06/27/the-elements-of-style-in-ruby-number-2-favor-sprintf-format-over-string-number-percent/) also added [`String#format`](https://www.rubydoc.info/gems/powerpack/String#format-instance_method) to his [powerpack]((https://github.com/bbatsov/powerpack).
1. [This](https://idiosyncratic-ruby.com/49-what-the-format.html) guide on idiosyncratic Ruby.
1. [This styleguide](https://relishapp.com/womply/ruby-style-guide/docs/strings) by cucumber on their relish project which favours interpolation and `format`.
1. The postgresql adapter in rails [uses](https://github.com/rails/rails/blob/4dcb46182a4aaa57f44f3eb722c1db54fa0ff843/activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb#L53) [format](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/activerecord/lib/active_record/connection_adapters/postgresql/oid/date.rb#L13) a few [times](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/activerecord/lib/active_record/connection_adapters/postgresql/oid/date_time.rb#L13), granted for actual formatting (adding leading zero's etc). The rest of rails uses `sprintf` [for](https://github.com/rails/rails/blob/98a57aa5f610bc66af31af409c72173cdeeb3c9e/activesupport/lib/active_support/duration/iso8601_serializer.rb#L28) [messages](https://github.com/rails/rails/blob/db4b77aca147ec3c7376d803fc6ccb14c9195352/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L60) [here](https://github.com/rails/rails/blob/db4b77aca147ec3c7376d803fc6ccb14c9195352/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L100) and [there](https://github.com/rails/rails/blob/db4b77aca147ec3c7376d803fc6ccb14c9195352/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L102) but also [again](https://github.com/rails/rails/blob/aeba121a83965d242ed6d7fd46e9c166079a3230/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L126) for [number](https://github.com/rails/rails/blob/98a57aa5f610bc66af31af409c72173cdeeb3c9e/actionview/lib/action_view/helpers/date_helper.rb#L1003) [formatting](https://github.com/rails/rails/blob/b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c/tools/line_statistics#L30).
1. The five people in [this recent feature request](https://bugs.ruby-lang.org/issues/15927) definitely use it.
1. [This book](https://books.google.nl/books?id=jcUbTcr5XWwC&pg=PA48&lpg=PA48&source=bl&ots=fKGhw92AhA&sig=ACfU3U2fYS57JiGDbR-QfLmUXT2eNSNSkA&hl=en&sa=X&ved=2ahUKEwiks5y21IXjAhXN-6QKHTxBAr44ChDoATAFegQICRAB#v=onepage&q=ruby%20format%20vs%20interpolation&f=false) talks about it in detail
1. It is used in [these](https://github.com/exercism/ruby/blob/5f131e59358227e313f15ce2c2313a0526409380/exercises/clock/.meta/solutions/clock.rb#L24) [examples](https://github.com/exercism/ruby/blob/5f131e59358227e313f15ce2c2313a0526409380/exercises/phone-number/.meta/solutions/phone_number.rb#L14) in `exercism/ruby`.
1. It's very hard to search on GH for `%` syntax, but [here](https://github.com/parasquid/upcloudify/blob/master/lib/upcloudify.rb#L26) is an example
1. Finally, the `ruby/ruby` mri implementation codebase uses it in the following libs: [`pp`](https://github.com/ruby/ruby/blob/fc9f19abe853bcef2b348e2d6d7c555b677ab28d/lib/pp.rb#L365), [`rdoc/generator`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/rdoc/generator/markup.rb#L52) [`libexec/racc`](https://github.com/ruby/ruby/blob/b93508b32c8f11bd468a885745338eab259bd2cd/libexec/racc#L102)  ([again](https://github.com/ruby/ruby/blob/b93508b32c8f11bd468a885745338eab259bd2cd/lib/racc/state.rb#L145)) [`drb/unix`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/drb/unix.rb#L78) [`webrick`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/webrick/httpserver.rb#L156) [`e2mmap`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/e2mmap.rb#L150) [`irb`](https://github.com/ruby/ruby/blob/70e87d9660af24fb93cac1312b6e1990602c1396/lib/irb/workspace.rb#L153) [`set`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/set.rb#L636) [`sync`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/sync.rb#L53) [`time`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/time.rb#L651) [`ipaddr`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/ipaddr.rb#L226) [`fileutils`](https://github.com/ruby/ruby/blob/746812ee9645ff821a039136f9576b7c8f18b920/lib/fileutils.rb#L1042) [`help_command`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/rubygems/commands/help_command.rb#L344) [`uri`](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/uri/rfc2396_parser.rb#L309), the following tools: [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/attribute.rb#L41) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/trace_instructions.rb#L27) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/bare_instructions.rb#L52) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/c_expr.rb#L39) [🔧](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/tool/ruby_vm/models/operands_unifications.rb#L90) and these samples: [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/list2.rb#L9) [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/list3.rb#L11) [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/list.rb#L64) [🏷](https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/sample/openssl/c_rehash.rb#L160). In these cases, sometimes it's actual formatting, and sometimes it's using unnamed parameters and sometimes it's using named paramters to build a string.

Obvi, I won't give you the examples on which I've worked, because I'm biased, but this should show that it ís actually used in the wild. There are plenty of reasons you _don't_ want string interpolation, because you don't want to destructure a hash you already have, because you want to format the variable, or because you _want to store the format string in a file_/_use templating without a lib_/_want translatable strings_. It's _far_ easier to move from `sprintf` / `%` / `format` to something like `I18n`, then from `#{}`.
<issue_comment>username_2: Rubocop setting for point 1 is one of the first things I change in preference of `String#%`.

The blog incompletely, and perhaps incorrectly, states the first reason to prefer `sprintf` over `String#%` with ""% takes either a single element or an array of elements as its sole argument"".  It takes a single argument.  I think that part is important.  The argument can be an array or hash as well as the author refers to as a ""single element"".

And I used to avoid using it, when it first came out... but it has grown on me.  The argument about the `a % b` being unclear without context can be said for other ""operator"" methods as well... So I don't think the argument against it is that strong.

My main reason for using `Kernel#sprintf` and it's alias `/format` or using `String#%` vs interpolation is the lack of formatting for interpolation.  The formatting codes make it clear in the format and friends what is intended to be used as arguments (or at least what the formatting is expected to be) when reading the code.

But another difficulty is when you use string interpolation and try to format... then we end up often seeing a mix of both being used, which makes it look and read even worse.

I agree, it may be common to use interpolation rather than substitution... but that doesn't make it right.  Between using `sprintf`, `format` or `%` I leave it to the student to form their own opinion, while exposing the ones they did not use (and mentioning the aliasing that is going on, as well as the full documentation being available for `String#%` in the `Kernel` documentation.
<issue_comment>username_0: Thank you all. I've changed the wording slightly to try and be less opinionated. I'm going to merge this because I need something on master to develop against to get this feature live. 

However, I would love PRs to improve the language, including links to articles on Ruby strings etc. With reference to the debate on the ""normality"" of interpolation, I'm not precious on pushing people towards interpolation, but I would like to make people aware of its existence."
nodejs/nodejs.org,165832806,826,,"[{'action': 'opened', 'author': 'gtewallace', 'comment_id': None, 'datetime': '2016-07-15 16:57:06+00:00', 'masked_author': 'username_0', 'text': '<!--\r\nThanks for wanting to report an issue you\'ve found on the nodejs.org website.\r\n\r\nFor issues regarding the Node.js API docs, please head over to:\r\nhttps://github.com/nodejs/node/issues/ (prefix your issue name with ""doc"")\r\n\r\nFor general questions about Node.js:\r\nhttps://github.com/nodejs/help/issues/\r\n\r\nPlease fill in the template below by replacing the HTML comments with an\r\nappropriate answer. If unsure about something, just do as best as you\'re able.\r\nIf you are reporting a visual glitch, it will be much easier for us to fix it\r\nwhen you attach a screenshot as well.\r\n\r\nThank you!\r\n-->\r\n\r\n* **URL**:\r\n* **Browser version**:\r\n* **Operating system**:\r\n\r\n<!-- Enter your issue details below this comment. -->\r\nWe have a new Node.js Foundation Case Study that we\'d like added below the Uber Case Study on https://nodejs.org/en/foundation/case-studies/\r\n\r\nTitle: Node.js Helps Fusion Marketing Build Memorable Digital Experiences\r\n\r\nDescription: Fusion Marketing is a St. Louis, MO-based event marketing firm that specializes in creating custom interactive experiences. Node.js Everywhere has powered Fusion\'s digital expansion from developing app APIs to a 360 degree physical interactive group. \r\nRead the full case study: (please insert link to PDF in ""full case study"")\r\n \r\n[Node_CaseStudy_Fusion_Final.pdf](https://github.com/nodejs/nodejs.org/files/366472/Node_CaseStudy_Fusion_Final.pdf)', 'title': 'Add New Case Study to Resources Page', 'type': 'issue'}
 {'action': 'closed', 'author': 'lpinca', 'comment_id': None, 'datetime': '2016-07-16 09:30:50+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Add New Case Study to Resources Page
username_0: <!--
Thanks for wanting to report an issue you've found on the nodejs.org website.

For issues regarding the Node.js API docs, please head over to:
https://github.com/nodejs/node/issues/ (prefix your issue name with ""doc"")

For general questions about Node.js:
https://github.com/nodejs/help/issues/

Please fill in the template below by replacing the HTML comments with an
appropriate answer. If unsure about something, just do as best as you're able.
If you are reporting a visual glitch, it will be much easier for us to fix it
when you attach a screenshot as well.

Thank you!
-->

* **URL**:
* **Browser version**:
* **Operating system**:

<!-- Enter your issue details below this comment. -->
We have a new Node.js Foundation Case Study that we'd like added below the Uber Case Study on https://nodejs.org/en/foundation/case-studies/

Title: Node.js Helps Fusion Marketing Build Memorable Digital Experiences

Description: Fusion Marketing is a St. Louis, MO-based event marketing firm that specializes in creating custom interactive experiences. Node.js Everywhere has powered Fusion's digital expansion from developing app APIs to a 360 degree physical interactive group. 
Read the full case study: (please insert link to PDF in ""full case study"")
 
[Node_CaseStudy_Fusion_Final.pdf](https://github.com/nodejs/nodejs.org/files/366472/Node_CaseStudy_Fusion_Final.pdf)<issue_closed>"
XXIIVV/webring,827399711,545,"{'number': 545.0, 'repo': 'webring', 'user_login': 'XXIIVV'}","[{'action': 'opened', 'author': 'ChengduLittleA', 'comment_id': None, 'datetime': '2021-03-10T09:13:41Z', 'masked_author': 'username_0', 'text': ""I have linked Chinese font needed for the site, so the content should be shown properly. May take few more to load for the first time.\r\n\r\nhttp://www.wellobserve.com/\r\n\r\nI'd like to know if it's preferable if I use js to determine browser language and provide a google translate link on my pages?\r\n\r\nThanks!"", 'title': 'Add WellObserve (Chinese font fixed)', 'type': 'issue'}
 {'action': 'created', 'author': 'ChengduLittleA', 'comment_id': 797863562.0, 'datetime': '2021-03-13 04:19:19+00:00', 'masked_author': 'username_0', 'text': 'The page has been updated for translation options and a better gallery page', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'neauoire', 'comment_id': 798637512.0, 'datetime': '2021-03-13 17:04:03+00:00', 'masked_author': 'username_1', 'text': ""Ah the gallery icon helps a lot :) I still can't see the font tho, where is the translation option?\r\n\r\n![image](https://user-images.githubusercontent.com/1455726/111037900-0632c880-83db-11eb-8e0c-78ffce8953b1.png)\r\n\r\nAlso, would you like to add yourself a 88x31 button?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'neauoire', 'comment_id': 798638802.0, 'datetime': '2021-03-13 17:05:07+00:00', 'masked_author': 'username_1', 'text': ""I see a `transbtn` element in the <li> but it's empty inside."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ChengduLittleA', 'comment_id': 799899129.0, 'datetime': '2021-03-16 02:39:48+00:00', 'masked_author': 'username_0', 'text': 'Thanks for the feedback. It seems the font might be too big to load (an avera chinese font file is like 20MB). I\'ll incorporate a font reduction method to ensure it loads relatively quickly. What system and browser are you using? I\'m not sure why the page looks like that, maybe on Ubuntu I have multiple language packs already installed. Is it possible you could pull out the data traffic page from F12 in your browser to see if anything is wrong with that font data? Thanks!\r\n\r\nI used js to determine client browser\'s language, since js should not be required to view the content, I\'ll change it to a static ""translate to English"" button and if js is running, I\'ll replace with desired language. It redirects to Google translate though, so I imagine there will be js involved anyway.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'neauoire', 'comment_id': 800378703.0, 'datetime': '2021-03-16 15:47:23+00:00', 'masked_author': 'username_1', 'text': ""I mostly use netsurf, but since your website didn't look too good on it, I installed firefox. The pictures from above are from firefox, I don't have chinese fonts installed, I have to look into that.\r\n\r\nIt's possible that my internet connection blocks the font, we use a satellite phone that's pretty restrictive in what it can download.\r\n\r\nOn netsurf, your site looks like:\r\n\r\n![2021-03-16-084554_1366x768_scrot](https://user-images.githubusercontent.com/1455726/111338432-2ad5ad00-8634-11eb-98c7-f94da4b5bb07.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ChengduLittleA', 'comment_id': 802380682.0, 'datetime': '2021-03-18 23:23:24+00:00', 'masked_author': 'username_0', 'text': 'Oh if you are using satellite phone, please don\'t bother wait for the font to finish loading... it\'s 23 MB in size and browser sometimes doesn\'t cache all that. Sorry for the trouble, Chinese has seen trouble since the dawn of computer age and the font indeed doesn\'t really work that well even for the sites we browse day to day🤔.\r\n\r\nOn the other note though... it might be a good practice to install ""some"" basic language packs so right now I\'m able to view Russian or Japanese stuff ""reasonably okay"", and this saves the overall transmission for the internet. It\'s probably not a very good idea especially for low power use cases to handle large resources, but since I believe you don\'t really view Chinese content that much, it doesn\'t really matter to pass on that XD. Id suggest installing some language support for the OS when you guys have Wi-Fi connection :D but for the moment I guess I\'ll clean up the gallery so that it doesnt need js to open up the whole image.🤗', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add WellObserve (Chinese font fixed)
username_0: I have linked Chinese font needed for the site, so the content should be shown properly. May take few more to load for the first time.

http://www.wellobserve.com/

I'd like to know if it's preferable if I use js to determine browser language and provide a google translate link on my pages?

Thanks!
<issue_comment>username_0: The page has been updated for translation options and a better gallery page
<issue_comment>username_1: Ah the gallery icon helps a lot :) I still can't see the font tho, where is the translation option?

![image](https://user-images.githubusercontent.com/1455726/111037900-0632c880-83db-11eb-8e0c-78ffce8953b1.png)

Also, would you like to add yourself a 88x31 button?
<issue_comment>username_1: I see a `transbtn` element in the <li> but it's empty inside.
<issue_comment>username_0: Thanks for the feedback. It seems the font might be too big to load (an avera chinese font file is like 20MB). I'll incorporate a font reduction method to ensure it loads relatively quickly. What system and browser are you using? I'm not sure why the page looks like that, maybe on Ubuntu I have multiple language packs already installed. Is it possible you could pull out the data traffic page from F12 in your browser to see if anything is wrong with that font data? Thanks!

I used js to determine client browser's language, since js should not be required to view the content, I'll change it to a static ""translate to English"" button and if js is running, I'll replace with desired language. It redirects to Google translate though, so I imagine there will be js involved anyway.
<issue_comment>username_1: I mostly use netsurf, but since your website didn't look too good on it, I installed firefox. The pictures from above are from firefox, I don't have chinese fonts installed, I have to look into that.

It's possible that my internet connection blocks the font, we use a satellite phone that's pretty restrictive in what it can download.

On netsurf, your site looks like:

![2021-03-16-084554_1366x768_scrot](https://user-images.githubusercontent.com/1455726/111338432-2ad5ad00-8634-11eb-98c7-f94da4b5bb07.png)
<issue_comment>username_0: Oh if you are using satellite phone, please don't bother wait for the font to finish loading... it's 23 MB in size and browser sometimes doesn't cache all that. Sorry for the trouble, Chinese has seen trouble since the dawn of computer age and the font indeed doesn't really work that well even for the sites we browse day to day🤔.

On the other note though... it might be a good practice to install ""some"" basic language packs so right now I'm able to view Russian or Japanese stuff ""reasonably okay"", and this saves the overall transmission for the internet. It's probably not a very good idea especially for low power use cases to handle large resources, but since I believe you don't really view Chinese content that much, it doesn't really matter to pass on that XD. Id suggest installing some language support for the OS when you guys have Wi-Fi connection :D but for the moment I guess I'll clean up the gallery so that it doesnt need js to open up the whole image.🤗"
newrelic/developer-website,1045216694,1855,,"[{'action': 'opened', 'author': 'zstix', 'comment_id': None, 'datetime': '2021-11-04 21:19:08+00:00', 'masked_author': 'username_0', 'text': '## Description\r\nOnce we have established a pattern for querying NerdGraph for quickstarts on the landing page (#1853), we should use the API to power the functionality for searching, sorting, and filtering the results. This would _replace_ our client-side functionality (which has gotten to be pretty complicated).\r\n\r\n## Acceptance Criteria\r\n* [ ] https://github.com/newrelic/developer-website/issues/1821 (proof-of-concept & Gatsby upgrade)\r\n* [ ] https://github.com/newrelic/developer-website/issues/1852 (feature branch & Gatsby Cloud)\r\n* [ ] https://github.com/newrelic/developer-website/issues/1853 (landing page via SSR)\r\n* [ ] Update search to use use SSR + a NerdGraph API call\r\n* [ ] Update sorting to use SSR + a NerdGraph API call\r\n* [ ] Update filtering to use SSR + a NerdGraph API call\r\n* [ ] Ensure that searching, sorting, and filtering still updates the URL as it did previously\r\n* [ ] Remove all unused client-side search, sort, and filter code', 'title': '[Public Catalog] Update search, sort, and filtering to use SSR', 'type': 'issue'}
 {'action': 'created', 'author': 'zstix', 'comment_id': 962124439.0, 'datetime': '2021-11-05 18:32:37+00:00', 'masked_author': 'username_0', 'text': 'You can explore our GraphQL API here: https://staging-api.newrelic.com/graphiql', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jpvajda', 'comment_id': 1004288937.0, 'datetime': '2022-01-03 18:55:22+00:00', 'masked_author': 'username_1', 'text': 'blocked by Gatsby Cloud having private variable functionality. ETA end of Jan.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [Public Catalog] Update search, sort, and filtering to use SSR
username_0: ## Description
Once we have established a pattern for querying NerdGraph for quickstarts on the landing page (#1853), we should use the API to power the functionality for searching, sorting, and filtering the results. This would _replace_ our client-side functionality (which has gotten to be pretty complicated).

## Acceptance Criteria
* [ ] https://github.com/newrelic/developer-website/issues/1821 (proof-of-concept & Gatsby upgrade)
* [ ] https://github.com/newrelic/developer-website/issues/1852 (feature branch & Gatsby Cloud)
* [ ] https://github.com/newrelic/developer-website/issues/1853 (landing page via SSR)
* [ ] Update search to use use SSR + a NerdGraph API call
* [ ] Update sorting to use SSR + a NerdGraph API call
* [ ] Update filtering to use SSR + a NerdGraph API call
* [ ] Ensure that searching, sorting, and filtering still updates the URL as it did previously
* [ ] Remove all unused client-side search, sort, and filter code
<issue_comment>username_0: You can explore our GraphQL API here: https://staging-api.newrelic.com/graphiql
<issue_comment>username_1: blocked by Gatsby Cloud having private variable functionality. ETA end of Jan."
AdoptOpenJDK/openjdk-website,324879487,255,,"[{'action': 'opened', 'author': 'sxa555', 'comment_id': None, 'datetime': '2018-05-21 11:16:53+00:00', 'masked_author': 'username_0', 'text': ""Title says it all - the API is currently unavailable.\r\n\r\nMay come back soon based on the CloudFare message at the top:\r\n\r\n`This page (https://api.adoptopenjdk.net/) is currently offline. However, because the site uses Cloudflare's Always Online™ technology you can continue to surf a snapshot of the site. We will keep checking in the background and, as soon as the site comes back, you will automatically be served the live version. Always Online™ is powered by Cloudflare | Hide this Alert`"", 'title': 'api.adoptopenjdk.net giving Error 502: Bad gateway', 'type': 'issue'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 390626477.0, 'datetime': '2018-05-21 11:18:32+00:00', 'masked_author': 'username_1', 'text': 'came back up by running `export PRODUCTION=true && /usr/local/bin/forever start /home/jenkins/openjdk-api/server.js`', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'gdams', 'comment_id': None, 'datetime': '2018-05-21 11:18:33+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'smlambert', 'comment_id': 390626666.0, 'datetime': '2018-05-21 11:19:37+00:00', 'masked_author': 'username_2', 'text': 'https://github.com/AdoptOpenJDK/openjdk-api/issues/51', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sxa555', 'comment_id': 390630711.0, 'datetime': '2018-05-21 11:41:15+00:00', 'masked_author': 'username_0', 'text': 'According to username_1 the forever process had disappeared - reason unclear.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: api.adoptopenjdk.net giving Error 502: Bad gateway
username_0: Title says it all - the API is currently unavailable.

May come back soon based on the CloudFare message at the top:

`This page (https://api.adoptopenjdk.net/) is currently offline. However, because the site uses Cloudflare's Always Online™ technology you can continue to surf a snapshot of the site. We will keep checking in the background and, as soon as the site comes back, you will automatically be served the live version. Always Online™ is powered by Cloudflare | Hide this Alert`
<issue_comment>username_1: came back up by running `export PRODUCTION=true && /usr/local/bin/forever start /home/jenkins/openjdk-api/server.js`<issue_closed>
<issue_comment>username_2: https://github.com/AdoptOpenJDK/openjdk-api/issues/51
<issue_comment>username_0: According to username_1 the forever process had disappeared - reason unclear."
