nodejs/nodejs.org,341368447,1739,"{'number': 1739.0, 'repo': 'nodejs.org', 'user_login': 'nodejs'}","[{'action': 'opened', 'author': 'belhassen07', 'comment_id': None, 'datetime': '2018-07-16T01:16:47Z', 'masked_author': 'username_0', 'text': 'DEV Community is a burgeoning source of guidance and discussion on software topics, especially web dev. This will be a useful link to point to the official place to discuss Node.js matters on the platform.\r\n\r\nA few additional links pertaining to dev.to\r\n\r\nTraffic stats: https://www.similarweb.com/website/dev.to\r\nTwitter: https://twitter.com/thepracticaldev\r\nNode.js tag (as included in PR): https://dev.to/t/node\r\n\r\nSome example Node.js posts:\r\nhttps://dev.to/hugo__df/how-to-make-beautiful-simple-cli-apps-with-node-c1b\r\nhttps://dev.to/oktadev/build-a-basic-crud-app-with-vuejs-and-node-4cl8\r\nhttps://dev.to/siwalik/mastering-full-stack-with-javascripts-superpowers-oin\r\nHappy coding :heart:', 'title': 'Add  Dev Community Node.js tag to the community section', 'type': 'issue'}
 {'action': 'created', 'author': 'fhemberger', 'comment_id': 405147680.0, 'datetime': '2018-07-16 04:39:45+00:00', 'masked_author': 'username_1', 'text': 'Hi, thanks for your PR. The ""Community Discussion"" section is more for ""official"" resources of the Node.js project, but adding dev.to under ""Learning"" (below SO) would be okay for me.\r\n\r\nAlso, please undo your changes in the README, this will be handled differently in the future (see PR #1740).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'belhassen07', 'comment_id': 405234789.0, 'datetime': '2018-07-16 12:42:56+00:00', 'masked_author': 'username_0', 'text': ""@username_1 I will undo my changes to the README.md, I'm just curious though, How can someone be a member of the Node.js foundation"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'milosjevtovic', 'comment_id': 405235290.0, 'datetime': '2018-07-16 12:44:44+00:00', 'masked_author': 'username_2', 'text': '@username_0 [This](https://foundation.nodejs.org/about/join) might help you.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fhemberger', 'comment_id': 405256368.0, 'datetime': '2018-07-16 13:58:23+00:00', 'masked_author': 'username_1', 'text': '@username_0 You will become a website contributor automatically (we add new members regularly). This has nothing to do with a Node.js Foundation membership. ;)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'belhassen07', 'comment_id': 405269483.0, 'datetime': '2018-07-16 14:38:29+00:00', 'masked_author': 'username_0', 'text': ""I've changed it to the learning section, I hope this can be merged."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fhemberger', 'comment_id': 405370137.0, 'datetime': '2018-07-16 20:24:39+00:00', 'masked_author': 'username_1', 'text': 'Landed in ddb96769183ca4f6d88a1967c5931067f3299090.\r\n\r\nSorry, I messed up this PR, but your credits stay intact with the above commit.\r\nThank you!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add  Dev Community Node.js tag to the community section
username_0: DEV Community is a burgeoning source of guidance and discussion on software topics, especially web dev. This will be a useful link to point to the official place to discuss Node.js matters on the platform.

A few additional links pertaining to dev.to

Traffic stats: https://www.similarweb.com/website/dev.to
Twitter: https://twitter.com/thepracticaldev
Node.js tag (as included in PR): https://dev.to/t/node

Some example Node.js posts:
https://dev.to/hugo__df/how-to-make-beautiful-simple-cli-apps-with-node-c1b
https://dev.to/oktadev/build-a-basic-crud-app-with-vuejs-and-node-4cl8
https://dev.to/siwalik/mastering-full-stack-with-javascripts-superpowers-oin
Happy coding :heart:
<issue_comment>username_1: Hi, thanks for your PR. The ""Community Discussion"" section is more for ""official"" resources of the Node.js project, but adding dev.to under ""Learning"" (below SO) would be okay for me.

Also, please undo your changes in the README, this will be handled differently in the future (see PR #1740).
<issue_comment>username_0: @username_1 I will undo my changes to the README.md, I'm just curious though, How can someone be a member of the Node.js foundation
<issue_comment>username_2: @username_0 [This](https://foundation.nodejs.org/about/join) might help you.
<issue_comment>username_1: @username_0 You will become a website contributor automatically (we add new members regularly). This has nothing to do with a Node.js Foundation membership. ;)
<issue_comment>username_0: I've changed it to the learning section, I hope this can be merged.
<issue_comment>username_1: Landed in ddb96769183ca4f6d88a1967c5931067f3299090.

Sorry, I messed up this PR, but your credits stay intact with the above commit.
Thank you!"
flutter/website,395493246,2156,,"[{'action': 'opened', 'author': 'zoechi', 'comment_id': None, 'datetime': '2019-01-03 08:41:35+00:00', 'masked_author': 'username_0', 'text': ""@vanshu commented on [Fri Dec 28 2018](https://github.com/flutter/flutter/issues/25833)\n\n<!-- Thank you for using Flutter!\r\n\r\n     If you are looking for support, please check out our documentation\r\n     or consider asking a question on Stack Overflow:\r\n      * https://flutter.io/\r\n      * https://docs.flutter.io/\r\n      * https://stackoverflow.com/questions/tagged/flutter?sort=frequent\r\n\r\n     If you have found a bug or if our documentation doesn't have an answer\r\n     to what you're looking for, then fill our the template below. Please read\r\n     our guide to filing a bug first:  https://flutter.io/bug-reports/\r\n-->\r\n\r\n## Steps to Reproduce\r\n\r\n<!--\r\n     Please tell us exactly how to reproduce the problem you are running into.\r\n\r\n     Please attach a small application (ideally just one main.dart file) that\r\n     reproduces the problem. You could use https://gist.github.com/ for this.\r\n\r\n     If the problem is with your application's rendering, then please attach\r\n     a screenshot and explain what the problem is.\r\n-->\r\n\r\nI am using AppBar class to set App bar of the page, there is an attribute called [elevation](https://docs.flutter.io/flutter/material/AppBar-class.html)\r\n```The z-coordinate at which to place this app bar. This controls the size of the shadow below the app bar.```\r\nThe document hasn't figured out what's the default unit measurement of elevation, in Android We use dp,px\r\nso how about flutter?\r\n\r\n<!--\r\n      Run your application with `flutter run --verbose` and attach all the\r\n      log output below between the lines with the backticks. If there is an\r\n      exception, please see if the error message includes enough information\r\n      to explain how to solve the issue.\r\n-->\r\n\r\n\r\n<!--\r\n     Run `flutter analyze` and attach any output of that command below.\r\n     If there are any analysis errors, try resolving them before filing this issue.\r\n-->\r\n\r\n\r\n<!-- Finally, paste the output of running `flutter doctor -v` here. -->\r\n\r\n\n\n---\n\n@timsneath commented on [Wed Jan 02 2019](https://github.com/flutter/flutter/issues/25833#issuecomment-450793220)\n\nHi @vanshu, it is measured in pixels, as described here: https://docs.flutter.io/flutter/material/Material-class.html. We could clarify this in the docs. \n\n---\n\n@xster commented on [Thu Jan 03 2019](https://github.com/flutter/flutter/issues/25833#issuecomment-451027713)\n\nI think this should add an FAQ entry for this. We're fairly web-y in our terminology which tends to mainly focus on logical pixels but Android and iOS developers tend to be very specific about whether they meant logical pixels (points, dp/sp) or physical pixels (px, pixels). Us using just 'pixels' when we meant logical pixels is doubly confusing since 'pixels' typically mean physical pixels on Android and iOS."", 'title': ""What's the default unit of measurement in flutter?"", 'type': 'issue'}
 {'action': 'created', 'author': 'sfshaza2', 'comment_id': 458331111.0, 'datetime': '2019-01-28 22:39:56+00:00', 'masked_author': 'username_1', 'text': 'Good idea.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'koalaylj', 'comment_id': 524903320.0, 'datetime': '2019-08-26 23:20:14+00:00', 'masked_author': 'username_2', 'text': 'I think that pixel is logic pixel (referred to as dp)\r\n[devicePixelRatio](https://api.flutter.dev/flutter/dart-ui/Window/devicePixelRatio.html)\r\n\r\n```\r\nThe number of device pixels for each logical pixel. This number might not be a power of two. Indeed, it might not even be an integer. For example, the Nexus 6 has a device pixel ratio of 3.5.\r\n\r\nDevice pixels are also referred to as physical pixels. Logical pixels are also referred to as device-independent or resolution-independent pixels.\r\n\r\nBy definition, there are roughly 38 logical pixels per centimeter, or about 96 logical pixels per inch, of the physical display. The value returned by devicePixelRatio is ultimately obtained either from the hardware itself, the device drivers, or a hard-coded value stored in the operating system or firmware, and may be inaccurate, sometimes by a significant margin.\r\n\r\nThe Flutter framework operates in logical pixels, so it is rarely necessary to directly deal with this property.\r\n\r\nWhen this changes, onMetricsChanged is called.\r\n```', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: What's the default unit of measurement in flutter?
username_0: @vanshu commented on [Fri Dec 28 2018](https://github.com/flutter/flutter/issues/25833)

<!-- Thank you for using Flutter!

     If you are looking for support, please check out our documentation
     or consider asking a question on Stack Overflow:
      * https://flutter.io/
      * https://docs.flutter.io/
      * https://stackoverflow.com/questions/tagged/flutter?sort=frequent

     If you have found a bug or if our documentation doesn't have an answer
     to what you're looking for, then fill our the template below. Please read
     our guide to filing a bug first:  https://flutter.io/bug-reports/
-->

## Steps to Reproduce

<!--
     Please tell us exactly how to reproduce the problem you are running into.

     Please attach a small application (ideally just one main.dart file) that
     reproduces the problem. You could use https://gist.github.com/ for this.

     If the problem is with your application's rendering, then please attach
     a screenshot and explain what the problem is.
-->

I am using AppBar class to set App bar of the page, there is an attribute called [elevation](https://docs.flutter.io/flutter/material/AppBar-class.html)
```The z-coordinate at which to place this app bar. This controls the size of the shadow below the app bar.```
The document hasn't figured out what's the default unit measurement of elevation, in Android We use dp,px
so how about flutter?

<!--
      Run your application with `flutter run --verbose` and attach all the
      log output below between the lines with the backticks. If there is an
      exception, please see if the error message includes enough information
      to explain how to solve the issue.
-->


<!--
     Run `flutter analyze` and attach any output of that command below.
     If there are any analysis errors, try resolving them before filing this issue.
-->


<!-- Finally, paste the output of running `flutter doctor -v` here. -->



---

@timsneath commented on [Wed Jan 02 2019](https://github.com/flutter/flutter/issues/25833#issuecomment-450793220)

Hi @vanshu, it is measured in pixels, as described here: https://docs.flutter.io/flutter/material/Material-class.html. We could clarify this in the docs. 

---

@xster commented on [Thu Jan 03 2019](https://github.com/flutter/flutter/issues/25833#issuecomment-451027713)

I think this should add an FAQ entry for this. We're fairly web-y in our terminology which tends to mainly focus on logical pixels but Android and iOS developers tend to be very specific about whether they meant logical pixels (points, dp/sp) or physical pixels (px, pixels). Us using just 'pixels' when we meant logical pixels is doubly confusing since 'pixels' typically mean physical pixels on Android and iOS.
<issue_comment>username_1: Good idea.
<issue_comment>username_2: I think that pixel is logic pixel (referred to as dp)
[devicePixelRatio](https://api.flutter.dev/flutter/dart-ui/Window/devicePixelRatio.html)

```
The number of device pixels for each logical pixel. This number might not be a power of two. Indeed, it might not even be an integer. For example, the Nexus 6 has a device pixel ratio of 3.5.

Device pixels are also referred to as physical pixels. Logical pixels are also referred to as device-independent or resolution-independent pixels.

By definition, there are roughly 38 logical pixels per centimeter, or about 96 logical pixels per inch, of the physical display. The value returned by devicePixelRatio is ultimately obtained either from the hardware itself, the device drivers, or a hard-coded value stored in the operating system or firmware, and may be inaccurate, sometimes by a significant margin.

The Flutter framework operates in logical pixels, so it is rarely necessary to directly deal with this property.

When this changes, onMetricsChanged is called.
```"
appveyor/website,349618259,509,,"[{'action': 'opened', 'author': 'zippy1981', 'comment_id': None, 'datetime': '2018-08-10 18:41:23+00:00', 'masked_author': 'username_0', 'text': ""Some artifacts are build logs, etc, and contain more data than what is captured in the console. an artifact should have the option to always publish (if it got created) if a build fails.\r\n\r\nYes custom powershell and `on_failure:` could accomplish this, but it would be cleaner to have the option that didn't require scripts."", 'title': 'artifact: section of yml should have an option to publish an artefact if a build fails.', 'type': 'issue'}]","<issue_start><issue_comment>Title: artifact: section of yml should have an option to publish an artefact if a build fails.
username_0: Some artifacts are build logs, etc, and contain more data than what is captured in the console. an artifact should have the option to always publish (if it got created) if a build fails.

Yes custom powershell and `on_failure:` could accomplish this, but it would be cleaner to have the option that didn't require scripts."
devopsdays/devopsdays-web,1139804355,10862,"{'number': 10862.0, 'repo': 'devopsdays-web', 'user_login': 'devopsdays'}","[{'action': 'opened', 'author': 'RandomSort', 'comment_id': None, 'datetime': '2022-02-16T10:08:37Z', 'masked_author': 'username_0', 'text': 'Hi Awesome Folks.\r\nThis convenient pull request gives the Aarhus team the following super powers:\r\n- 🐘 Justin Reock from Gradle has been added with an awesome keynote on Developer Productivity Engineering\r\n- 🤑 Styra has gracefully chosen to also sponsor DevOpsDays Aarhus\r\n- 👩\u200d💼 Johanne has changed job, congratulations!', 'title': '[Aar-2022] Add Styra and Justin Reock, Update Johanne', 'type': 'issue'}
 {'action': 'created', 'author': 'phrawzty', 'comment_id': 1041449315.0, 'datetime': '2022-02-16 12:37:19+00:00', 'masked_author': 'username_1', 'text': 'CircleCI failing as usual but the PR is clean.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [Aar-2022] Add Styra and Justin Reock, Update Johanne
username_0: Hi Awesome Folks.
This convenient pull request gives the Aarhus team the following super powers:
- 🐘 Justin Reock from Gradle has been added with an awesome keynote on Developer Productivity Engineering
- 🤑 Styra has gracefully chosen to also sponsor DevOpsDays Aarhus
- 👩‍💼 Johanne has changed job, congratulations!
<issue_comment>username_1: CircleCI failing as usual but the PR is clean."
KiCad/kicad-website,266527300,219,"{'number': 219.0, 'repo': 'kicad-website', 'user_login': 'KiCad'}","[{'action': 'opened', 'author': 'SchrodingersGat', 'comment_id': None, 'datetime': '2017-10-18T15:02:17Z', 'masked_author': 'username_0', 'text': ""This is a fairly large PR which adds information on the official KiCad libraries to the website\r\n\r\n* Information on where to download the libraries\r\n* Improve information on how to contribute\r\n* Add link to libraries on front page\r\n* Add 'Discover' library section\r\n* Add 'Download' library section\r\n\r\nAdditionally, the [KLC](https://github.com/KiCad/kicad-library/wiki/Kicad-Library-Convention) have been reformatted and will now exist on the KiCad website rather than on the GitHub Wiki.\r\n\r\nThe KLC have been largely rewritten and correspond to new v3.0.0 KLC release.\r\n\r\nQuestions:\r\n\r\n1. Who is nominally in charge of maintaining the website and managing PRs?\r\n1. Are there any compatibility issues with the changes I have made? In particular I have used a lot of custom shortcodes to get the KLC to look good, and have had one report that they don't render on certain versions of Hugo\r\n1. If the KLC are moved to the website we may need to update them periodically. I assume this will be ok.\r\n\r\nPlease look over the changes I have made and let me know if you see any issues.\r\n\r\nFor reference, the discussion that lead to this work can be found [here](https://lists.launchpad.net/kicad-developers/msg30713.html)"", 'title': 'Add library information to website', 'type': 'issue'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 337622818.0, 'datetime': '2017-10-18 15:06:32+00:00', 'masked_author': 'username_0', 'text': ""@username_3 yes before you ask, this does *not* have the footprint naming schema. I would like to see that as 3.1.0 as there's still a lot of work there and if we don't launch this it will never go up :)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nickoe', 'comment_id': 337634211.0, 'datetime': '2017-10-18 15:40:54+00:00', 'masked_author': 'username_1', 'text': ""I got thise error messages when building this\r\n```\r\nERROR: 2017/10/18 17:39:51 shortcode.go:287: F5.1:8: got positional parameter 'Surface'. Cannot mix named and positional parameters\r\nERROR: 2017/10/18 17:39:53 shortcode.go:287: S4.2:19: unrecognized character in shortcode action: U+007D '}'. Note: Parameters with non-alphanumeric args must be quoted```"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 337645544.0, 'datetime': '2017-10-18 16:16:58+00:00', 'masked_author': 'username_2', 'text': '@username_0 what version of hugo did you use to build out of curiosity?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 337724704.0, 'datetime': '2017-10-18 20:54:00+00:00', 'masked_author': 'username_0', 'text': 'Thanks @username_1 I have found and fixed those errors.\r\n\r\n@username_2 - `Hugo Static Site Generator v0.16-DEV`', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 337733753.0, 'datetime': '2017-10-18 21:30:12+00:00', 'masked_author': 'username_3', 'text': 'Version `Hugo Static Site Generator v0.16 BuildDate: 2016-06-06T14:31:27+02:00` on fedora 26 is the one that made trouble with the shortcodes.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 337753878.0, 'datetime': '2017-10-18 23:11:11+00:00', 'masked_author': 'username_2', 'text': 'That\'s fine. The site is auto-built (if Jenkins and the machine isn\'t down) from the repo. So its just PRs.\r\n\r\n\r\nFeedback:\r\n\r\n/libraries/ (the path) ends up causing the Download menu item to be selected because that\'s where the only link is.\r\n\r\nI would almost want to change the main menu structure to have a ""Libraries"" master entry so it ends up like\r\n\r\nLibraries V\r\nDownload\r\nLicense\r\nContribute\r\nLibrary Conventions\r\n\r\nLike this:\r\nhttps://i.imgur.com/PWWRL9k.png\r\n\r\nBut I\'m afraid of bloating the header a little with another main entry. But it does centralize library info better.\r\n\r\n\r\n@username_1 what do you think?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 337765716.0, 'datetime': '2017-10-19 00:32:24+00:00', 'masked_author': 'username_0', 'text': ""I'm happy to use a libraries menu if that is the consensus"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338094460.0, 'datetime': '2017-10-20 03:11:59+00:00', 'masked_author': 'username_2', 'text': 'Can you rebase on the latest master and switch to hugo 0.30?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338100906.0, 'datetime': '2017-10-20 04:08:10+00:00', 'masked_author': 'username_0', 'text': 'Can do. Do you want me to consolidate under a singe menu also?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nickoe', 'comment_id': 338369819.0, 'datetime': '2017-10-21 07:10:07+00:00', 'masked_author': 'username_1', 'text': 'Sorry for my slow response, but I habe been quite busy the last month and have a big email backlog for Kicad.  Only now did I read the initial email thread.  I still need to check your pr out locally have have a more through look at it. The idea is great.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nickoe', 'comment_id': 338414173.0, 'datetime': '2017-10-21 16:22:16+00:00', 'masked_author': 'username_1', 'text': 'Could you please try to resolve the config.toml conflict?  I am not exactly sure what menus you want. It conflicts three times when rebasing your banch onto master because of the updates @username_2 made :) And when I did I could not easily see how to navigate to the pull request description. Maybe it was just part of some body text?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338430999.0, 'datetime': '2017-10-21 20:41:45+00:00', 'masked_author': 'username_0', 'text': 'Yes I will fix this all when I get home tonight', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338475192.0, 'datetime': '2017-10-22 12:54:19+00:00', 'masked_author': 'username_0', 'text': 'I have fixed conflicts, made changes, and updated to v0.30 Hugo.\r\n\r\nI have also consolidated all the library pages under a single menu. Now the breadcrumbs work much better even for the KLC and I that it is a much better look overall.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338475501.0, 'datetime': '2017-10-22 12:59:18+00:00', 'masked_author': 'username_0', 'text': 'The Travis errors are weird, it seems that asciidoctor is now producing errors for auto-continuation of list items? It is still rendering correctly, though. How do I get rid of these error messages?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338487316.0, 'datetime': '2017-10-22 15:47:02+00:00', 'masked_author': 'username_2', 'text': 'You have silly indexes.....in F1.1 all the list items start with ""1.""......\r\nIf you want autonumbering, remove the 1 and leave the dot.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338504839.0, 'datetime': '2017-10-22 20:02:00+00:00', 'masked_author': 'username_0', 'text': 'Ok I will fix that. Anything else to address?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338509642.0, 'datetime': '2017-10-22 21:14:19+00:00', 'masked_author': 'username_2', 'text': 'Undo the change to the download menu that made it a dropdown as its still a dropdown after you moved out ""Download libraries""', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338654811.0, 'datetime': '2017-10-23 13:15:08+00:00', 'masked_author': 'username_0', 'text': ""I have fixed those problems but I am working on addressing a few other issues before it is ready to merge. I'll let you know :)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338987276.0, 'datetime': '2017-10-24 13:20:02+00:00', 'masked_author': 'username_0', 'text': 'Through some [truly awful code](https://github.com/username_0/kicad-website/blob/736ccbde5535a21d3b551b86f4584ac74bce2bc6/layouts/shortcodes/fp_code.html) I have managed to setup a reasonably good looking set of footprint naming conventions (that can be built upon)\r\n\r\nHugo, Y U MAKE LIFE SO HARD\r\n\r\n@username_3 if you have the time, the connectors still need work!\r\n\r\n![selection_009](https://user-images.githubusercontent.com/10080325/31945198-2edd0df2-b91a-11e7-8e02-4377ef84386d.png)\r\n![selection_010](https://user-images.githubusercontent.com/10080325/31945200-2f177ffa-b91a-11e7-97f6-36aa8bcc531e.png)\r\n![selection_011](https://user-images.githubusercontent.com/10080325/31945201-2f63a308-b91a-11e7-9519-aab5986d0565.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338990331.0, 'datetime': '2017-10-24 13:30:19+00:00', 'masked_author': 'username_2', 'text': 'Rebase conflcits by the way ^^', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338992507.0, 'datetime': '2017-10-24 13:37:20+00:00', 'masked_author': 'username_0', 'text': ""@username_2 ? I'm not seeing any conflicts any more.."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338992739.0, 'datetime': '2017-10-24 13:37:58+00:00', 'masked_author': 'username_2', 'text': '![image](https://user-images.githubusercontent.com/1838013/31946127-fd054090-b89e-11e7-986c-37ddd560de0d.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338993889.0, 'datetime': '2017-10-24 13:41:40+00:00', 'masked_author': 'username_0', 'text': ""I'm not seeing that. I also just rebased my branch off kicad/master and did not have any conflicts... What's going on?\r\n\r\n![selection_012](https://user-images.githubusercontent.com/10080325/31946323-416ad3fc-b91d-11e7-87e6-ea372213d4d0.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338995029.0, 'datetime': '2017-10-24 13:45:17+00:00', 'masked_author': 'username_2', 'text': 'If you switch that ""Merge pull request"" dropdown to ""Rebase"" you\'ll see the github warning ;)\r\n\r\nDid you make sure to git fetch kicad/master before trying rebase locally?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338995605.0, 'datetime': '2017-10-24 13:47:03+00:00', 'masked_author': 'username_0', 'text': 'Ah I see.\r\n\r\nYes I did `git fetch` first. Perhaps it is because I have merged kicad/master into my branch at some stage?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 338995996.0, 'datetime': '2017-10-24 13:48:11+00:00', 'masked_author': 'username_2', 'text': 'Yea merging master into a branch and merging the branch into master is a great way to make history terrifying and create conflicts :/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 338998331.0, 'datetime': '2017-10-24 13:55:11+00:00', 'masked_author': 'username_0', 'text': ""Having trouble getting it to work on my end. I'll have another try tomorrow."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339315350.0, 'datetime': '2017-10-25 12:35:37+00:00', 'masked_author': 'username_0', 'text': 'Oooookay, lesson learned. Not doing that again. I have rebased the entire commit chain, which was *not* fun. But there are no conflicts now :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 339506570.0, 'datetime': '2017-10-25 23:39:16+00:00', 'masked_author': 'username_2', 'text': 'Download libraries button you put in the homepage banner should link to /libraries/download/ not /libraries/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339552171.0, 'datetime': '2017-10-26 05:04:15+00:00', 'masked_author': 'username_0', 'text': 'Done. /libraries/klc now displays a single continuous list of the KLC rules. It makes reading better and you could for example print all the KLC rules to PDF or something.\r\n\r\nClicking on the title of each rule also sends you to a page for that rule (exactly the same content). This will be useful if we improve the github scripts to send users to the appropriate KLC page when an error is detected.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 339552723.0, 'datetime': '2017-10-26 05:08:09+00:00', 'masked_author': 'username_2', 'text': 'Well there was that page at some point in th ePR files that would getJson from github, that way the releases data from each library could be wrapped and displayed nicely.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339555345.0, 'datetime': '2017-10-26 05:27:24+00:00', 'masked_author': 'username_0', 'text': 'Yes, this is what I will implement when we rearrange the libraries. However:\r\n\r\n1. The only repo that would work for is `kicad-library`\r\n1. The `.pretty` repos are spread out everywhere (100+ of the darn things) so that will not work\r\n1. The library-download table will be **great** when we organize the repos as follows:\r\n   * kicad-symbols\r\n   * kicad-footprints \r\n   * kicad-packages3d\r\n   * kicad-templates\r\n\r\nSo for now, unless you can think of some other better wording, I say we leave as is.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marekr', 'comment_id': 339644599.0, 'datetime': '2017-10-26 12:06:29+00:00', 'masked_author': 'username_2', 'text': 'Perhaps prefer the archive downloads than over the github link? i.e. Mention archives first, github second', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339854666.0, 'datetime': '2017-10-27 02:25:36+00:00', 'masked_author': 'username_0', 'text': 'Good idea @username_2 see what you think now', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nickoe', 'comment_id': 339882590.0, 'datetime': '2017-10-27 06:14:55+00:00', 'masked_author': 'username_1', 'text': 'I think this looks mergable to me now, but I am not sure if it is supposed to be merged now, @username_0  mentioned earlier that you are still working on it.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339883414.0, 'datetime': '2017-10-27 06:20:29+00:00', 'masked_author': 'username_0', 'text': ""I have finished the work I was doing, and I think it is ready to go. \r\n\r\n(the item I was working on was nice rendering of footprint naming conventions, which are now much more readable).\r\n\r\nPlease let me know if you see any outstanding issues otherwise I'm very excited to see it merged - this has been a **lot** of work :)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 339904917.0, 'datetime': '2017-10-27 08:15:56+00:00', 'masked_author': 'username_3', 'text': 'I think it would be a good idea to either increase the font-size for the rule names (section headers) or to decrease the size of headers found within the rules.\r\n![screenshot from 2017-10-27 09-54-21](https://user-images.githubusercontent.com/18327350/32093605-3332f88c-bafd-11e7-9e24-c0539d98c4d8.png)\r\n\r\nIn the resistor and fuse naming convention the reference to the chip packages is missing. \r\nThere is also no link from the smd chip capacitor section back to the general chip package naming convention. (not a problem when all rules are rendered but if viewed section by section it might be a good idea to have a link to the rule that holds more information.)\r\n\r\nA naming convention for J Lead packages is missing. (It is similar to the Gull wing convention. So you could change the header to include J Lead)\r\nThe reference back to the manufacturer specific naming convention for IC packages and for cap/resistor naming is missing.\r\n\r\nIn the connector naming convention it currently looks like the orientation stuff is only valid for manufacturer specific footprints. (This is because you removed the first section that was meant as a general explanation.)\r\n\r\nI am not really sure it is a good idea to split all connectors of specific functions (USB, ...) into their own section. \r\nMight be a maintenance nightmare later on. And i am not convinced it is easier to understand than the version i had previously. \r\nWith my version i think it was also easier to understand how such names are build in general. Which means it makes it easier for users to come up with a naming for connectors that are not explicitly listed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339916075.0, 'datetime': '2017-10-27 09:03:09+00:00', 'masked_author': 'username_0', 'text': ""I'll have a look through your comments later on tonight, thanks Rene."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 339917109.0, 'datetime': '2017-10-27 09:07:29+00:00', 'masked_author': 'username_3', 'text': 'For later reference, i add the link to the original footprint naming convention discussion:\r\nhttps://github.com/KiCad/kicad-library/issues/1447\r\nConnector Lib naming:\r\nhttps://github.com/KiCad/Connectors.pretty/issues/83\r\n\r\nAnd the original discussion for KLCv3\r\nhttps://github.com/KiCad/kicad-library/issues/1622', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 339968597.0, 'datetime': '2017-10-27 13:17:43+00:00', 'masked_author': 'username_0', 'text': 'Rene, I have now made the following improvements:\r\n\r\n1. Simplified the connector naming scheme\r\n   * Generic options listed first\r\n   * Other options simplified\r\n1. Improved documenation for field naming (see KLC F2.2) \r\n   * Improved descriptions\r\n   * Added long-form prefixes (in addition to abbreviated fields)\r\n\r\nPlease note that we do NOT want to have to list every type of naming convention. We need enough for clarity, and to provide a pattern for users to follow. \r\n\r\nThat said, I have taken some of your suggestions on board and think that it has resulted in an improved look. \r\n\r\nOne key change: I have now removed the inidividual optional fields from many footprint naming schemes and replaced it with a single [`Modifiers`] field - this can represent multiple fields.\r\n\r\nThis improves readability, and also means that we do not have to keep it updated with every single possible optional field. Instead, if we decide on a new optional field type, that can be added to the table in F2.2', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 340164158.0, 'datetime': '2017-10-28 09:18:59+00:00', 'masked_author': 'username_3', 'text': 'The problem with the font sizes for headers still exists.\r\n\r\n---\r\n\r\nThe modifiers field is a good idea. (In general) \r\nBut it seems like you interpreted it as being optional. (The EP size is not optional for footprints that have an exposed pad. Or i at least thought that was our consensus in the original discussion.)\r\n\r\nAnd i could not find a place where you defined the field prefixes to be used. (These need to be standardized such that we can reliably write footprint filters.) The order of the fields also needs to be standardized for the same reason.\r\n\r\n---\r\n\r\nTantal cap size codes:\r\nWe should require that not only the letter code is given but also the name of the code. (AVX or Kemet)\r\nAnd i think we should define one of them as preferred. (In the example you use Kemet_ but you never mention it in the rule definition.)\r\n\r\n---\r\n\r\nAbout the remarks by @jkriege (abbreviations)\r\nCurrently you define the letter W as body with in the prefix definition table.\r\nBut in the dip naming convention we use it for the lead span. (This is the only inconsistency that we should address. See https://github.com/KiCad/kicad-library/issues/1447#issuecomment-340164112)\r\n\r\n---\r\n\r\nRegarding the function field for standardized interface connectors:\r\n@evanshultz [voiced concern that contributors (and maintainers) might use different spellings for the same interface.](https://github.com/KiCad/kicad-library/issues/1447#issuecomment-335208463) This is why i originally included [my list](https://github.com/KiCad/kicad-library/issues/1447#issuecomment-335434885). (The current libs are a mess and can not be used as a reference. This list is also here for us maintainers such that we know how to name things when we cleanup libs.)\r\n\r\n---\r\n\r\nAnd something completely different. Currently the menu entry is called KLC. I think it would be better not to use an acronym here. I would use Library Convention if at all possible.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 340183284.0, 'datetime': '2017-10-28 11:07:57+00:00', 'masked_author': 'username_3', 'text': 'Another thing i just fund. (A mistake i made)\r\n\r\nThe (marked) part of line:\r\n(can have more digits for connectors with `> 100 pins`)\r\n\r\nshould be change to `> 99 pins` or `≥ 100 pins` (The later might pose problems if the font of the users browser does not support the greater than or equal sign)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 340200878.0, 'datetime': '2017-10-28 15:55:44+00:00', 'masked_author': 'username_3', 'text': 'Found another thing:\r\nyou use `[pin configuration]` for manufacturer specific connectors and `[pin layout]` for the generic naming. (I think both of them should use the same term.)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 340254618.0, 'datetime': '2017-10-29 11:20:06+00:00', 'masked_author': 'username_0', 'text': 'Fixed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 340254710.0, 'datetime': '2017-10-29 11:22:01+00:00', 'masked_author': 'username_0', 'text': 'Thanks for the feedback Rene. I am reluctant to spell out each and every possible combination for each footprint type, that will be far too much work for us, too difficult for users to follow, and prone to error.\r\n\r\nThe best idea is to have a somewhat generic scheme which allows variance, and (importantly) have a consistent set of existing footprints for users to model their own names on.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SchrodingersGat', 'comment_id': 341090700.0, 'datetime': '2017-11-01 12:17:31+00:00', 'masked_author': 'username_0', 'text': '@username_1  @username_2 I would like to see this merged unless you have any further objections. Rene and I will no doubt be hashing out the finer points for a while to come, but I think functionally this is good to go. Updates can be made as they come.\r\n\r\nThanks', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'poeschlr', 'comment_id': 341093002.0, 'datetime': '2017-11-01 12:29:03+00:00', 'masked_author': 'username_3', 'text': 'I agree with oliver. From my side this can be merged.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nickoe', 'comment_id': 341241907.0, 'datetime': '2017-11-01 21:03:48+00:00', 'masked_author': 'username_1', 'text': 'Thank you very much all of you. You have spent quite a lot of energy on this. Thank you. I deem it ready to be merged. Feel free to submit follow up fixed.\r\n\r\nI have two comments on what is to be merged that I did not really want to include in the previous complex discussion. This is nitpicking.\r\n\r\n1. Does it make sense to ""censor"" the pull request screenshot on the how to do a github pull request thing?\r\n2. The image showin in libraries/klc/F5.1/ is quite stretched when dispalyed on the page.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add library information to website
username_0: This is a fairly large PR which adds information on the official KiCad libraries to the website

* Information on where to download the libraries
* Improve information on how to contribute
* Add link to libraries on front page
* Add 'Discover' library section
* Add 'Download' library section

Additionally, the [KLC](https://github.com/KiCad/kicad-library/wiki/Kicad-Library-Convention) have been reformatted and will now exist on the KiCad website rather than on the GitHub Wiki.

The KLC have been largely rewritten and correspond to new v3.0.0 KLC release.

Questions:

1. Who is nominally in charge of maintaining the website and managing PRs?
1. Are there any compatibility issues with the changes I have made? In particular I have used a lot of custom shortcodes to get the KLC to look good, and have had one report that they don't render on certain versions of Hugo
1. If the KLC are moved to the website we may need to update them periodically. I assume this will be ok.

Please look over the changes I have made and let me know if you see any issues.

For reference, the discussion that lead to this work can be found [here](https://lists.launchpad.net/kicad-developers/msg30713.html)
<issue_comment>username_0: @username_3 yes before you ask, this does *not* have the footprint naming schema. I would like to see that as 3.1.0 as there's still a lot of work there and if we don't launch this it will never go up :)
<issue_comment>username_1: I got thise error messages when building this
```
ERROR: 2017/10/18 17:39:51 shortcode.go:287: F5.1:8: got positional parameter 'Surface'. Cannot mix named and positional parameters
ERROR: 2017/10/18 17:39:53 shortcode.go:287: S4.2:19: unrecognized character in shortcode action: U+007D '}'. Note: Parameters with non-alphanumeric args must be quoted```
<issue_comment>username_2: @username_0 what version of hugo did you use to build out of curiosity?
<issue_comment>username_0: Thanks @username_1 I have found and fixed those errors.

@username_2 - `Hugo Static Site Generator v0.16-DEV`
<issue_comment>username_3: Version `Hugo Static Site Generator v0.16 BuildDate: 2016-06-06T14:31:27+02:00` on fedora 26 is the one that made trouble with the shortcodes.
<issue_comment>username_2: That's fine. The site is auto-built (if Jenkins and the machine isn't down) from the repo. So its just PRs.


Feedback:

/libraries/ (the path) ends up causing the Download menu item to be selected because that's where the only link is.

I would almost want to change the main menu structure to have a ""Libraries"" master entry so it ends up like

Libraries V
Download
License
Contribute
Library Conventions

Like this:
https://i.imgur.com/PWWRL9k.png

But I'm afraid of bloating the header a little with another main entry. But it does centralize library info better.


@username_1 what do you think?
<issue_comment>username_0: I'm happy to use a libraries menu if that is the consensus
<issue_comment>username_2: Can you rebase on the latest master and switch to hugo 0.30?
<issue_comment>username_0: Can do. Do you want me to consolidate under a singe menu also?
<issue_comment>username_1: Sorry for my slow response, but I habe been quite busy the last month and have a big email backlog for Kicad.  Only now did I read the initial email thread.  I still need to check your pr out locally have have a more through look at it. The idea is great.
<issue_comment>username_1: Could you please try to resolve the config.toml conflict?  I am not exactly sure what menus you want. It conflicts three times when rebasing your banch onto master because of the updates @username_2 made :) And when I did I could not easily see how to navigate to the pull request description. Maybe it was just part of some body text?
<issue_comment>username_0: Yes I will fix this all when I get home tonight
<issue_comment>username_0: I have fixed conflicts, made changes, and updated to v0.30 Hugo.

I have also consolidated all the library pages under a single menu. Now the breadcrumbs work much better even for the KLC and I that it is a much better look overall.
<issue_comment>username_0: The Travis errors are weird, it seems that asciidoctor is now producing errors for auto-continuation of list items? It is still rendering correctly, though. How do I get rid of these error messages?
<issue_comment>username_2: You have silly indexes.....in F1.1 all the list items start with ""1.""......
If you want autonumbering, remove the 1 and leave the dot.
<issue_comment>username_0: Ok I will fix that. Anything else to address?
<issue_comment>username_2: Undo the change to the download menu that made it a dropdown as its still a dropdown after you moved out ""Download libraries""
<issue_comment>username_0: I have fixed those problems but I am working on addressing a few other issues before it is ready to merge. I'll let you know :)
<issue_comment>username_0: Through some [truly awful code](https://github.com/username_0/kicad-website/blob/736ccbde5535a21d3b551b86f4584ac74bce2bc6/layouts/shortcodes/fp_code.html) I have managed to setup a reasonably good looking set of footprint naming conventions (that can be built upon)

Hugo, Y U MAKE LIFE SO HARD

@username_3 if you have the time, the connectors still need work!

![selection_009](https://user-images.githubusercontent.com/10080325/31945198-2edd0df2-b91a-11e7-8e02-4377ef84386d.png)
![selection_010](https://user-images.githubusercontent.com/10080325/31945200-2f177ffa-b91a-11e7-97f6-36aa8bcc531e.png)
![selection_011](https://user-images.githubusercontent.com/10080325/31945201-2f63a308-b91a-11e7-9519-aab5986d0565.png)
<issue_comment>username_2: Rebase conflcits by the way ^^
<issue_comment>username_0: @username_2 ? I'm not seeing any conflicts any more..
<issue_comment>username_2: ![image](https://user-images.githubusercontent.com/1838013/31946127-fd054090-b89e-11e7-986c-37ddd560de0d.png)
<issue_comment>username_0: I'm not seeing that. I also just rebased my branch off kicad/master and did not have any conflicts... What's going on?

![selection_012](https://user-images.githubusercontent.com/10080325/31946323-416ad3fc-b91d-11e7-87e6-ea372213d4d0.png)
<issue_comment>username_2: If you switch that ""Merge pull request"" dropdown to ""Rebase"" you'll see the github warning ;)

Did you make sure to git fetch kicad/master before trying rebase locally?
<issue_comment>username_0: Ah I see.

Yes I did `git fetch` first. Perhaps it is because I have merged kicad/master into my branch at some stage?
<issue_comment>username_2: Yea merging master into a branch and merging the branch into master is a great way to make history terrifying and create conflicts :/
<issue_comment>username_0: Having trouble getting it to work on my end. I'll have another try tomorrow.
<issue_comment>username_0: Oooookay, lesson learned. Not doing that again. I have rebased the entire commit chain, which was *not* fun. But there are no conflicts now :)
<issue_comment>username_2: Download libraries button you put in the homepage banner should link to /libraries/download/ not /libraries/
<issue_comment>username_0: Done. /libraries/klc now displays a single continuous list of the KLC rules. It makes reading better and you could for example print all the KLC rules to PDF or something.

Clicking on the title of each rule also sends you to a page for that rule (exactly the same content). This will be useful if we improve the github scripts to send users to the appropriate KLC page when an error is detected.
<issue_comment>username_2: Well there was that page at some point in th ePR files that would getJson from github, that way the releases data from each library could be wrapped and displayed nicely.
<issue_comment>username_0: Yes, this is what I will implement when we rearrange the libraries. However:

1. The only repo that would work for is `kicad-library`
1. The `.pretty` repos are spread out everywhere (100+ of the darn things) so that will not work
1. The library-download table will be **great** when we organize the repos as follows:
   * kicad-symbols
   * kicad-footprints 
   * kicad-packages3d
   * kicad-templates

So for now, unless you can think of some other better wording, I say we leave as is.
<issue_comment>username_2: Perhaps prefer the archive downloads than over the github link? i.e. Mention archives first, github second
<issue_comment>username_0: Good idea @username_2 see what you think now
<issue_comment>username_1: I think this looks mergable to me now, but I am not sure if it is supposed to be merged now, @username_0  mentioned earlier that you are still working on it.
<issue_comment>username_0: I have finished the work I was doing, and I think it is ready to go. 

(the item I was working on was nice rendering of footprint naming conventions, which are now much more readable).

Please let me know if you see any outstanding issues otherwise I'm very excited to see it merged - this has been a **lot** of work :)
<issue_comment>username_3: I think it would be a good idea to either increase the font-size for the rule names (section headers) or to decrease the size of headers found within the rules.
![screenshot from 2017-10-27 09-54-21](https://user-images.githubusercontent.com/18327350/32093605-3332f88c-bafd-11e7-9e24-c0539d98c4d8.png)

In the resistor and fuse naming convention the reference to the chip packages is missing. 
There is also no link from the smd chip capacitor section back to the general chip package naming convention. (not a problem when all rules are rendered but if viewed section by section it might be a good idea to have a link to the rule that holds more information.)

A naming convention for J Lead packages is missing. (It is similar to the Gull wing convention. So you could change the header to include J Lead)
The reference back to the manufacturer specific naming convention for IC packages and for cap/resistor naming is missing.

In the connector naming convention it currently looks like the orientation stuff is only valid for manufacturer specific footprints. (This is because you removed the first section that was meant as a general explanation.)

I am not really sure it is a good idea to split all connectors of specific functions (USB, ...) into their own section. 
Might be a maintenance nightmare later on. And i am not convinced it is easier to understand than the version i had previously. 
With my version i think it was also easier to understand how such names are build in general. Which means it makes it easier for users to come up with a naming for connectors that are not explicitly listed.
<issue_comment>username_0: I'll have a look through your comments later on tonight, thanks Rene.
<issue_comment>username_3: For later reference, i add the link to the original footprint naming convention discussion:
https://github.com/KiCad/kicad-library/issues/1447
Connector Lib naming:
https://github.com/KiCad/Connectors.pretty/issues/83

And the original discussion for KLCv3
https://github.com/KiCad/kicad-library/issues/1622
<issue_comment>username_0: Rene, I have now made the following improvements:

1. Simplified the connector naming scheme
   * Generic options listed first
   * Other options simplified
1. Improved documenation for field naming (see KLC F2.2) 
   * Improved descriptions
   * Added long-form prefixes (in addition to abbreviated fields)

Please note that we do NOT want to have to list every type of naming convention. We need enough for clarity, and to provide a pattern for users to follow. 

That said, I have taken some of your suggestions on board and think that it has resulted in an improved look. 

One key change: I have now removed the inidividual optional fields from many footprint naming schemes and replaced it with a single [`Modifiers`] field - this can represent multiple fields.

This improves readability, and also means that we do not have to keep it updated with every single possible optional field. Instead, if we decide on a new optional field type, that can be added to the table in F2.2
<issue_comment>username_3: The problem with the font sizes for headers still exists.

---

The modifiers field is a good idea. (In general) 
But it seems like you interpreted it as being optional. (The EP size is not optional for footprints that have an exposed pad. Or i at least thought that was our consensus in the original discussion.)

And i could not find a place where you defined the field prefixes to be used. (These need to be standardized such that we can reliably write footprint filters.) The order of the fields also needs to be standardized for the same reason.

---

Tantal cap size codes:
We should require that not only the letter code is given but also the name of the code. (AVX or Kemet)
And i think we should define one of them as preferred. (In the example you use Kemet_ but you never mention it in the rule definition.)

---

About the remarks by @jkriege (abbreviations)
Currently you define the letter W as body with in the prefix definition table.
But in the dip naming convention we use it for the lead span. (This is the only inconsistency that we should address. See https://github.com/KiCad/kicad-library/issues/1447#issuecomment-340164112)

---

Regarding the function field for standardized interface connectors:
@evanshultz [voiced concern that contributors (and maintainers) might use different spellings for the same interface.](https://github.com/KiCad/kicad-library/issues/1447#issuecomment-335208463) This is why i originally included [my list](https://github.com/KiCad/kicad-library/issues/1447#issuecomment-335434885). (The current libs are a mess and can not be used as a reference. This list is also here for us maintainers such that we know how to name things when we cleanup libs.)

---

And something completely different. Currently the menu entry is called KLC. I think it would be better not to use an acronym here. I would use Library Convention if at all possible.
<issue_comment>username_3: Another thing i just fund. (A mistake i made)

The (marked) part of line:
(can have more digits for connectors with `> 100 pins`)

should be change to `> 99 pins` or `≥ 100 pins` (The later might pose problems if the font of the users browser does not support the greater than or equal sign)
<issue_comment>username_3: Found another thing:
you use `[pin configuration]` for manufacturer specific connectors and `[pin layout]` for the generic naming. (I think both of them should use the same term.)
<issue_comment>username_0: Fixed.
<issue_comment>username_0: Thanks for the feedback Rene. I am reluctant to spell out each and every possible combination for each footprint type, that will be far too much work for us, too difficult for users to follow, and prone to error.

The best idea is to have a somewhat generic scheme which allows variance, and (importantly) have a consistent set of existing footprints for users to model their own names on.
<issue_comment>username_0: @username_1  @username_2 I would like to see this merged unless you have any further objections. Rene and I will no doubt be hashing out the finer points for a while to come, but I think functionally this is good to go. Updates can be made as they come.

Thanks
<issue_comment>username_3: I agree with oliver. From my side this can be merged.
<issue_comment>username_1: Thank you very much all of you. You have spent quite a lot of energy on this. Thank you. I deem it ready to be merged. Feel free to submit follow up fixed.

I have two comments on what is to be merged that I did not really want to include in the previous complex discussion. This is nitpicking.

1. Does it make sense to ""censor"" the pull request screenshot on the how to do a github pull request thing?
2. The image showin in libraries/klc/F5.1/ is quite stretched when dispalyed on the page."
corona-warn-app/cwa-website,756393788,639,,"[{'action': 'opened', 'author': 'MikeMcC399', 'comment_id': None, 'datetime': '2020-12-03 17:20:17+00:00', 'masked_author': 'username_0', 'text': '## Where to find the issue\r\nhttps://www.coronawarn.app/en/faq/#googleplay\r\n\r\n## Describe the issue\r\nFAQ article **[Google/Android]: Why are Android 6 and Google Play Services minimum requirements?**\r\n\r\n""Google delivers the required Exposure Notification API for contact tracing apps with Google Play Services. The API is supported starting with Android API level 23. This version is available starting with Android version 6.0, see [Codenames, Tags, and Build Numbers](https://source.android.com/setup/start/build-numbers). This was decided solely by Google. In addition, older devices sometimes don’t support Bluetooth Low Energy. We as app developers, unfortunately, cannot influence this.""\r\n\r\nThe above statement about the dependency on the Google Exposure Notifications System does not correspond to the current information in https://developers.google.com/android/exposure-notifications/exposure-notifications-api#architecture which says:\r\n\r\n""For your app to work on all devices, set your minSdkVersion to version 6.0 (API level 23) or higher. **The framework works on some devices as low as version 5.0 (API level 21), so using this version is an option to increase the number of devices eligible.** If you decide to set the minSdkVersion to API level 21, you should test your app on the most popular Android 5.0 devices in your country to ensure that your app works as intended. ... (Last updated 2020-10-22 UTC)""\r\n\r\nIn the history of the Google Exposure Notifications System it seems that Google changed the minimum API level from 23 to 21, so the statement in the FAQ was probably true at the time of writing, but it is no longer true.\r\n\r\nThe specification of the Google Exposure Notifications System is no longer a sole justification for CWA not supporting Android 5.0 (API 21) or Android 5.1 (API 22). \r\n\r\nThe FAQs of the Federal Government https://www.bundesregierung.de/breg-de/themen/corona-warn-app/corona-warn-app-englisch/corona-warn-app-faq-1758636 state:\r\n\r\n""The Federal Government has asked the companies involved to conduct a technical review with the manufacturers of the operating systems, to check whether there are further possibilities to also technically integrate older smartphones, and open the interface to them.""\r\n\r\n## Suggested change\r\nCWA development should give an updated status on what prevents CWA supporting Android 5.x. For instance that there are other dependencies such as:\r\n`Manifest merger failed : uses-sdk:minSdkVersion 21 cannot be smaller than version 23 declared in library [androidx.security:security-crypto:1.0.0-rc03]`\r\n\r\nAlternatively, if there are any new plans for being able to support Android 5.x in future, these should be stated.', 'title': 'FAQ: Google ENS incompatible with Android 5.0 (API 21) given as outdated reason for non-support in CWA', 'type': 'issue'}
 {'action': 'created', 'author': 'MikeJayDee', 'comment_id': 744691207.0, 'datetime': '2020-12-14 20:28:44+00:00', 'masked_author': 'username_1', 'text': ""ENF for Android was initially (pre-final release) described as working with API version 21 (Android 5.0), but this was changed to API 23 (Android 6.0); there were reports that Apps would work when set to target API version 21. The issue is still open in Google's ENF repository:\r\n\r\nhttps://github.com/google/exposure-notifications-android/issues/16\r\n\r\nIt seems they have clarified this now. Would be great to support Android 5 and 5.1. Together with iOS 12.5, this should then cover virtually all stock Android and iPhone devices still in use."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 744704103.0, 'datetime': '2020-12-14 20:53:38+00:00', 'masked_author': 'username_0', 'text': ""It's at least an issue for the FAQ website, because the website says that the app can't support Android 5.0 because Google doesn't support it, which is no longer true.\r\n\r\nThere are other discussions about the actual support, rather than the documentation of minimum version supported:\r\n\r\n- https://github.com/corona-warn-app/cwa-app-android/issues/1799\r\n- https://github.com/corona-warn-app/cwa-app-android/issues/649\r\n- https://github.com/corona-warn-app/cwa-website/issues/639\r\n- https://github.com/corona-warn-app/cwa-app-android/issues/530\r\n- https://github.com/corona-warn-app/cwa-app-android/issues/165\r\n\r\nMost of the above issues were closed due to the information state available at the time of discussion.\r\n\r\nIn any case it would be invaluable to get development feedback about the feasibility and possible plans to support Android 5.0 (Lollipop) and Android 5.1 (Marshmallow)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thomasaugsten', 'comment_id': 748520524.0, 'datetime': '2020-12-19 20:22:32+00:00', 'masked_author': 'username_2', 'text': 'We still investigate the numbers of Android 5 which has the Bluetooth LE advertisement capability and where sold in Germany. From the information of Google this where only a few devices. The next step is a possibility to test this device and filter out non working Android 5 devices on App level.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 784904544.0, 'datetime': '2021-02-24 08:34:32+00:00', 'masked_author': 'username_0', 'text': '@username_2 \r\n\r\nHas there been any progress made on this issue?\r\n\r\nThe FAQ https://www.coronawarn.app/en/faq/#googleplay continues to claim that CWA cannot support Android 5 because the Google Exposure Notifications System API does not support it, even this is no longer a true statement.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 822279176.0, 'datetime': '2021-04-19 08:28:35+00:00', 'masked_author': 'username_0', 'text': 'The text in\r\n\r\n**[Google/Android]: Why are Android 6 and Google Play Services minimum requirements?**\r\nhttps://www.coronawarn.app/en/faq/#googleplay\r\n\r\ncontinues to state that Google ENS only supports Android 6 and later. This was true at one time, but the position of Google has changed - see https://developers.google.com/android/exposure-notifications/exposure-notifications-api#architecture.\r\n\r\nGoogle\'s list of [Publicly-available Exposure Notifications apps](https://developers.google.com/android/exposure-notifications/apps) links to Poland\'s [STOP COVID - ProteGO Safe](https://play.google.com/store/apps/details?id=pl.gov.mc.protegosafe) which states ""Requires Android 5.0 and up"". This is the only app I found out of 26 apps in Europe which support Android 5. All others have a minimum of Android 6.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dsarkar', 'comment_id': 822299427.0, 'datetime': '2021-04-19 08:58:05+00:00', 'masked_author': 'username_3', 'text': '@username_0 Yes, we have to change the text. I will check later if there are plans regarding supporting 5.0. Thanks for the reminder.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 841815939.0, 'datetime': '2021-05-16 13:17:10+00:00', 'masked_author': 'username_0', 'text': '@username_3 \r\nWhat is the current state of the plans for Android 5.0 support? (Also asked in https://github.com/corona-warn-app/cwa-app-android/issues/1799.)\r\n\r\nIn any case the FAQ article needs to be changed due to its inaccuracy.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 904695023.0, 'datetime': '2021-08-24 14:30:53+00:00', 'masked_author': 'username_0', 'text': ""however there has been no change since then to the text about Android version 5.0:\r\n\r\n[Google/Android]: Why are Android 6 and Google Play Services minimum requirements?\r\nhttps://www.coronawarn.app/en/faq/#googleplay\r\n\r\n[Google/Android]: Warum sind Android 6 und Google Play-Dienste Mindestvoraussetzungen?\r\nhttps://www.coronawarn.app/de/faq/#googleplay\r\n\r\nI don't think that the community can write the text changes because it depends on the internal Open Source Team discussions which are not public knowledge. We could only guess at what you might have been thinking and are now thinking, but we don't know."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 917434600.0, 'datetime': '2021-09-11 16:30:27+00:00', 'masked_author': 'username_0', 'text': '@username_3 \r\nAccording to @fynngodau the Android app would run on Android 5 (API 21) (see https://github.com/corona-warn-app/cwa-app-android/issues/1799#issuecomment-841829777). I don\'t have a physical Android 5 device, however I did try building it with `minSdkVersion 21` and then running it on an Android 5 emulator. It did run, but I could not do full tests that way.\r\n\r\nIn any case the FAQ article https://www.coronawarn.app/en/faq/#googleplay needs to be updated. The Open Source Team should provide a plausible text for this FAQ.\r\n\r\nIt currently says:\r\n\r\n""Google delivers the required Exposure Notification API for contact tracing apps with Google Play Services. The API is supported starting with Android API level 23. This version is available starting with Android version 6.0, see Codenames, Tags, and Build Numbers. This was decided solely by Google. In addition, older devices sometimes don’t support Bluetooth Low Energy. We as app developers, unfortunately, cannot influence this.""', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: FAQ: Google ENS incompatible with Android 5.0 (API 21) given as outdated reason for non-support in CWA
username_0: ## Where to find the issue
https://www.coronawarn.app/en/faq/#googleplay

## Describe the issue
FAQ article **[Google/Android]: Why are Android 6 and Google Play Services minimum requirements?**

""Google delivers the required Exposure Notification API for contact tracing apps with Google Play Services. The API is supported starting with Android API level 23. This version is available starting with Android version 6.0, see [Codenames, Tags, and Build Numbers](https://source.android.com/setup/start/build-numbers). This was decided solely by Google. In addition, older devices sometimes don’t support Bluetooth Low Energy. We as app developers, unfortunately, cannot influence this.""

The above statement about the dependency on the Google Exposure Notifications System does not correspond to the current information in https://developers.google.com/android/exposure-notifications/exposure-notifications-api#architecture which says:

""For your app to work on all devices, set your minSdkVersion to version 6.0 (API level 23) or higher. **The framework works on some devices as low as version 5.0 (API level 21), so using this version is an option to increase the number of devices eligible.** If you decide to set the minSdkVersion to API level 21, you should test your app on the most popular Android 5.0 devices in your country to ensure that your app works as intended. ... (Last updated 2020-10-22 UTC)""

In the history of the Google Exposure Notifications System it seems that Google changed the minimum API level from 23 to 21, so the statement in the FAQ was probably true at the time of writing, but it is no longer true.

The specification of the Google Exposure Notifications System is no longer a sole justification for CWA not supporting Android 5.0 (API 21) or Android 5.1 (API 22). 

The FAQs of the Federal Government https://www.bundesregierung.de/breg-de/themen/corona-warn-app/corona-warn-app-englisch/corona-warn-app-faq-1758636 state:

""The Federal Government has asked the companies involved to conduct a technical review with the manufacturers of the operating systems, to check whether there are further possibilities to also technically integrate older smartphones, and open the interface to them.""

## Suggested change
CWA development should give an updated status on what prevents CWA supporting Android 5.x. For instance that there are other dependencies such as:
`Manifest merger failed : uses-sdk:minSdkVersion 21 cannot be smaller than version 23 declared in library [androidx.security:security-crypto:1.0.0-rc03]`

Alternatively, if there are any new plans for being able to support Android 5.x in future, these should be stated.
<issue_comment>username_1: ENF for Android was initially (pre-final release) described as working with API version 21 (Android 5.0), but this was changed to API 23 (Android 6.0); there were reports that Apps would work when set to target API version 21. The issue is still open in Google's ENF repository:

https://github.com/google/exposure-notifications-android/issues/16

It seems they have clarified this now. Would be great to support Android 5 and 5.1. Together with iOS 12.5, this should then cover virtually all stock Android and iPhone devices still in use.
<issue_comment>username_0: It's at least an issue for the FAQ website, because the website says that the app can't support Android 5.0 because Google doesn't support it, which is no longer true.

There are other discussions about the actual support, rather than the documentation of minimum version supported:

- https://github.com/corona-warn-app/cwa-app-android/issues/1799
- https://github.com/corona-warn-app/cwa-app-android/issues/649
- https://github.com/corona-warn-app/cwa-website/issues/639
- https://github.com/corona-warn-app/cwa-app-android/issues/530
- https://github.com/corona-warn-app/cwa-app-android/issues/165

Most of the above issues were closed due to the information state available at the time of discussion.

In any case it would be invaluable to get development feedback about the feasibility and possible plans to support Android 5.0 (Lollipop) and Android 5.1 (Marshmallow).
<issue_comment>username_2: We still investigate the numbers of Android 5 which has the Bluetooth LE advertisement capability and where sold in Germany. From the information of Google this where only a few devices. The next step is a possibility to test this device and filter out non working Android 5 devices on App level.
<issue_comment>username_0: @username_2 

Has there been any progress made on this issue?

The FAQ https://www.coronawarn.app/en/faq/#googleplay continues to claim that CWA cannot support Android 5 because the Google Exposure Notifications System API does not support it, even this is no longer a true statement.
<issue_comment>username_0: The text in

**[Google/Android]: Why are Android 6 and Google Play Services minimum requirements?**
https://www.coronawarn.app/en/faq/#googleplay

continues to state that Google ENS only supports Android 6 and later. This was true at one time, but the position of Google has changed - see https://developers.google.com/android/exposure-notifications/exposure-notifications-api#architecture.

Google's list of [Publicly-available Exposure Notifications apps](https://developers.google.com/android/exposure-notifications/apps) links to Poland's [STOP COVID - ProteGO Safe](https://play.google.com/store/apps/details?id=pl.gov.mc.protegosafe) which states ""Requires Android 5.0 and up"". This is the only app I found out of 26 apps in Europe which support Android 5. All others have a minimum of Android 6.
<issue_comment>username_3: @username_0 Yes, we have to change the text. I will check later if there are plans regarding supporting 5.0. Thanks for the reminder.
<issue_comment>username_0: @username_3 
What is the current state of the plans for Android 5.0 support? (Also asked in https://github.com/corona-warn-app/cwa-app-android/issues/1799.)

In any case the FAQ article needs to be changed due to its inaccuracy.
<issue_comment>username_0: however there has been no change since then to the text about Android version 5.0:

[Google/Android]: Why are Android 6 and Google Play Services minimum requirements?
https://www.coronawarn.app/en/faq/#googleplay

[Google/Android]: Warum sind Android 6 und Google Play-Dienste Mindestvoraussetzungen?
https://www.coronawarn.app/de/faq/#googleplay

I don't think that the community can write the text changes because it depends on the internal Open Source Team discussions which are not public knowledge. We could only guess at what you might have been thinking and are now thinking, but we don't know.
<issue_comment>username_0: @username_3 
According to @fynngodau the Android app would run on Android 5 (API 21) (see https://github.com/corona-warn-app/cwa-app-android/issues/1799#issuecomment-841829777). I don't have a physical Android 5 device, however I did try building it with `minSdkVersion 21` and then running it on an Android 5 emulator. It did run, but I could not do full tests that way.

In any case the FAQ article https://www.coronawarn.app/en/faq/#googleplay needs to be updated. The Open Source Team should provide a plausible text for this FAQ.

It currently says:

""Google delivers the required Exposure Notification API for contact tracing apps with Google Play Services. The API is supported starting with Android API level 23. This version is available starting with Android version 6.0, see Codenames, Tags, and Build Numbers. This was decided solely by Google. In addition, older devices sometimes don’t support Bluetooth Low Energy. We as app developers, unfortunately, cannot influence this."""
RSS-Bridge/rss-bridge,343888862,756,"{'number': 756.0, 'repo': 'rss-bridge', 'user_login': 'RSS-Bridge'}","[{'action': 'opened', 'author': 'em92', 'comment_id': None, 'datetime': '2018-07-24T05:24:04Z', 'masked_author': 'username_0', 'text': 'Copy from https://github.com/fluffy-critter/php-urljoin/blob/master/src/urljoin.php Second commit author is original author of the method.\r\n\r\nThis will make at least VkBridge to have easy-to-read url merging operations: https://pastebin.com/148ZhbjB', 'title': '[core] Added urljoin', 'type': 'issue'}
 {'action': 'created', 'author': 'LogMANOriginal', 'comment_id': 407846037.0, 'datetime': '2018-07-25 18:10:30+00:00', 'masked_author': 'username_1', 'text': 'Looks like a much more sophisticated implementation of `defaultLinkTo` (minus the `$content` stuff): \r\n\r\nhttps://github.com/RSS-Bridge/rss-bridge/blob/65ec04ea981559ec4e212b365f23e5dff808be73/lib/html.php#L43-L60\r\n\r\nCan you implement it in `defaultLinkTo`?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 407976673.0, 'datetime': '2018-07-26 05:00:09+00:00', 'masked_author': 'username_0', 'text': '`urljoin` covers more cases. For example, before previous commit defaultLinkTo in VkBridge generated links like https://vk.com//wall41101372_33061 Those double-slashes can cause 404 links.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LogMANOriginal', 'comment_id': 408553295.0, 'datetime': '2018-07-27 22:22:24+00:00', 'masked_author': 'username_1', 'text': 'That makes sense. I found `defaultLinkTo` very useful in the past. Making it more powerful sounds like a good idea to me.\r\n\r\nThat being said, I pulled this PR and am getting errors for `urljoin` as it makes assumptions to the contents of `$base` and `$rel` which may or may not be true, especially if parsing arbitrary contents via `defaultLinkTo`. I\'m not sure if this is the fault of `urljoin` or `defaultLinkTo`:\r\n\r\n***\r\n\r\nTake this anchor:\r\n\r\n```HTML\r\n<a href=""javascript:void(0);"">link</a>\r\n```\r\n\r\nIt will result in a call to `urljoin` similar to this:\r\n\r\n```PHP\r\n$url = urljoin(\'https://github.com\', \'javascript:void(0);\'\r\n```\r\n\r\nThis is what `parse_url` does with the links:\r\n\r\n![image](https://user-images.githubusercontent.com/5776685/43348578-0cb86dec-91fb-11e8-919e-7643cae1e989.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5776685/43348163-03f01b6c-91f9-11e8-8d28-585b9d8dc32c.png)\r\n-- https://www.functions-online.com/parse_url.html\r\n\r\n`urljoin` will fail on this call as it assumes that the `path` variable is set after calling `parse_url`:\r\n\r\n```PHP\r\nfunction urljoin($base, $rel) {\r\n\t$pbase = parse_url($base);\r\n\t$prel = parse_url($rel);\r\n\r\n\t// no sanity check!\r\n\r\n\t$merged = array_merge($pbase, $prel);\r\n\tif ($prel[\'path\'][0] != \'/\') { // true, because \'path\' is \'void(0);\' but could fail if $rel was i.e. \'#\'!\r\n\t\t// Relative path\r\n\t\t$dir = preg_replace(\'@/[^/]*$@\', \'\', $pbase[\'path\']); // error, because \'path\' is not set (\'https://github.com\' doesn\'t have a path!)\r\n\t\t$merged[\'path\'] = $dir . \'/\' . $prel[\'path\']; // problematic even if it works, results in \'https://github.com/void(0);\'\r\n\t}\r\n```\r\n\r\n***\r\n\r\nI see two possible solutions for this issue:\r\n\r\n- Improve `urljoin` by adding sanity check (to master of course)\r\n- Do the sanity check in `defaultLinkTo`\r\n\r\nMy preferred solution is to add sanity checks to `urljoin` and even remove the existing checks in `defaultLinkTo`. What do you think about this issue?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 408741303.0, 'datetime': '2018-07-30 04:10:00+00:00', 'masked_author': 'username_0', 'text': 'Will PR with sanity check.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 408751721.0, 'datetime': '2018-07-30 05:33:57+00:00', 'masked_author': 'username_0', 'text': 'Submitted and accepted https://github.com/fluffy-critter/php-urljoin/pull/5', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 408752122.0, 'datetime': '2018-07-30 05:36:49+00:00', 'masked_author': 'username_0', 'text': 'Also tests: https://feed.eugenemolotov.ru/dev/vendor/php-urljoin/tests/tests.php', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LogMANOriginal', 'comment_id': 409342379.0, 'datetime': '2018-07-31 19:37:48+00:00', 'masked_author': 'username_1', 'text': ""Awesome, good work :+1: \r\n\r\nI did some more testing and still got some errors specific to some bridges. I've implemented the fixes and requested PRs (the last one fixes the issues, the others are for consideration):\r\n\r\nhttps://github.com/fluffy-critter/php-urljoin/pull/6\r\nhttps://github.com/fluffy-critter/php-urljoin/pull/7\r\nhttps://github.com/fluffy-critter/php-urljoin/pull/8"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LogMANOriginal', 'comment_id': 409612064.0, 'datetime': '2018-08-01 15:17:52+00:00', 'masked_author': 'username_1', 'text': 'Fixed the fix :pray: \r\n\r\nhttps://github.com/fluffy-critter/php-urljoin/pull/9', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 409629010.0, 'datetime': '2018-08-01 16:08:48+00:00', 'masked_author': 'username_0', 'text': 'There is a tick on ""Allow edits from maintainers"". So afaik you will be able to add commits yourself after merging master.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LogMANOriginal', 'comment_id': 409657056.0, 'datetime': '2018-08-01 17:32:19+00:00', 'masked_author': 'username_1', 'text': ""Will do! I'll also merge that version. Your PR is was stable before. Sorry for the delay :slightly_frowning_face:"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LogMANOriginal', 'comment_id': 409802671.0, 'datetime': '2018-08-02 04:33:14+00:00', 'masked_author': 'username_1', 'text': 'Merged. Thanks for the effort! \r\nSorry for making this harder on you than should be.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 409803872.0, 'datetime': '2018-08-02 04:42:37+00:00', 'masked_author': 'username_0', 'text': 'No problem', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [core] Added urljoin
username_0: Copy from https://github.com/fluffy-critter/php-urljoin/blob/master/src/urljoin.php Second commit author is original author of the method.

This will make at least VkBridge to have easy-to-read url merging operations: https://pastebin.com/148ZhbjB
<issue_comment>username_1: Looks like a much more sophisticated implementation of `defaultLinkTo` (minus the `$content` stuff): 

https://github.com/RSS-Bridge/rss-bridge/blob/65ec04ea981559ec4e212b365f23e5dff808be73/lib/html.php#L43-L60

Can you implement it in `defaultLinkTo`?
<issue_comment>username_0: `urljoin` covers more cases. For example, before previous commit defaultLinkTo in VkBridge generated links like https://vk.com//wall41101372_33061 Those double-slashes can cause 404 links.
<issue_comment>username_1: That makes sense. I found `defaultLinkTo` very useful in the past. Making it more powerful sounds like a good idea to me.

That being said, I pulled this PR and am getting errors for `urljoin` as it makes assumptions to the contents of `$base` and `$rel` which may or may not be true, especially if parsing arbitrary contents via `defaultLinkTo`. I'm not sure if this is the fault of `urljoin` or `defaultLinkTo`:

***

Take this anchor:

```HTML
<a href=""javascript:void(0);"">link</a>
```

It will result in a call to `urljoin` similar to this:

```PHP
$url = urljoin('https://github.com', 'javascript:void(0);'
```

This is what `parse_url` does with the links:

![image](https://user-images.githubusercontent.com/5776685/43348578-0cb86dec-91fb-11e8-919e-7643cae1e989.png)

![image](https://user-images.githubusercontent.com/5776685/43348163-03f01b6c-91f9-11e8-8d28-585b9d8dc32c.png)
-- https://www.functions-online.com/parse_url.html

`urljoin` will fail on this call as it assumes that the `path` variable is set after calling `parse_url`:

```PHP
function urljoin($base, $rel) {
	$pbase = parse_url($base);
	$prel = parse_url($rel);

	// no sanity check!

	$merged = array_merge($pbase, $prel);
	if ($prel['path'][0] != '/') { // true, because 'path' is 'void(0);' but could fail if $rel was i.e. '#'!
		// Relative path
		$dir = preg_replace('@/[^/]*$@', '', $pbase['path']); // error, because 'path' is not set ('https://github.com' doesn't have a path!)
		$merged['path'] = $dir . '/' . $prel['path']; // problematic even if it works, results in 'https://github.com/void(0);'
	}
```

***

I see two possible solutions for this issue:

- Improve `urljoin` by adding sanity check (to master of course)
- Do the sanity check in `defaultLinkTo`

My preferred solution is to add sanity checks to `urljoin` and even remove the existing checks in `defaultLinkTo`. What do you think about this issue?
<issue_comment>username_0: Will PR with sanity check.
<issue_comment>username_0: Submitted and accepted https://github.com/fluffy-critter/php-urljoin/pull/5
<issue_comment>username_0: Also tests: https://feed.eugenemolotov.ru/dev/vendor/php-urljoin/tests/tests.php
<issue_comment>username_1: Awesome, good work :+1: 

I did some more testing and still got some errors specific to some bridges. I've implemented the fixes and requested PRs (the last one fixes the issues, the others are for consideration):

https://github.com/fluffy-critter/php-urljoin/pull/6
https://github.com/fluffy-critter/php-urljoin/pull/7
https://github.com/fluffy-critter/php-urljoin/pull/8
<issue_comment>username_1: Fixed the fix :pray: 

https://github.com/fluffy-critter/php-urljoin/pull/9
<issue_comment>username_0: There is a tick on ""Allow edits from maintainers"". So afaik you will be able to add commits yourself after merging master.
<issue_comment>username_1: Will do! I'll also merge that version. Your PR is was stable before. Sorry for the delay :slightly_frowning_face:
<issue_comment>username_1: Merged. Thanks for the effort! 
Sorry for making this harder on you than should be.
<issue_comment>username_0: No problem"
stevenschobert/instafeed.js,115408966,338,,"[{'action': 'opened', 'author': 'nickfmc', 'comment_id': None, 'datetime': '2015-11-06 00:38:22+00:00', 'masked_author': 'username_0', 'text': 'this link was removed from your site with version 1.4.0 however to use certain functions it seams to still be required such as \r\n<code>\r\nfilter: function(image) {\r\n            return image.user_has_liked;\r\n        }\r\n</code>\r\nhttps://instagram.com/oauth/authorize/?client_id=467ede5a6b9b48ae8e03f4e2582aeeb3&redirect_uri=http://instafeedjs.com&response_type=token', 'title': 'Link for AccessToken Removed - still may be required', 'type': 'issue'}
 {'action': 'created', 'author': 'stevenschobert', 'comment_id': 155466641.0, 'datetime': '2015-11-10 16:07:27+00:00', 'masked_author': 'username_1', 'text': 'Hey @username_0, thanks for taking the time to write in!\r\n\r\nYou are correct, I did remove that link from the project website. My main reason for doing so is to try and discourage the use of `accessToken`, now that its no longer required. Using a client ID is __much safer__ than access tokens, since they don\'t contain any special security privileges for users.\r\n\r\nThe downside is that API responses do not ""know"" who the current user is when you are using client IDs. So when you are trying to access `image.user_has_liked`, it longer know who ""user"" is. On the one hand that is more secure, but on the other means you can\'t filter by that property.\r\n\r\nI\'ve left support for using `accessToken` in the library, but I\'m treating it more like a ""power user"" feature. So you can continue to use a token if you\'d like to have extra functionality, but you\'ll have to ""get"" that token on your own, I won\'t be issuing them anymore.\r\n\r\nAt some point in the future I plan on removing the little app that was granting tokens for people, and encourage everyone to use client IDs instead for safety.\r\n\r\nHope that makes sense!', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'stevenschobert', 'comment_id': None, 'datetime': '2015-11-10 16:07:29+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Link for AccessToken Removed - still may be required
username_0: this link was removed from your site with version 1.4.0 however to use certain functions it seams to still be required such as 
<code>
filter: function(image) {
            return image.user_has_liked;
        }
</code>
https://instagram.com/oauth/authorize/?client_id=467ede5a6b9b48ae8e03f4e2582aeeb3&redirect_uri=http://instafeedjs.com&response_type=token
<issue_comment>username_1: Hey @username_0, thanks for taking the time to write in!

You are correct, I did remove that link from the project website. My main reason for doing so is to try and discourage the use of `accessToken`, now that its no longer required. Using a client ID is __much safer__ than access tokens, since they don't contain any special security privileges for users.

The downside is that API responses do not ""know"" who the current user is when you are using client IDs. So when you are trying to access `image.user_has_liked`, it longer know who ""user"" is. On the one hand that is more secure, but on the other means you can't filter by that property.

I've left support for using `accessToken` in the library, but I'm treating it more like a ""power user"" feature. So you can continue to use a token if you'd like to have extra functionality, but you'll have to ""get"" that token on your own, I won't be issuing them anymore.

At some point in the future I plan on removing the little app that was granting tokens for people, and encourage everyone to use client IDs instead for safety.

Hope that makes sense!<issue_closed>"
