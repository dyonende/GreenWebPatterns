flutter/website,318413269,984,"{'number': 984.0, 'repo': 'website', 'user_login': 'flutter'}","[{'action': 'opened', 'author': 'rock3r', 'comment_id': None, 'datetime': '2018-04-27T13:38:55Z', 'masked_author': 'username_0', 'text': ""This PR is for the eighth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.\r\n\r\nFollowing the same rough format as the `flutter-for-android.md` document, with iOS details instead.\r\n\r\nThe following sections have been created:\r\n\r\n* What is the equivalent of a placeholder in a text field?\r\n* How do I show validation errors?\r\n\r\n⚠️ **This requires #982 to be merged first!** ⚠️"", 'title': 'Flutter for iOS — Form input section', 'type': 'issue'}
 {'action': 'created', 'author': 'rock3r', 'comment_id': 385896234.0, 'datetime': '2018-05-02 08:01:48+00:00', 'masked_author': 'username_0', 'text': 'Contents covered in #993, closing this. Will address comments on that one.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Flutter for iOS — Form input section
username_0: This PR is for the eighth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.

Following the same rough format as the `flutter-for-android.md` document, with iOS details instead.

The following sections have been created:

* What is the equivalent of a placeholder in a text field?
* How do I show validation errors?

⚠️ **This requires #982 to be merged first!** ⚠️
<issue_comment>username_0: Contents covered in #993, closing this. Will address comments on that one."
emberjs/website,57180834,1994,,"[{'action': 'opened', 'author': 'mikepmunroe', 'comment_id': None, 'datetime': '2015-02-10 14:25:29+00:00', 'masked_author': 'username_0', 'text': 'The purpose of this issue is to organize all issues/meta issues for working towards the end goal of updating Ember Guides. This list is a living document and should be cultivated as we progress. \r\n\r\nThis list is the beginning of a process to keep track of progress/what the blockers are/who is working on what.\r\n\r\nTo Do: Link each checkbox to a separate issue where appropriate and place Github handles next to tasks that have an owner\r\n\r\n- [ ] Find a way to version the guides, so all of the updates above don\'t totally pwn people still working on globals apps\r\n- [ ] Make docs deploy a part of the standard Ember release train \r\n- [ ] Update the guides to use Ember CLI.\r\n- [ ] Bifurcate the community, with emberjs.com for noobs and ember-cli.com for ""power users"" (we need to climb the mountain together, as DHH says)\r\n- [ ] Remove any mention of features we\'ve deprecated from the guides\r\n- [ ] Change examples from ""globals-mode"" to ""module-mode""\r\n- [ ] Write a guide for how to translate module-mode examples to globals-mode\r\n- [ ] @bsclifton had the brilliant idea of a glossary in emberjs/website#1956 which we should flush out\r\n- [ ] Review all other things @bsclifton has started in emberjs/website#1956 \r\n- [ ] JSBin samples should be updated, and possibly just removed (since Ember CLI and JSBin don\'t play well at the moment)\r\n- [ ] Try to maintain a unified voice throughout the guides\r\n- [ ] Schedule weekly standing meeting for stakeholders (@username_0)', 'title': '[Meta issue] Update Ember Guides', 'type': 'issue'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 73707494.0, 'datetime': '2015-02-10 14:28:50+00:00', 'masked_author': 'username_0', 'text': 'link to issue for doc deploy as part of standard Ember release', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 73707993.0, 'datetime': '2015-02-10 14:31:54+00:00', 'masked_author': 'username_0', 'text': 'cc: @ricardojmendez @username_2 @bsclifton @username_3 @tomdale @username_1', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 73718207.0, 'datetime': '2015-02-10 15:27:17+00:00', 'masked_author': 'username_1', 'text': 'Probably a dup of #1855', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 73719749.0, 'datetime': '2015-02-10 15:34:41+00:00', 'masked_author': 'username_0', 'text': 'Later today, I will merge this with #1855 and make sure #1855 has all items within this list or make adjustments accordingly.\r\n\r\nFollowing that, I will close out this issue as a duplicate.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stevekinney', 'comment_id': 73875633.0, 'datetime': '2015-02-11 12:47:41+00:00', 'masked_author': 'username_2', 'text': '@username_0 For the fourth checkbox, I think the goal is actually to _not_ bifurcate the community.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 73930522.0, 'datetime': '2015-02-11 18:02:13+00:00', 'masked_author': 'username_0', 'text': '@username_2 good catch. Working on merging this with #1855 and closing out as dupe now.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 74009507.0, 'datetime': '2015-02-12 02:58:31+00:00', 'masked_author': 'username_0', 'text': 'leaving this open as a separate issue and linked versioning and deployment tasks to #1855', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 74114821.0, 'datetime': '2015-02-12 17:34:41+00:00', 'masked_author': 'username_0', 'text': '@username_1 @username_7, We held our first standing meeting today and have a team of people ready to start tackling updates to Ember guides. Noticed that https://github.com/emberjs/guides.emberjs.com has been created. The repo is empty now. Can you confirm that would be the location for new updates? Is there something one of us can do to help get that repo populated? \r\n\r\nDuring the meeting we all confirmed that the guides should be updated with Ember CLI syntax and we will take on the burden of keeping docs up to date as changes are made to the best of our abilities.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 74154314.0, 'datetime': '2015-02-12 21:16:32+00:00', 'masked_author': 'username_1', 'text': '@username_0 https://github.com/emberjs/guides.emberjs.com is where the built assets will go for divshot publication. It will be a repo that people should consider read-only. https://github.com/emberjs/guides will be where the source lives and is updated.\r\n\r\nWe need to first extract the guides and do a one publication with current globals semantics before moving over. The existing pages on http://emberjs.com/ will need to redirect to that the migrated version.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 74155476.0, 'datetime': '2015-02-12 21:23:18+00:00', 'masked_author': 'username_1', 'text': ""I'm working on the initial extraction right now."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 74905664.0, 'datetime': '2015-02-18 17:19:36+00:00', 'masked_author': 'username_0', 'text': '@username_1 Is the initial extraction still in progress?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 74962137.0, 'datetime': '2015-02-18 22:27:50+00:00', 'masked_author': 'username_1', 'text': 'Yessir. https://github.com/emberjs/guides', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 74962339.0, 'datetime': '2015-02-18 22:29:12+00:00', 'masked_author': 'username_1', 'text': ""Although we can't publish yet until https://github.com/emberjs/guides/issues/2 is closed and we can search again."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'joostdevries', 'comment_id': 75138590.0, 'datetime': '2015-02-19 21:21:29+00:00', 'masked_author': 'username_3', 'text': ""@username_0 to clarify: in ember-cli/ember-cli#3307 we're tracking an update to the Ember CLI site. My idea with that issue is that we'll be improving the structure of that site (split into several sections). I've isolated all the content dealing with consumers (app developers) and as this issue progresses we'll be taking that content out (moving it to the Ember guides)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stefanpenner', 'comment_id': 75658833.0, 'datetime': '2015-02-23 23:13:14+00:00', 'masked_author': 'username_4', 'text': 'what is this? Am i blocking something?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikepmunroe', 'comment_id': 75665997.0, 'datetime': '2015-02-23 23:57:18+00:00', 'masked_author': 'username_0', 'text': '@username_4, you are not blocking. \r\n\r\nThis is in regards to the work you did on Ember-CLI jsbin proof of concept. We took an action item to follow up with you at some point to see what you had learned and who that might be able to transition to to take it home. There is an effort to update guides with CLI syntax, so being able to link to CLI based jsbins would be nice, if and when that is possible.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stefanpenner', 'comment_id': 75666180.0, 'datetime': '2015-02-23 23:57:51+00:00', 'masked_author': 'username_4', 'text': 'ah ok.\r\n\r\ncc @username_3 ^^ may be related to some of our work', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vire', 'comment_id': 77684049.0, 'datetime': '2015-03-07 10:54:31+00:00', 'masked_author': 'username_5', 'text': '@username_0 based on some issues #2055 #1998 and [#10581](https://github.com/emberjs/ember.js/issues/10581)\r\n\r\nI\'ve started yesterday fixing jsbins - updating the header to following convention:\r\n```\r\n<script src=""http://code.jquery.com/jquery.js""></script>\r\n<script src=""http://builds.emberjs.com/release/ember-template-compiler.js""></script>\r\n<script src=""http://builds.emberjs.com/release/ember.js""></script>\r\n```\r\n\r\nBut today I\'ve watched EmberConf 2015 - Opening Keynote :smile: and there were the new ember guides demo.\r\n\r\nQuestion is now, should I continue in fixing jsbins for the website guide, or what will be the mechanism?\r\n\r\nComplete removal of jsbins doesn\'t make sense to me since (except ember-cli) they are powerful at simple demonstration of concepts and provide easy hands on. (until there is a better way i wouldn\'t remove them...)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 77696565.0, 'datetime': '2015-03-07 16:29:34+00:00', 'masked_author': 'username_1', 'text': ""We're stuck between a rock and a hard place. JSBin and its ilk are from a time before all the frameworks required project organization and build steps.\r\n\r\nThere's just not a great way (yet?) to express complex projects in a runnable way using these tools. I think we'll have to just remove for 2.0"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vire', 'comment_id': 77698779.0, 'datetime': '2015-03-07 17:11:58+00:00', 'masked_author': 'username_5', 'text': ""@username_1 sure, I've been thinking, how great it would be to have an online/virtual abstraction above ember-cli, demonstrating it's benefits.\r\n\r\n Q: Is there a good solution available allowing a user interact via browser (curd operations) with a ember-cli app instance? \r\n\r\nIf not, is it worth to develop one - wouldn't it be easier to craft something like leanryou-ember-cli based on [learnyounode](https://github.com/rvagg/learnyounode) - an interactive shell tutorial that would share a same **learning track** as online ember guides? [suggestion]\r\n\r\nAs I understand the feature of versioned online guide it would be a walk-through ember API features wrapped with ember-cli concepts (folder struct, ES6 features - modules, naming conventions, assets). Still supporting a guide section with JSBin is helpful, especially to someone who is willing to do read/modify/evaluate learning.\r\n\r\nWhat's the current road-map in terms of guides for the 2.0? is it somewhere stated?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'joostdevries', 'comment_id': 77703133.0, 'datetime': '2015-03-07 18:39:51+00:00', 'masked_author': 'username_3', 'text': ""@username_1 @username_5 @username_4 the jsbin issue is one that has been worrying me for quite a wile to be honest. I'm still not sure how we can actually get something of the ground. Right now, there are two issues: apps and addons. It would be great if you could create quick POC's of both, based on Ember CLI but entirely web-based.\r\n\r\nI'm leaning towards building something but I want the solution to be as minimal as possible. Right now I'm thinking that a small layer on top of the Gist API would probably give the best user experience (so you can create a gist which would be merged into a bare Ember CLI app)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'joostdevries', 'comment_id': 77709273.0, 'datetime': '2015-03-07 20:48:42+00:00', 'masked_author': 'username_3', 'text': '@username_1 @username_5 @username_4 POC:\r\n- http://ember-playground.joostdvrs.com/f2c90713bdfdf54a262b\r\n- https://gist.github.com/username_3/f2c90713bdfdf54a262b', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vire', 'comment_id': 77715093.0, 'datetime': '2015-03-07 22:54:09+00:00', 'masked_author': 'username_5', 'text': ':+1: amazing!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 77725272.0, 'datetime': '2015-03-08 00:41:06+00:00', 'masked_author': 'username_1', 'text': ""That's pretty great!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'joostdevries', 'comment_id': 77746303.0, 'datetime': '2015-03-08 12:32:20+00:00', 'masked_author': 'username_3', 'text': '@username_1 http://ember-playground.joostdvrs.com/ It also supports CSS now. What would you need from me to use this in the guides?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'trek', 'comment_id': 86727224.0, 'datetime': '2015-03-26 21:34:01+00:00', 'masked_author': 'username_1', 'text': '@username_3 where the source for this?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'joostdevries', 'comment_id': 86862984.0, 'datetime': '2015-03-27 07:58:22+00:00', 'masked_author': 'username_3', 'text': ""@username_1 Was planning on putting it in a repo but was then pointed to @alexspeller s [Ember-Twiddle](https://github.com/alexspeller/ember-twiddle) ([demo](http://alexspeller.com/ember-twiddle/)) which is a lot more awesome and well-engineered. I'm working on a [PR](https://github.com/alexspeller/ember-twiddle/pull/1) adding Gists as a backend. I'll probably also be able to ask the interface heroes at my company to do some UI tweaks.\r\n\r\nMaybe it would be an idea to host the final version on a emberjs.com subdomain?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'michaelrkn', 'comment_id': 152307020.0, 'datetime': '2015-10-29 20:20:21+00:00', 'masked_author': 'username_6', 'text': 'This should be closed.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'rwjblue', 'comment_id': None, 'datetime': '2015-10-29 21:07:20+00:00', 'masked_author': 'username_7', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: [Meta issue] Update Ember Guides
username_0: The purpose of this issue is to organize all issues/meta issues for working towards the end goal of updating Ember Guides. This list is a living document and should be cultivated as we progress. 

This list is the beginning of a process to keep track of progress/what the blockers are/who is working on what.

To Do: Link each checkbox to a separate issue where appropriate and place Github handles next to tasks that have an owner

- [ ] Find a way to version the guides, so all of the updates above don't totally pwn people still working on globals apps
- [ ] Make docs deploy a part of the standard Ember release train 
- [ ] Update the guides to use Ember CLI.
- [ ] Bifurcate the community, with emberjs.com for noobs and ember-cli.com for ""power users"" (we need to climb the mountain together, as DHH says)
- [ ] Remove any mention of features we've deprecated from the guides
- [ ] Change examples from ""globals-mode"" to ""module-mode""
- [ ] Write a guide for how to translate module-mode examples to globals-mode
- [ ] @bsclifton had the brilliant idea of a glossary in emberjs/website#1956 which we should flush out
- [ ] Review all other things @bsclifton has started in emberjs/website#1956 
- [ ] JSBin samples should be updated, and possibly just removed (since Ember CLI and JSBin don't play well at the moment)
- [ ] Try to maintain a unified voice throughout the guides
- [ ] Schedule weekly standing meeting for stakeholders (@username_0)
<issue_comment>username_0: link to issue for doc deploy as part of standard Ember release
<issue_comment>username_0: cc: @ricardojmendez @username_2 @bsclifton @username_3 @tomdale @username_1
<issue_comment>username_1: Probably a dup of #1855
<issue_comment>username_0: Later today, I will merge this with #1855 and make sure #1855 has all items within this list or make adjustments accordingly.

Following that, I will close out this issue as a duplicate.
<issue_comment>username_2: @username_0 For the fourth checkbox, I think the goal is actually to _not_ bifurcate the community.
<issue_comment>username_0: @username_2 good catch. Working on merging this with #1855 and closing out as dupe now.
<issue_comment>username_0: leaving this open as a separate issue and linked versioning and deployment tasks to #1855
<issue_comment>username_0: @username_1 @username_7, We held our first standing meeting today and have a team of people ready to start tackling updates to Ember guides. Noticed that https://github.com/emberjs/guides.emberjs.com has been created. The repo is empty now. Can you confirm that would be the location for new updates? Is there something one of us can do to help get that repo populated? 

During the meeting we all confirmed that the guides should be updated with Ember CLI syntax and we will take on the burden of keeping docs up to date as changes are made to the best of our abilities.
<issue_comment>username_1: @username_0 https://github.com/emberjs/guides.emberjs.com is where the built assets will go for divshot publication. It will be a repo that people should consider read-only. https://github.com/emberjs/guides will be where the source lives and is updated.

We need to first extract the guides and do a one publication with current globals semantics before moving over. The existing pages on http://emberjs.com/ will need to redirect to that the migrated version.
<issue_comment>username_1: I'm working on the initial extraction right now.
<issue_comment>username_0: @username_1 Is the initial extraction still in progress?
<issue_comment>username_1: Yessir. https://github.com/emberjs/guides
<issue_comment>username_1: Although we can't publish yet until https://github.com/emberjs/guides/issues/2 is closed and we can search again.
<issue_comment>username_3: @username_0 to clarify: in ember-cli/ember-cli#3307 we're tracking an update to the Ember CLI site. My idea with that issue is that we'll be improving the structure of that site (split into several sections). I've isolated all the content dealing with consumers (app developers) and as this issue progresses we'll be taking that content out (moving it to the Ember guides).
<issue_comment>username_4: what is this? Am i blocking something?
<issue_comment>username_0: @username_4, you are not blocking. 

This is in regards to the work you did on Ember-CLI jsbin proof of concept. We took an action item to follow up with you at some point to see what you had learned and who that might be able to transition to to take it home. There is an effort to update guides with CLI syntax, so being able to link to CLI based jsbins would be nice, if and when that is possible.
<issue_comment>username_4: ah ok.

cc @username_3 ^^ may be related to some of our work
<issue_comment>username_5: @username_0 based on some issues #2055 #1998 and [#10581](https://github.com/emberjs/ember.js/issues/10581)

I've started yesterday fixing jsbins - updating the header to following convention:
```
<script src=""http://code.jquery.com/jquery.js""></script>
<script src=""http://builds.emberjs.com/release/ember-template-compiler.js""></script>
<script src=""http://builds.emberjs.com/release/ember.js""></script>
```

But today I've watched EmberConf 2015 - Opening Keynote :smile: and there were the new ember guides demo.

Question is now, should I continue in fixing jsbins for the website guide, or what will be the mechanism?

Complete removal of jsbins doesn't make sense to me since (except ember-cli) they are powerful at simple demonstration of concepts and provide easy hands on. (until there is a better way i wouldn't remove them...)
<issue_comment>username_1: We're stuck between a rock and a hard place. JSBin and its ilk are from a time before all the frameworks required project organization and build steps.

There's just not a great way (yet?) to express complex projects in a runnable way using these tools. I think we'll have to just remove for 2.0
<issue_comment>username_5: @username_1 sure, I've been thinking, how great it would be to have an online/virtual abstraction above ember-cli, demonstrating it's benefits.

 Q: Is there a good solution available allowing a user interact via browser (curd operations) with a ember-cli app instance? 

If not, is it worth to develop one - wouldn't it be easier to craft something like leanryou-ember-cli based on [learnyounode](https://github.com/rvagg/learnyounode) - an interactive shell tutorial that would share a same **learning track** as online ember guides? [suggestion]

As I understand the feature of versioned online guide it would be a walk-through ember API features wrapped with ember-cli concepts (folder struct, ES6 features - modules, naming conventions, assets). Still supporting a guide section with JSBin is helpful, especially to someone who is willing to do read/modify/evaluate learning.

What's the current road-map in terms of guides for the 2.0? is it somewhere stated?
<issue_comment>username_3: @username_1 @username_5 @username_4 the jsbin issue is one that has been worrying me for quite a wile to be honest. I'm still not sure how we can actually get something of the ground. Right now, there are two issues: apps and addons. It would be great if you could create quick POC's of both, based on Ember CLI but entirely web-based.

I'm leaning towards building something but I want the solution to be as minimal as possible. Right now I'm thinking that a small layer on top of the Gist API would probably give the best user experience (so you can create a gist which would be merged into a bare Ember CLI app).
<issue_comment>username_3: @username_1 @username_5 @username_4 POC:
- http://ember-playground.joostdvrs.com/f2c90713bdfdf54a262b
- https://gist.github.com/username_3/f2c90713bdfdf54a262b
<issue_comment>username_5: :+1: amazing!
<issue_comment>username_1: That's pretty great!
<issue_comment>username_3: @username_1 http://ember-playground.joostdvrs.com/ It also supports CSS now. What would you need from me to use this in the guides?
<issue_comment>username_1: @username_3 where the source for this?
<issue_comment>username_3: @username_1 Was planning on putting it in a repo but was then pointed to @alexspeller s [Ember-Twiddle](https://github.com/alexspeller/ember-twiddle) ([demo](http://alexspeller.com/ember-twiddle/)) which is a lot more awesome and well-engineered. I'm working on a [PR](https://github.com/alexspeller/ember-twiddle/pull/1) adding Gists as a backend. I'll probably also be able to ask the interface heroes at my company to do some UI tweaks.

Maybe it would be an idea to host the final version on a emberjs.com subdomain?
<issue_comment>username_6: This should be closed.<issue_closed>"
corona-warn-app/cwa-website,856891069,1085,"{'number': 1085.0, 'repo': 'cwa-website', 'user_login': 'corona-warn-app'}","[{'action': 'opened', 'author': 'heinezen', 'comment_id': None, 'datetime': '2021-04-13T12:00:43Z', 'masked_author': 'username_0', 'text': 'Changelog:\r\n- Rephrase to ""is not turned off [...] immediately""\r\n- ""switch on"" -> ""enable""', 'title': ""FAQ - update 'battery_optimization_default' entry"", 'type': 'issue'}
 {'action': 'created', 'author': 'heinezen', 'comment_id': 820392650.0, 'datetime': '2021-04-15 12:43:39+00:00', 'masked_author': 'username_0', 'text': ""@MikeMcC399 Ah yes, thank you for reminding me. This issue again... I don't think there is a quick solution for this PR right now because I do not want to link to https://www.coronawarn.app/en/faq/#no_risk_update before it has been reworked. Maybe we'll split the instructions from the https://www.coronawarn.app/en/faq/#no_risk_update entry into a new FAQ entry and then link it."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: FAQ - update 'battery_optimization_default' entry
username_0: Changelog:
- Rephrase to ""is not turned off [...] immediately""
- ""switch on"" -> ""enable""
<issue_comment>username_0: @MikeMcC399 Ah yes, thank you for reminding me. This issue again... I don't think there is a quick solution for this PR right now because I do not want to link to https://www.coronawarn.app/en/faq/#no_risk_update before it has been reworked. Maybe we'll split the instructions from the https://www.coronawarn.app/en/faq/#no_risk_update entry into a new FAQ entry and then link it."
cake-build/website,312839865,505,,"[{'action': 'opened', 'author': 'devlead', 'comment_id': None, 'datetime': '2018-04-10T09:21:45Z', 'masked_author': 'username_0', 'text': '@username_1 commented on [Tue Apr 10 2018](https://github.com/cake-build/cake/issues/2122)\n\nAPI - Missing ability to download  reference guide for offline.\r\nThanks', 'title': 'API - Missing ability to download  reference guide for offline.', 'type': 'issue'}
 {'action': 'created', 'author': 'devlead', 'comment_id': 380034816.0, 'datetime': '2018-04-10 09:27:28+00:00', 'masked_author': 'username_0', 'text': ""There's no offline API reference available currently, the website is a static web site so you could download the html files from the publish git branch\r\nhttps://github.com/cake-build/website/archive/publish/master.zip"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'devlead', 'comment_id': 380040593.0, 'datetime': '2018-04-10 09:47:07+00:00', 'masked_author': 'username_0', 'text': ""If you're on a Windows machine you could actually generate and host the site locally using WYAM, first clone repo get all addin and sources from GitrHub and NuGet\r\n```PowerShell\r\nhttps://github.com/cake-build/website.git\r\n.\\build.ps1 -Target GetArtifacts\r\n```\r\n\r\nThen you can render the docs locally\r\n```PowerShell\r\n.\\build.ps1 -Target Preview\r\n```\r\n\r\nAnd preview using local url http://localhost:5080"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Eldadc', 'comment_id': 380052731.0, 'datetime': '2018-04-10 10:32:22+00:00', 'masked_author': 'username_1', 'text': 'Thanks for the detailed answer !', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: API - Missing ability to download  reference guide for offline.
username_0: @username_1 commented on [Tue Apr 10 2018](https://github.com/cake-build/cake/issues/2122)

API - Missing ability to download  reference guide for offline.
Thanks
<issue_comment>username_0: There's no offline API reference available currently, the website is a static web site so you could download the html files from the publish git branch
https://github.com/cake-build/website/archive/publish/master.zip
<issue_comment>username_0: If you're on a Windows machine you could actually generate and host the site locally using WYAM, first clone repo get all addin and sources from GitrHub and NuGet
```PowerShell
https://github.com/cake-build/website.git
.\build.ps1 -Target GetArtifacts
```

Then you can render the docs locally
```PowerShell
.\build.ps1 -Target Preview
```

And preview using local url http://localhost:5080
<issue_comment>username_1: Thanks for the detailed answer !"
actix/actix-website,846871281,222,"{'number': 222.0, 'repo': 'actix-website', 'user_login': 'actix'}","[{'action': 'opened', 'author': 'ibraheemdev', 'comment_id': None, 'datetime': '2021-03-31T15:33:30Z', 'masked_author': 'username_0', 'text': '![image](https://user-images.githubusercontent.com/34988408/113170536-a3cc2b80-9214-11eb-9e80-b9a305ecf99c.png)\r\n![image](https://user-images.githubusercontent.com/34988408/113170703-cd855280-9214-11eb-919d-714ce46da75b.png)\r\n\r\n\r\n- [x] re-add some files (license, cname)\r\n- [x] replace shortcodes\r\n- [ ] update home page', 'title': 'Migrate to docusaurus', 'type': 'issue'}
 {'action': 'created', 'author': 'nikstur', 'comment_id': 986322909.0, 'datetime': '2021-12-05 23:29:01+00:00', 'masked_author': 'username_1', 'text': 'Is there (still) interest by the maintainers in migrating to Docusaurus? I don\'t know in what detail this has been discussed before, but here is my opinion:\r\n\r\nIm generally in favour of Docusaurus:\r\n\r\nPros:\r\n- Designed solely for documentation\r\n- Easier to support multiple versions of the website for different releases of actix-web (there is no straightforward way in Hugo)\r\n- Easier to support i18n (less manual work needed than in Hugo)\r\n- Looks prettier (including night mode --- very subjective of course) \r\n- Benefit from updates through a simple version bump instead of building it by ourselves\r\n- Solves license issue mentioned in the readme of this repo.\r\n\r\nCons:\r\n- Variable substitution in markdown is a bit ugly. The entire line has to be wrapped in an JSX element.  \r\n  \r\n  Example:\r\n  ```jsx\r\n  <>Actix Web currently has a minimum supported Rust version (MSRV) of { rustVersion }</>\r\n  ```\r\n  \r\n  It\'s even worse in code blocks: The entire block has to be written in JSX and the content has to be escaped to retain line breaks.\r\n  ```jsx\r\n  <RenderCodeBlock className=""language-toml"">\r\n  {`[dependencies]\r\n  actix-web = ""${actixWebVersion}""`}\r\n  </RenderCodeBlock>\r\n  ```\r\n  However right now variables are not used very often: the rust and actix-web versions are mentioned in just two files each. It might be feasible to either hardcode the variables or use the ""ugly"" JSX syntax \r\n- Javascript tooling (npm or yarn)\r\n- Yet another tool to learn and support (however its still mostly markdown of course)\r\n\r\nIf there is interest, I\'d volunteer for reviewing the PR in depth (I\'ve looked over it but haven\'t commented on the issues I found) and helping out with the finishing touches if @username_0 is not available anymore.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'robjtede', 'comment_id': 986326532.0, 'datetime': '2021-12-05 23:52:51+00:00', 'masked_author': 'username_2', 'text': 'From the maintainers, there is still interest in migrating. The only thing holding this PR back is a homepage refresh.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ibraheemdev', 'comment_id': 986377535.0, 'datetime': '2021-12-06 02:16:18+00:00', 'masked_author': 'username_0', 'text': 'I think to avoid the list of conflicts growing even more, we can use the current home page and refresh it later.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Woile', 'comment_id': 1070440384.0, 'datetime': '2022-03-17 07:32:31+00:00', 'masked_author': 'username_3', 'text': '@username_0 I think I can finish this PR, do you mind if I continue it?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ibraheemdev', 'comment_id': 1071001379.0, 'datetime': '2022-03-17 15:48:42+00:00', 'masked_author': 'username_0', 'text': ""Sure! I don't think I have the energy to fix all the merge conflicts 😅"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'robjtede', 'comment_id': 1071003074.0, 'datetime': '2022-03-17 15:50:01+00:00', 'masked_author': 'username_2', 'text': ""Surely easier to re-apply the changes from this diff manually in its own fork. There's been a lot of changes and I wouldn't trust a merge conflict solve at this point."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Woile', 'comment_id': 1072531604.0, 'datetime': '2022-03-18 15:40:26+00:00', 'masked_author': 'username_3', 'text': ""I think I've covered most of the comments in the PR #266 can u take a look @username_1 ? Thanks"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nikstur', 'comment_id': 1072544277.0, 'datetime': '2022-03-18 15:53:56+00:00', 'masked_author': 'username_1', 'text': ""Great, thank you for the work! I'll take a look."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'robjtede', 'comment_id': 1072546239.0, 'datetime': '2022-03-18 15:55:17+00:00', 'masked_author': 'username_2', 'text': 'superseded by #266', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Migrate to docusaurus
username_0: ![image](https://user-images.githubusercontent.com/34988408/113170536-a3cc2b80-9214-11eb-9e80-b9a305ecf99c.png)
![image](https://user-images.githubusercontent.com/34988408/113170703-cd855280-9214-11eb-919d-714ce46da75b.png)


- [x] re-add some files (license, cname)
- [x] replace shortcodes
- [ ] update home page
<issue_comment>username_1: Is there (still) interest by the maintainers in migrating to Docusaurus? I don't know in what detail this has been discussed before, but here is my opinion:

Im generally in favour of Docusaurus:

Pros:
- Designed solely for documentation
- Easier to support multiple versions of the website for different releases of actix-web (there is no straightforward way in Hugo)
- Easier to support i18n (less manual work needed than in Hugo)
- Looks prettier (including night mode --- very subjective of course) 
- Benefit from updates through a simple version bump instead of building it by ourselves
- Solves license issue mentioned in the readme of this repo.

Cons:
- Variable substitution in markdown is a bit ugly. The entire line has to be wrapped in an JSX element.  
  
  Example:
  ```jsx
  <>Actix Web currently has a minimum supported Rust version (MSRV) of { rustVersion }</>
  ```
  
  It's even worse in code blocks: The entire block has to be written in JSX and the content has to be escaped to retain line breaks.
  ```jsx
  <RenderCodeBlock className=""language-toml"">
  {`[dependencies]
  actix-web = ""${actixWebVersion}""`}
  </RenderCodeBlock>
  ```
  However right now variables are not used very often: the rust and actix-web versions are mentioned in just two files each. It might be feasible to either hardcode the variables or use the ""ugly"" JSX syntax 
- Javascript tooling (npm or yarn)
- Yet another tool to learn and support (however its still mostly markdown of course)

If there is interest, I'd volunteer for reviewing the PR in depth (I've looked over it but haven't commented on the issues I found) and helping out with the finishing touches if @username_0 is not available anymore.
<issue_comment>username_2: From the maintainers, there is still interest in migrating. The only thing holding this PR back is a homepage refresh.
<issue_comment>username_0: I think to avoid the list of conflicts growing even more, we can use the current home page and refresh it later.
<issue_comment>username_3: @username_0 I think I can finish this PR, do you mind if I continue it?
<issue_comment>username_0: Sure! I don't think I have the energy to fix all the merge conflicts 😅
<issue_comment>username_2: Surely easier to re-apply the changes from this diff manually in its own fork. There's been a lot of changes and I wouldn't trust a merge conflict solve at this point.
<issue_comment>username_3: I think I've covered most of the comments in the PR #266 can u take a look @username_1 ? Thanks
<issue_comment>username_1: Great, thank you for the work! I'll take a look.
<issue_comment>username_2: superseded by #266"
