istio/istio.io,511608415,5245,"{'number': 5245.0, 'repo': 'istio.io', 'user_login': 'istio'}","[{'action': 'opened', 'author': 'adammil2000', 'comment_id': None, 'datetime': '2019-10-23T22:39:38Z', 'masked_author': 'username_0', 'text': 'Adding the istioctl upgrade feature documentation.', 'title': 'istioctl upgrade feature docs', 'type': 'issue'}
 {'action': 'created', 'author': 'adammil2000', 'comment_id': 547523704.0, 'datetime': '2019-10-29 16:55:02+00:00', 'masked_author': 'username_0', 'text': 'Please ignore the link check failure, its temporary due to the reason mentioned on the target site:\r\n\r\n""Due to the fires and power outages in California, oreilly.com is unavailable.""', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: istioctl upgrade feature docs
username_0: Adding the istioctl upgrade feature documentation.
<issue_comment>username_0: Please ignore the link check failure, its temporary due to the reason mentioned on the target site:

""Due to the fires and power outages in California, oreilly.com is unavailable."""
taiwangoldcard/website,636663370,9,,"[{'action': 'opened', 'author': 'fifieldt', 'comment_id': None, 'datetime': '2020-06-11 02:09:30+00:00', 'masked_author': 'username_0', 'text': 'The site search, powered by lunr.js is currently disabled in config.toml.\r\n\r\nThis is a necessary feature and should be fixed.\r\n\r\nAt the moment, when enabled, search is functional. However, the search results it provides only include major section titles and link through to major sections.\r\n\r\nInstead, search results should include individual question headings and link through to individual questions.', 'title': 'Site Search is Disabled, and when Enabled it only sends users to broad sections', 'type': 'issue'}
 {'action': 'created', 'author': 'fifieldt', 'comment_id': 642362816.0, 'datetime': '2020-06-11 02:10:50+00:00', 'masked_author': 'username_0', 'text': 'So, looking at the lunr index function in themes/compose/assets/js/search.js ... it looks like all that is index is a hugo ""Page"", with the entire content of that page included as the ""body"". There is no segregation of content within the page from a search indexing perspective.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geekyme', 'comment_id': 699522342.0, 'datetime': '2020-09-26 17:11:36+00:00', 'masked_author': 'username_1', 'text': 'Closing this since we got a fix above! Cheers!', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'geekyme', 'comment_id': None, 'datetime': '2020-09-26 17:11:36+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'fifieldt', 'comment_id': 699698726.0, 'datetime': '2020-09-27 22:54:51+00:00', 'masked_author': 'username_0', 'text': ""Yeah, we probably need a new issue for this though. Entries in the search list don't provide question titles - just section headings."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Site Search is Disabled, and when Enabled it only sends users to broad sections
username_0: The site search, powered by lunr.js is currently disabled in config.toml.

This is a necessary feature and should be fixed.

At the moment, when enabled, search is functional. However, the search results it provides only include major section titles and link through to major sections.

Instead, search results should include individual question headings and link through to individual questions.
<issue_comment>username_0: So, looking at the lunr index function in themes/compose/assets/js/search.js ... it looks like all that is index is a hugo ""Page"", with the entire content of that page included as the ""body"". There is no segregation of content within the page from a search indexing perspective.
<issue_comment>username_1: Closing this since we got a fix above! Cheers!<issue_closed>
<issue_comment>username_0: Yeah, we probably need a new issue for this though. Entries in the search list don't provide question titles - just section headings."
apache/apisix-website,1160971620,944,,"[{'action': 'opened', 'author': 'tzssangglass', 'comment_id': None, 'datetime': '2022-03-07 06:38:56+00:00', 'masked_author': 'username_0', 'text': ""### Current State\n\nNow we have the powered-by page, which already corresponds to some icons. But they don't look uniform enough.\r\n\r\npowered-by: https://github.com/apache/apisix/blob/master/powered-by.md\r\n\r\n\n\n### Desired State\n\nMaybe we can refer to the user cases design of skywalking website: https://skywalking.apache.org/users/\r\n\r\nlink: https://github.com/apache/skywalking-website/blob/master/data/users.yml\n\n### Would you like to fix this issue?\n\n_No response_"", 'title': '[Docs]: add user case page', 'type': 'issue'}
 {'action': 'created', 'author': 'oil-oil', 'comment_id': 1060610684.0, 'datetime': '2022-03-07 11:58:17+00:00', 'masked_author': 'username_1', 'text': 'Do we need to add a new page in apisix website to show powered by ?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tzssangglass', 'comment_id': 1060615450.0, 'datetime': '2022-03-07 12:04:04+00:00', 'masked_author': 'username_0', 'text': ""I don't think so, maybe we need to modify apisix powered-by.md to provide accurate data, but still be displayed in APISIX WebSite."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SkyeYoung', 'comment_id': 1062713395.0, 'datetime': '2022-03-09 09:18:17+00:00', 'masked_author': 'username_2', 'text': '@username_0 Looks like we already have a page https://apisix.apache.org/zh/showcase. Maybe we just need change the powered-by.md? And should we use a more structural file like yaml or json to replace the powered-by.md?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tzssangglass', 'comment_id': 1063564079.0, 'datetime': '2022-03-10 01:35:22+00:00', 'masked_author': 'username_0', 'text': 'Yes, maybe we can just move powered-by to the apisix-website directory and change his format. cc @username_7 PTAL', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Baoyuantop', 'comment_id': 1063572622.0, 'datetime': '2022-03-10 01:54:48+00:00', 'masked_author': 'username_3', 'text': 'Current the data save in https://github.com/apache/apisix-website/blob/master/website/static/data/showcases.json , We need to synchronize this file.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SkyeYoung', 'comment_id': 1063580934.0, 'datetime': '2022-03-10 02:11:44+00:00', 'masked_author': 'username_2', 'text': 'I think we may just need one file (just like skywalking), or add the link of `showcases.json` to `powered-by.md` ðŸ¤”', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'moonming', 'comment_id': 1063711432.0, 'datetime': '2022-03-10 06:32:11+00:00', 'masked_author': 'username_4', 'text': 'by the way, The logos in [apisix.apache.org/zh/showcase](https://apisix.apache.org/zh/showcase) are not clear', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanzhenfang', 'comment_id': 1065839946.0, 'datetime': '2022-03-12 08:21:41+00:00', 'masked_author': 'username_5', 'text': 'ok i will try my best to completed the issuse', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanzhenfang', 'comment_id': 1065840403.0, 'datetime': '2022-03-12 08:25:05+00:00', 'masked_author': 'username_5', 'text': 'ok ,i  think i can try to completed it!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 1065840697.0, 'datetime': '2022-03-12 08:27:35+00:00', 'masked_author': 'username_6', 'text': '@username_5 It may be necessary to adjust the style of the image, and for some images that are still unclear, they need to be replaced with clearer ones. If you encounter any problems, feel free to drop me a line ï½ž Thanks ðŸ˜„', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 1065842598.0, 'datetime': '2022-03-12 08:42:11+00:00', 'masked_author': 'username_6', 'text': ""+1 Now we need to maintain two files, `showcases.json`, `powered-by.md`. To be honest, it's a bit complicated to make sure the two files are the same every time we update it"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanzhenfang', 'comment_id': 1065899744.0, 'datetime': '2022-03-12 15:11:56+00:00', 'masked_author': 'username_5', 'text': 'Thinks,i will', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanzhenfang', 'comment_id': 1065997844.0, 'datetime': '2022-03-13 01:16:17+00:00', 'masked_author': 'username_5', 'text': ""Whether the order of ICONS is important? And I can't @your id."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanzhenfang', 'comment_id': 1066052727.0, 'datetime': '2022-03-13 08:33:42+00:00', 'masked_author': 'username_5', 'text': '@username_6 \r\nhey, I have replaced nine pictures like these. \r\nThe old:\r\n![image](https://user-images.githubusercontent.com/99874763/158051186-d9939a14-0b7a-43d3-b746-2925c8a45610.png). ![image](https://user-images.githubusercontent.com/99874763/158051277-002beb24-639b-4f76-9e49-0b1da92d7aae.png)![image](https://user-images.githubusercontent.com/99874763/158051299-c94d5033-1a9e-4dbd-9150-ad840bd0dbdb.png)![image](https://user-images.githubusercontent.com/99874763/158051365-5c95452f-d45c-4844-a316-cccc14231e92.png)![image](https://user-images.githubusercontent.com/99874763/158051374-a0ac41fa-6081-4b92-84a4-e717d252b615.png)\r\n\r\n\r\nThe new:\r\n<img width=""142"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051211-2ba3a20b-8e10-4638-9d4f-a4759dc05103.png""><img width=""126"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051285-6d36d42a-2fdf-4a4d-87d7-ff6f9e3e2cf8.png""><img width=""105"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051314-552c96b1-f5ce-441c-8644-9b5df4abda4f.png""><img width=""119"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051339-02913067-a143-4bf1-afaf-6c57eeaf6fdd.png""><img width=""109"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051382-36bbaa54-6435-4f55-952a-21addb24e467.png"">\r\nAnd so on.\r\nI also add some Media queries to make the page look better in a small screen like this.\r\n![image](https://user-images.githubusercontent.com/99874763/158051611-b2f9f358-5d87-4a90-9283-798b55d3bffa.png)\r\n<img width=""813"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051638-cf5d4e53-e441-4a43-a122-b359629478ac.png"">', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanzhenfang', 'comment_id': 1066053261.0, 'datetime': '2022-03-13 08:37:11+00:00', 'masked_author': 'username_5', 'text': '@username_6 And I think I can make the page more beautiful if you give me some suggestions.ðŸ˜Š', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 1066091777.0, 'datetime': '2022-03-13 12:31:50+00:00', 'masked_author': 'username_6', 'text': 'Hi, @username_5 I have not to see your PR, please create your PR, then we can talk about it', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'juzhiyuan', 'comment_id': None, 'datetime': '2022-03-21 01:56:06+00:00', 'masked_author': 'username_7', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: [Docs]: add user case page
username_0: ### Current State

Now we have the powered-by page, which already corresponds to some icons. But they don't look uniform enough.

powered-by: https://github.com/apache/apisix/blob/master/powered-by.md



### Desired State

Maybe we can refer to the user cases design of skywalking website: https://skywalking.apache.org/users/

link: https://github.com/apache/skywalking-website/blob/master/data/users.yml

### Would you like to fix this issue?

_No response_
<issue_comment>username_1: Do we need to add a new page in apisix website to show powered by ?
<issue_comment>username_0: I don't think so, maybe we need to modify apisix powered-by.md to provide accurate data, but still be displayed in APISIX WebSite.
<issue_comment>username_2: @username_0 Looks like we already have a page https://apisix.apache.org/zh/showcase. Maybe we just need change the powered-by.md? And should we use a more structural file like yaml or json to replace the powered-by.md?
<issue_comment>username_0: Yes, maybe we can just move powered-by to the apisix-website directory and change his format. cc @username_7 PTAL
<issue_comment>username_3: Current the data save in https://github.com/apache/apisix-website/blob/master/website/static/data/showcases.json , We need to synchronize this file.
<issue_comment>username_2: I think we may just need one file (just like skywalking), or add the link of `showcases.json` to `powered-by.md` ðŸ¤”
<issue_comment>username_4: by the way, The logos in [apisix.apache.org/zh/showcase](https://apisix.apache.org/zh/showcase) are not clear
<issue_comment>username_5: ok i will try my best to completed the issuse
<issue_comment>username_5: ok ,i  think i can try to completed it!
<issue_comment>username_6: @username_5 It may be necessary to adjust the style of the image, and for some images that are still unclear, they need to be replaced with clearer ones. If you encounter any problems, feel free to drop me a line ï½ž Thanks ðŸ˜„
<issue_comment>username_6: +1 Now we need to maintain two files, `showcases.json`, `powered-by.md`. To be honest, it's a bit complicated to make sure the two files are the same every time we update it
<issue_comment>username_5: Thinks,i will
<issue_comment>username_5: Whether the order of ICONS is important? And I can't @your id.
<issue_comment>username_5: @username_6 
hey, I have replaced nine pictures like these. 
The old:
![image](https://user-images.githubusercontent.com/99874763/158051186-d9939a14-0b7a-43d3-b746-2925c8a45610.png). ![image](https://user-images.githubusercontent.com/99874763/158051277-002beb24-639b-4f76-9e49-0b1da92d7aae.png)![image](https://user-images.githubusercontent.com/99874763/158051299-c94d5033-1a9e-4dbd-9150-ad840bd0dbdb.png)![image](https://user-images.githubusercontent.com/99874763/158051365-5c95452f-d45c-4844-a316-cccc14231e92.png)![image](https://user-images.githubusercontent.com/99874763/158051374-a0ac41fa-6081-4b92-84a4-e717d252b615.png)


The new:
<img width=""142"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051211-2ba3a20b-8e10-4638-9d4f-a4759dc05103.png""><img width=""126"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051285-6d36d42a-2fdf-4a4d-87d7-ff6f9e3e2cf8.png""><img width=""105"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051314-552c96b1-f5ce-441c-8644-9b5df4abda4f.png""><img width=""119"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051339-02913067-a143-4bf1-afaf-6c57eeaf6fdd.png""><img width=""109"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051382-36bbaa54-6435-4f55-952a-21addb24e467.png"">
And so on.
I also add some Media queries to make the page look better in a small screen like this.
![image](https://user-images.githubusercontent.com/99874763/158051611-b2f9f358-5d87-4a90-9283-798b55d3bffa.png)
<img width=""813"" alt=""image"" src=""https://user-images.githubusercontent.com/99874763/158051638-cf5d4e53-e441-4a43-a122-b359629478ac.png"">
<issue_comment>username_5: @username_6 And I think I can make the page more beautiful if you give me some suggestions.ðŸ˜Š
<issue_comment>username_6: Hi, @username_5 I have not to see your PR, please create your PR, then we can talk about it<issue_closed>"
kubernetes/website,864553157,27657,,"[{'action': 'opened', 'author': 'jihoon-seo', 'comment_id': None, 'datetime': '2021-04-22 05:25:32+00:00', 'masked_author': 'username_0', 'text': ""**This is a Bug Report**\r\n\r\n<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->\r\n\r\n<!--Required Information-->\r\n**Problem:**\r\nSome lines are too long in Markdown code.\r\n\r\n\r\n- [intro-windows-in-kubernetes.md](https://github.com/kubernetes/website/blob/master/content/en/docs/setup/production-environment/windows/intro-windows-in-kubernetes.md) ([raw](https://github.com/kubernetes/website/raw/master/content/en/docs/setup/production-environment/windows/intro-windows-in-kubernetes.md))\r\n- [user-guide-windows-containers.md](https://github.com/kubernetes/website/blob/master/content/en/docs/setup/production-environment/windows/user-guide-windows-containers.md) ([raw](https://github.com/kubernetes/website/raw/master/content/en/docs/setup/production-environment/windows/user-guide-windows-containers.md))\r\n- ...\r\n\r\nIt makes localization teams feel difficult to work.\r\n\r\nFor example,\r\n`git diff upstream/dev-1.20-ko.7 upstream/dev-1.21-ko.1 -- content/en/docs/setup/production-environment/windows/intro-windows-in-kubernetes.md`\r\n```diff\r\n-Windows has strict compatibility rules, where the host OS version must match the container base image OS version. Only Windows containers with a container operating system of Windows Server 2019 are supported. Hyper-V isolation of containers, enabling some backward compatibility of Windows container image versions, is planned for a future release.\r\n+##### Memory Reservations\r\n+Windows does not have an out-of-memory process killer as Linux does. Windows always treats all user-mode memory allocations as virtual, and pagefiles are mandatory. The net effect is that Windows won't reach out of memory conditions the same way Linux does, and processes page to disk instead of being subject to out of memory (OOM) termination. If memory is over-provisioned and all physical memory is exhausted, then paging can slow down performance.\r\n+\r\n+Keeping memory usage within reasonable bounds is possible using the kubelet parameters `--kubelet-reserve` and/or `--system-reserve` to account for memory usage on the node (outside of containers). This reduces [NodeAllocatable](/docs/tasks/administer-cluster/reserve-compute-resources/#node-allocatable). \r\n+\r\n+{{< note >}}\r\n+As you deploy workloads, use resource limits (must set only limits or limits must equal requests) on containers. This also subtracts from NodeAllocatable and prevents the scheduler from adding more pods once a node is full.\r\n+{{< /note >}}\r\n+\r\n+A best practice to avoid over-provisioning is to configure the kubelet with a system reserved memory of at least 2GB to account for Windows, Docker, and Kubernetes processes.\r\n+\r\n+##### CPU Reservations\r\n+To account for Windows, Docker and other Kubernetes host processes it is recommended to reserve a percentage of CPU so they are able to respond to events. This value needs to be scaled based on the number of CPU cores available on the Windows node.To determine this percentage a user should identify the maximum pod density for each of their nodes and monitor the CPU usage of the system services choosing a value that meets their workload needs.\r\n```\r\n\r\n**Proposed Solution:**\r\nAdd some line breaks in Markdown code\r\n\r\n**Page to Update:**\r\n(All PRs which will be related to this issue should make no changes on k8s.io website pages.)\r\n\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->\r\n\r\n/language en\r\n/assign"", 'title': 'Some lines are too long in Markdown code', 'type': 'issue'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 824646628.0, 'datetime': '2021-04-22 08:26:38+00:00', 'masked_author': 'username_1', 'text': ""/priority awaiting-more-evidence\r\n\r\n@username_0 I think this could be a controversial policy change. We should discuss it and if adopting a policy, first we should document that within https://kubernetes.io/docs/contribute/ - then (maybe a 2nd commit in the same PR) we tweak the line endings.\r\n\r\nMy gut feeling is that different people will have different views on what we should do.\r\n\r\nIf we definitely don't like long lines, we could also add automation to warn when changes would add them."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tengqm', 'comment_id': 824676798.0, 'datetime': '2021-04-22 09:12:00+00:00', 'masked_author': 'username_2', 'text': '+1000 to break long lines!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 824711079.0, 'datetime': '2021-04-22 10:05:52+00:00', 'masked_author': 'username_1', 'text': ""I've added this to the agenda for the next SIG Docs weekly meeting."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'inductor', 'comment_id': 838896512.0, 'datetime': '2021-05-11 17:45:22+00:00', 'masked_author': 'username_3', 'text': 'Just one thing to note for putting new lines in a long sentence.\r\nJapanese (and I believe Chinese too) does not have any blanks("" "") between each word in sentences. When you put a new line in Markdown it will be rendered as a blank. Even in Japanese team we have some discussion where we should put new line in a sentence or not but it basically brings unnecessary blank for us so it\'s not the ""best"".\r\n\r\nSo I would personally like more to ask if the long sentences can be split into a few sentences, then we can put new lines between them...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tengqm', 'comment_id': 839358293.0, 'datetime': '2021-05-12 01:11:54+00:00', 'masked_author': 'username_2', 'text': ""My understanding of this issue is a little bit different. It looks to me that some contributors are not very familiar with Markdown syntax. The pain point is not about lines; it is about paragraphs. Maybe we, as members of the team, need to let the contributors know how Markdown paragraphs are processed. For example, the following one is not good because it puts all sentences into a single line for the version control system to parse.\r\n\r\n```\r\nWindows applications constitute a large portion of the services and applications that run in many organizations.  [Windows containers](https://aka.ms/windowscontainers) provide a modern way to encapsulate processes and package dependencies, making it easier to use DevOps practices and follow cloud native patterns for Windows applications.  Kubernetes has become the defacto standard container orchestrator, and the release of Kubernetes 1.14 includes production support for scheduling Windows containers on Windows nodes in a Kubernetes cluster, enabling a vast ecosystem of Windows applications to leverage the power of Kubernetes. Organizations with investments in Windows-based applications and Linux-based applications don't have to look for separate orchestrators to manage their workloads, leading to increased operational efficiencies across their deployments, regardless of operating system.\r\n```\r\n\r\nWhile the following revised version is a lot better:\r\n\r\n```\r\nWindows applications constitute a large portion of the services and\r\napplications that run in many organizations.\r\n[Windows containers](https://aka.ms/windowscontainers) provide a modern way to\r\nencapsulate processes and package dependencies, making it easier to use DevOps\r\npractices and follow cloud native patterns for Windows applications.\r\nKubernetes has become the defacto standard container orchestrator, and the\r\nrelease of Kubernetes 1.14 includes production support for scheduling Windows\r\ncontainers on Windows nodes in a Kubernetes cluster, enabling a vast ecosystem\r\nof Windows applications to leverage the power of Kubernetes. Organizations\r\nwith investments in Windows-based applications and Linux-based applications\r\ndon't have to look for separate orchestrators to manage their workloads,\r\nleading to increased operational efficiencies across their deployments,\r\nregardless of operating system.\r\n```\r\n\r\nThe outputs (i.e. the HTML snippets) generated from the above two formats are identical. There won't be any impact on performance or something else.\r\n\r\nIn some cases, the following format is acceptable too. In this example, the paragraph is organized into lines of different lengths. However, this organization might be easier for authors to organize the content. In other words, we do NOT have to impose hard constraints on how or where to insert line breaks. The key point is that we'd better break the long paragraphs somehow. It would benefit the reviewers for the English content and the translators for all other languages.\r\n\r\n```\r\nWindows applications constitute a large portion of the services and\r\napplications that run in many organizations.\r\n[Windows containers](https://aka.ms/windowscontainers) provide a modern way to\r\nencapsulate processes and package dependencies, making it easier to use DevOps practices\r\nand follow cloud native patterns for Windows applications.\r\nKubernetes has become the defacto standard container orchestrator,\r\nand the release of Kubernetes 1.14 includes production support for scheduling Windows\r\ncontainers on Windows nodes in a Kubernetes cluster,\r\nenabling a vast ecosystem of Windows applications to leverage the power of Kubernetes.\r\nOrganizations with investments in Windows-based applications and\r\nLinux-based applications don't have to look for separate orchestrators to manage their workloads,\r\nleading to increased operational efficiencies across their deployments,\r\nregardless of operating system.\r\n```"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 895877280.0, 'datetime': '2021-08-10 09:28:57+00:00', 'masked_author': 'username_1', 'text': '/remove-lifecycle stale\r\n/triage accepted\r\n/priority backlog', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Some lines are too long in Markdown code
username_0: **This is a Bug Report**

<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->
<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->

<!--Required Information-->
**Problem:**
Some lines are too long in Markdown code.


- [intro-windows-in-kubernetes.md](https://github.com/kubernetes/website/blob/master/content/en/docs/setup/production-environment/windows/intro-windows-in-kubernetes.md) ([raw](https://github.com/kubernetes/website/raw/master/content/en/docs/setup/production-environment/windows/intro-windows-in-kubernetes.md))
- [user-guide-windows-containers.md](https://github.com/kubernetes/website/blob/master/content/en/docs/setup/production-environment/windows/user-guide-windows-containers.md) ([raw](https://github.com/kubernetes/website/raw/master/content/en/docs/setup/production-environment/windows/user-guide-windows-containers.md))
- ...

It makes localization teams feel difficult to work.

For example,
`git diff upstream/dev-1.20-ko.7 upstream/dev-1.21-ko.1 -- content/en/docs/setup/production-environment/windows/intro-windows-in-kubernetes.md`
```diff
-Windows has strict compatibility rules, where the host OS version must match the container base image OS version. Only Windows containers with a container operating system of Windows Server 2019 are supported. Hyper-V isolation of containers, enabling some backward compatibility of Windows container image versions, is planned for a future release.
+##### Memory Reservations
+Windows does not have an out-of-memory process killer as Linux does. Windows always treats all user-mode memory allocations as virtual, and pagefiles are mandatory. The net effect is that Windows won't reach out of memory conditions the same way Linux does, and processes page to disk instead of being subject to out of memory (OOM) termination. If memory is over-provisioned and all physical memory is exhausted, then paging can slow down performance.
+
+Keeping memory usage within reasonable bounds is possible using the kubelet parameters `--kubelet-reserve` and/or `--system-reserve` to account for memory usage on the node (outside of containers). This reduces [NodeAllocatable](/docs/tasks/administer-cluster/reserve-compute-resources/#node-allocatable). 
+
+{{< note >}}
+As you deploy workloads, use resource limits (must set only limits or limits must equal requests) on containers. This also subtracts from NodeAllocatable and prevents the scheduler from adding more pods once a node is full.
+{{< /note >}}
+
+A best practice to avoid over-provisioning is to configure the kubelet with a system reserved memory of at least 2GB to account for Windows, Docker, and Kubernetes processes.
+
+##### CPU Reservations
+To account for Windows, Docker and other Kubernetes host processes it is recommended to reserve a percentage of CPU so they are able to respond to events. This value needs to be scaled based on the number of CPU cores available on the Windows node.To determine this percentage a user should identify the maximum pod density for each of their nodes and monitor the CPU usage of the system services choosing a value that meets their workload needs.
```

**Proposed Solution:**
Add some line breaks in Markdown code

**Page to Update:**
(All PRs which will be related to this issue should make no changes on k8s.io website pages.)

<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->

/language en
/assign
<issue_comment>username_1: /priority awaiting-more-evidence

@username_0 I think this could be a controversial policy change. We should discuss it and if adopting a policy, first we should document that within https://kubernetes.io/docs/contribute/ - then (maybe a 2nd commit in the same PR) we tweak the line endings.

My gut feeling is that different people will have different views on what we should do.

If we definitely don't like long lines, we could also add automation to warn when changes would add them.
<issue_comment>username_2: +1000 to break long lines!
<issue_comment>username_1: I've added this to the agenda for the next SIG Docs weekly meeting.
<issue_comment>username_3: Just one thing to note for putting new lines in a long sentence.
Japanese (and I believe Chinese too) does not have any blanks("" "") between each word in sentences. When you put a new line in Markdown it will be rendered as a blank. Even in Japanese team we have some discussion where we should put new line in a sentence or not but it basically brings unnecessary blank for us so it's not the ""best"".

So I would personally like more to ask if the long sentences can be split into a few sentences, then we can put new lines between them...
<issue_comment>username_2: My understanding of this issue is a little bit different. It looks to me that some contributors are not very familiar with Markdown syntax. The pain point is not about lines; it is about paragraphs. Maybe we, as members of the team, need to let the contributors know how Markdown paragraphs are processed. For example, the following one is not good because it puts all sentences into a single line for the version control system to parse.

```
Windows applications constitute a large portion of the services and applications that run in many organizations.  [Windows containers](https://aka.ms/windowscontainers) provide a modern way to encapsulate processes and package dependencies, making it easier to use DevOps practices and follow cloud native patterns for Windows applications.  Kubernetes has become the defacto standard container orchestrator, and the release of Kubernetes 1.14 includes production support for scheduling Windows containers on Windows nodes in a Kubernetes cluster, enabling a vast ecosystem of Windows applications to leverage the power of Kubernetes. Organizations with investments in Windows-based applications and Linux-based applications don't have to look for separate orchestrators to manage their workloads, leading to increased operational efficiencies across their deployments, regardless of operating system.
```

While the following revised version is a lot better:

```
Windows applications constitute a large portion of the services and
applications that run in many organizations.
[Windows containers](https://aka.ms/windowscontainers) provide a modern way to
encapsulate processes and package dependencies, making it easier to use DevOps
practices and follow cloud native patterns for Windows applications.
Kubernetes has become the defacto standard container orchestrator, and the
release of Kubernetes 1.14 includes production support for scheduling Windows
containers on Windows nodes in a Kubernetes cluster, enabling a vast ecosystem
of Windows applications to leverage the power of Kubernetes. Organizations
with investments in Windows-based applications and Linux-based applications
don't have to look for separate orchestrators to manage their workloads,
leading to increased operational efficiencies across their deployments,
regardless of operating system.
```

The outputs (i.e. the HTML snippets) generated from the above two formats are identical. There won't be any impact on performance or something else.

In some cases, the following format is acceptable too. In this example, the paragraph is organized into lines of different lengths. However, this organization might be easier for authors to organize the content. In other words, we do NOT have to impose hard constraints on how or where to insert line breaks. The key point is that we'd better break the long paragraphs somehow. It would benefit the reviewers for the English content and the translators for all other languages.

```
Windows applications constitute a large portion of the services and
applications that run in many organizations.
[Windows containers](https://aka.ms/windowscontainers) provide a modern way to
encapsulate processes and package dependencies, making it easier to use DevOps practices
and follow cloud native patterns for Windows applications.
Kubernetes has become the defacto standard container orchestrator,
and the release of Kubernetes 1.14 includes production support for scheduling Windows
containers on Windows nodes in a Kubernetes cluster,
enabling a vast ecosystem of Windows applications to leverage the power of Kubernetes.
Organizations with investments in Windows-based applications and
Linux-based applications don't have to look for separate orchestrators to manage their workloads,
leading to increased operational efficiencies across their deployments,
regardless of operating system.
```
<issue_comment>username_1: /remove-lifecycle stale
/triage accepted
/priority backlog"
AgileVentures/WebsiteOne,128632268,745,,"[{'action': 'opened', 'author': 'freeranger', 'comment_id': None, 'datetime': '2016-01-25 20:35:33+00:00', 'masked_author': 'username_0', 'text': '**Developers**\r\n\r\nI think for new developers, there are a few barriers to entry:-\r\n\r\n* I don\'t know what skills the projects need so I don\'t know if I could help. If you look at http://up-for-grabs.net/#/tags/ you can zero in on the projects that match your skillset so you find ones more ""relevant"" to you.\r\n* My experience with the technology is a bit shakey so I\'m afraid I will commit to something beyond my skillset.  Some projects tag issues with an indicaton of how easy/difficult they are - e.g. https://github.com/influxdata/influxdb/labels/status%2Fhelp-wanted - so maybe I start with some easy/quick issues to get my feet wet, get some confidence, and move on from there.\r\n* I\'m scared of breaking things - I don\'t know the project, maybe I\'m new to this whole contributing to open source game. Perhaps an experienced team member could guide me through my first issue or two? Maybe there is a sample project for newbies to play around with and contribute to and see how it all works, somewhere they don\'t need to be afraid of contributing.\r\n* I can\'t commit to pairing - My availability is all over the place, I\'m not sure I can commit to meeting up online with someone at certain times, or my connection is really bad or many other reasons I can\'t pair, or I just don\'t like the idea of it. Maybe I know the benefits of pairing and I would encourage people to try it but maybe it is emphasised too much and I want to start off without pairing, submtting pull requests for someone to review. Basically not wanting or not being able to pair shouldn\'t be a barrier to contributing to a project.\r\n* Limited technologies. There seems to be a clear ""bias"" towards Ruby here, which is fair enough, but what if I am an awesome .NET developer or node.js developer and would like to work on a project using those skills - is this possible? Is AV ""meant"" to be a ruby shop or is that just the way it has panned out?\r\n* I can\'t easily find projects I\'m interested in - I want to find projects particularly about saving badgers, or the most active projects or the newest projects, or the ""hottest"" projects (most ractivity recently? Most developers joinging recently?) - there\'s no way to do that, I just have to trawl the pages.\r\n\r\n**Charities**\r\n\r\nYou need to attract new business from charities in order to continue to grow, so you need to make charities want to use you, which means it must be easy for them to find you and find what you do and be confident you can meet their needs.\r\n\r\n*Scenario* - I am a charity looking to have a site made, I google for <whatever term turns up agileventures as an option> and go to agileventures.org\r\n\r\nThe first thing I see is stuff about pairing and learning to code and developing my team skills. But I am not a developer, I am a charity - this site seems focused on coders, not on businesses looking for a site to be developed. It doesn\'t seem relevant to me at all, so I go elsewhere...\r\n\r\nLets say I get past the front screen because maybe you are relevant after all. I want to see what you guys have been doing to gauge if you are any good or not. Where do I go? hmm, I click into ""Projects"" as the most likely place to get a feel for what you do and...I get a random list of projects.\r\n\r\nI really want to see one of the actual sites in action, so I pick one at random, say LocalSupport, (Note, I tried a few other at random such as MetPlus, but I couldn\'t a link to the site at all in the ones I tried!) in the hope that I will get a link to click on to the actual site. Hmm..nothing obvious - though I notice under the title of the site, the page says ""VAH\'s Local Support site is at www.harrowcn.org.uk"" but this isn\'t even a clickable link, so I have to copy and paste it....oh wait, further down the page there is an actual clickable link to the LocalSupport site, so I can finally see one of the sites you have developed.\r\n\r\nBoy that was hard work! Other projects don\'t even seem to have any links - I have no idea (as a developer or as a potential customer) if these sites are live at all, if they are just at the early alpha stage, if they have even gotten off the ground.\r\n\r\nWhat I would like to see is a very obvious link, front and centre, to the current production site. Regardless of whether the site is live or not, I would also like a link to the latest deployment of the development/UAT instance so I can see what it looks like - for not-yet-live sites I can now see what they are about and for currently live sites, I can see what\'s due to be released soon presumably.\r\n\r\nIt would be nice to see a thumbnail of the site on the project page also.\r\n\r\nI know you said in the meeting that you didn\'t think a showcase was that important at the moment, but if you want to attract new customers then you need to make it more customer-friendly and a showcase is one way to do that - or, for now, just spruce up the project pages and make them more ""discoverable"" and easy to see what they look like.\r\n\r\n**Premium Services**\r\n\r\nThere are two potential sources of revenue here - the charities and the developers:\r\n\r\n_Charities_\r\n\r\nFree service gets people working on your site as and when, so don\'t hold your breath for it to be developed...\r\n\r\nPaid for at different levels can offer things like:\r\n\r\nYour project is promoted on the site so hopefully will attract more developers\r\nWe could offer to pay the developers a small amount, thus likely attracting more people to it. Not sure how you would work out how to pay them - per commit? per lines of code? per feature? If stories were assigned points then a fee per story point? So a 1 point story gets you X, a 2 point story gets you 2X etc?\r\nWe could specifically direct developers to your project\r\nWe could promote your charity (as opposed to the project itself) since after all the website is a means to an end - the charity itself is the main thing.\r\n\r\n_Developers_\r\n\r\nThis is a bit tricky since the developers are already giving their free time to help out on projects and now you want some money from them too? Hmmm...\r\n\r\nThe ""fee"" would have to be quite small methinks because of said donation of time to projects, but the sorts of things you could offer are:\r\n\r\nThey get first dibs on any paid for work - the premium members are made aware of it for a period of time before it is opened out to everyone,\r\nThey get some kind of ranking on your site in the members directory\r\nOther members can ""endorse"" their skills (like on LinkedIn)\r\nMaybe people who have worked with them will write testimonials about them on their member page (can help them get other paid work)\r\nI think the area to concentrate on here would be helping the developers to promote themselves in order to get paid for work elsewhere, since we all need to make a living right?', 'title': 'AgileVentures - thoughts on moving forward', 'type': 'issue'}
 {'action': 'created', 'author': 'tansaku', 'comment_id': 174885171.0, 'datetime': '2016-01-26 08:14:26+00:00', 'masked_author': 'username_1', 'text': '@username_0 thanks for this input - really appreciate it.   Some thoughts:\r\n\r\nDevelopers\r\n----------\r\n\r\n* that **up-for-grabs site** is awesome and we should get ourselves involved or copy the format.  As I mentioned in slack, one issue we have is that most active projects are not currently using the same ticket management system that up-for-grabs uses\r\n* **indication of difficulty labels** - yes - we should have more of this.  We do currently have a points system of 1,2,3 etc., in many projects where 1 represents a simple feature and 3 represents a more complex one, but perhaps we need to get that across better\r\n* **sample project**, **experienced team guides** - yes, both great ideas, although I\'m wary of sample projects as part of the idea here is to learn with real projects.  Also you *cannot* break things with the pull request model we are using - happy to explain further.  Also the whole point of the online standups is so that new members can meet other team members and then be guided.  That\'s how we\'ve onboarded lots of people, but maybe we are not properly communicating that that\'s available, or maybe people are just too shy ...? :-)\r\n* **pairing**, yes, I think I start to agree that we need to better support solo contributions as a gateway to pairing.  What I worry is with people working on things by themselves and then having their contributions not pulled in because they haven\'t been in good communication with the team upfront, but perhaps that\'s just the way it has to be\r\n* We have a **Ruby/Rails bias** because the group who started the site were alumni of the 169 Ruby/Rails course.  We do have some other projects in other languages, but none of them have become hugely active.  Other languages include Python, Go and JavaScript.  Anyone can start a project in any language ...\r\n* finding interesting projects - we do have a **search** mechanism, but perhaps it is not visible enough -- maybe we need more obvious filters?\r\n\r\nCharities\r\n---------\r\n\r\nI totally agree that the current site is totally not right for attracting charities, and ultimately we do need to attract them. We tried building a separate [site](https://evening-oasis-1495.herokuapp.com/) as a prototyping exercise with a group of novice developers, with a separate site being easier for them to work with, but the result wasn\'t something we could immediately use.\r\n\r\nWhen I say that the showcase is less important right now, it\'s because I feel like we need to improve things for onboarding developers before we start reaching out to more charities, so that when charities do come to us, we\'ll have developers that can work with them.  Also, from where I\'m sitting we have lots of work to do right now, and I worry that if we focused immediately of bringing in lots of charities we\'d be turning them away as there was no one to work on their projects.\r\n\r\nOf course it\'s all a bit chicken and egg, but right now the site is costing me a certain amount of money to run each month, and I need to put something in place to offset that burn.  By registering as an official charity we\'ll get persistent slack history and be all above board for accepting donations and charging for membership of the charity.  I have various people who are telling me they\'d like to supply funds, so if we can get the payment infrastructure set up for that, then I can at least stop burning cash each month :-)\r\n\r\nHowever with that in place, and some basic UI improvements to the main site, perhaps then the focus really should be charities.\r\n\r\nPremium Service\r\n------------\r\n\r\nAgreed, there are at least two potential sources of revenue and others as well (hiring fees from companies like freecodecamp).  6 months ago I was thinking of charities paying a listing fee; however we\'ve yet to validate that as a business model.  I think we would have to have a showcase in place for that to get off the ground.\r\n\r\nHowever I do have developers saying they\'d like to contribute to the cause, so that seems like the stronger lead right now in terms of making the current site sustainable.      Making the site a nice place for developers to hang out and giving them some desirable benefits from a premium service feels like the highest priority to me at the moment; but I\'m totally open to change.\r\n\r\nFootnote\r\n----------\r\n\r\nBTW, I totally take your point about the problems navigating the site.  I think they affect both developers and charities, and the site is the way it is because it\'s evolved organically that way, rather than intentionally being set up that way.  This is largely because it was a ""sample project"" where novice developers and designers were practising their skills.\r\n\r\nThat was fine at the time, but my sense is that now, for the future success of the project, we need to have the site adhere to more of a central vision that provides consistency of user experience; and allows our key stakeholders to find what they need.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 175080740.0, 'datetime': '2016-01-26 15:35:52+00:00', 'masked_author': 'username_0', 'text': '@username_1: Sure, glad to be able to give some input on this.\r\n# Developers #\r\n- **up-for-grabs.net** - do we need the whole thing, or just a way to query and link to the github repo\'s for the actual projects?  You mentioned elsewhere having a version of this for Pivotal...but is that a ""must have""?  I guess it depends on if you want to track all issues through pivotal or through the git repo\'s.\r\nTo my mind, pivotal is good for running sprints, but if it\'s just a bunch of dev\'s contributing as and when, then maybe it doesn\'t work so well and the normal git issue mechanism is fine?\r\n- **difficulty** - Ok yeah I found that once I went into a story in pivotal...I was looking in github.  Now I\'m confused (as joe developer) as to where I look for issues - github which I know well and can see some issues on, or this other thing pivotal which I know nothing about?  Hmm there are issues in both places - does one supercede another?  Do they complement each other? I don\'t know.  \r\nAlso, as a newbie developer, or new to agile developer, I don\'t really get the concept of story points - tell me something is easy/medium/hard/a few minutes work and I get that, but what does it mean when I look in this pivotal tracker thing and a story has ""points""?  What is a ""point""?  All I want to know is if this is likely to suite my n00b skills because basically a monkey could do it...\r\nI think you might need to consider if you want to be sprint oriented or if it\'s a more ""traditional"" opensource free-for-all with random contributions any time, from anyone...\r\nAlso all being on the same tracking system would be good for consistency and familiarity to people hopping between projects.  Since they are all under the Agile Ventures ""umbrella"", there should be some consistency to the experience across projects.\r\n\r\n- **sample project** The idea here was for learning how AV works, how to submit to a project and get it released etc, not for learning how to be a developer.  I\'ve got my new, shaky ruby skills and I\'m willing to give it a go but I just want to see how it hangs together without affecting anything important.  \r\nThis could be something as ""simple"" as a tutorial showing users how to raise an issue, take ownership of an issue, make a code change, create a pull request, accept a pull request, get the software into the wild.  \r\nMaybe they just add their name to a list displayed onscreen or something like that - a simple, visible result of getting an issue all the way  through from start to finish, and having to wear different hats in the process since you wouldn\'t normally raise the issue yourself and do everything else along the way too.\r\nWhat this isn\'t is a sample project for learning to code or add any real features to anything\r\n\r\n- **guidance** - Perhaps there is an element of shyness or embarrassment that you are a n00b and are intimidated by the online meeting idea, or perhaps you don\'t have video capability, or indeed perhaps you just can\'t commit to a specific time every week.  You guys have settled on Friday\'s at 5 for the AV standups it seems but that is definitely not a time that would ever suit me, and maybe a time that does suit me doesn\'t suit everyone else...it\'s hard to please everyone.  Does this mean I can\'t contribute?  Well clearly not since we are having this dialog, but I might feel I can\'t contribute if I can\'t (or won\'t) attend the standups...so perhaps you need to emphasise more that they are there to get to know each other and to help etc, but they are not mandatory for participation in projects?  \r\nDitto pair programming...unless of course you *want* it to be mandatory... You would need to make it clear though that if you aren\'t pairing ""live"" then you do need to have a dialog going with at least one other person and effectively pair (or at least code review) ""asynchronously"" as it were.  This way your pull requests don\'t get left by the wayside and you don\'t have to worry that you have done something stupid on your own.\r\nFor this you may need people to volunteer to be mentors to n00bies to help them through the early days of being an AV contributor.\r\n\r\n- **languages** - I can understand why it started out as ruby-centric....looking around, it would still seem to be that way and there is nothing to suggest other languages are up for grabs (C# for example? java? scala?) so I might wrongly assume it is exclusively for ruby-ists.  There is nothing in the ""Getting started"" section for example that suggests I can use any technology I like.  Speaking of which...\r\n\r\n- **getting started** - The ""barrier to entry"" seems quite high.  Step 1 wants me to:\r\n_Setup accounts for GitHub, Pivotal Tracker and Google+. Also, make sure that you have a YouTube Channel connected to your G+ account.  These services are crucial for you to be able to participate in AgileVentures daily activities ._ - wow, that\'s a lot to even get started - think I\'ll take my project to github instead, where I can get going in seconds...\r\n- **search** Found it!  But I was looking on the projects page for a search feature for projects - this is a hidden-in-plain-sight search across the website.  I am trying to zero in on projects by technology perhaps or the sorts of charity I am interested in.  My sister had breast cancer, so maybe I want to contribute to breast cancer related sites - how do I discover those? \r\nOr I came here looking for C# projects but on the ""look for projects you are interested in"" page I see one that is using Angular...hmmm I\'m interested in that too - maybe I will check that out instead.  Discoverable see?  up-for-grabs lists ""popular"" tags front and centre on the projects page - that\'s a good idea...\r\n\r\n## Charities ##\r\nChicken and egg as you say - the charities presumably would be the major source of income, but you can\'t get them on board until you are set up ""properly"" for development and have attracted enough developers, and ideally paying developers at that...which is hard to do at present, maybe in part because you aren\'t showcasing the current sites?\r\nWhat do you need in a showcase (initially at least) beyond a snapshot of the site, some blub, links to the site, to the project, maybe to the latest dev release?\r\n\r\nWhat is the current business model - are any charities paying anything at all towards their projects/upkeep of the site?  Do you have an idea of how much you need to raise, essentially immediately, to stop you personally burning through money on this?  That has got to be somewhat of a priority right?   Perhaps once you get registered as a charity, you can do a wikipedia-like call for donations as a one-off, to ideally get AV funded until it can become self-sufficient?  It might be quite easy to get an iniital fund going to take the pressure off you...\r\n\r\n## Premium Service ##\r\nYes, I think you need some sort of showcase when you start pitching to charities.\r\nHow did you find the existing ones?  Was it via personal contacts, either you or other members?\r\n\r\nWhy would a charity want to be listed on the AV site and what does it give them that the unlisted members don\'t get?  The primary way for people to find charities will be via google, not by going to AgileVentures, so isn\'t a listing just a ""nice to have""?  \r\nThere are two things for the charities - one is being more visible to developers (perhaps this is what the listing is for?) so they get their site developed, and the other is to actually raise funds for the charity in question.\r\n\r\nPerhaps one of the selling points to a charity to pay for a certain level of membership is that AV would run a fundraiser for that charity once they have been a member for a certain period of time?\r\nThis could be something IRL - though that might be hard to organise with developers being spread across the globe - or something in cyberspace - e.g a coding challenge with a small entry fee and a prize for the winner, with the remaining money going to said charity.\r\n\r\nHow many active developers do you have at the moment and how many genuinely active projects?\r\nI\'m wondering if you have enough to try to split developers into three tracks:\r\n-- Working on existing charity sites\r\n-- Improving AV for developers\r\n-- Developing at least a simple showcase to attract charities?\r\n\r\nNormally of course you would want developers to pick and choose what they work on but I\'m sure in the early days people wouldn\'t mind being encourages towards one stream or another.\r\nPerhaps the ""discovering projects"" screen would make it easy to find projects in dire need of some love, though I\'m not sure what criteria you use to identify them - is a new project more in need of help than an existing one?  The ones with the most bugs?  The ones with the fewest developers?   The ones charities have paid to push up the ranks?\r\n\r\n## Footnote##\r\nYes, it does have an ""evolved"" feel about it and it seems to be very heavily focused on the developers without focusing on making it easy for developers.\r\nPerhaps you need to sweet talk a UX person into coming up with a good design?  The public face of AgileVentures is, after all, crucial for both Devs and Charities - you can still have AV devs actually implement the shiny new UX, but in my experience good developers !== good designers.\r\nIndeed, I woud say it is so important that it could even come down to paying someone to design the site and then getting AVv devs to implement it...funds permitting of course :}', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 175285271.0, 'datetime': '2016-01-26 23:06:05+00:00', 'masked_author': 'username_0', 'text': 'A bit more thought, based on the slack chat.\r\n\r\n## Up for Grabs ##\r\nYou seem quite taken with up-for-grabs.  If you want to move forward with it then I guess there are a couple of questions:\r\n1. Are you so wedded to Pivotal that it is essential in the brave new world?\r\n2. If the answer to 1. is No then would anyone be able to quantify the effort of moving away from Pivotal to UFG + github vs the effort of forking UFG and integrating it with Pivotal?\r\n3. If the answer to 1. is yes then can Pivotal be modified to behave in a more UFG like manner? or would it make more sense to try to integrate the two?\r\n\r\nI think I said before I see pivotal as more for structured teams running sprints (but perhaps thats what you want to achieve) than the more free form approach of the usual open source projects on github, so for me as a developer, I would be happy in the familiar environs of github.\r\nOTOH, as a project sponsor, Pivotal will more easily let me track progress...so do we just say that devs have to suck it up and fit in with Pivotal?\r\n\r\nIf Pivotal stays, does it create confusion having two places to report issues - i.e. Pivotal itself and github issues tracker?   Perhaps if we can link between the two it wouldn\'t matter where the issue is reported, it would be visible in both?\r\n\r\n## FreeCodeCamp ##\r\nRegarding FreeCodeCamp, it seems quite slick.  It is clearly aimed at dev\'s learning, and in particular a certain set of skills (I would like to dub this the ""Neeson"" method in honour of Liam Neeson and his \'particular set of skills\' :^D ), whereas AgileVentures isn\'t at all set up that way and doesn\'t have those goals - but one thing I think we can take from their site is the ""gamefication"" of learning - see how they use terms like ""challenges""  and earning points for things like completing ""challenges"" or posting links, being upvoted, being thanked in chat etc.  \r\n\r\nSimilarly, Stack overflow do things like reputation points and badges for various tasks - leaving comments, providing accepted answers, even just completing your profile (http://stackoverflow.com/help/badges).\r\n\r\nAll this all encourages you (consciously or subconsciously) to keep going and try harder because you want more points - you want to feel like you are progressing and you want to let people see you have a bigger number than they have.  You can feel pleased with yourself and earn some bragging rights perhaps when you earn the Jedi Master Yoda badge for most accepted pull requests across all projects on the site, or your reputation points hit 10,000 or whatever.\r\n\r\nAgileVentures could take some of these ideas to make the site more ""fun"" for developers and to encourage them to come back and contribute time and again.   How you monetise that is the tricky bit - are your badges only visible if you have made a donation or paid a subscription?  Or maybe you can only earn up to a certain level of points/badges as a free member and if you want to ""unlock"" the other badges then you need to pay up?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tansaku', 'comment_id': 175473459.0, 'datetime': '2016-01-27 08:11:33+00:00', 'masked_author': 'username_1', 'text': 'Developers\r\n--------\r\n\r\n* *up for grabs* - maybe we don\'t need the whole thing - maybe we should switch to github issues? but then we can\'t assign people who don\'t have collaborator access I think and that maybe breaks the pull request model of a couple of the main projects - but each project is it\'s own master.  Every project team is completely independent and can decide their own workflow so it\'s up to them.  Either way it\'s probably a good idea for every project to submit to up-for-grabs just on the off chance; although it\'s a shame if we\'re not using all they have to offer;  which begs the question do we need a platform-neutral mechanism of sharing which tasks to start on, can we build that and how much of a priority is it\r\n\r\n* **difficulty** Having multiple systems and repetition of issues is unDRY and to be avoided where possible.  What\'s the solution? Not sure .... there are lots of resources on the [relative merits of story points](https://www.google.co.uk/webhp?q=what%20are%20feature%20story%20points) and it\'s something that is introduced in the CS169 and AV102.  And if a new developer actually joins a standup and participates in an agile sprint they\'ll see the benefit of story points to the team and to communication and estimating progress etc.  Of course if they\'re opaque from outside, then that\'s a problem ..... as regards consistency between projects - we can\'t enforce it, we could have a template?  Is it desirable? I\'m not sure ... part of the overall mission of agile ventures is to be sprint-oriented.  Github already provides almost everything people need for a ""traditional"" opensource free-for-all with random contributions any time, from anyone.  I think the point of what we are doing is to have something on top of that where you get the option to work more closely, in real time, with others as part of a more tightly knit team.\r\n\r\n* **sample project** - yes something as you describe would be great to be built into AV102 or CS169 - would be great if somebody wanted to create something like this and we could add it to our documentation flow\r\n\r\n* **guidance** indeed. Note that video capability is totally not required - although people keep on thinking it is for some reason and apologizing about it.  Personally I could not care less if you have video capability or not.  Is 99% irrelevant.  Fun sometimes if you have it.   What is critical is the ability to screen share, which everyone can do through google hangouts.   The not being able to make the time, and being shy/embarressed are perfectly good reasons however.  You say AV standups are at 5pm on a Fri?  That\'s just a test time for the weekly meeting.  There are standups 3 (or more) times a day every day at different times - see http://www.agileventures.org/about-us .... your points about emphasising their optional nature are well taken, and I guess what we need is to cohere around a vision and message and work to make the main site communicate that effectively.  Personally I am coming round to the idea that we should focus more on supporting people who want to work solo and asynchronously; although I\'d like to see that as a gateway to ultimately more pairing and more attendance in standups (even text based standups see http://tatsu.io)\r\n\r\n* **languages** agreed - would be good to make the options more visible\r\n* **getting started** good point - and actually the key thing is just joining Github and AV.org to get into slack\r\n* **search** glad you found it - point taken about tagging\r\n\r\nCharities\r\n---------\r\n\r\nWell I\'m not sure that charities will ever be a major source of income - they\'re not known for having lots of cash to throw around :-) Small charities are often trying to do things on a shoestring.  You\'re correct about what the showcase needs, not much.  I think the key thing it needs is to look good.  The problem with the group that built the previous one, and all credit to them since it was their first big project, was they got focused on things like login and authentication at the expense of CSS and UI/UX.\r\n\r\nIn principle if Thomas or I cleared a week and took a run at it we could have a simple showcase up that would be potentially very valuable in terms of attracting both charities and developers.  It\'s a question of priorities.\r\n\r\nYou ask about the current business model; we have had charities make some small contributions to projects.  I would need approx $50 a month to stop the sites current burn.  What I would like to set up is stripe integration so that people could sign up for an AV subscription of $1 a month or something to become a supporting member of AV.  Then if we get 50 people signed up we\'re at least not losing money.  I think that would be a great thing to start with and then iterate on the site and/or showcase to bring in more contributors and have premium subscriptions of $5 or $10 a month which gave more benefits in terms of promoting existing projects or supporting private projects.\r\n\r\nPremium Service\r\n---------------------\r\n\r\nExisting ones have been found via personal outreach by myself and other members.  I also ran charity jamboree events at Makers Academy and streamed them live and got various charities involved by promoting that.\r\n\r\nA charity might want to be listed to increase the chances that they\'ll get some low cost prototyping of solutions to their current challenges, and to be introduced to developers who\'d like to help them.\r\n\r\nRunning fundraisers is an interesting idea.  Feels a little out of scope for me personally since that\'s what all the crowdfunding sites do and I\'m not sure how we\'d differentiate ourselves from them.  One way of looking at AV is that we are crowdfunding site where you donate engineering time instead of money.  \r\n\r\nI think we have maybe 10 really ""active"" developers, and I\'d say 4 really active projects although there\'s flux.  The three tracks you mention are there already implicitly - they could be emphasized ...\r\n\r\nWe totally need to sort out the project rankings and offer options to sort by ""most in need of love"" etc. :-)\r\n\r\nFootnote\r\n---------\r\n\r\nYes, a good UX person.  Although I\'d say actually I\'m a UX person - I\'ve just been hands off on AV and been the client and not involved in the technical or UX side of it except as a ""customer"".  It was also about letting the learning developers on AV try out their own ideas.  Now I\'m 100% on AV I think it\'s time to change my role and swing my weight behind really fixing the UX on the site and getting involved at all levels.  See http://harrowcn.org.uk as an example of where I\'ve been more involved.  Not that we couldn\'t use all the help and input we can get.  I\'m no UX guru :-)\r\n\r\nUp For Grabs\r\n-------------------\r\n\r\nIs great partly because I know of various non-AV people who\'d love to see something like that.  It\'s possible we might transition some projects away from Pivotal, but I feel it\'s important that we try to have a broad tent to allow different project styles to emerge.  The site currently gives projects a push towards github and pivotal, but I\'d like us to support all combos, e.g. bitbucket and trello or whatever.\r\n\r\nIf we have the sample project you suggest, that can be a standard onboarding using github/waffle or whatever, but I my intuition is that we benefit more in the long run in terms of what we learn through diversity by allowing projects to pick and choose their approaches and tooling.\r\n\r\nI\'m in two minds about whether we want to try and make it trivially easy for a solo programmer to pick up a simple task asynchronously, OR trying to better communicate the benefits of getting involved in either synchronous standups, sychronous pairing, or both ...\r\n\r\n\r\nFreeCodeCamp\r\n---------------------\r\nIs totally slick and I\'m totally jealous :-) It is targeting complete noobs in a way we are not, but I think it benefits from a single coherent vision which we have not yet achieved, or at least not yet expressed through our site.\r\n\r\nI don\'t think we want to target complete noobs.  Effectively CS169 is our onboarding platform - although maybe that needs to change.  But we should totally gameify.  I\'m deeply inspired by codewars.com - I would like to see an explicit reputation score in our members list based on github contributions to non-profit projects ...\r\n\r\nGreat chatting with you about all this BTW - all my opinions are just those, and I\'m totally open to changing my opinions :-)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 175609004.0, 'datetime': '2016-01-27 13:03:35+00:00', 'masked_author': 'username_0', 'text': '## Developers ##\r\n**Free for all or curated development?**\r\nI think you need to decide if you want every team to be autonomous and have their own way of working, or if you want to have some kind of common structure.  By including Pivotal in the getting started requirements, you are implicitly  trying to give them a structure which leans towards sprint based work, and you said that ""part of the overall mission of agile ventures is to be sprint-oriented"", which states it explicitly...so are they autonomous or not?  It seems they are partially autonomous :}\r\n\r\nI guess in an ideal world, everyone would be able to work however they want, whenever they want, but\r\n- some people need (or would welcome) guidance and/or structure\r\n- you are already, in your getting started section, ""forcing"" people to set up a pivotal account, github account, google+ and youtube, which is a lot of requirements for people who are free to work however they want.\r\nGiven these requirements, you have to have a github account anyway to join, then why not make that THE platform for storing your source?  If people object to github for whatever reason then they are not even going to make it past the getting started section.\r\n\r\nYou want people to work in sprints, attend standup etc, so why not provide the complete infrastructure for working in this way - you HAVE to use githug, you HAVE to use pivotal etc?  If you don\'t like these then AV is not the place for you - go find a different sort of experience.\r\n\r\nObviously you don\'t really want developers to feel their choices are restricted, but at the same time, if you are providing an environment for them to hang out and some structures to work within then it makes it easier to move between projects because you re already familiar with the setup.  I don\'t really want to go from pure github on one to having to use pivotal and bitbucket or some other such thing I am not familiar with on the next project - it makes me less inclined to join that one because I have to learn too much - the project, maybe the technology, the way it is run, the platforms used...\r\n\r\nCould you create a platform-neutral system that is so flexible you can plug in any issue tracker to any source control system? Yes.  Is it worth the effort?  Possibly not.\r\n\r\n**DRY** - agreed, you don\'t really want multiple ways of doing things, (but then that goes against the idea of developers being free to choose how they work), so you either pick one existing solution and that is the one way to do things, warts and all, or your build your own that meets your exact requirements - this could be from scratch or could be modifying/creating bridges between existing components to work in the way you want.\r\n\r\n**difficulty** You mention CS169/AV102 - so now is there an implicit ""you will have taken one or more of these courses to get up to speed""?  Whilst you may get students from there moving to AV, surely you want the barrier to entry to be as low as possible for everyone, even people who have not taken these courses?  \r\nDevelopers may indeed ""get"" the value of story points and sprints and standups if they join and participate...but you have to get them through the door first, and that may be difficult if there\'s too much ""weirdness"" and not enough ""it looks like I can ease myself in gently to this""\r\n\r\n**sample project** - again the reference to the courses - if AV is meant to be a progression from the courses then that\'s fair enough, but I didn\'t really think AV needed to be related to the courses, save that iCs169 forms part of the secret origin of AV.   Making it as easy as possible for anyone to join means, to me, that there is no link to the courses, no ""prerequisite"" to have done them or already be familiar with the setup and terminology used by AV - you want to help people to be better coders, so teach them what they need to know to get going with an AV project.\r\n\r\n**guidance** - yes video does seem to be essential even though that is not the intent.\r\nLeaving aside those reluctant to use video, it does also preclude those who can\'t even screen share due to bandwidth restrictions.  It\'s all very well in the US or the UK, or many other ""first world"" countries where you have great broadband to rely on, but some people are in a hut in a small village in africa sharing a poor 3G signal between 10 people - screen sharing would be impossible for people like that.\r\nThe tatsu.io idea is certainly an interesting one.  What would be great is if people can join into a standup in whatever way works best for them - so you are hosting a standup using a live video feed from your office but someone else joins in audio only over some lower bandwidth connection, and others (somehow) can join in on a text basis only.\r\n_""we should focus more on supporting people who want to work solo and asynchronously; although I\'d like to see that as a gateway to ultimately more pairing and more attendance in standups"" - agreed, the first taste is free, get em hooked firs and then there\'s no getting away :)\r\n\r\n**getting started** - so pare it back to the minimum - something like\r\n1. Sign up to AV and github\r\n2. Go create!\r\n\r\nThen you can follow that with other, optional, steps, to get more out of the experience etc...\r\n\r\n## Charities ##\r\nAgreed that charities don\'t tend to be swimming in cash, but they could be a source of small amounts of steady income.  Yes they can hopefully get a site done for free, but if they are in a hurry or want some of the other benefits then thy pay a small sum of money towards that.\r\n\r\nWhether they pay or not, you want to get them on board to give the developers something to do, so you might want to rethink this wording:\r\n_""From an organisation\'s perspective it is best to think of collaborating with Agile Ventures developers for the purpose of better understanding the nature of the IT challenges faced.  In favourable circumstances this may lead to Agile Venture developers being able to help craft a solution, but this should not be an assumed outcome""_\r\n\r\nI understand why you have to say something about not guaranteeing a site at the end of it, but this says to me ""don\'t come here looking to have a site built, come here if you want to understand the IT challenges in building a site""...but I am a small charity and really I don\'t have the time to spend or the interest in learning about the challenges of creating a site - what I want is for some kind developers to donate some time to making me a website.\r\n\r\nre: the showcase - whilst I can understand dogfooding - after all, if you don\'t trust your own developers to make your site, why would anyone else trust them - as I said before, there is a distinction between UX design and actual coding implementation of the design.  The AV developers can code the site for sure, so you are dogfooding to that extent but there\'s no reason the design can\'t be done by a ""seasoned pro"".\r\nIt also serves as a teaching exercise for AV developers to get an idea of ""this is what a showcase site could look like"", for those charities that want to showcase the work they do for example on their own (AV developed) site.\r\n\r\nI\'m still not sure whether the primary purpose of AV is to help developers to develop or to help good causes to get on the web for little or no money, but whichever is the primary purpose, that is where the focus should be methinks..\r\n\r\n$50/month seems fairly easily attainable I should think, with $1/month subs from developers.  Jumping to $5 or $10/month needs a *lot* of added value - so much on the web is free that people are reluctant to pay for anything any more - In a world of free software, free hosting, free cloud drives, free music etc, if you are charging for something then it either has to be such a trivial amount of money that people don\'t mind paying, or it has to offer clear advantages over rival, free systems.\r\nI\'m sure you could get some people to kickstart the charity with some one-off donations to get a little bit of cash in the kitty.  Perhaps these even make them ""founder members"" or some other such thing.  Could be if you pay enough, your membership is free forevermore, with entitlement to all the premium benefits whatever they may be, now and in the future...just thinking of ways to inject a bit of up front cash...\r\n\r\n## Premium Service ##\r\nThe fundraising idea was something to benefit both devs and charities - devs because the winner gets a cash prize (or a donation of premium membership?) and the charity gets some cash from the (low) entrance fee the devs pay to join the competition.  Even if they don\'t raise much, it raises the profile of the charity for a period of time.  \r\nI wasn\'t thinking of a charity ball or anything like that :)\r\nThe charity jamboree events you mention are another avenue - premium charities get promoted at these things...regular charities don\'t.\r\n\r\n_""One way of looking at AV is that we are crowdfunding site where you donate engineering time instead of money""_ - this harks back to one of my original comments, that developers are already contributing time to AV so to try to get them to stump up some cash for AV too might be a tough sell..\r\n\r\n## Footnote ##\r\n_You\'re_ a UX person?  You hide it well :P \r\nYes, AV definitely needs some love and some thinking about who the primary ""customers"" are and what sort of ""user journeys"" they will be making through the site.  I mean sure, eye popping visuals are nice but the site needs to be functional first and foremost - easy to navigate, easy to find what you are after, easy to understand what AV is all about and how you can get involved.\r\nIf you get some UX guru involved then great, they can add in the scrolling marquee controls with purple text on yellow background etc... :)\r\n\r\n## Up For Grabs ##\r\nYou can\'t focus on everything at once, so _maybe_ ultimate flexibility is laudable goal long term, but in the short term, K.I.S.S and focus on a good basic experience with one set of tools other than sort of supporting multiple platforms - if you can\'t do it well with one set of tools then you certainly won\'t be able to do it well with multiple ones!\r\n\r\n_""I\'m in two minds about whether we want to try and make it trivially easy for a solo programmer to pick up a simple task asynchronously, OR trying to better communicate the benefits of getting involved in either synchronous standups, sychronous pairing, or both ...""_\r\nIf you can make it trivially easy for a single developer to work asynchronously then they can be eased into the idea of synchronous pairing, but it is not true the other way around.  I repeat what I said above - you can\'t focus on everything at once - so if it is trivial for a solo programmer to contribute and it is also possible for them to pair up then great - you can shift focus to encouraging pairing and standups once you are happy that the solo experience works well.\r\n\r\n## FreeCodeCamp ##\r\nCorrect, they target the total novice, where AV requires some level of knowledge.  \r\nWhilst I can see benefit in encouraging CS169 students to join AV, I don\'t see the benefit (to AV) in having CS169 as your unspoken ""on boarding"" platform (I don\'t see it mentioned anywhere except in the secret origin section).\r\nTying to CS169 has several problems:\r\n- People have to, (or feel they have to), take these courses or have equivalent ruby/rails knowledge, which they may not want to do \r\n- The projects will be basically all Ruby projects because that is what CS169 teaches, so your target developer audience is severely limited\r\n\r\nAlthough it is not your intention to limit the skillset, tying to CS169 would effectively imply that.\r\nIt could be a suggestion, as could many other sites for learning your craft, but perhaps it gets no more merit than any other other route to learning programming skills.\r\n\r\nThe reputation thing needs careful thinking about because there are many ways to contribute to a project.\r\n- If I push 10 small commits of bug fixes does that score more rep than 1 commit of a new feature?\r\n- What about the documentation I updated?\r\n- Or I\'m a rubbish coder but a great organiser so I run all the sprints - do I get credit for that?\r\n- I\'m a good all rounder, but for this particular project I\'m not coding, just testing the bejesus about of the site. I don\'t make any commits.  Do I not deserve a better reputation?\r\n- I don\'t contribute code to any projects because I don\'t have the time to, but I contribute a lot in discussions on slack or gitter or other such forum for talking and helping people - surely I deserve recognition?   \r\n\r\nI think this is where the stack overflow type thing comes into it - you get points for a variety of different activities you may have carried out that can be tracked.  The trick is to make it balanced and ensure that every type of contributor, as far as is possible, can get credit for their efforts', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 175632194.0, 'datetime': '2016-01-27 13:39:01+00:00', 'masked_author': 'username_0', 'text': '## Premium Benefits - Developers ##\r\nDevelopers love free stuff and they love great tooling, and people like Jetbrains offer free licences to open source projects (https://www.jetbrains.com/buy/opensource/), so can we bring the two together?\r\n\r\nYou normally have to apply to them yourself, have them review the project etc and it takes a bit of time and is a bit of hassle.\r\nWhat if premium members, once they hit a certain level in terms or reputation or badges earned or whatever, automatically get licenses for these tools?\r\nObviously you would need to negotiate with jet brains and anyone else you wanted to get free licenses from, to agree that AV could curate the licences and if they say that Joe Developer meets the criteria because the project is Open source, active, he has made X commits etc, then he automatically is entitled to free licences for as long as he is an active, contributing member of the AV community.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tansaku', 'comment_id': 176118561.0, 'datetime': '2016-01-28 10:44:25+00:00', 'masked_author': 'username_1', 'text': ""Maybe, but I have people offering me money, and there are a lot of people who got their start in well paid programming jobs by what AV offered for free.  I think it's at least worth spending a couple of engineering days getting a subscription based payment setup in place to explore that.  However well or badly that works we iterate on what we offer premium members/charities until we hit on the right combination that stays within our twin goals of helping developer skill up and charities get their IT needs prototyped.\r\n\r\nSee https://www.pivotaltracker.com/story/show/108063300, \r\n\r\nReputation\r\n--------------\r\n\r\nAgreed the reputation thing needs some thought, but not too much.  I think we should get something out and iterate.  We shouldn't agonise too much about making it perfect, which is the enemy of done.  10 small bug fixes and 1 feature are both great.  Documentation should be in github repo so that count's too.  \r\n\r\nIn the future starting standups, chatting in slack or testing the site is something we can pull in, but no need on the first iteration, let's get something out to encourage/reward contributions and see who starts complaining and then respond to users concerns.\r\n\r\nSee https://www.pivotaltracker.com/story/show/78088920\r\n\r\nPremium Benefits - Developers\r\n---------------\r\n\r\nWe have that deal with RubyMine - developers on certain projects get RubyMine licenses - perhaps that should become a premium feature as you suggest.\r\n\r\nSummary\r\n--------------\r\n\r\nYou've made lots of great points and I'm really enjoying the discussion.  I'm keen now to start following through on some of the points by making changes to the site, deploying things, getting feedback from our community.\r\n\r\nI'm also off tomorrow, so apologies if I don't follow up as quickly over the next few days.  Either way going forward lets move to opening tickets in pivotal and making changes to the site.  Whatever time you can put in we will all be very grateful for.\r\n\r\nI've put some links to existing pivotal tickets in the above - do search https://www.pivotaltracker.com/n/projects/982890 for more and perhaps we can break this discussion up into components and continue in the tracker?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'patmbolger', 'comment_id': 176213558.0, 'datetime': '2016-01-28 14:41:34+00:00', 'masked_author': 'username_2', 'text': 'Great discussion above.  One suggestion: create a high-level description of where we want to go and how to get there.  This can be as simple as: 1) list objectives to be achieved, and, 2) for each objective, define strategy(s) to be used to achieve the objective.\r\n\r\nThat might give us a little more clarity on where we can start (we could rank the objectives) as well as commonality among implementation efforts (a single ""strategy"" could support more than one objective).\r\n\r\nI find this kind of thing to be a great starting point for more detailed planning, where there is a common context and understanding of the bigger picture.  \r\n\r\nAn example snippet, for a couple of objectives, might be (major bullet = objective, minor bullet = possible strategy to help achieve):\r\n\r\n* Develop a robust model for expanding the AV talent pool\r\n  - Expand AV associations / partnerships to include MOOC courses:\r\n    * focused on other dev technologies\r\n    * focused on UI/UX designers and Product Owners\r\n    * focused on SW Project Management / Scrum Master\r\n  - Structure some projects and/or cross-project roles as ""paid"" positions (assuming we develop a premium model for outside funding, and that this supports this concept)\r\n\r\n* Develop a better project recruitment and on-boarding process\r\n  - Define a project overview template that all teams would fill out - defining significant aspects of the project, including high-level description of project goals, technical architecture and technology choices (made or yet to be made), block diagram (or some other mechanism) depicting major chunks of functionality required, key project positions needing to be staffed., et.al.\r\n  - Periodic project overview talks (communicated to the community well in advance)\r\n  - Maintain a backlog of stories that a) could be handled by an inexperienced person (noob), and/or b) does not require deep knowledge of the application domain nor sophisticated system behavior.\r\n\r\nThere are probably a dozen or less key objectives to define, followed by discussion of how to get there.  Then, dependencies and synergies will be more apparent (e.g., a developing a talent pool and staffing a project could obviously be very tied in to revenue stream models).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'patmbolger', 'comment_id': 176214350.0, 'datetime': '2016-01-28 14:42:32+00:00', 'masked_author': 'username_2', 'text': 'Also, please note that the example ideas above are just that - I don\'t mean to imply that these specific examples are necessarily ""real"" at this point.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tansaku', 'comment_id': 176218913.0, 'datetime': '2016-01-28 14:46:20+00:00', 'masked_author': 'username_1', 'text': 'great contribution @username_2 !', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 176694694.0, 'datetime': '2016-01-29 11:04:34+00:00', 'masked_author': 'username_0', 'text': '@username_1 - yes, I have been thinking this ""chat"" is getting a bit unwieldy so perhaps we need to draw a line under it and break it down into separate things for consideration.\r\nHaving said that, here\'s my response to your last post :)\r\n\r\n## Developers##\r\n**getting started**\r\nWow, any member can edit!  A bit dangerous no?  Ok you\'d like to trust everyone but this is your main site and you don\'t want just anybody messing with it?  I have a grudge against you because I did badly in CS169, or even I am just a nasty hacker, so I register with AV and completely deface the site - ok, not something that is likely happen too often (hopefully!) but still a possibility.\r\nMaybe only people working on WSO should be able to edit it?\r\n\r\nStep 1 is definitely better, however the whole page still seems a bit intimidating - there are lots of steps and without reading them all, I don\'t know which ones are optional!\r\nI think it needs to be a bit snappier - bare minimum and then all the other gubbins if you have more questions.  You want to demonstrate ""it\'s *this* easy to get going, but if you want more info or to delve deeper, then do X, Y, and Z""\r\nQuestion: Why is a github account essential?  What if bitbucket is my poison?\r\nIf I wanted to reword it completely, do I just go ahead and edit it?  Surely better to discuss (e.g. in a story?)\r\n_Note: I\'m not saying I want to completely reword it and ATM I don\'t have the time, but soon hopefully..._\r\n\r\n**free for all vs curated**\r\nI guess you need to strike a balance.  Personally I\'m not mad on Pivotal and am used to JIRA in my work environment, (and of course many other options are available), but I\'d prefer consistency over ""my"" preferred tool.\r\nIn some ways ""use what you want"" is good, but at the same time, might it discourage some people from joining a project? [groan]I need to sign up to _another_ service now?[/groan], nah I think I\'ll skip it.\r\nA balance might be to strongly encourage one toolset, which might garner more support from AV, but allow you the flexibility of choosing others....but somehow still give a joined up experience, with minimal friction to getting involved in a project.\r\nOf course, the trick then is to decide which toolset is the ""preferred"" one.\r\ngithub is wildly popular of course, but bitbucket lets you have free private repos...you mentioned before a premium feature of AV might be private projects - but (for small projects) bitbucket gives you this anyway.  I don\'t know what model you had in mind - if github is the preferred source control medium then the only way to have private repo\'s is to pay for them - or did you mean privately managed (through AV?) but the source is still public on github?\r\n\r\n**difficulty**\r\nCorrect, developers can\'t be starting from scratch - as in they have some programming (or other useful skills) but they may be novices when it comes to agile or story points or working on open source or git or all of the above - so I mean we want the barrier to entry to be as low as possible, so people with something to contribute can get stuck in as quickly as possible without having to spend ages setting up accounts all over the shop or scrabbling about trying to find out about the terms being used so they understand how to get involved.\r\n\r\nAgreed that if you want to get involved you need to have some experience - whether this is coding or testing or documentation or whatever it is you want to contribute - you come here to hone your skills and/or to pick up more skills, but complete beginners who don\'t know one end of a computer from another need not apply :)\r\n\r\nYou can point people to things like CS169 or codeacademy etc (but perhaps not freecodecamp since they are total rivals!) - maybe even the individual projects could have a section suggesting where people might go to learn the skills to help out for that project.\r\nThere\'s no point sending someone to CS169 for a Visual COBOL based project for example :-)\r\n\r\nStory points and other unfamiliar terms should at least get a link to something explaining them, and we do need to know what they mean:\r\nProject Foo uses 1, 3, 5 as their scale, but Project Bar uses 1, 2, 3 - so if I am looking for medium difficulty stories then I need to know, per project, what the scale is they are using. \r\nTBH I do like the up-for-grabs thing of saying something is easy/hard etc - maybe if each project does uses it\'s own scale then this is something they need to configure on their project setup page, so our U-F-G like search can display this as ""easy"", ""medium"", ""hard"", to give a consistent meaning in the results set.\r\n\r\n**sample project**\r\nI still like the idea of a separate sample project that lets you go through the full lifecycle, wearing all the hats one would wear in a project, so you can see how easy it is to submit code, create pull requests, accept them, push the site out live etc.\r\nI could be the best Objective Caml developer in the world but I have never worked with a source control system so I find this whole github lark a bit intimidating, and as for Pivotal, well at least I\'d _heard_ of Github ;).  \r\nYes we can point them to some online training for these things individually but it would be good to have something end to end.\r\nAre all sites deployed with heroku?  Again, I have no idea, I\'m worried I will break something on a real project (or I want to start a project and I am worried it might be too difficult), so the sample project lets me see the whole lifecycle without worrying about working on a real project.\r\n\r\n**standups**\r\nSure, bandwidth is improving all the time in many places, but there are still a huge number of areas where people have limited bandwidth and it would be a shame to have to exclude people simply because they have a slow connection, but I take you point about starting somewhere...\r\nThe other reason to allow text based is because for example I am at work or I am on a train.  I can probably get away with a text based standup at work and on train the signal is too choppy for video even if I wanted to standup in front of strangers as it were, so again, the text based option would allow participation.\r\nOr perhaps people can participate asynchronously.\r\n- Fred wants to participate but cannot make a realtime meeeitng.\r\n- In good time before the standup, he sends a list of things he wants to discuss to the person who will host the standup (or perhaps there is a web page somewhere for this specific standup where the issues can be posted\r\n- Wilma, hosting the standup, raises the issues with the rest of the team.\r\n- After the standup, Fred has a chance to review the video and, in that same place where his issues were posted and the video is hosted, he can post his response, if any.\r\n\r\nI know you would like a live standup somewhere in the world pretty much 24/7, so there is always _some_ standup that anyone can join, but that\'s bugger all use to me if I want to join Project Foo but their standup is at 3am my time.  Sure I could join the Project Bar standup at 8am over breakfast, but I don\'t have the skills or the interest in Project Bar, so that really hasn\'t helped me at all, and I have gotten the impression that I must participate in the standup or else I can\'t really help Project Foo...so that\'s me out of the game :/\r\nHave you tried out tatsu.io to see how it actually works and see if there is something similar you could do with AV standups?\r\n \r\n## Charities##\r\nYes I fully understand the need to be clear that you aren\'t guaranteeing anything.\r\nPerhaps create a story to come up with alternative wording?\r\nTwin purposes - I have had some more thoughts on that, but I will post them separately over the weekend (I need to get on with some work ;) )\r\n\r\nRe: payments - are you thinking of having a donation button on the website?  Even if you aren\'t getting in streams of cash from premium developers, you may get one-off donations from them...\r\n\r\n## Premium Service##\r\nHey, I was only repeating what you said about looking at it as people donating their time rather than money!\r\nOf course there will be some people willing to donate time AND money and if the premium benefits are attractive enough, hopefully lots of them!\r\n\r\n## Premium Benefits - Developers##\r\nThat\'s great that you already have an established deal with Jetbrains, but why not try to get it for the whole toolset, and yes as a premium service.\r\nI\'m a C# developer so Resharper is essential, but I also use WebStorm for (can you guess?) web projects, RubyMine for CS169, and they do other IDE\'s for C++, python etc.\r\nIf you could get them to agree that people get the *relevant* product licenses if they are working on certain projects then that would be great - ie no point having a RubyMine license if your project is in python for instance!\r\n\r\nAs I\'m sure you know, developers working on non profit software can apply and get these anyway (if they meet the right conditions) so non premium developers are not excluded from the ability to get a RubyMine license, just that it is a lot easier for premium developers.\r\nOh and that RubyMine icon is out of date - it\'s version 8 now :)\r\nI\'m sure there are other developer tools out there where AV could broker similar deals for premium members..\r\n\r\n## Reputation##\r\nSure you don\'t want to spend ages agonising over it, but I think you want to have a reasonable idea of the direction you want to go and the things you might want to include in it\r\n - is a bug fix worth 10 points or 1 point?\r\n- How many more points does a 5 point story get than a 1 point story?  Does it depend on the project?  (In mine, I might not use story points at all, or 5 is a medium whereas in yours, 5 is a hard)\r\n- what sort of scale are we looking at?  Does having 10,000 points mean something, like I live, breathe, and sleep AV or might I have that simply by posting a documentaiton update once a month for 3 months?  Maybe this doesn\'t matter?  \r\n- Do documentation stories get the same number of points as development stories?\r\n- Do we want to have badges?  If so, do they confer extra points, or is it just that you have achieved that level?  (You have submitted your first bug!  Your have had 10 posts accepted as answers to questions!  You have started your own project!)\r\n\r\nPerhaps a starter for 10 points (pun intended :)) is something like getting points for each of:\r\n[Truncated]\n- you have created a github account\r\n- you have created any of the other accounts we suggest on the getting started site\r\n- points for completing the sample project (once we have one!) exervice\r\n- points for slack posts\r\n- points for signing up to a project\r\n- points for repo commits\r\n- points for attending (or otherwise contributing to) standups\r\n- a zillion points for getting a project into production\r\n\r\nIf there are badges then maybe things like:\r\n- badge for first project signup, then 5, then 10?\r\n- badge for first repo commit, then 5, then 10, 50, 100, 200\r\n- badge for first slack post, then 50, 100, 200, 500, 1000....?\r\n- badge for creating a project\r\n- badge for getting first project actually into production\r\n\r\nThese are all off the top of my head - I haven\'t really looked at the stack overflow or other such merit systems to see what they are offering - we probably want to be similar, but different ;)\r\n\r\n@username_2 Thanks for contributing to the discussion!\r\nYes we definitely need to be looking at breaking this down into separate issues, either to become real stories or that need to be hammered out with further discussion to see if there\'s anything actually worth pursuing.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 177484497.0, 'datetime': '2016-01-31 12:12:43+00:00', 'masked_author': 'username_0', 'text': '## Developers! Developers! Developers!##\r\nI\'ve had a bit of a Steve Balmer moment ;)\r\nI\'ve been wondering if it is taking the wrong approach trying to focus on developers AND charities initially and the focus should just be on attracting developers.\r\n\r\nIt\'s going to be easier to attract developers than it is to attract charities, (particularly paying ones), so Agile Ventures initially is all about the developers and the rest, to a large extent, will hopefully ""just follow"".\r\nThe developers will come up with ideas for non profit projects and some of them may even have contacts in non profit organisations that are looking to have sites developed, so let the developers worry about the projects and the charitable causes and let Agile Ventures worry about the developers.\r\n\r\nAgile Ventures actually sourcing work/bringing developers and charities together could follow down the line when there\'s enough good sites to showcase and enough developers to go around to actually work on new projects - at the moment there seems to be a shortage of developers anyway so there would be little point in attracting more projects if there is nobody to work on them.\r\n\r\nNote: you would still need the showcase part of the site now, to show to potential developers to get them excited about the idea of joining and the sorts of things people are working on.  A handy byproduct of this showcase for developers is that it would also be useful in attracting customers who see the quality of work Agile Ventures developers can churn out.\r\n\r\nFor now the focus is on the developer experience, attracting developers - ideally paying developers at that - and making it a great experience for them.  Soâ€¦how do we attract developers?  Cool projects to work on, cool technologies to use, ease of getting into a project and getting help and not feeling like a numpty, a cool place to hang out, show off, learn, teach.\r\n\r\nI am a developer interested in working on an open source project, or even starting my own - what clear benefits are there to joining Agile Ventures over and above free GitHub (even we are using GitHub!) or up-for-grabs or one of these other sites where developers can work on open source projects?  What\'s the USP?  This becomes even more important when trying to monetise the developers and I think it\'s gonna be hard to stand out from the crowd.\r\n\r\nHere is one idea for premium developers: Smart Search\r\nMany of the other sites have an easy way for me to search for projects I am interested in, whether it is just a general search or keyword/tag search - but what happens when I can\'t find any interesting/relevant projects today? Do I try again tomorrow?  The next day? Next week?\r\nWhat if I could key in criteria for projects I am interested in - so I want anything which involves ruby AND angularjs OR is something to do with sloths.  I am only interested in brand new projects, or maybe I am only interested in projects started by people with at least 10,000 reputation points.\r\nEvery day when I log into AV, (or via email notification?) I will be informed of any projects which meet the criteria I have set up, and I could have multiple sets of searches, each with multiple matches.  The matching algorithm would rank the matches and show me the most relevant ones first.\r\n\r\nOk, that bit is not much different than the usual sort of search you might get on any number of rival sites where you are looking for projects, but what about the other side of the coin?\r\nI have an idea for a project and I want to find people with the necessary skills who I can try to tempt to work on my project.\r\nI am looking for people with C#, jQuery, and Mongo skills, I am only interested in people with at least 1,000 experience points or who have contributed to at least 2 projects or who are based in my time zone to make it easier for stand ups etc.  I am also willing to act as a mentor to one person who wants to learn the project management side of things.\r\nI am particularly interested in people who are multi lingual who have worked on realtime interactive sites.\r\nAt project inception stage you may not know what technologies you want but you can still search for people who are looking to work on projects without specifying coding skills.\r\nAgain, the matching algorithms will show me the best matches for my criteria, and I will be notified when any new matches appear, and be easily able to contact these people about my project.\r\n\r\nYou could even take it further and say how many people with each type of skill you are looking for (2 c# developers with 3+ years experience, one mongo dude, as many JavaScript devs as possible) and you continue to get notifications of matches (you haven\'t already rejected) until your ""quota"" is filled.\r\n\r\nThis would obviously need people to upload their skill set to their profile and be open to being contacted by interested parties, which is either by opting in to be searchable or by specifying your own search criteria there you are touting for work.\r\n\r\nNon premium members could look at any member and see their particular set of skills, or see that they are interested in doing etc, but they donâ€™t get the auto updating power search capabilities.\r\n\r\nAnother idea for members, not necessarily premium (after all you probably expect to have to attract non paying devs first and then entice them onto the paying model once they fall in love with AV - but you have to get them there first) is mentoring - get people to agree to mentor to new members for a short period of time to get going on their first project. They would, of course, earn a badge or some such thing for doing this.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tansaku', 'comment_id': 177875641.0, 'datetime': '2016-02-01 09:35:32+00:00', 'masked_author': 'username_1', 'text': ""@username_0 thanks for the ongoing input - haven't had a chance to process it yet - hope to look at it in detail soon - do check out the 2nd weekly meeting we had if you haven't already: \r\n\r\nhttps://youtu.be/0YQNKccX-Tw\r\n\r\nhttps://docs.google.com/document/d/1qKLXYf5oTuT-A2eWVlh8_TBVfQHAwB8qr3HmzkOSEcQ/edit\r\n\r\nAlso we're looking for other times that you might be able to make - care to suggest some?\r\n\r\nAlso kick off meeting for WSO on Wednesday will be where we work out specific actions based on the high level direction:\r\n\r\nhttp://www.agileventures.org/events/websiteone-agileventures-home-site-weekly-kickoff"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 178009694.0, 'datetime': '2016-02-01 15:12:28+00:00', 'masked_author': 'username_0', 'text': 'Ok, it would be nice if the PT links weren\'t there and the JIRA link was more obvious but okay lets get cracking....I click on the JIRA link and get a login screen....what the?  Nobody told me I needed to create a JIRA account in addition to all the others I had to create.\r\n\r\nThe page says _""To request an account, please contact your site administrators.""_, but I have no idea who the site administrators are or how to contact them - is it the admins for the AV site? OSRA? JIRA?  Sorry, life\'s too short, I\'m off to up-for-grabs to try my luck there!\r\n\r\nNow I know it seems like I\'m picking on OSRA but I\'m not - randomly clicking around AV, this has more documentation than many, and at least tells you how to get going with the repo!\r\n\r\nSnow Angels, again picked at random for example has nothing about the technology, no getting started guide, seems to use Trello (another new tool! but also has a Pivotal link and, importantly, it has a link to a prototype site!  Score one for Snow Angels!\r\n\r\nThis sort of thing make it hard to become engaged in a project in the first place unless I am really determined, never mind the ongoing issues of having free time, being able to pair, getting up to speed with the code base, with the problem domain etc etc.\r\n\r\n## Project Managers ##\r\nThere seems to be some discussion about requiring these for a project - I think that would discourage me from starting a project that it\'s suddenly this whole managed affair - I\'m not into that, so I can\'t start one?  Or I need to find a project manager and convince them to join my project?\r\n\r\nOn the flip side, joining a project, I might like having a project manager running things - they will be a point of contact I can turn to if I have any issues (particularly early on) but also I want to concentrate on the development side of things so I have no interest in running sprints and meetings and whatnot.\r\n\r\nI do think the idea of having a backup PM or pairing is a good one, where you choose to go the PM route - but then I would say that about any of the roles, it is good to have more than one person on it, be it testing, documentation, coding, scrum master, gofer, whatever...\r\nIt can serve as an opportunity for people to learn or hone their craft, or get into an unfamiliar area and have the benefit of working with someone experienced.\r\n\r\nThis sort of thing will come down to how much of a curated experience you want to offer developers - is it a free for all anything goes, or is there a framework that people can or even **must** work within, otherwise there\'s no point in them being here?\r\n\r\n## Time##\r\n\r\nIn terms of making meetings, week days I can never make audio or visual meetings during the day - though I may be able to join a cheeky text based one or two.  \r\nEvenings, I am generally travelling from 5 till about 6:30pm and could participate  by text for only part of that journey (not the driving bit for example ;) ).  \r\nI am juggling things around a bit at the moment but currently it looks like Mondays or Thursdays would be do-able for me from about 6:30pm-7pm for 1/2 an hour or so.\r\nWednesdays are basically out until I get home around 8:30pm\r\n\r\nWeekends are better - 6:30am-8:00am Saturday or Sunday and then from about 10 am onwards on either day I can generally make some time available.\r\n\r\nCurrently doing 2 x Coursera specialisations + the 169 TA\'ing so actually getting stuck in to actual real work will likely have to wait a few weeks - one specialisation finishes about the same time as CS169.  \r\nI can try to fit in things like reviewing documents or writing things up in the meantime.\r\n\r\n\r\nSorry that post ended up really rather longer than I intended but hopefully it proves useful to you.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'freeranger', 'comment_id': 178151112.0, 'datetime': '2016-02-01 19:44:32+00:00', 'masked_author': 'username_0', 'text': '## Meetings ##\r\nStanding up, squashed, on the train on the way home, I decided to listen to some more of the meeting.\r\nNo point really trying yo watch it even if I could raise my arms because it\'s a bit hard to read on a phone screen ðŸ˜…\r\nA couple of things struck me:\r\n- How much mobile bandwidth am I burning ""watching"" this video I can\'t see?\r\n- listening to the audio gives me the vast majority of the content and, if I cannot be present for a video meeting, this is is a great way to catch up - walking to the train, in the car, standing squashed on the train.  I have a lot more opportunities to listen and as a byproduct, don\'t eat into my data allowance so much ;)\r\n- if it was anyone other than Sam talking, if it was an audio track,I probably speed it up to 1.25 or 1.5 times and still understand it perfectly - Sam, you already sound like you are speeded up a bit ;)\r\n\r\nDo you have a feel for how often these standups and other meetings are viewed afterwards by people who maybe wanted to attend but couldn\'t? i wonder if audio versions might increase the audience?\r\nSo then this led me to wonder\r\n- could there be a live audio only feed for meetings?\r\n- could there be a non live audio stream after the fact?\r\n- could these be turned into podcasts?\r\n\r\nThe last might sound a bit mad but even if you aren\'t involved in any projects, it may be interesting to listen to, to understand the problems of running agile projects, running remote teams, or just to get a feel for what else is going on in the AV world.  A podcast could be automatically downloaded to my phone overnight and I listen on the way to work...sweet.\r\n\r\n## Search##\r\nYou were talking about me on the (I want to say podcast!) and my discussion on search.  I agree this was quite low level, but at the same time it was pertinent it to the 50,000 ft view - ie, what is the main purpose of Agile Ventures?  If you want to attract developers then it is essential that the site is accessible to developers, to find projects they are interested in.\r\nIf you want to attract clients first and foremost the. It is essential that the site showcases the work you can do.\r\n\r\n## Charity##\r\nI had a brief look at the charter and it is not exactly light bedtime reading! I know it is a template and necessarily will be couched in jargon, but perhaps it is worth pulling out the key bit, in English, about what the aims are of AV, so that you can get comment on it - I guess this is really the bit you want comment on because most of the rest will be necessary jargon.\r\nI wasn\'t aware of the term ""third sector"", which could just be showing my ignorance, or could be showing your assumptions about people\'s knowledge since you already have knowledge in that area - in the interests of accessibility, perhaps keep the jargon to a minimum in the bits you want comment on - or at least provide a glossary of terms!\r\nAlso, as soon as you can, get a big old donate button going so you\'re not just burning through your own money while trying to figure out where AV s going and start the process to get there - you can start to burn other people\'s money too ;)\r\n\r\n## Focus##\r\nThere was some talk about scaling up (# of developers) before scaling out (# of charities) but then that changed to getting our existing house in order and improving the current experience before we start scaling in any direction, and that may have changed again in the remaining two hours I haven\'t listened to yet!  There was also mention of lack of focus/direction within individual projects, so perhaps this is something to focus on (pun intended!) improving?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tansaku', 'comment_id': 180250707.0, 'datetime': '2016-02-05 08:39:32+00:00', 'masked_author': 'username_1', 'text': 'We need to review this and extract more stories - @username_0 has made a good start with #763, #762 and #761', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'tansaku', 'comment_id': None, 'datetime': '2016-03-02 12:16:25+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: AgileVentures - thoughts on moving forward
username_0: **Developers**

I think for new developers, there are a few barriers to entry:-

* I don't know what skills the projects need so I don't know if I could help. If you look at http://up-for-grabs.net/#/tags/ you can zero in on the projects that match your skillset so you find ones more ""relevant"" to you.
* My experience with the technology is a bit shakey so I'm afraid I will commit to something beyond my skillset.  Some projects tag issues with an indicaton of how easy/difficult they are - e.g. https://github.com/influxdata/influxdb/labels/status%2Fhelp-wanted - so maybe I start with some easy/quick issues to get my feet wet, get some confidence, and move on from there.
* I'm scared of breaking things - I don't know the project, maybe I'm new to this whole contributing to open source game. Perhaps an experienced team member could guide me through my first issue or two? Maybe there is a sample project for newbies to play around with and contribute to and see how it all works, somewhere they don't need to be afraid of contributing.
* I can't commit to pairing - My availability is all over the place, I'm not sure I can commit to meeting up online with someone at certain times, or my connection is really bad or many other reasons I can't pair, or I just don't like the idea of it. Maybe I know the benefits of pairing and I would encourage people to try it but maybe it is emphasised too much and I want to start off without pairing, submtting pull requests for someone to review. Basically not wanting or not being able to pair shouldn't be a barrier to contributing to a project.
* Limited technologies. There seems to be a clear ""bias"" towards Ruby here, which is fair enough, but what if I am an awesome .NET developer or node.js developer and would like to work on a project using those skills - is this possible? Is AV ""meant"" to be a ruby shop or is that just the way it has panned out?
* I can't easily find projects I'm interested in - I want to find projects particularly about saving badgers, or the most active projects or the newest projects, or the ""hottest"" projects (most ractivity recently? Most developers joinging recently?) - there's no way to do that, I just have to trawl the pages.

**Charities**

You need to attract new business from charities in order to continue to grow, so you need to make charities want to use you, which means it must be easy for them to find you and find what you do and be confident you can meet their needs.

*Scenario* - I am a charity looking to have a site made, I google for <whatever term turns up agileventures as an option> and go to agileventures.org

The first thing I see is stuff about pairing and learning to code and developing my team skills. But I am not a developer, I am a charity - this site seems focused on coders, not on businesses looking for a site to be developed. It doesn't seem relevant to me at all, so I go elsewhere...

Lets say I get past the front screen because maybe you are relevant after all. I want to see what you guys have been doing to gauge if you are any good or not. Where do I go? hmm, I click into ""Projects"" as the most likely place to get a feel for what you do and...I get a random list of projects.

I really want to see one of the actual sites in action, so I pick one at random, say LocalSupport, (Note, I tried a few other at random such as MetPlus, but I couldn't a link to the site at all in the ones I tried!) in the hope that I will get a link to click on to the actual site. Hmm..nothing obvious - though I notice under the title of the site, the page says ""VAH's Local Support site is at www.harrowcn.org.uk"" but this isn't even a clickable link, so I have to copy and paste it....oh wait, further down the page there is an actual clickable link to the LocalSupport site, so I can finally see one of the sites you have developed.

Boy that was hard work! Other projects don't even seem to have any links - I have no idea (as a developer or as a potential customer) if these sites are live at all, if they are just at the early alpha stage, if they have even gotten off the ground.

What I would like to see is a very obvious link, front and centre, to the current production site. Regardless of whether the site is live or not, I would also like a link to the latest deployment of the development/UAT instance so I can see what it looks like - for not-yet-live sites I can now see what they are about and for currently live sites, I can see what's due to be released soon presumably.

It would be nice to see a thumbnail of the site on the project page also.

I know you said in the meeting that you didn't think a showcase was that important at the moment, but if you want to attract new customers then you need to make it more customer-friendly and a showcase is one way to do that - or, for now, just spruce up the project pages and make them more ""discoverable"" and easy to see what they look like.

**Premium Services**

There are two potential sources of revenue here - the charities and the developers:

_Charities_

Free service gets people working on your site as and when, so don't hold your breath for it to be developed...

Paid for at different levels can offer things like:

Your project is promoted on the site so hopefully will attract more developers
We could offer to pay the developers a small amount, thus likely attracting more people to it. Not sure how you would work out how to pay them - per commit? per lines of code? per feature? If stories were assigned points then a fee per story point? So a 1 point story gets you X, a 2 point story gets you 2X etc?
We could specifically direct developers to your project
We could promote your charity (as opposed to the project itself) since after all the website is a means to an end - the charity itself is the main thing.

_Developers_

This is a bit tricky since the developers are already giving their free time to help out on projects and now you want some money from them too? Hmmm...

The ""fee"" would have to be quite small methinks because of said donation of time to projects, but the sorts of things you could offer are:

They get first dibs on any paid for work - the premium members are made aware of it for a period of time before it is opened out to everyone,
They get some kind of ranking on your site in the members directory
Other members can ""endorse"" their skills (like on LinkedIn)
Maybe people who have worked with them will write testimonials about them on their member page (can help them get other paid work)
I think the area to concentrate on here would be helping the developers to promote themselves in order to get paid for work elsewhere, since we all need to make a living right?
<issue_comment>username_1: @username_0 thanks for this input - really appreciate it.   Some thoughts:

Developers
----------

* that **up-for-grabs site** is awesome and we should get ourselves involved or copy the format.  As I mentioned in slack, one issue we have is that most active projects are not currently using the same ticket management system that up-for-grabs uses
* **indication of difficulty labels** - yes - we should have more of this.  We do currently have a points system of 1,2,3 etc., in many projects where 1 represents a simple feature and 3 represents a more complex one, but perhaps we need to get that across better
* **sample project**, **experienced team guides** - yes, both great ideas, although I'm wary of sample projects as part of the idea here is to learn with real projects.  Also you *cannot* break things with the pull request model we are using - happy to explain further.  Also the whole point of the online standups is so that new members can meet other team members and then be guided.  That's how we've onboarded lots of people, but maybe we are not properly communicating that that's available, or maybe people are just too shy ...? :-)
* **pairing**, yes, I think I start to agree that we need to better support solo contributions as a gateway to pairing.  What I worry is with people working on things by themselves and then having their contributions not pulled in because they haven't been in good communication with the team upfront, but perhaps that's just the way it has to be
* We have a **Ruby/Rails bias** because the group who started the site were alumni of the 169 Ruby/Rails course.  We do have some other projects in other languages, but none of them have become hugely active.  Other languages include Python, Go and JavaScript.  Anyone can start a project in any language ...
* finding interesting projects - we do have a **search** mechanism, but perhaps it is not visible enough -- maybe we need more obvious filters?

Charities
---------

I totally agree that the current site is totally not right for attracting charities, and ultimately we do need to attract them. We tried building a separate [site](https://evening-oasis-1495.herokuapp.com/) as a prototyping exercise with a group of novice developers, with a separate site being easier for them to work with, but the result wasn't something we could immediately use.

When I say that the showcase is less important right now, it's because I feel like we need to improve things for onboarding developers before we start reaching out to more charities, so that when charities do come to us, we'll have developers that can work with them.  Also, from where I'm sitting we have lots of work to do right now, and I worry that if we focused immediately of bringing in lots of charities we'd be turning them away as there was no one to work on their projects.

Of course it's all a bit chicken and egg, but right now the site is costing me a certain amount of money to run each month, and I need to put something in place to offset that burn.  By registering as an official charity we'll get persistent slack history and be all above board for accepting donations and charging for membership of the charity.  I have various people who are telling me they'd like to supply funds, so if we can get the payment infrastructure set up for that, then I can at least stop burning cash each month :-)

However with that in place, and some basic UI improvements to the main site, perhaps then the focus really should be charities.

Premium Service
------------

Agreed, there are at least two potential sources of revenue and others as well (hiring fees from companies like freecodecamp).  6 months ago I was thinking of charities paying a listing fee; however we've yet to validate that as a business model.  I think we would have to have a showcase in place for that to get off the ground.

However I do have developers saying they'd like to contribute to the cause, so that seems like the stronger lead right now in terms of making the current site sustainable.      Making the site a nice place for developers to hang out and giving them some desirable benefits from a premium service feels like the highest priority to me at the moment; but I'm totally open to change.

Footnote
----------

BTW, I totally take your point about the problems navigating the site.  I think they affect both developers and charities, and the site is the way it is because it's evolved organically that way, rather than intentionally being set up that way.  This is largely because it was a ""sample project"" where novice developers and designers were practising their skills.

That was fine at the time, but my sense is that now, for the future success of the project, we need to have the site adhere to more of a central vision that provides consistency of user experience; and allows our key stakeholders to find what they need.
<issue_comment>username_0: @username_1: Sure, glad to be able to give some input on this.
# Developers #
- **up-for-grabs.net** - do we need the whole thing, or just a way to query and link to the github repo's for the actual projects?  You mentioned elsewhere having a version of this for Pivotal...but is that a ""must have""?  I guess it depends on if you want to track all issues through pivotal or through the git repo's.
To my mind, pivotal is good for running sprints, but if it's just a bunch of dev's contributing as and when, then maybe it doesn't work so well and the normal git issue mechanism is fine?
- **difficulty** - Ok yeah I found that once I went into a story in pivotal...I was looking in github.  Now I'm confused (as joe developer) as to where I look for issues - github which I know well and can see some issues on, or this other thing pivotal which I know nothing about?  Hmm there are issues in both places - does one supercede another?  Do they complement each other? I don't know.  
Also, as a newbie developer, or new to agile developer, I don't really get the concept of story points - tell me something is easy/medium/hard/a few minutes work and I get that, but what does it mean when I look in this pivotal tracker thing and a story has ""points""?  What is a ""point""?  All I want to know is if this is likely to suite my n00b skills because basically a monkey could do it...
I think you might need to consider if you want to be sprint oriented or if it's a more ""traditional"" opensource free-for-all with random contributions any time, from anyone...
Also all being on the same tracking system would be good for consistency and familiarity to people hopping between projects.  Since they are all under the Agile Ventures ""umbrella"", there should be some consistency to the experience across projects.

- **sample project** The idea here was for learning how AV works, how to submit to a project and get it released etc, not for learning how to be a developer.  I've got my new, shaky ruby skills and I'm willing to give it a go but I just want to see how it hangs together without affecting anything important.  
This could be something as ""simple"" as a tutorial showing users how to raise an issue, take ownership of an issue, make a code change, create a pull request, accept a pull request, get the software into the wild.  
Maybe they just add their name to a list displayed onscreen or something like that - a simple, visible result of getting an issue all the way  through from start to finish, and having to wear different hats in the process since you wouldn't normally raise the issue yourself and do everything else along the way too.
What this isn't is a sample project for learning to code or add any real features to anything

- **guidance** - Perhaps there is an element of shyness or embarrassment that you are a n00b and are intimidated by the online meeting idea, or perhaps you don't have video capability, or indeed perhaps you just can't commit to a specific time every week.  You guys have settled on Friday's at 5 for the AV standups it seems but that is definitely not a time that would ever suit me, and maybe a time that does suit me doesn't suit everyone else...it's hard to please everyone.  Does this mean I can't contribute?  Well clearly not since we are having this dialog, but I might feel I can't contribute if I can't (or won't) attend the standups...so perhaps you need to emphasise more that they are there to get to know each other and to help etc, but they are not mandatory for participation in projects?  
Ditto pair programming...unless of course you *want* it to be mandatory... You would need to make it clear though that if you aren't pairing ""live"" then you do need to have a dialog going with at least one other person and effectively pair (or at least code review) ""asynchronously"" as it were.  This way your pull requests don't get left by the wayside and you don't have to worry that you have done something stupid on your own.
For this you may need people to volunteer to be mentors to n00bies to help them through the early days of being an AV contributor.

- **languages** - I can understand why it started out as ruby-centric....looking around, it would still seem to be that way and there is nothing to suggest other languages are up for grabs (C# for example? java? scala?) so I might wrongly assume it is exclusively for ruby-ists.  There is nothing in the ""Getting started"" section for example that suggests I can use any technology I like.  Speaking of which...

- **getting started** - The ""barrier to entry"" seems quite high.  Step 1 wants me to:
_Setup accounts for GitHub, Pivotal Tracker and Google+. Also, make sure that you have a YouTube Channel connected to your G+ account.  These services are crucial for you to be able to participate in AgileVentures daily activities ._ - wow, that's a lot to even get started - think I'll take my project to github instead, where I can get going in seconds...
- **search** Found it!  But I was looking on the projects page for a search feature for projects - this is a hidden-in-plain-sight search across the website.  I am trying to zero in on projects by technology perhaps or the sorts of charity I am interested in.  My sister had breast cancer, so maybe I want to contribute to breast cancer related sites - how do I discover those? 
Or I came here looking for C# projects but on the ""look for projects you are interested in"" page I see one that is using Angular...hmmm I'm interested in that too - maybe I will check that out instead.  Discoverable see?  up-for-grabs lists ""popular"" tags front and centre on the projects page - that's a good idea...

## Charities ##
Chicken and egg as you say - the charities presumably would be the major source of income, but you can't get them on board until you are set up ""properly"" for development and have attracted enough developers, and ideally paying developers at that...which is hard to do at present, maybe in part because you aren't showcasing the current sites?
What do you need in a showcase (initially at least) beyond a snapshot of the site, some blub, links to the site, to the project, maybe to the latest dev release?

What is the current business model - are any charities paying anything at all towards their projects/upkeep of the site?  Do you have an idea of how much you need to raise, essentially immediately, to stop you personally burning through money on this?  That has got to be somewhat of a priority right?   Perhaps once you get registered as a charity, you can do a wikipedia-like call for donations as a one-off, to ideally get AV funded until it can become self-sufficient?  It might be quite easy to get an iniital fund going to take the pressure off you...

## Premium Service ##
Yes, I think you need some sort of showcase when you start pitching to charities.
How did you find the existing ones?  Was it via personal contacts, either you or other members?

Why would a charity want to be listed on the AV site and what does it give them that the unlisted members don't get?  The primary way for people to find charities will be via google, not by going to AgileVentures, so isn't a listing just a ""nice to have""?  
There are two things for the charities - one is being more visible to developers (perhaps this is what the listing is for?) so they get their site developed, and the other is to actually raise funds for the charity in question.

Perhaps one of the selling points to a charity to pay for a certain level of membership is that AV would run a fundraiser for that charity once they have been a member for a certain period of time?
This could be something IRL - though that might be hard to organise with developers being spread across the globe - or something in cyberspace - e.g a coding challenge with a small entry fee and a prize for the winner, with the remaining money going to said charity.

How many active developers do you have at the moment and how many genuinely active projects?
I'm wondering if you have enough to try to split developers into three tracks:
-- Working on existing charity sites
-- Improving AV for developers
-- Developing at least a simple showcase to attract charities?

Normally of course you would want developers to pick and choose what they work on but I'm sure in the early days people wouldn't mind being encourages towards one stream or another.
Perhaps the ""discovering projects"" screen would make it easy to find projects in dire need of some love, though I'm not sure what criteria you use to identify them - is a new project more in need of help than an existing one?  The ones with the most bugs?  The ones with the fewest developers?   The ones charities have paid to push up the ranks?

## Footnote##
Yes, it does have an ""evolved"" feel about it and it seems to be very heavily focused on the developers without focusing on making it easy for developers.
Perhaps you need to sweet talk a UX person into coming up with a good design?  The public face of AgileVentures is, after all, crucial for both Devs and Charities - you can still have AV devs actually implement the shiny new UX, but in my experience good developers !== good designers.
Indeed, I woud say it is so important that it could even come down to paying someone to design the site and then getting AVv devs to implement it...funds permitting of course :}
<issue_comment>username_0: A bit more thought, based on the slack chat.

## Up for Grabs ##
You seem quite taken with up-for-grabs.  If you want to move forward with it then I guess there are a couple of questions:
1. Are you so wedded to Pivotal that it is essential in the brave new world?
2. If the answer to 1. is No then would anyone be able to quantify the effort of moving away from Pivotal to UFG + github vs the effort of forking UFG and integrating it with Pivotal?
3. If the answer to 1. is yes then can Pivotal be modified to behave in a more UFG like manner? or would it make more sense to try to integrate the two?

I think I said before I see pivotal as more for structured teams running sprints (but perhaps thats what you want to achieve) than the more free form approach of the usual open source projects on github, so for me as a developer, I would be happy in the familiar environs of github.
OTOH, as a project sponsor, Pivotal will more easily let me track progress...so do we just say that devs have to suck it up and fit in with Pivotal?

If Pivotal stays, does it create confusion having two places to report issues - i.e. Pivotal itself and github issues tracker?   Perhaps if we can link between the two it wouldn't matter where the issue is reported, it would be visible in both?

## FreeCodeCamp ##
Regarding FreeCodeCamp, it seems quite slick.  It is clearly aimed at dev's learning, and in particular a certain set of skills (I would like to dub this the ""Neeson"" method in honour of Liam Neeson and his 'particular set of skills' :^D ), whereas AgileVentures isn't at all set up that way and doesn't have those goals - but one thing I think we can take from their site is the ""gamefication"" of learning - see how they use terms like ""challenges""  and earning points for things like completing ""challenges"" or posting links, being upvoted, being thanked in chat etc.  

Similarly, Stack overflow do things like reputation points and badges for various tasks - leaving comments, providing accepted answers, even just completing your profile (http://stackoverflow.com/help/badges).

All this all encourages you (consciously or subconsciously) to keep going and try harder because you want more points - you want to feel like you are progressing and you want to let people see you have a bigger number than they have.  You can feel pleased with yourself and earn some bragging rights perhaps when you earn the Jedi Master Yoda badge for most accepted pull requests across all projects on the site, or your reputation points hit 10,000 or whatever.

AgileVentures could take some of these ideas to make the site more ""fun"" for developers and to encourage them to come back and contribute time and again.   How you monetise that is the tricky bit - are your badges only visible if you have made a donation or paid a subscription?  Or maybe you can only earn up to a certain level of points/badges as a free member and if you want to ""unlock"" the other badges then you need to pay up?
<issue_comment>username_1: Developers
--------

* *up for grabs* - maybe we don't need the whole thing - maybe we should switch to github issues? but then we can't assign people who don't have collaborator access I think and that maybe breaks the pull request model of a couple of the main projects - but each project is it's own master.  Every project team is completely independent and can decide their own workflow so it's up to them.  Either way it's probably a good idea for every project to submit to up-for-grabs just on the off chance; although it's a shame if we're not using all they have to offer;  which begs the question do we need a platform-neutral mechanism of sharing which tasks to start on, can we build that and how much of a priority is it

* **difficulty** Having multiple systems and repetition of issues is unDRY and to be avoided where possible.  What's the solution? Not sure .... there are lots of resources on the [relative merits of story points](https://www.google.co.uk/webhp?q=what%20are%20feature%20story%20points) and it's something that is introduced in the CS169 and AV102.  And if a new developer actually joins a standup and participates in an agile sprint they'll see the benefit of story points to the team and to communication and estimating progress etc.  Of course if they're opaque from outside, then that's a problem ..... as regards consistency between projects - we can't enforce it, we could have a template?  Is it desirable? I'm not sure ... part of the overall mission of agile ventures is to be sprint-oriented.  Github already provides almost everything people need for a ""traditional"" opensource free-for-all with random contributions any time, from anyone.  I think the point of what we are doing is to have something on top of that where you get the option to work more closely, in real time, with others as part of a more tightly knit team.

* **sample project** - yes something as you describe would be great to be built into AV102 or CS169 - would be great if somebody wanted to create something like this and we could add it to our documentation flow

* **guidance** indeed. Note that video capability is totally not required - although people keep on thinking it is for some reason and apologizing about it.  Personally I could not care less if you have video capability or not.  Is 99% irrelevant.  Fun sometimes if you have it.   What is critical is the ability to screen share, which everyone can do through google hangouts.   The not being able to make the time, and being shy/embarressed are perfectly good reasons however.  You say AV standups are at 5pm on a Fri?  That's just a test time for the weekly meeting.  There are standups 3 (or more) times a day every day at different times - see http://www.agileventures.org/about-us .... your points about emphasising their optional nature are well taken, and I guess what we need is to cohere around a vision and message and work to make the main site communicate that effectively.  Personally I am coming round to the idea that we should focus more on supporting people who want to work solo and asynchronously; although I'd like to see that as a gateway to ultimately more pairing and more attendance in standups (even text based standups see http://tatsu.io)

* **languages** agreed - would be good to make the options more visible
* **getting started** good point - and actually the key thing is just joining Github and AV.org to get into slack
* **search** glad you found it - point taken about tagging

Charities
---------

Well I'm not sure that charities will ever be a major source of income - they're not known for having lots of cash to throw around :-) Small charities are often trying to do things on a shoestring.  You're correct about what the showcase needs, not much.  I think the key thing it needs is to look good.  The problem with the group that built the previous one, and all credit to them since it was their first big project, was they got focused on things like login and authentication at the expense of CSS and UI/UX.

In principle if Thomas or I cleared a week and took a run at it we could have a simple showcase up that would be potentially very valuable in terms of attracting both charities and developers.  It's a question of priorities.

You ask about the current business model; we have had charities make some small contributions to projects.  I would need approx $50 a month to stop the sites current burn.  What I would like to set up is stripe integration so that people could sign up for an AV subscription of $1 a month or something to become a supporting member of AV.  Then if we get 50 people signed up we're at least not losing money.  I think that would be a great thing to start with and then iterate on the site and/or showcase to bring in more contributors and have premium subscriptions of $5 or $10 a month which gave more benefits in terms of promoting existing projects or supporting private projects.

Premium Service
---------------------

Existing ones have been found via personal outreach by myself and other members.  I also ran charity jamboree events at Makers Academy and streamed them live and got various charities involved by promoting that.

A charity might want to be listed to increase the chances that they'll get some low cost prototyping of solutions to their current challenges, and to be introduced to developers who'd like to help them.

Running fundraisers is an interesting idea.  Feels a little out of scope for me personally since that's what all the crowdfunding sites do and I'm not sure how we'd differentiate ourselves from them.  One way of looking at AV is that we are crowdfunding site where you donate engineering time instead of money.  

I think we have maybe 10 really ""active"" developers, and I'd say 4 really active projects although there's flux.  The three tracks you mention are there already implicitly - they could be emphasized ...

We totally need to sort out the project rankings and offer options to sort by ""most in need of love"" etc. :-)

Footnote
---------

Yes, a good UX person.  Although I'd say actually I'm a UX person - I've just been hands off on AV and been the client and not involved in the technical or UX side of it except as a ""customer"".  It was also about letting the learning developers on AV try out their own ideas.  Now I'm 100% on AV I think it's time to change my role and swing my weight behind really fixing the UX on the site and getting involved at all levels.  See http://harrowcn.org.uk as an example of where I've been more involved.  Not that we couldn't use all the help and input we can get.  I'm no UX guru :-)

Up For Grabs
-------------------

Is great partly because I know of various non-AV people who'd love to see something like that.  It's possible we might transition some projects away from Pivotal, but I feel it's important that we try to have a broad tent to allow different project styles to emerge.  The site currently gives projects a push towards github and pivotal, but I'd like us to support all combos, e.g. bitbucket and trello or whatever.

If we have the sample project you suggest, that can be a standard onboarding using github/waffle or whatever, but I my intuition is that we benefit more in the long run in terms of what we learn through diversity by allowing projects to pick and choose their approaches and tooling.

I'm in two minds about whether we want to try and make it trivially easy for a solo programmer to pick up a simple task asynchronously, OR trying to better communicate the benefits of getting involved in either synchronous standups, sychronous pairing, or both ...


FreeCodeCamp
---------------------
Is totally slick and I'm totally jealous :-) It is targeting complete noobs in a way we are not, but I think it benefits from a single coherent vision which we have not yet achieved, or at least not yet expressed through our site.

I don't think we want to target complete noobs.  Effectively CS169 is our onboarding platform - although maybe that needs to change.  But we should totally gameify.  I'm deeply inspired by codewars.com - I would like to see an explicit reputation score in our members list based on github contributions to non-profit projects ...

Great chatting with you about all this BTW - all my opinions are just those, and I'm totally open to changing my opinions :-)
<issue_comment>username_0: ## Developers ##
**Free for all or curated development?**
I think you need to decide if you want every team to be autonomous and have their own way of working, or if you want to have some kind of common structure.  By including Pivotal in the getting started requirements, you are implicitly  trying to give them a structure which leans towards sprint based work, and you said that ""part of the overall mission of agile ventures is to be sprint-oriented"", which states it explicitly...so are they autonomous or not?  It seems they are partially autonomous :}

I guess in an ideal world, everyone would be able to work however they want, whenever they want, but
- some people need (or would welcome) guidance and/or structure
- you are already, in your getting started section, ""forcing"" people to set up a pivotal account, github account, google+ and youtube, which is a lot of requirements for people who are free to work however they want.
Given these requirements, you have to have a github account anyway to join, then why not make that THE platform for storing your source?  If people object to github for whatever reason then they are not even going to make it past the getting started section.

You want people to work in sprints, attend standup etc, so why not provide the complete infrastructure for working in this way - you HAVE to use githug, you HAVE to use pivotal etc?  If you don't like these then AV is not the place for you - go find a different sort of experience.

Obviously you don't really want developers to feel their choices are restricted, but at the same time, if you are providing an environment for them to hang out and some structures to work within then it makes it easier to move between projects because you re already familiar with the setup.  I don't really want to go from pure github on one to having to use pivotal and bitbucket or some other such thing I am not familiar with on the next project - it makes me less inclined to join that one because I have to learn too much - the project, maybe the technology, the way it is run, the platforms used...

Could you create a platform-neutral system that is so flexible you can plug in any issue tracker to any source control system? Yes.  Is it worth the effort?  Possibly not.

**DRY** - agreed, you don't really want multiple ways of doing things, (but then that goes against the idea of developers being free to choose how they work), so you either pick one existing solution and that is the one way to do things, warts and all, or your build your own that meets your exact requirements - this could be from scratch or could be modifying/creating bridges between existing components to work in the way you want.

**difficulty** You mention CS169/AV102 - so now is there an implicit ""you will have taken one or more of these courses to get up to speed""?  Whilst you may get students from there moving to AV, surely you want the barrier to entry to be as low as possible for everyone, even people who have not taken these courses?  
Developers may indeed ""get"" the value of story points and sprints and standups if they join and participate...but you have to get them through the door first, and that may be difficult if there's too much ""weirdness"" and not enough ""it looks like I can ease myself in gently to this""

**sample project** - again the reference to the courses - if AV is meant to be a progression from the courses then that's fair enough, but I didn't really think AV needed to be related to the courses, save that iCs169 forms part of the secret origin of AV.   Making it as easy as possible for anyone to join means, to me, that there is no link to the courses, no ""prerequisite"" to have done them or already be familiar with the setup and terminology used by AV - you want to help people to be better coders, so teach them what they need to know to get going with an AV project.

**guidance** - yes video does seem to be essential even though that is not the intent.
Leaving aside those reluctant to use video, it does also preclude those who can't even screen share due to bandwidth restrictions.  It's all very well in the US or the UK, or many other ""first world"" countries where you have great broadband to rely on, but some people are in a hut in a small village in africa sharing a poor 3G signal between 10 people - screen sharing would be impossible for people like that.
The tatsu.io idea is certainly an interesting one.  What would be great is if people can join into a standup in whatever way works best for them - so you are hosting a standup using a live video feed from your office but someone else joins in audio only over some lower bandwidth connection, and others (somehow) can join in on a text basis only.
_""we should focus more on supporting people who want to work solo and asynchronously; although I'd like to see that as a gateway to ultimately more pairing and more attendance in standups"" - agreed, the first taste is free, get em hooked firs and then there's no getting away :)

**getting started** - so pare it back to the minimum - something like
1. Sign up to AV and github
2. Go create!

Then you can follow that with other, optional, steps, to get more out of the experience etc...

## Charities ##
Agreed that charities don't tend to be swimming in cash, but they could be a source of small amounts of steady income.  Yes they can hopefully get a site done for free, but if they are in a hurry or want some of the other benefits then thy pay a small sum of money towards that.

Whether they pay or not, you want to get them on board to give the developers something to do, so you might want to rethink this wording:
_""From an organisation's perspective it is best to think of collaborating with Agile Ventures developers for the purpose of better understanding the nature of the IT challenges faced.  In favourable circumstances this may lead to Agile Venture developers being able to help craft a solution, but this should not be an assumed outcome""_

I understand why you have to say something about not guaranteeing a site at the end of it, but this says to me ""don't come here looking to have a site built, come here if you want to understand the IT challenges in building a site""...but I am a small charity and really I don't have the time to spend or the interest in learning about the challenges of creating a site - what I want is for some kind developers to donate some time to making me a website.

re: the showcase - whilst I can understand dogfooding - after all, if you don't trust your own developers to make your site, why would anyone else trust them - as I said before, there is a distinction between UX design and actual coding implementation of the design.  The AV developers can code the site for sure, so you are dogfooding to that extent but there's no reason the design can't be done by a ""seasoned pro"".
It also serves as a teaching exercise for AV developers to get an idea of ""this is what a showcase site could look like"", for those charities that want to showcase the work they do for example on their own (AV developed) site.

I'm still not sure whether the primary purpose of AV is to help developers to develop or to help good causes to get on the web for little or no money, but whichever is the primary purpose, that is where the focus should be methinks..

$50/month seems fairly easily attainable I should think, with $1/month subs from developers.  Jumping to $5 or $10/month needs a *lot* of added value - so much on the web is free that people are reluctant to pay for anything any more - In a world of free software, free hosting, free cloud drives, free music etc, if you are charging for something then it either has to be such a trivial amount of money that people don't mind paying, or it has to offer clear advantages over rival, free systems.
I'm sure you could get some people to kickstart the charity with some one-off donations to get a little bit of cash in the kitty.  Perhaps these even make them ""founder members"" or some other such thing.  Could be if you pay enough, your membership is free forevermore, with entitlement to all the premium benefits whatever they may be, now and in the future...just thinking of ways to inject a bit of up front cash...

## Premium Service ##
The fundraising idea was something to benefit both devs and charities - devs because the winner gets a cash prize (or a donation of premium membership?) and the charity gets some cash from the (low) entrance fee the devs pay to join the competition.  Even if they don't raise much, it raises the profile of the charity for a period of time.  
I wasn't thinking of a charity ball or anything like that :)
The charity jamboree events you mention are another avenue - premium charities get promoted at these things...regular charities don't.

_""One way of looking at AV is that we are crowdfunding site where you donate engineering time instead of money""_ - this harks back to one of my original comments, that developers are already contributing time to AV so to try to get them to stump up some cash for AV too might be a tough sell..

## Footnote ##
_You're_ a UX person?  You hide it well :P 
Yes, AV definitely needs some love and some thinking about who the primary ""customers"" are and what sort of ""user journeys"" they will be making through the site.  I mean sure, eye popping visuals are nice but the site needs to be functional first and foremost - easy to navigate, easy to find what you are after, easy to understand what AV is all about and how you can get involved.
If you get some UX guru involved then great, they can add in the scrolling marquee controls with purple text on yellow background etc... :)

## Up For Grabs ##
You can't focus on everything at once, so _maybe_ ultimate flexibility is laudable goal long term, but in the short term, K.I.S.S and focus on a good basic experience with one set of tools other than sort of supporting multiple platforms - if you can't do it well with one set of tools then you certainly won't be able to do it well with multiple ones!

_""I'm in two minds about whether we want to try and make it trivially easy for a solo programmer to pick up a simple task asynchronously, OR trying to better communicate the benefits of getting involved in either synchronous standups, sychronous pairing, or both ...""_
If you can make it trivially easy for a single developer to work asynchronously then they can be eased into the idea of synchronous pairing, but it is not true the other way around.  I repeat what I said above - you can't focus on everything at once - so if it is trivial for a solo programmer to contribute and it is also possible for them to pair up then great - you can shift focus to encouraging pairing and standups once you are happy that the solo experience works well.

## FreeCodeCamp ##
Correct, they target the total novice, where AV requires some level of knowledge.  
Whilst I can see benefit in encouraging CS169 students to join AV, I don't see the benefit (to AV) in having CS169 as your unspoken ""on boarding"" platform (I don't see it mentioned anywhere except in the secret origin section).
Tying to CS169 has several problems:
- People have to, (or feel they have to), take these courses or have equivalent ruby/rails knowledge, which they may not want to do 
- The projects will be basically all Ruby projects because that is what CS169 teaches, so your target developer audience is severely limited

Although it is not your intention to limit the skillset, tying to CS169 would effectively imply that.
It could be a suggestion, as could many other sites for learning your craft, but perhaps it gets no more merit than any other other route to learning programming skills.

The reputation thing needs careful thinking about because there are many ways to contribute to a project.
- If I push 10 small commits of bug fixes does that score more rep than 1 commit of a new feature?
- What about the documentation I updated?
- Or I'm a rubbish coder but a great organiser so I run all the sprints - do I get credit for that?
- I'm a good all rounder, but for this particular project I'm not coding, just testing the bejesus about of the site. I don't make any commits.  Do I not deserve a better reputation?
- I don't contribute code to any projects because I don't have the time to, but I contribute a lot in discussions on slack or gitter or other such forum for talking and helping people - surely I deserve recognition?   

I think this is where the stack overflow type thing comes into it - you get points for a variety of different activities you may have carried out that can be tracked.  The trick is to make it balanced and ensure that every type of contributor, as far as is possible, can get credit for their efforts
<issue_comment>username_0: ## Premium Benefits - Developers ##
Developers love free stuff and they love great tooling, and people like Jetbrains offer free licences to open source projects (https://www.jetbrains.com/buy/opensource/), so can we bring the two together?

You normally have to apply to them yourself, have them review the project etc and it takes a bit of time and is a bit of hassle.
What if premium members, once they hit a certain level in terms or reputation or badges earned or whatever, automatically get licenses for these tools?
Obviously you would need to negotiate with jet brains and anyone else you wanted to get free licenses from, to agree that AV could curate the licences and if they say that Joe Developer meets the criteria because the project is Open source, active, he has made X commits etc, then he automatically is entitled to free licences for as long as he is an active, contributing member of the AV community.
<issue_comment>username_1: Maybe, but I have people offering me money, and there are a lot of people who got their start in well paid programming jobs by what AV offered for free.  I think it's at least worth spending a couple of engineering days getting a subscription based payment setup in place to explore that.  However well or badly that works we iterate on what we offer premium members/charities until we hit on the right combination that stays within our twin goals of helping developer skill up and charities get their IT needs prototyped.

See https://www.pivotaltracker.com/story/show/108063300, 

Reputation
--------------

Agreed the reputation thing needs some thought, but not too much.  I think we should get something out and iterate.  We shouldn't agonise too much about making it perfect, which is the enemy of done.  10 small bug fixes and 1 feature are both great.  Documentation should be in github repo so that count's too.  

In the future starting standups, chatting in slack or testing the site is something we can pull in, but no need on the first iteration, let's get something out to encourage/reward contributions and see who starts complaining and then respond to users concerns.

See https://www.pivotaltracker.com/story/show/78088920

Premium Benefits - Developers
---------------

We have that deal with RubyMine - developers on certain projects get RubyMine licenses - perhaps that should become a premium feature as you suggest.

Summary
--------------

You've made lots of great points and I'm really enjoying the discussion.  I'm keen now to start following through on some of the points by making changes to the site, deploying things, getting feedback from our community.

I'm also off tomorrow, so apologies if I don't follow up as quickly over the next few days.  Either way going forward lets move to opening tickets in pivotal and making changes to the site.  Whatever time you can put in we will all be very grateful for.

I've put some links to existing pivotal tickets in the above - do search https://www.pivotaltracker.com/n/projects/982890 for more and perhaps we can break this discussion up into components and continue in the tracker?
<issue_comment>username_2: Great discussion above.  One suggestion: create a high-level description of where we want to go and how to get there.  This can be as simple as: 1) list objectives to be achieved, and, 2) for each objective, define strategy(s) to be used to achieve the objective.

That might give us a little more clarity on where we can start (we could rank the objectives) as well as commonality among implementation efforts (a single ""strategy"" could support more than one objective).

I find this kind of thing to be a great starting point for more detailed planning, where there is a common context and understanding of the bigger picture.  

An example snippet, for a couple of objectives, might be (major bullet = objective, minor bullet = possible strategy to help achieve):

* Develop a robust model for expanding the AV talent pool
  - Expand AV associations / partnerships to include MOOC courses:
    * focused on other dev technologies
    * focused on UI/UX designers and Product Owners
    * focused on SW Project Management / Scrum Master
  - Structure some projects and/or cross-project roles as ""paid"" positions (assuming we develop a premium model for outside funding, and that this supports this concept)

* Develop a better project recruitment and on-boarding process
  - Define a project overview template that all teams would fill out - defining significant aspects of the project, including high-level description of project goals, technical architecture and technology choices (made or yet to be made), block diagram (or some other mechanism) depicting major chunks of functionality required, key project positions needing to be staffed., et.al.
  - Periodic project overview talks (communicated to the community well in advance)
  - Maintain a backlog of stories that a) could be handled by an inexperienced person (noob), and/or b) does not require deep knowledge of the application domain nor sophisticated system behavior.

There are probably a dozen or less key objectives to define, followed by discussion of how to get there.  Then, dependencies and synergies will be more apparent (e.g., a developing a talent pool and staffing a project could obviously be very tied in to revenue stream models).
<issue_comment>username_2: Also, please note that the example ideas above are just that - I don't mean to imply that these specific examples are necessarily ""real"" at this point.
<issue_comment>username_1: great contribution @username_2 !
<issue_comment>username_0: @username_1 - yes, I have been thinking this ""chat"" is getting a bit unwieldy so perhaps we need to draw a line under it and break it down into separate things for consideration.
Having said that, here's my response to your last post :)

## Developers##
**getting started**
Wow, any member can edit!  A bit dangerous no?  Ok you'd like to trust everyone but this is your main site and you don't want just anybody messing with it?  I have a grudge against you because I did badly in CS169, or even I am just a nasty hacker, so I register with AV and completely deface the site - ok, not something that is likely happen too often (hopefully!) but still a possibility.
Maybe only people working on WSO should be able to edit it?

Step 1 is definitely better, however the whole page still seems a bit intimidating - there are lots of steps and without reading them all, I don't know which ones are optional!
I think it needs to be a bit snappier - bare minimum and then all the other gubbins if you have more questions.  You want to demonstrate ""it's *this* easy to get going, but if you want more info or to delve deeper, then do X, Y, and Z""
Question: Why is a github account essential?  What if bitbucket is my poison?
If I wanted to reword it completely, do I just go ahead and edit it?  Surely better to discuss (e.g. in a story?)
_Note: I'm not saying I want to completely reword it and ATM I don't have the time, but soon hopefully..._

**free for all vs curated**
I guess you need to strike a balance.  Personally I'm not mad on Pivotal and am used to JIRA in my work environment, (and of course many other options are available), but I'd prefer consistency over ""my"" preferred tool.
In some ways ""use what you want"" is good, but at the same time, might it discourage some people from joining a project? [groan]I need to sign up to _another_ service now?[/groan], nah I think I'll skip it.
A balance might be to strongly encourage one toolset, which might garner more support from AV, but allow you the flexibility of choosing others....but somehow still give a joined up experience, with minimal friction to getting involved in a project.
Of course, the trick then is to decide which toolset is the ""preferred"" one.
github is wildly popular of course, but bitbucket lets you have free private repos...you mentioned before a premium feature of AV might be private projects - but (for small projects) bitbucket gives you this anyway.  I don't know what model you had in mind - if github is the preferred source control medium then the only way to have private repo's is to pay for them - or did you mean privately managed (through AV?) but the source is still public on github?

**difficulty**
Correct, developers can't be starting from scratch - as in they have some programming (or other useful skills) but they may be novices when it comes to agile or story points or working on open source or git or all of the above - so I mean we want the barrier to entry to be as low as possible, so people with something to contribute can get stuck in as quickly as possible without having to spend ages setting up accounts all over the shop or scrabbling about trying to find out about the terms being used so they understand how to get involved.

Agreed that if you want to get involved you need to have some experience - whether this is coding or testing or documentation or whatever it is you want to contribute - you come here to hone your skills and/or to pick up more skills, but complete beginners who don't know one end of a computer from another need not apply :)

You can point people to things like CS169 or codeacademy etc (but perhaps not freecodecamp since they are total rivals!) - maybe even the individual projects could have a section suggesting where people might go to learn the skills to help out for that project.
There's no point sending someone to CS169 for a Visual COBOL based project for example :-)

Story points and other unfamiliar terms should at least get a link to something explaining them, and we do need to know what they mean:
Project Foo uses 1, 3, 5 as their scale, but Project Bar uses 1, 2, 3 - so if I am looking for medium difficulty stories then I need to know, per project, what the scale is they are using. 
TBH I do like the up-for-grabs thing of saying something is easy/hard etc - maybe if each project does uses it's own scale then this is something they need to configure on their project setup page, so our U-F-G like search can display this as ""easy"", ""medium"", ""hard"", to give a consistent meaning in the results set.

**sample project**
I still like the idea of a separate sample project that lets you go through the full lifecycle, wearing all the hats one would wear in a project, so you can see how easy it is to submit code, create pull requests, accept them, push the site out live etc.
I could be the best Objective Caml developer in the world but I have never worked with a source control system so I find this whole github lark a bit intimidating, and as for Pivotal, well at least I'd _heard_ of Github ;).  
Yes we can point them to some online training for these things individually but it would be good to have something end to end.
Are all sites deployed with heroku?  Again, I have no idea, I'm worried I will break something on a real project (or I want to start a project and I am worried it might be too difficult), so the sample project lets me see the whole lifecycle without worrying about working on a real project.

**standups**
Sure, bandwidth is improving all the time in many places, but there are still a huge number of areas where people have limited bandwidth and it would be a shame to have to exclude people simply because they have a slow connection, but I take you point about starting somewhere...
The other reason to allow text based is because for example I am at work or I am on a train.  I can probably get away with a text based standup at work and on train the signal is too choppy for video even if I wanted to standup in front of strangers as it were, so again, the text based option would allow participation.
Or perhaps people can participate asynchronously.
- Fred wants to participate but cannot make a realtime meeeitng.
- In good time before the standup, he sends a list of things he wants to discuss to the person who will host the standup (or perhaps there is a web page somewhere for this specific standup where the issues can be posted
- Wilma, hosting the standup, raises the issues with the rest of the team.
- After the standup, Fred has a chance to review the video and, in that same place where his issues were posted and the video is hosted, he can post his response, if any.

I know you would like a live standup somewhere in the world pretty much 24/7, so there is always _some_ standup that anyone can join, but that's bugger all use to me if I want to join Project Foo but their standup is at 3am my time.  Sure I could join the Project Bar standup at 8am over breakfast, but I don't have the skills or the interest in Project Bar, so that really hasn't helped me at all, and I have gotten the impression that I must participate in the standup or else I can't really help Project Foo...so that's me out of the game :/
Have you tried out tatsu.io to see how it actually works and see if there is something similar you could do with AV standups?
 
## Charities##
Yes I fully understand the need to be clear that you aren't guaranteeing anything.
Perhaps create a story to come up with alternative wording?
Twin purposes - I have had some more thoughts on that, but I will post them separately over the weekend (I need to get on with some work ;) )

Re: payments - are you thinking of having a donation button on the website?  Even if you aren't getting in streams of cash from premium developers, you may get one-off donations from them...

## Premium Service##
Hey, I was only repeating what you said about looking at it as people donating their time rather than money!
Of course there will be some people willing to donate time AND money and if the premium benefits are attractive enough, hopefully lots of them!

## Premium Benefits - Developers##
That's great that you already have an established deal with Jetbrains, but why not try to get it for the whole toolset, and yes as a premium service.
I'm a C# developer so Resharper is essential, but I also use WebStorm for (can you guess?) web projects, RubyMine for CS169, and they do other IDE's for C++, python etc.
If you could get them to agree that people get the *relevant* product licenses if they are working on certain projects then that would be great - ie no point having a RubyMine license if your project is in python for instance!

As I'm sure you know, developers working on non profit software can apply and get these anyway (if they meet the right conditions) so non premium developers are not excluded from the ability to get a RubyMine license, just that it is a lot easier for premium developers.
Oh and that RubyMine icon is out of date - it's version 8 now :)
I'm sure there are other developer tools out there where AV could broker similar deals for premium members..

## Reputation##
Sure you don't want to spend ages agonising over it, but I think you want to have a reasonable idea of the direction you want to go and the things you might want to include in it
 - is a bug fix worth 10 points or 1 point?
- How many more points does a 5 point story get than a 1 point story?  Does it depend on the project?  (In mine, I might not use story points at all, or 5 is a medium whereas in yours, 5 is a hard)
- what sort of scale are we looking at?  Does having 10,000 points mean something, like I live, breathe, and sleep AV or might I have that simply by posting a documentaiton update once a month for 3 months?  Maybe this doesn't matter?  
- Do documentation stories get the same number of points as development stories?
- Do we want to have badges?  If so, do they confer extra points, or is it just that you have achieved that level?  (You have submitted your first bug!  Your have had 10 posts accepted as answers to questions!  You have started your own project!)

Perhaps a starter for 10 points (pun intended :)) is something like getting points for each of:
[Truncated]
- you have created a github account
- you have created any of the other accounts we suggest on the getting started site
- points for completing the sample project (once we have one!) exervice
- points for slack posts
- points for signing up to a project
- points for repo commits
- points for attending (or otherwise contributing to) standups
- a zillion points for getting a project into production

If there are badges then maybe things like:
- badge for first project signup, then 5, then 10?
- badge for first repo commit, then 5, then 10, 50, 100, 200
- badge for first slack post, then 50, 100, 200, 500, 1000....?
- badge for creating a project
- badge for getting first project actually into production

These are all off the top of my head - I haven't really looked at the stack overflow or other such merit systems to see what they are offering - we probably want to be similar, but different ;)

@username_2 Thanks for contributing to the discussion!
Yes we definitely need to be looking at breaking this down into separate issues, either to become real stories or that need to be hammered out with further discussion to see if there's anything actually worth pursuing.
<issue_comment>username_0: ## Developers! Developers! Developers!##
I've had a bit of a Steve Balmer moment ;)
I've been wondering if it is taking the wrong approach trying to focus on developers AND charities initially and the focus should just be on attracting developers.

It's going to be easier to attract developers than it is to attract charities, (particularly paying ones), so Agile Ventures initially is all about the developers and the rest, to a large extent, will hopefully ""just follow"".
The developers will come up with ideas for non profit projects and some of them may even have contacts in non profit organisations that are looking to have sites developed, so let the developers worry about the projects and the charitable causes and let Agile Ventures worry about the developers.

Agile Ventures actually sourcing work/bringing developers and charities together could follow down the line when there's enough good sites to showcase and enough developers to go around to actually work on new projects - at the moment there seems to be a shortage of developers anyway so there would be little point in attracting more projects if there is nobody to work on them.

Note: you would still need the showcase part of the site now, to show to potential developers to get them excited about the idea of joining and the sorts of things people are working on.  A handy byproduct of this showcase for developers is that it would also be useful in attracting customers who see the quality of work Agile Ventures developers can churn out.

For now the focus is on the developer experience, attracting developers - ideally paying developers at that - and making it a great experience for them.  Soâ€¦how do we attract developers?  Cool projects to work on, cool technologies to use, ease of getting into a project and getting help and not feeling like a numpty, a cool place to hang out, show off, learn, teach.

I am a developer interested in working on an open source project, or even starting my own - what clear benefits are there to joining Agile Ventures over and above free GitHub (even we are using GitHub!) or up-for-grabs or one of these other sites where developers can work on open source projects?  What's the USP?  This becomes even more important when trying to monetise the developers and I think it's gonna be hard to stand out from the crowd.

Here is one idea for premium developers: Smart Search
Many of the other sites have an easy way for me to search for projects I am interested in, whether it is just a general search or keyword/tag search - but what happens when I can't find any interesting/relevant projects today? Do I try again tomorrow?  The next day? Next week?
What if I could key in criteria for projects I am interested in - so I want anything which involves ruby AND angularjs OR is something to do with sloths.  I am only interested in brand new projects, or maybe I am only interested in projects started by people with at least 10,000 reputation points.
Every day when I log into AV, (or via email notification?) I will be informed of any projects which meet the criteria I have set up, and I could have multiple sets of searches, each with multiple matches.  The matching algorithm would rank the matches and show me the most relevant ones first.

Ok, that bit is not much different than the usual sort of search you might get on any number of rival sites where you are looking for projects, but what about the other side of the coin?
I have an idea for a project and I want to find people with the necessary skills who I can try to tempt to work on my project.
I am looking for people with C#, jQuery, and Mongo skills, I am only interested in people with at least 1,000 experience points or who have contributed to at least 2 projects or who are based in my time zone to make it easier for stand ups etc.  I am also willing to act as a mentor to one person who wants to learn the project management side of things.
I am particularly interested in people who are multi lingual who have worked on realtime interactive sites.
At project inception stage you may not know what technologies you want but you can still search for people who are looking to work on projects without specifying coding skills.
Again, the matching algorithms will show me the best matches for my criteria, and I will be notified when any new matches appear, and be easily able to contact these people about my project.

You could even take it further and say how many people with each type of skill you are looking for (2 c# developers with 3+ years experience, one mongo dude, as many JavaScript devs as possible) and you continue to get notifications of matches (you haven't already rejected) until your ""quota"" is filled.

This would obviously need people to upload their skill set to their profile and be open to being contacted by interested parties, which is either by opting in to be searchable or by specifying your own search criteria there you are touting for work.

Non premium members could look at any member and see their particular set of skills, or see that they are interested in doing etc, but they donâ€™t get the auto updating power search capabilities.

Another idea for members, not necessarily premium (after all you probably expect to have to attract non paying devs first and then entice them onto the paying model once they fall in love with AV - but you have to get them there first) is mentoring - get people to agree to mentor to new members for a short period of time to get going on their first project. They would, of course, earn a badge or some such thing for doing this.
<issue_comment>username_1: @username_0 thanks for the ongoing input - haven't had a chance to process it yet - hope to look at it in detail soon - do check out the 2nd weekly meeting we had if you haven't already: 

https://youtu.be/0YQNKccX-Tw

https://docs.google.com/document/d/1qKLXYf5oTuT-A2eWVlh8_TBVfQHAwB8qr3HmzkOSEcQ/edit

Also we're looking for other times that you might be able to make - care to suggest some?

Also kick off meeting for WSO on Wednesday will be where we work out specific actions based on the high level direction:

http://www.agileventures.org/events/websiteone-agileventures-home-site-weekly-kickoff
<issue_comment>username_0: Ok, it would be nice if the PT links weren't there and the JIRA link was more obvious but okay lets get cracking....I click on the JIRA link and get a login screen....what the?  Nobody told me I needed to create a JIRA account in addition to all the others I had to create.

The page says _""To request an account, please contact your site administrators.""_, but I have no idea who the site administrators are or how to contact them - is it the admins for the AV site? OSRA? JIRA?  Sorry, life's too short, I'm off to up-for-grabs to try my luck there!

Now I know it seems like I'm picking on OSRA but I'm not - randomly clicking around AV, this has more documentation than many, and at least tells you how to get going with the repo!

Snow Angels, again picked at random for example has nothing about the technology, no getting started guide, seems to use Trello (another new tool! but also has a Pivotal link and, importantly, it has a link to a prototype site!  Score one for Snow Angels!

This sort of thing make it hard to become engaged in a project in the first place unless I am really determined, never mind the ongoing issues of having free time, being able to pair, getting up to speed with the code base, with the problem domain etc etc.

## Project Managers ##
There seems to be some discussion about requiring these for a project - I think that would discourage me from starting a project that it's suddenly this whole managed affair - I'm not into that, so I can't start one?  Or I need to find a project manager and convince them to join my project?

On the flip side, joining a project, I might like having a project manager running things - they will be a point of contact I can turn to if I have any issues (particularly early on) but also I want to concentrate on the development side of things so I have no interest in running sprints and meetings and whatnot.

I do think the idea of having a backup PM or pairing is a good one, where you choose to go the PM route - but then I would say that about any of the roles, it is good to have more than one person on it, be it testing, documentation, coding, scrum master, gofer, whatever...
It can serve as an opportunity for people to learn or hone their craft, or get into an unfamiliar area and have the benefit of working with someone experienced.

This sort of thing will come down to how much of a curated experience you want to offer developers - is it a free for all anything goes, or is there a framework that people can or even **must** work within, otherwise there's no point in them being here?

## Time##

In terms of making meetings, week days I can never make audio or visual meetings during the day - though I may be able to join a cheeky text based one or two.  
Evenings, I am generally travelling from 5 till about 6:30pm and could participate  by text for only part of that journey (not the driving bit for example ;) ).  
I am juggling things around a bit at the moment but currently it looks like Mondays or Thursdays would be do-able for me from about 6:30pm-7pm for 1/2 an hour or so.
Wednesdays are basically out until I get home around 8:30pm

Weekends are better - 6:30am-8:00am Saturday or Sunday and then from about 10 am onwards on either day I can generally make some time available.

Currently doing 2 x Coursera specialisations + the 169 TA'ing so actually getting stuck in to actual real work will likely have to wait a few weeks - one specialisation finishes about the same time as CS169.  
I can try to fit in things like reviewing documents or writing things up in the meantime.


Sorry that post ended up really rather longer than I intended but hopefully it proves useful to you.
<issue_comment>username_0: ## Meetings ##
Standing up, squashed, on the train on the way home, I decided to listen to some more of the meeting.
No point really trying yo watch it even if I could raise my arms because it's a bit hard to read on a phone screen ðŸ˜…
A couple of things struck me:
- How much mobile bandwidth am I burning ""watching"" this video I can't see?
- listening to the audio gives me the vast majority of the content and, if I cannot be present for a video meeting, this is is a great way to catch up - walking to the train, in the car, standing squashed on the train.  I have a lot more opportunities to listen and as a byproduct, don't eat into my data allowance so much ;)
- if it was anyone other than Sam talking, if it was an audio track,I probably speed it up to 1.25 or 1.5 times and still understand it perfectly - Sam, you already sound like you are speeded up a bit ;)

Do you have a feel for how often these standups and other meetings are viewed afterwards by people who maybe wanted to attend but couldn't? i wonder if audio versions might increase the audience?
So then this led me to wonder
- could there be a live audio only feed for meetings?
- could there be a non live audio stream after the fact?
- could these be turned into podcasts?

The last might sound a bit mad but even if you aren't involved in any projects, it may be interesting to listen to, to understand the problems of running agile projects, running remote teams, or just to get a feel for what else is going on in the AV world.  A podcast could be automatically downloaded to my phone overnight and I listen on the way to work...sweet.

## Search##
You were talking about me on the (I want to say podcast!) and my discussion on search.  I agree this was quite low level, but at the same time it was pertinent it to the 50,000 ft view - ie, what is the main purpose of Agile Ventures?  If you want to attract developers then it is essential that the site is accessible to developers, to find projects they are interested in.
If you want to attract clients first and foremost the. It is essential that the site showcases the work you can do.

## Charity##
I had a brief look at the charter and it is not exactly light bedtime reading! I know it is a template and necessarily will be couched in jargon, but perhaps it is worth pulling out the key bit, in English, about what the aims are of AV, so that you can get comment on it - I guess this is really the bit you want comment on because most of the rest will be necessary jargon.
I wasn't aware of the term ""third sector"", which could just be showing my ignorance, or could be showing your assumptions about people's knowledge since you already have knowledge in that area - in the interests of accessibility, perhaps keep the jargon to a minimum in the bits you want comment on - or at least provide a glossary of terms!
Also, as soon as you can, get a big old donate button going so you're not just burning through your own money while trying to figure out where AV s going and start the process to get there - you can start to burn other people's money too ;)

## Focus##
There was some talk about scaling up (# of developers) before scaling out (# of charities) but then that changed to getting our existing house in order and improving the current experience before we start scaling in any direction, and that may have changed again in the remaining two hours I haven't listened to yet!  There was also mention of lack of focus/direction within individual projects, so perhaps this is something to focus on (pun intended!) improving?
<issue_comment>username_1: We need to review this and extract more stories - @username_0 has made a good start with #763, #762 and #761<issue_closed>"
newrelic/developer-website,990256626,1593,"{'number': 1593.0, 'repo': 'developer-website', 'user_login': 'newrelic'}","[{'action': 'opened', 'author': 'jpvajda', 'comment_id': None, 'datetime': '2021-09-07T18:52:31Z', 'masked_author': 'username_0', 'text': 'Release', 'title': 'Release : ðŸš€', 'type': 'issue'}
 {'action': 'created', 'author': 'aswanson-nr', 'comment_id': 914591945.0, 'datetime': '2021-09-07 20:11:18+00:00', 'masked_author': 'username_1', 'text': 'Preview build appeared to be stuck, I cancelled it and started a new one.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zstix', 'comment_id': 914677824.0, 'datetime': '2021-09-07 22:54:02+00:00', 'masked_author': 'username_2', 'text': ""This built fine, the status is just not properly getting communicated back to the repository. I'm going to use my powers to merge this in ðŸ¦¸"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Release : ðŸš€
username_0: Release
<issue_comment>username_1: Preview build appeared to be stuck, I cancelled it and started a new one.
<issue_comment>username_2: This built fine, the status is just not properly getting communicated back to the repository. I'm going to use my powers to merge this in ðŸ¦¸"
clearlydefined/website,356558105,289,,"[{'action': 'opened', 'author': 'jeffmcaffer', 'comment_id': None, 'datetime': '2018-09-03T16:19:31Z', 'masked_author': 'username_0', 'text': 'Many of the UI components we are building (e.g., license picker, source location picker, ...) are likely interesting to others. Certainly people looking to embed ClearlyDefined flows into their products or flows would find it useful to be able to reuse our components.\r\n\r\nHere we should consider the options for both development and delivery. \r\n1. One repo with many components producing one npm\r\n1. One repo with many components producing multiple npms\r\n1. Separate repos for each component producing separate npms\r\n\r\nIf we # 2 there will also be the question of which mono-repo structure do we use (e.g., rush, lerna, ...)', 'title': 'Structure for standalone components', 'type': 'issue'}
 {'action': 'created', 'author': 'AlexWebYourmind', 'comment_id': 418289858.0, 'datetime': '2018-09-04 08:46:52+00:00', 'masked_author': 'username_1', 'text': '@username_0 Thanks for the additional information.\r\n\r\nTo clarify, the deliverables for this issues are:\r\n\r\n- New CD Repo\r\n- Initial NPM Package Deployment\r\n- Documentation  (e.g. Readme.MD outlining the structure, how to use it etc)\r\n\r\nCan you confirm the above is correct? \r\n\r\nWe can then open separated issues to e.g. make an existing component standalone (if not already) + add to new repo.\r\n\r\nThoughts?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeffmcaffer', 'comment_id': 418599760.0, 'datetime': '2018-09-05 04:59:08+00:00', 'masked_author': 'username_0', 'text': '@username_1 that is more or less right. I was chatting with @valtterihalla about #179 and thought that them adding the new source location picker would be a good opportunity to scope out a design for this new component structure. We can them move over any existing generic components as needed.\r\n\r\nHopefully @valtterihalla and team can put together some proposals and we can iterate and then implement.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'daniellandau', 'comment_id': 419415419.0, 'datetime': '2018-09-07 11:49:27+00:00', 'masked_author': 'username_2', 'text': ""Is the idea that users of components have to provide their own API endpoints for example for Github search, or should they call endpoints in ClearlyDefined? The ClearlyDefined API already does CORS allowing all origins so in principle e.g. `GithubSelector.js` and `GithubCommitPicker.js` are publishable almost as is, as they do not plug in to any redux state management and their only dependency to anywhere else in the project is to get the URL to shoot requests at.\r\n\r\nThese end points in the API are wide open to the whole world already, but of course exposing easy React components to NPM would probably increase their usage. This might then be either a good or a bad thing, depending on what kind of agreement we can get on Github (and other, Gitlab, Maven, NPM, etc) quotas.\r\n\r\nThat's for read-only and external-only API calls. What about actual ClearlyDefined data and embeddable components contributing back to ClearlyDefined? I think for those it would be quite necessary to just directly call `api.clearlydefined.io`.\r\n\r\nMaybe we could just do all the calls to `api.clearlydefined.io` but really clearly mark the NPM packages as experimental with no guarantees of continuing access to the API."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeffmcaffer', 'comment_id': 419430345.0, 'datetime': '2018-09-07 12:54:56+00:00', 'masked_author': 'username_0', 'text': 'I\'d rather not have the world funneling through ClearlyDefined to do these API calls. My thought was that we define a simple API (much like we have now for the ""origin"" calls from the client) and then people plug in a `prop` that has those functions. That way the component is complete generic and users can use whatever GitHub (for example) client they want preconfigured with auth etc as needed.\r\n\r\nIn our UI we would plug in something like we have now.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeffmcaffer', 'comment_id': 455802804.0, 'datetime': '2019-01-19 18:14:59+00:00', 'masked_author': 'username_0', 'text': '@username_2 did some nice work prototyping a direction for separating out the components but ultimately this is a very complicated and subtle space and people have already spent huge amounts of effort figuring it out. We could do something that works today for the UI but it would be better to head in a direction that could work for all the different repos or even merging all the repos into one in the future.\r\n\r\n@username_3 did a quick poke ant Lerna and it was promising. It is a pretty fundamental change though so we should do it deliberately.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 464055438.0, 'datetime': '2019-02-15 13:45:11+00:00', 'masked_author': 'username_3', 'text': ""The test i've made on Lerna gave as a result that Lerna is the right option for structuring a mono-repo application that could also maintain shared components with their own package management.\r\n\r\nSeems to be a pretty good and powerful solution, but unfortunately requires the whole project to be managed by Lerna itself, not only a specific folder for standalone components.\r\nIt means re-structure the entire `src` folder and probably update all the build and run process.\r\n\r\nMeanwhile, while working on other components, i've structured them to be ready to a standalone refactoring, eventually.\r\n\r\n@username_0 what do you think should be the direction for this purpose?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dabutvin', 'comment_id': 464210178.0, 'datetime': '2019-02-15 21:37:18+00:00', 'masked_author': 'username_4', 'text': 'what do you think about creating a new github repo like https://github.com/clearlydefined/components\r\nand then setting up the lerna solution there?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 464214224.0, 'datetime': '2019-02-15 21:49:08+00:00', 'masked_author': 'username_3', 'text': ""Well, the purpose here was to have a monorepo rather than multiple ones.\r\nLerna exists to manage these kind of situations, using a separate repo it's much more like a classic library, which could be added to the project via a simple `npm install`"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dabutvin', 'comment_id': 464232812.0, 'datetime': '2019-02-15 22:44:40+00:00', 'masked_author': 'username_4', 'text': 'I meant 1 monorepo that contained all the components, not a repo per component.\r\n\r\nI think there would be some value in developing these components outside the context of the website. what do you think?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 466366024.0, 'datetime': '2019-02-22 11:27:34+00:00', 'masked_author': 'username_3', 'text': 'This was already discussed with @username_0 , but the intention here is to develop all of these components in the same website repo.\r\n\r\nTo do that we have different options:\r\n1. use Lerna to manage internal packages of shared components, with a separate npm library, but we have to refactor the entire project and let Lerna managing it\r\n2. use a custom flow to achieve the same thing that Lerna does, but feels like reinventing the wheel and hard to maintain\r\n3. considering a guide line of structuring these components, see the work done for the License Picker in #400 \r\n\r\nI suggest that at this stage the 3rd option could work for us.\r\nGiving guide lines on how to prepare these components would allow us to pick a solution in the near future when necessary.\r\n\r\nThoughts?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dabutvin', 'comment_id': 466457003.0, 'datetime': '2019-02-22 16:27:58+00:00', 'masked_author': 'username_4', 'text': 'Agreed. We should move forward with option 3 for now so we can be ready', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 466457879.0, 'datetime': '2019-02-22 16:30:28+00:00', 'masked_author': 'username_3', 'text': 'Given that, we could maybe close this issue and eventually reopen it when it will become necessary again', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jeffmcaffer', 'comment_id': 466513163.0, 'datetime': '2019-02-22 19:15:15+00:00', 'masked_author': 'username_0', 'text': ""fine closing this. Note that my desire is to have ALL of the UI in one repo, not a separate repo for components and one for the app itself. If that is not possible or is hard then I'll live with it ."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'jeffmcaffer', 'comment_id': None, 'datetime': '2019-02-22 19:15:19+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'reopened', 'author': 'dabutvin', 'comment_id': None, 'datetime': '2019-03-21 21:03:32+00:00', 'masked_author': 'username_4', 'text': 'Many of the UI components we are building (e.g., license picker, source location picker, ...) are likely interesting to others. Certainly people looking to embed ClearlyDefined flows into their products or flows would find it useful to be able to reuse our components.\r\n\r\nHere we should consider the options for both development and delivery. \r\n1. One repo with many components producing one npm\r\n1. One repo with many components producing multiple npms\r\n1. Separate repos for each component producing separate npms\r\n\r\nIf we # 2 there will also be the question of which mono-repo structure do we use (e.g., rush, lerna, ...)', 'title': 'Structure for standalone components', 'type': 'issue'}
 {'action': 'created', 'author': 'dabutvin', 'comment_id': 475401424.0, 'datetime': '2019-03-21 21:03:32+00:00', 'masked_author': 'username_4', 'text': ""Okay. It's probably time to re-activate this.\r\n\r\nLet's go ahead and go for the restructuring required to get lerna in here"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Structure for standalone components
username_0: Many of the UI components we are building (e.g., license picker, source location picker, ...) are likely interesting to others. Certainly people looking to embed ClearlyDefined flows into their products or flows would find it useful to be able to reuse our components.

Here we should consider the options for both development and delivery. 
1. One repo with many components producing one npm
1. One repo with many components producing multiple npms
1. Separate repos for each component producing separate npms

If we # 2 there will also be the question of which mono-repo structure do we use (e.g., rush, lerna, ...)
<issue_comment>username_1: @username_0 Thanks for the additional information.

To clarify, the deliverables for this issues are:

- New CD Repo
- Initial NPM Package Deployment
- Documentation  (e.g. Readme.MD outlining the structure, how to use it etc)

Can you confirm the above is correct? 

We can then open separated issues to e.g. make an existing component standalone (if not already) + add to new repo.

Thoughts?
<issue_comment>username_0: @username_1 that is more or less right. I was chatting with @valtterihalla about #179 and thought that them adding the new source location picker would be a good opportunity to scope out a design for this new component structure. We can them move over any existing generic components as needed.

Hopefully @valtterihalla and team can put together some proposals and we can iterate and then implement.
<issue_comment>username_2: Is the idea that users of components have to provide their own API endpoints for example for Github search, or should they call endpoints in ClearlyDefined? The ClearlyDefined API already does CORS allowing all origins so in principle e.g. `GithubSelector.js` and `GithubCommitPicker.js` are publishable almost as is, as they do not plug in to any redux state management and their only dependency to anywhere else in the project is to get the URL to shoot requests at.

These end points in the API are wide open to the whole world already, but of course exposing easy React components to NPM would probably increase their usage. This might then be either a good or a bad thing, depending on what kind of agreement we can get on Github (and other, Gitlab, Maven, NPM, etc) quotas.

That's for read-only and external-only API calls. What about actual ClearlyDefined data and embeddable components contributing back to ClearlyDefined? I think for those it would be quite necessary to just directly call `api.clearlydefined.io`.

Maybe we could just do all the calls to `api.clearlydefined.io` but really clearly mark the NPM packages as experimental with no guarantees of continuing access to the API.
<issue_comment>username_0: I'd rather not have the world funneling through ClearlyDefined to do these API calls. My thought was that we define a simple API (much like we have now for the ""origin"" calls from the client) and then people plug in a `prop` that has those functions. That way the component is complete generic and users can use whatever GitHub (for example) client they want preconfigured with auth etc as needed.

In our UI we would plug in something like we have now.
<issue_comment>username_0: @username_2 did some nice work prototyping a direction for separating out the components but ultimately this is a very complicated and subtle space and people have already spent huge amounts of effort figuring it out. We could do something that works today for the UI but it would be better to head in a direction that could work for all the different repos or even merging all the repos into one in the future.

@username_3 did a quick poke ant Lerna and it was promising. It is a pretty fundamental change though so we should do it deliberately.
<issue_comment>username_3: The test i've made on Lerna gave as a result that Lerna is the right option for structuring a mono-repo application that could also maintain shared components with their own package management.

Seems to be a pretty good and powerful solution, but unfortunately requires the whole project to be managed by Lerna itself, not only a specific folder for standalone components.
It means re-structure the entire `src` folder and probably update all the build and run process.

Meanwhile, while working on other components, i've structured them to be ready to a standalone refactoring, eventually.

@username_0 what do you think should be the direction for this purpose?
<issue_comment>username_4: what do you think about creating a new github repo like https://github.com/clearlydefined/components
and then setting up the lerna solution there?
<issue_comment>username_3: Well, the purpose here was to have a monorepo rather than multiple ones.
Lerna exists to manage these kind of situations, using a separate repo it's much more like a classic library, which could be added to the project via a simple `npm install`
<issue_comment>username_4: I meant 1 monorepo that contained all the components, not a repo per component.

I think there would be some value in developing these components outside the context of the website. what do you think?
<issue_comment>username_3: This was already discussed with @username_0 , but the intention here is to develop all of these components in the same website repo.

To do that we have different options:
1. use Lerna to manage internal packages of shared components, with a separate npm library, but we have to refactor the entire project and let Lerna managing it
2. use a custom flow to achieve the same thing that Lerna does, but feels like reinventing the wheel and hard to maintain
3. considering a guide line of structuring these components, see the work done for the License Picker in #400 

I suggest that at this stage the 3rd option could work for us.
Giving guide lines on how to prepare these components would allow us to pick a solution in the near future when necessary.

Thoughts?
<issue_comment>username_4: Agreed. We should move forward with option 3 for now so we can be ready
<issue_comment>username_3: Given that, we could maybe close this issue and eventually reopen it when it will become necessary again
<issue_comment>username_0: fine closing this. Note that my desire is to have ALL of the UI in one repo, not a separate repo for components and one for the app itself. If that is not possible or is hard then I'll live with it .<issue_closed>
<issue_comment>username_4: Many of the UI components we are building (e.g., license picker, source location picker, ...) are likely interesting to others. Certainly people looking to embed ClearlyDefined flows into their products or flows would find it useful to be able to reuse our components.

Here we should consider the options for both development and delivery. 
1. One repo with many components producing one npm
1. One repo with many components producing multiple npms
1. Separate repos for each component producing separate npms

If we # 2 there will also be the question of which mono-repo structure do we use (e.g., rush, lerna, ...)
<issue_comment>username_4: Okay. It's probably time to re-activate this.

Let's go ahead and go for the restructuring required to get lerna in here"
oVirt/ovirt-site,150642813,203,,"[{'action': 'opened', 'author': 'mykaul', 'comment_id': None, 'datetime': '2016-04-24 09:09:51+00:00', 'masked_author': 'username_0', 'text': 'How do we add a RSS feed to oVirt blog?\r\nFor example, I wanted to add news to it @ https://www.openhub.net/p/oVirt/rss_subscriptions/new - and I did not find our RSS feed.\r\n\r\n@username_1  ?', 'title': 'RSS feed for our blog?', 'type': 'issue'}
 {'action': 'created', 'author': 'jasonbrooks', 'comment_id': 215271048.0, 'datetime': '2016-04-28 00:19:16+00:00', 'masked_author': 'username_1', 'text': '@username_0 http://www.ovirt.org/blog/feed.xml', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mykaul', 'comment_id': 215312457.0, 'datetime': '2016-04-28 05:16:49+00:00', 'masked_author': 'username_0', 'text': '@username_1  - thanks - how can one know it? I did not find it anywhere.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jasonbrooks', 'comment_id': 220055762.0, 'datetime': '2016-05-18 15:04:58+00:00', 'masked_author': 'username_1', 'text': 'We should add a link or rss image somewhere -- I only know about it from familiarity w/ other middleman-powered sites.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ekohl', 'comment_id': 269510582.0, 'datetime': '2016-12-28 17:30:49+00:00', 'masked_author': 'username_2', 'text': 'At least a link header would help. I think ```<link type=""application/atom+xml"" rel=""alternate"" href=""https://www.ovirt.org/blog/feed.xml"">``` would work.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'duck-rh', 'comment_id': 270277897.0, 'datetime': '2017-01-04 02:04:19+00:00', 'masked_author': 'username_3', 'text': '@garrett I think you should have a look at this. I guess MM has a feature to add it.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sandrobonazzola', 'comment_id': 568472306.0, 'datetime': '2019-12-23 13:16:08+00:00', 'masked_author': 'username_4', 'text': 'RSS feed link is now https://blogs.ovirt.org/feed . @username_3 can you edit the wordpress template we are using and add a link to it?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jasonbrooks', 'comment_id': 568553825.0, 'datetime': '2019-12-23 18:59:40+00:00', 'masked_author': 'username_1', 'text': 'I can do this', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jasonbrooks', 'comment_id': 719731094.0, 'datetime': '2020-10-30 18:43:18+00:00', 'masked_author': 'username_1', 'text': 'Sorry for the delay, @username_4. I added the link to the footer. Does that work?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sandrobonazzola', 'comment_id': 720279546.0, 'datetime': '2020-11-02 07:01:41+00:00', 'masked_author': 'username_4', 'text': 'Thanks @username_1 , works for me. Closing.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'sandrobonazzola', 'comment_id': None, 'datetime': '2020-11-02 07:01:42+00:00', 'masked_author': 'username_4', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: RSS feed for our blog?
username_0: How do we add a RSS feed to oVirt blog?
For example, I wanted to add news to it @ https://www.openhub.net/p/oVirt/rss_subscriptions/new - and I did not find our RSS feed.

@username_1  ?
<issue_comment>username_1: @username_0 http://www.ovirt.org/blog/feed.xml
<issue_comment>username_0: @username_1  - thanks - how can one know it? I did not find it anywhere.
<issue_comment>username_1: We should add a link or rss image somewhere -- I only know about it from familiarity w/ other middleman-powered sites.
<issue_comment>username_2: At least a link header would help. I think ```<link type=""application/atom+xml"" rel=""alternate"" href=""https://www.ovirt.org/blog/feed.xml"">``` would work.
<issue_comment>username_3: @garrett I think you should have a look at this. I guess MM has a feature to add it.
<issue_comment>username_4: RSS feed link is now https://blogs.ovirt.org/feed . @username_3 can you edit the wordpress template we are using and add a link to it?
<issue_comment>username_1: I can do this
<issue_comment>username_1: Sorry for the delay, @username_4. I added the link to the footer. Does that work?
<issue_comment>username_4: Thanks @username_1 , works for me. Closing.<issue_closed>"
adobe/aem-core-wcm-components,797148272,1374,,"[{'action': 'opened', 'author': 'friendlymahi', 'comment_id': None, 'datetime': '2021-01-29 19:59:04+00:00', 'masked_author': 'username_0', 'text': '## Feature Request\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nAs of date, leveraging SPAEditor integration comes with limitations like not being able to use Style System capability of AEM, which is very powerful for managing the styles library one may load into the policies. And Core Components on the other hand are a great feature no one wants to rebuild as new components. So to start with we need ability for Core Components to be able to export additional styles to apply, via Sling Models, so it is up to the consumer to leverage that integration. And its for this reason we see a need for this enhancement in this repo.\r\n\r\n**Describe the solution you\'d like**\r\nComponent interface that we have today in Core Components provides methods like getData to support data layer. Similarly we can provide getStyles or getStylesToAttach for each component, and include the logic to bind component policy and read the styles applied using dialog. \r\n\r\n**Are there alternatives?**\r\nWe may be forced to re-do every sling model using the delegation pattern which is not ideal especially when we know we can resolve this issue from one place which shall eventually serve all. We have sample code that is used in this alternative that can go just in one place so there is no need for customizing sling models or write brand new unit tests when using the delegation pattern for things that are inevitable\r\n\r\n**Documentation**\r\nAs with normal pages (non SPA), we use the paint brush to select the styles. And now its for the React/Angular components obtain this metadata for styles and wrap their components accordingly. Here is a sample snippet. We exposed sling model to return style props as **additionalStyles**, and in React we use **className** attribute to map the value to.\r\n```\r\nimport React from \'react\';\r\nimport { Heading } from \'my-ui-controls\';\r\nimport \'./style.scss\'\r\n\r\nexport default (props) => {\r\n    const renamedProps = (({ type: tag = \'h1\', additionalStyles: className = ""headerdefault"", ...remainingProps }) => ({ tag, className, ...remainingProps }))(props);\r\n    return <div className=""dbp-cmp-title"" >\r\n        <Heading {...renamedProps} />\r\n    </div>\r\n}\r\n```', 'title': 'Support for inclusion of Stylesystem props in Sling Models', 'type': 'issue'}
 {'action': 'created', 'author': 'friendlymahi', 'comment_id': 774580668.0, 'datetime': '2021-02-07 02:52:28+00:00', 'masked_author': 'username_0', 'text': '@joerghoh @godanny86 -Any thoughts on this? I am tagging you as I saw your inputs very helpful in the past. Wondering if I can contribute to this. Thank you', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pfauchere', 'comment_id': 789527281.0, 'datetime': '2021-03-03 08:15:23+00:00', 'masked_author': 'username_1', 'text': ""Hi,\r\n\r\nThank you very much for the input.\r\n\r\nWe captured the need and intend to explore the topic soon.\r\n\r\nThat said, and if we are able to decorate Sling Models when they are being exported, I am not certain that the contribution will apply to the current repository. I cannot share or confirm any architecture decision as the work hasn't started yet.\r\n\r\nInternal Ref: CQ-4292931"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'friendlymahi', 'comment_id': 789658186.0, 'datetime': '2021-03-03 11:49:10+00:00', 'masked_author': 'username_0', 'text': '@username_1 - Thank you so much for the inputs. I already did send a pr and @vladbailescu is already helping with the review. However as I menyioned in my pr, idea behind is not to duplicate but to ensure all third party integrations can leverage the capability. Code change is very minor, and like you said change may have to go else where. Challenge I see is data-sly-resource or some other htl impl takes care of  assigning the styles in normal content pages, but the case will be different when using it in context of spa editor as this data needs to be available via Json. So unsure if the logic can be reused in both places for consuming the classes info, but will definitely come with some caveats. Thank you again and looking forward for inputs from you and @vladbailescu.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bpauli', 'comment_id': None, 'datetime': '2021-06-11 15:23:04+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'friendlymahi', 'comment_id': 863582381.0, 'datetime': '2021-06-17 21:40:50+00:00', 'masked_author': 'username_0', 'text': '@vladbailescu - Any time line on when 2.17.0 will be out for consumption? Thanks', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Support for inclusion of Stylesystem props in Sling Models
username_0: ## Feature Request

**Is your feature request related to a problem? Please describe.**
As of date, leveraging SPAEditor integration comes with limitations like not being able to use Style System capability of AEM, which is very powerful for managing the styles library one may load into the policies. And Core Components on the other hand are a great feature no one wants to rebuild as new components. So to start with we need ability for Core Components to be able to export additional styles to apply, via Sling Models, so it is up to the consumer to leverage that integration. And its for this reason we see a need for this enhancement in this repo.

**Describe the solution you'd like**
Component interface that we have today in Core Components provides methods like getData to support data layer. Similarly we can provide getStyles or getStylesToAttach for each component, and include the logic to bind component policy and read the styles applied using dialog. 

**Are there alternatives?**
We may be forced to re-do every sling model using the delegation pattern which is not ideal especially when we know we can resolve this issue from one place which shall eventually serve all. We have sample code that is used in this alternative that can go just in one place so there is no need for customizing sling models or write brand new unit tests when using the delegation pattern for things that are inevitable

**Documentation**
As with normal pages (non SPA), we use the paint brush to select the styles. And now its for the React/Angular components obtain this metadata for styles and wrap their components accordingly. Here is a sample snippet. We exposed sling model to return style props as **additionalStyles**, and in React we use **className** attribute to map the value to.
```
import React from 'react';
import { Heading } from 'my-ui-controls';
import './style.scss'

export default (props) => {
    const renamedProps = (({ type: tag = 'h1', additionalStyles: className = ""headerdefault"", ...remainingProps }) => ({ tag, className, ...remainingProps }))(props);
    return <div className=""dbp-cmp-title"" >
        <Heading {...renamedProps} />
    </div>
}
```
<issue_comment>username_0: @joerghoh @godanny86 -Any thoughts on this? I am tagging you as I saw your inputs very helpful in the past. Wondering if I can contribute to this. Thank you
<issue_comment>username_1: Hi,

Thank you very much for the input.

We captured the need and intend to explore the topic soon.

That said, and if we are able to decorate Sling Models when they are being exported, I am not certain that the contribution will apply to the current repository. I cannot share or confirm any architecture decision as the work hasn't started yet.

Internal Ref: CQ-4292931
<issue_comment>username_0: @username_1 - Thank you so much for the inputs. I already did send a pr and @vladbailescu is already helping with the review. However as I menyioned in my pr, idea behind is not to duplicate but to ensure all third party integrations can leverage the capability. Code change is very minor, and like you said change may have to go else where. Challenge I see is data-sly-resource or some other htl impl takes care of  assigning the styles in normal content pages, but the case will be different when using it in context of spa editor as this data needs to be available via Json. So unsure if the logic can be reused in both places for consuming the classes info, but will definitely come with some caveats. Thank you again and looking forward for inputs from you and @vladbailescu.<issue_closed>
<issue_comment>username_0: @vladbailescu - Any time line on when 2.17.0 will be out for consumption? Thanks"
getnikola/nikola,545503236,3338,,"[{'action': 'opened', 'author': 'gpaumier', 'comment_id': None, 'datetime': '2020-01-06 02:02:43+00:00', 'masked_author': 'username_0', 'text': 'Hello,\r\n\r\nAs a theme designer, I would like to be able to configure multiple image thumbnail sizes instead of only one in `conf.py`. This is needed in order to have [responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) through the use of [`srcset` and `sizes`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset), which are now [widely supported by browsers](https://caniuse.com/#search=srcset).\r\n\r\nThis allows to make sure that the browser loads an image appropriate for the viewport size and pixel density (e.g. [retina displays](https://en.wikipedia.org/wiki/Retina_display)) of the user, which can vary widely across devices.\r\n\r\nIdeally the size would be part of the new filename, e.g. `image-400w.jpg`, `image-1200w.jpg`, `image-2400w.jpg` for configured sizes of 400, 1200 and 2400 pixels.', 'title': 'Multiple image thumbnail sizes', 'type': 'issue'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 575909555.0, 'datetime': '2020-01-18 15:39:04+00:00', 'masked_author': 'username_1', 'text': 'It should be ""simple"" to create a plugin to do this. I\'ll take a shot now.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 575912186.0, 'datetime': '2020-01-18 16:00:17+00:00', 'masked_author': 'username_1', 'text': 'My idea of how to implement it so far:\r\n\r\nNew setting (example):\r\n\r\nSRCSET_IMAGE_SIZES=(400,1200,2400)\r\n\r\nThen a task plugin that would take images from images/ (or whatever, same folder we support now) and create the images with the right names/locations.\r\n\r\nThen a srcset shortcode that would create the right HTML thing.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 576394245.0, 'datetime': '2020-01-20 18:52:38+00:00', 'masked_author': 'username_1', 'text': ""On second though, I don't have the energy to do this right now."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 613383149.0, 'datetime': '2020-04-14 11:21:30+00:00', 'masked_author': 'username_1', 'text': 'I modified our image scaling code so that it can take multiple sizes at once.\r\n\r\nNext step would be to add a config option to replace/enhance  our current thumb size ones defining multiple thumb sizes.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Multiple image thumbnail sizes
username_0: Hello,

As a theme designer, I would like to be able to configure multiple image thumbnail sizes instead of only one in `conf.py`. This is needed in order to have [responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) through the use of [`srcset` and `sizes`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset), which are now [widely supported by browsers](https://caniuse.com/#search=srcset).

This allows to make sure that the browser loads an image appropriate for the viewport size and pixel density (e.g. [retina displays](https://en.wikipedia.org/wiki/Retina_display)) of the user, which can vary widely across devices.

Ideally the size would be part of the new filename, e.g. `image-400w.jpg`, `image-1200w.jpg`, `image-2400w.jpg` for configured sizes of 400, 1200 and 2400 pixels.
<issue_comment>username_1: It should be ""simple"" to create a plugin to do this. I'll take a shot now.
<issue_comment>username_1: My idea of how to implement it so far:

New setting (example):

SRCSET_IMAGE_SIZES=(400,1200,2400)

Then a task plugin that would take images from images/ (or whatever, same folder we support now) and create the images with the right names/locations.

Then a srcset shortcode that would create the right HTML thing.
<issue_comment>username_1: On second though, I don't have the energy to do this right now.
<issue_comment>username_1: I modified our image scaling code so that it can take multiple sizes at once.

Next step would be to add a config option to replace/enhance  our current thumb size ones defining multiple thumb sizes."
okfn/website,156796855,271,,"[{'action': 'opened', 'author': 'samgoeta', 'comment_id': None, 'datetime': '2016-05-25T16:39:36Z', 'masked_author': 'username_0', 'text': ""2 years ago, we had several discussions about the new Open Knowledge tagline and nothing has changed since!\r\nhttp://www.timdavies.org.uk/2014/04/12/data-information-knowledge-and-power-exploring-open-knowledges-new-core-purpose/\r\nhttps://lists.okfn.org/pipermail/okfn-discuss/2014-May/010329.html\r\nhttps://lists.okfn.org/pipermail/okfn-discuss/2014-June/010445.html\r\nâ€¦\r\nI know there is a reboot of the website going on so let's find something which better reflects the diversity of the community"", 'title': 'Change the tagline!', 'type': 'issue'}
 {'action': 'created', 'author': 'pwalsh', 'comment_id': 225098419.0, 'datetime': '2016-06-10 05:43:22+00:00', 'masked_author': 'username_1', 'text': ""@morchickit @username_0 I don't see a need to track this as a distinct issue here.\r\n\r\n1. In terms of implementation, any changes will come out in #276 \r\n2. If there is need for wider community discussion (on a very old issue), then clearly the [forum](https://discuss.okfn.org) is the best place for that."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'pwalsh', 'comment_id': None, 'datetime': '2016-06-10 05:43:22+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Change the tagline!
username_0: 2 years ago, we had several discussions about the new Open Knowledge tagline and nothing has changed since!
http://www.timdavies.org.uk/2014/04/12/data-information-knowledge-and-power-exploring-open-knowledges-new-core-purpose/
https://lists.okfn.org/pipermail/okfn-discuss/2014-May/010329.html
https://lists.okfn.org/pipermail/okfn-discuss/2014-June/010445.html
â€¦
I know there is a reboot of the website going on so let's find something which better reflects the diversity of the community
<issue_comment>username_1: @morchickit @username_0 I don't see a need to track this as a distinct issue here.

1. In terms of implementation, any changes will come out in #276 
2. If there is need for wider community discussion (on a very old issue), then clearly the [forum](https://discuss.okfn.org) is the best place for that.<issue_closed>"
newrelic/developer-website,1035616406,1821,,"[{'action': 'opened', 'author': 'jpvajda', 'comment_id': None, 'datetime': '2021-10-25T22:07:40Z', 'masked_author': 'username_0', 'text': 'To prepare for possible integration with the DevEx sort / popularity service  we want to test out gatsby 4 with support for SSR to validate this approach is viable.\r\n\r\n### Assumption\r\nThe I/O external site would be able to use this DevEx service to power our sort and popularity functionality instead of rebuilding that ourselves on the external site. This would then allow us to only rely on 1 single service to provide that both the internal and external I/O catalogs. \r\n\r\n### Acceptance Criteria\r\n\r\nThis exploration is just for the `DevSite`\r\n\r\n- [x] Confirm when Gatsby4 will go GA\r\n- [x] Deploy Gatsby4 with SSR on the devsite on a feature branch\r\n- [x] setup test function to pull from the `openInstallation` or the `nr1Catalog` nerdgraph endpoints\r\n- [x] Identify `Gameday` type issues  we need to consider for SLO / SLI metrics. \r\n- [ ] Confirm that environment variables can be passed to SSR functions\r\n- [ ] Confirm that PR previews can still be used (Might be able to point it at staging for previews)\r\n- [ ] Determine what kind of error reporting Gatsby Cloud provides\r\n- [x] Can the NodeJS agent be used for monitoring?\r\n- [ ] ~~Discuss with DevEx their service used for sort and popularity and plan for that integration which our next epic for I/O Follow up with @jerelmiller for more info~~ Being handled in the planning for the next epic\r\n\r\n\r\n#### Gameday considerations\r\n  a. sort /popularity service is down\r\n  b. gatsby functions are down, which support SSR\r\n  c.  other\r\n\r\n### Docs\r\n\r\n- https://www.gatsbyjs.com/blog/whats-new-in-gatsby-4/\r\n- https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v3-to-v4/', 'title': '[Public Catalog] Gatsby 4 + SSR exploration', 'type': 'issue'}
 {'action': 'created', 'author': 'aswanson-nr', 'comment_id': 964666841.0, 'datetime': '2021-11-10 00:27:45+00:00', 'masked_author': 'username_1', 'text': 'The build is currently running into some issues during the ""Validating Rendering Engines"" step. I believe it may have something to do with the [mockGlobals](https://github.com/newrelic/developer-website/blob/campfire/test-v4-ssr/plugins/gatsby-source-newrelic-sdk/src/mockGlobals.js) file in our SDK plugin, but I haven\'t been able to prove that yet.\r\n<img width=""1045"" alt=""Screen Shot 2021-11-09 at 4 25 02 PM"" src=""https://user-images.githubusercontent.com/70179303/141027134-027687d9-b2b4-487e-9e93-37ec10722032.png"">', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'aswanson-nr', 'comment_id': 964680811.0, 'datetime': '2021-11-10 00:53:44+00:00', 'masked_author': 'username_1', 'text': 'The error above was generated when doing a full `yarn build` of the site. I was able to render the test page on another Gatsby site that I created to test this with, so the issue is definitely within the dev site.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'aswanson-nr', 'comment_id': 965905368.0, 'datetime': '2021-11-11 01:16:51+00:00', 'masked_author': 'username_1', 'text': 'Removing the `test-ssr` page and keeping gatsby 4, caused a different error:\r\n![Uploading Screen Shot 2021-11-10 at 5.15.13 PM.pngâ€¦]()', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'aswanson-nr', 'comment_id': 965909653.0, 'datetime': '2021-11-11 01:26:49+00:00', 'masked_author': 'username_1', 'text': 'I also tested changing the globalMocks file in the sdk plugin to not override the global object and that did not work. However, removing the plugin completely does allow the site to build. So, the issue appears to be around the `gatsby-source-newrelic-sdk` plugin and the upgrade to Gatsby 4.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'roadlittledawn', 'comment_id': 967479086.0, 'datetime': '2021-11-12 20:20:10+00:00', 'masked_author': 'username_2', 'text': ""Re: gatsby v4 ssr. Here's what I did to try and read the new relic api key from node env vars but to no avail.\r\n\r\nhttps://github.com/newrelic/developer-website/compare/802747f...d89b14a\r\n\r\nGatsby doc on env vars: https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nr-kkenney', 'comment_id': 967744390.0, 'datetime': '2021-11-13 00:34:59+00:00', 'masked_author': 'username_3', 'text': 'we were able to get our test page to work. i also added the ability to supply an `id` as a query param, and for that quickstart to be fetched and displayed.\r\n\r\nfor example: https://developerwebsitecampfiretestv4.gatsbyjs.io/test-ssr/?id=29bd9a4a-1c19-4219-9694-0942f6411ce7\r\nand if you remove the id, you just see the initial page.\r\n\r\nthis should mean its possible for us to proceed with our upcoming work.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jpvajda', 'comment_id': 969082165.0, 'datetime': '2021-11-15 16:26:33+00:00', 'masked_author': 'username_0', 'text': ""This is awesome! I'm curious will this SSR implementation have any impacts to tessen events or analytics we should be aware of? ðŸ¤”"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'roadlittledawn', 'comment_id': 969477534.0, 'datetime': '2021-11-16 00:11:16+00:00', 'masked_author': 'username_2', 'text': ""@username_0 for now, tessen events fired as expected. depending on implementation down the road (e.g., if a quickstart page URL uses query params to fetch quickstart by `id`), we may want to tweak the tessen properties so there's enough data in the event to tell what quickstart the page contains, etc."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'roadlittledawn', 'comment_id': None, 'datetime': '2021-11-16 00:12:10+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: [Public Catalog] Gatsby 4 + SSR exploration
username_0: To prepare for possible integration with the DevEx sort / popularity service  we want to test out gatsby 4 with support for SSR to validate this approach is viable.

### Assumption
The I/O external site would be able to use this DevEx service to power our sort and popularity functionality instead of rebuilding that ourselves on the external site. This would then allow us to only rely on 1 single service to provide that both the internal and external I/O catalogs. 

### Acceptance Criteria

This exploration is just for the `DevSite`

- [x] Confirm when Gatsby4 will go GA
- [x] Deploy Gatsby4 with SSR on the devsite on a feature branch
- [x] setup test function to pull from the `openInstallation` or the `nr1Catalog` nerdgraph endpoints
- [x] Identify `Gameday` type issues  we need to consider for SLO / SLI metrics. 
- [ ] Confirm that environment variables can be passed to SSR functions
- [ ] Confirm that PR previews can still be used (Might be able to point it at staging for previews)
- [ ] Determine what kind of error reporting Gatsby Cloud provides
- [x] Can the NodeJS agent be used for monitoring?
- [ ] ~~Discuss with DevEx their service used for sort and popularity and plan for that integration which our next epic for I/O Follow up with @jerelmiller for more info~~ Being handled in the planning for the next epic


#### Gameday considerations
  a. sort /popularity service is down
  b. gatsby functions are down, which support SSR
  c.  other

### Docs

- https://www.gatsbyjs.com/blog/whats-new-in-gatsby-4/
- https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v3-to-v4/
<issue_comment>username_1: The build is currently running into some issues during the ""Validating Rendering Engines"" step. I believe it may have something to do with the [mockGlobals](https://github.com/newrelic/developer-website/blob/campfire/test-v4-ssr/plugins/gatsby-source-newrelic-sdk/src/mockGlobals.js) file in our SDK plugin, but I haven't been able to prove that yet.
<img width=""1045"" alt=""Screen Shot 2021-11-09 at 4 25 02 PM"" src=""https://user-images.githubusercontent.com/70179303/141027134-027687d9-b2b4-487e-9e93-37ec10722032.png"">
<issue_comment>username_1: The error above was generated when doing a full `yarn build` of the site. I was able to render the test page on another Gatsby site that I created to test this with, so the issue is definitely within the dev site.
<issue_comment>username_1: Removing the `test-ssr` page and keeping gatsby 4, caused a different error:
![Uploading Screen Shot 2021-11-10 at 5.15.13 PM.pngâ€¦]()
<issue_comment>username_1: I also tested changing the globalMocks file in the sdk plugin to not override the global object and that did not work. However, removing the plugin completely does allow the site to build. So, the issue appears to be around the `gatsby-source-newrelic-sdk` plugin and the upgrade to Gatsby 4.
<issue_comment>username_2: Re: gatsby v4 ssr. Here's what I did to try and read the new relic api key from node env vars but to no avail.

https://github.com/newrelic/developer-website/compare/802747f...d89b14a

Gatsby doc on env vars: https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/
<issue_comment>username_3: we were able to get our test page to work. i also added the ability to supply an `id` as a query param, and for that quickstart to be fetched and displayed.

for example: https://developerwebsitecampfiretestv4.gatsbyjs.io/test-ssr/?id=29bd9a4a-1c19-4219-9694-0942f6411ce7
and if you remove the id, you just see the initial page.

this should mean its possible for us to proceed with our upcoming work.
<issue_comment>username_0: This is awesome! I'm curious will this SSR implementation have any impacts to tessen events or analytics we should be aware of? ðŸ¤”
<issue_comment>username_2: @username_0 for now, tessen events fired as expected. depending on implementation down the road (e.g., if a quickstart page URL uses query params to fetch quickstart by `id`), we may want to tweak the tessen properties so there's enough data in the event to tell what quickstart the page contains, etc.<issue_closed>"
cake-build/website,811968668,1650,"{'number': 1650.0, 'repo': 'website', 'user_login': 'cake-build'}","[{'action': 'created', 'author': 'augustoproiete', 'comment_id': 782170537.0, 'datetime': '2021-02-19 16:04:37+00:00', 'masked_author': 'username_0', 'text': 'Relates to https://github.com/cake-build/website/pull/936', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'augustoproiete', 'comment_id': 782473142.0, 'datetime': '2021-02-20 00:20:50+00:00', 'masked_author': 'username_0', 'text': ""I heard back from @SharpeRAD and he's interested in updating his addins to be compatible with Cake v1.0 including [Cake.IIS](https://cakebuild.net/extensions/cake-iis/), and also to merge the improvements from @nrukavkov.\r\n\r\nHe might reach out to the Cake community for some help (if needed) with updating the addins that are more complicated such as the [Cake.PowerShell](https://cakebuild.net/extensions/cake-powershell/) and [Cake.Services](https://cakebuild.net/extensions/cake-services/) for example."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>username_0: Relates to https://github.com/cake-build/website/pull/936
<issue_comment>username_0: I heard back from @SharpeRAD and he's interested in updating his addins to be compatible with Cake v1.0 including [Cake.IIS](https://cakebuild.net/extensions/cake-iis/), and also to merge the improvements from @nrukavkov.

He might reach out to the Cake community for some help (if needed) with updating the addins that are more complicated such as the [Cake.PowerShell](https://cakebuild.net/extensions/cake-powershell/) and [Cake.Services](https://cakebuild.net/extensions/cake-services/) for example."
