emberjs/website,217953688,2865,,"[{'action': 'opened', 'author': 'martndemus', 'comment_id': None, 'datetime': '2017-03-29 17:41:57+00:00', 'masked_author': 'username_0', 'text': ""As a best practices consultant I've run more than once into clients justifying using Observers because they are in the guides. There is a paragraph in there that warns readers that they might not be a good idea, but it's easily glossed over and not nearly as explicit enough to convince readers to not use them.\r\n\r\nMost often I need to sit them down with Stefan Penners WGE Observer Tip Jar talk to convince them they really are a really bad practice.\r\n\r\nI would also be fine with just removing the whole page, as I feel like observers are just a power user feature of the framework."", 'title': 'Observer guide needs a better disclaimer/warning', 'type': 'issue'}
 {'action': 'created', 'author': 'rwjblue', 'comment_id': 290221051.0, 'datetime': '2017-03-29 20:48:26+00:00', 'masked_author': 'username_1', 'text': ""IMHO, we should probably not introduce folks to observers in the guides. It is definitely still support API and whatnot, but I don't think observers should be considered one of the most important things for folks to grok when starting with Ember."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'martndemus', 'comment_id': 290245372.0, 'datetime': '2017-03-29 22:26:24+00:00', 'masked_author': 'username_0', 'text': 'Should I open a PR removing the page from the guides?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'rwjblue', 'comment_id': 290248582.0, 'datetime': '2017-03-29 22:42:05+00:00', 'masked_author': 'username_1', 'text': ""Seems good, but I'd like the leaning team folks to chime in and confirm before landing."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'locks', 'comment_id': 302244895.0, 'datetime': '2017-05-17 22:05:52+00:00', 'masked_author': 'username_2', 'text': ""I'm somewhat wary of removing them from the Guides. Best practices by obscurity haven't worked out for us so far."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'acorncom', 'comment_id': 304995934.0, 'datetime': '2017-05-30 20:19:21+00:00', 'masked_author': 'username_3', 'text': 'Ditto.  Seems like we need an power tool icon (or lightning bolt?) along with a ""be very careful, here be sharp knives"" and a link to Stef\'s video for background üòÄ', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'locks', 'comment_id': 454812358.0, 'datetime': '2019-01-16 15:07:24+00:00', 'masked_author': 'username_2', 'text': 'Addressed meanwhile.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'locks', 'comment_id': None, 'datetime': '2019-01-16 15:07:25+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Observer guide needs a better disclaimer/warning
username_0: As a best practices consultant I've run more than once into clients justifying using Observers because they are in the guides. There is a paragraph in there that warns readers that they might not be a good idea, but it's easily glossed over and not nearly as explicit enough to convince readers to not use them.

Most often I need to sit them down with Stefan Penners WGE Observer Tip Jar talk to convince them they really are a really bad practice.

I would also be fine with just removing the whole page, as I feel like observers are just a power user feature of the framework.
<issue_comment>username_1: IMHO, we should probably not introduce folks to observers in the guides. It is definitely still support API and whatnot, but I don't think observers should be considered one of the most important things for folks to grok when starting with Ember.
<issue_comment>username_0: Should I open a PR removing the page from the guides?
<issue_comment>username_1: Seems good, but I'd like the leaning team folks to chime in and confirm before landing.
<issue_comment>username_2: I'm somewhat wary of removing them from the Guides. Best practices by obscurity haven't worked out for us so far.
<issue_comment>username_3: Ditto.  Seems like we need an power tool icon (or lightning bolt?) along with a ""be very careful, here be sharp knives"" and a link to Stef's video for background üòÄ
<issue_comment>username_2: Addressed meanwhile.<issue_closed>"
flutter/website,318415501,985,"{'number': 985.0, 'repo': 'website', 'user_login': 'flutter'}","[{'action': 'opened', 'author': 'rock3r', 'comment_id': None, 'datetime': '2018-04-27T13:45:30Z', 'masked_author': 'username_0', 'text': ""This PR is for the ninth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.\r\n\r\nFollowing the same rough format as the `flutter-for-android.md` document, with iOS details instead.\r\n\r\nThe following sections have been created:\r\n\r\n* How do I access the GPS sensor?\r\n* How do I access the Camera?\r\n* How do I Log in with Facebook?\r\n* How do I use Firebase features?\r\n* How do I build my own custom native integrations?\r\n\r\n‚ö†Ô∏è **This requires #984 to be merged first!** ‚ö†Ô∏è"", 'title': 'Flutter for iOS ‚Äî Plugins section', 'type': 'issue'}
 {'action': 'created', 'author': 'rock3r', 'comment_id': 385896157.0, 'datetime': '2018-05-02 08:01:25+00:00', 'masked_author': 'username_0', 'text': 'Contents covered in #993, closing this. Will address comments on that one.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Flutter for iOS ‚Äî Plugins section
username_0: This PR is for the ninth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.

Following the same rough format as the `flutter-for-android.md` document, with iOS details instead.

The following sections have been created:

* How do I access the GPS sensor?
* How do I access the Camera?
* How do I Log in with Facebook?
* How do I use Firebase features?
* How do I build my own custom native integrations?

‚ö†Ô∏è **This requires #984 to be merged first!** ‚ö†Ô∏è
<issue_comment>username_0: Contents covered in #993, closing this. Will address comments on that one."
jscraftcamp/website,451113693,614,"{'number': 614.0, 'repo': 'website', 'user_login': 'jscraftcamp'}","[{'action': 'opened', 'author': 'WanielDeiss', 'comment_id': None, 'datetime': '2019-06-01T18:45:25Z', 'masked_author': 'username_0', 'text': ""I would like to register for JS CraftCamp.    \r\n- [ X ] My pull request contains a JSON file `$firstname_$lastname.json` or `$nickname.json`    \r\n- [ X ] The JSON file follows the template at https://github.com/jscraftcamp/website/blob/master/participants/_template.json and contains the mandatory fields `name`, `when`, `what_is_my_connection_to_javascript` and `what_can_i_contribute`    \r\n- [ X ] If I can't attend, I will either send another pull request removing my JSON file or an e-mail with the subject 'UNREGISTER' to efpyi@example.com\r\n- [ X ] I agree that the data I enter in the registration can be used for running the event, e.g. make a name tag, count me as participant. I acknowledge that my data are public on github.\r\n- [ X ] I agree that photos and videos might be taken and published (e.g. on social media) during the event."", 'title': 'registration of daniel wei√ü ü•≥', 'type': 'issue'}
 {'action': 'created', 'author': 'lowsky', 'comment_id': 497969734.0, 'datetime': '2019-06-01 19:01:31+00:00', 'masked_author': 'username_1', 'text': ""Welcome, Daniel!\r\nCan you please have a look into your pull request:\r\n- Plz, change the entry of 'allergies' - it must be a string.\r\nBy running `npm test` you can check if the json is valid.\r\n\r\n' looking forward to meet you a the unconf and talk about `cypress` !"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lowsky', 'comment_id': 497970592.0, 'datetime': '2019-06-01 19:15:03+00:00', 'masked_author': 'username_1', 'text': 'Welcome @DanielHilpoltsteiner ! CU you at the unconf.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'WanielDeiss', 'comment_id': 497971102.0, 'datetime': '2019-06-01 19:22:38+00:00', 'masked_author': 'username_0', 'text': ""hmmm i'm daniel wei√ü üßê"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lowsky', 'comment_id': 497971261.0, 'datetime': '2019-06-01 19:25:01+00:00', 'masked_author': 'username_1', 'text': 'Sorry, sure, Waniel ;-) Pardon, @username_0 ! Syntax completion screwed me ;-)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lowsky', 'comment_id': 498796118.0, 'datetime': '2019-06-04 18:49:07+00:00', 'masked_author': 'username_1', 'text': '@username_0 would you like to officially sponsor the event or just bring some energy drinks along?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'WanielDeiss', 'comment_id': 506250238.0, 'datetime': '2019-06-27 08:35:10+00:00', 'masked_author': 'username_0', 'text': 'what did you mean with officially? :D', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: registration of daniel wei√ü ü•≥
username_0: I would like to register for JS CraftCamp.    
- [ X ] My pull request contains a JSON file `$firstname_$lastname.json` or `$nickname.json`    
- [ X ] The JSON file follows the template at https://github.com/jscraftcamp/website/blob/master/participants/_template.json and contains the mandatory fields `name`, `when`, `what_is_my_connection_to_javascript` and `what_can_i_contribute`    
- [ X ] If I can't attend, I will either send another pull request removing my JSON file or an e-mail with the subject 'UNREGISTER' to team@jscraftcamp.org
- [ X ] I agree that the data I enter in the registration can be used for running the event, e.g. make a name tag, count me as participant. I acknowledge that my data are public on github.
- [ X ] I agree that photos and videos might be taken and published (e.g. on social media) during the event.
<issue_comment>username_1: Welcome, Daniel!
Can you please have a look into your pull request:
- Plz, change the entry of 'allergies' - it must be a string.
By running `npm test` you can check if the json is valid.

' looking forward to meet you a the unconf and talk about `cypress` !
<issue_comment>username_1: Welcome @DanielHilpoltsteiner ! CU you at the unconf.
<issue_comment>username_0: hmmm i'm daniel wei√ü üßê
<issue_comment>username_1: Sorry, sure, Waniel ;-) Pardon, @username_0 ! Syntax completion screwed me ;-)
<issue_comment>username_1: @username_0 would you like to officially sponsor the event or just bring some energy drinks along?
<issue_comment>username_0: what did you mean with officially? :D"
gohugoio/hugo,788543241,8154,,"[{'action': 'opened', 'author': 'jwflory', 'comment_id': None, 'datetime': '2021-01-18 20:58:26+00:00', 'masked_author': 'username_0', 'text': ""# Summary\r\n\r\nAdd support for configurable domain-level redirects if a Hugo site moves\r\n\r\n\r\n# Background\r\n\r\nI have moved some Hugo sites from GitHub to GitLab, and others from GitLab to GitHub. In those cases, there is not an easy solution to redirect Git{x} Pages sub-domain from one site to another. In both cases, I am running a Hugo site. One gets regular updates and the other has a banner saying it is out-of-date and does not have current information. I would like to redirect the same site on a previous domain to another site, also powered by Hugo.\r\n\r\nThere does not seem to be an alternative option to this. I have control of publishing HTML content, but I have no control over the domain provided to me. Some kind of HTML redirect seems like a possible workaround for this.\r\n\r\n\r\n# Details\r\n\r\nBest case scenario, this could be defined in page/post front-matter, or the site `.toml` config. In my case, I want to redirect an entire site (`myproject.git1.io/* -> myproject.git2.io/$1`). I'm not sure what kind of implementation would make sense from a Hugo maintainer point-of-view.\r\n\r\n\r\n# Outcome\r\n\r\nBetter support for redirecting one Hugo site to another when DNS is not controlled"", 'title': 'Add support for domain-level redirects', 'type': 'issue'}
 {'action': 'created', 'author': 'moorereason', 'comment_id': 762480776.0, 'datetime': '2021-01-18 21:35:44+00:00', 'masked_author': 'username_1', 'text': 'Hugo gives you everything you need already.  Put the HTML meta redirect tags in your old site templates.  What do you want more than that?', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'jwflory', 'comment_id': None, 'datetime': '2021-01-28 17:43:42+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'jwflory', 'comment_id': 769257893.0, 'datetime': '2021-01-28 17:43:42+00:00', 'masked_author': 'username_0', 'text': ""Hi @username_1, thanks for clarifying. I was able to do this with a template in `layouts/_default/baseof.html`. I was hoping I could get a clever way to pull in the full URL (i.e. `example.com/p1` goes to `new.com/p1`, `example.com/p2` goes to `new.com/p2`, etc. However, it isn't critically important.\r\n\r\nAlso for anyone who comes along later, the below tool was super helpful to handle clean redirects across multiple browsers, and to help out with S.E.O. with canonical redirect.\r\n\r\nhttp://insider.zone/tools/client-side-url-redirect-generator/"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add support for domain-level redirects
username_0: # Summary

Add support for configurable domain-level redirects if a Hugo site moves


# Background

I have moved some Hugo sites from GitHub to GitLab, and others from GitLab to GitHub. In those cases, there is not an easy solution to redirect Git{x} Pages sub-domain from one site to another. In both cases, I am running a Hugo site. One gets regular updates and the other has a banner saying it is out-of-date and does not have current information. I would like to redirect the same site on a previous domain to another site, also powered by Hugo.

There does not seem to be an alternative option to this. I have control of publishing HTML content, but I have no control over the domain provided to me. Some kind of HTML redirect seems like a possible workaround for this.


# Details

Best case scenario, this could be defined in page/post front-matter, or the site `.toml` config. In my case, I want to redirect an entire site (`myproject.git1.io/* -> myproject.git2.io/$1`). I'm not sure what kind of implementation would make sense from a Hugo maintainer point-of-view.


# Outcome

Better support for redirecting one Hugo site to another when DNS is not controlled
<issue_comment>username_1: Hugo gives you everything you need already.  Put the HTML meta redirect tags in your old site templates.  What do you want more than that?<issue_closed>
<issue_comment>username_0: Hi @username_1, thanks for clarifying. I was able to do this with a template in `layouts/_default/baseof.html`. I was hoping I could get a clever way to pull in the full URL (i.e. `example.com/p1` goes to `new.com/p1`, `example.com/p2` goes to `new.com/p2`, etc. However, it isn't critically important.

Also for anyone who comes along later, the below tool was super helpful to handle clean redirects across multiple browsers, and to help out with S.E.O. with canonical redirect.

http://insider.zone/tools/client-side-url-redirect-generator/"
AdoptOpenJDK/openjdk-website,421910191,425,"{'number': 425.0, 'repo': 'openjdk-website', 'user_login': 'AdoptOpenJDK'}","[{'action': 'opened', 'author': 'userquin', 'comment_id': None, 'datetime': '2019-03-17T11:17:08Z', 'masked_author': 'username_0', 'text': 'Due to the fact client cannot download sha256.txt file (see https://github.com/AdoptOpenJDK/openjdk-website/issues/422#issuecomment-473655077), the changes are not finished, just need to parse the file and replace FILEHASH on the `autoResultCommand` text.', 'title': 'PR for 422', 'type': 'issue'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 474045163.0, 'datetime': '2019-03-18 18:29:48+00:00', 'masked_author': 'username_0', 'text': 'My intention is to made it available to all platforms:\r\n\r\nFor linux/unix:\r\n```shell\r\necho ""FILEHASH  FILENAME"" 2>&1 | sha256sum -c\r\n```\r\n\r\nand for macosx:\r\n```shell\r\necho ""FILEHASH FILENAME"" 2>&1 | shasum -a 256 -c\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 474068641.0, 'datetime': '2019-03-18 19:34:59+00:00', 'masked_author': 'username_0', 'text': '@username_2 the optimael solution will be if the server api includes the hash for each platform, this will prevent download each sha256.txt file and the auto comannd can be directly calculated.\r\n\r\nThe code is ready to handle this situation, and if the server api is changed to oncluded the hash, then 95% of the changes can be removed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 474102012.0, 'datetime': '2019-03-18 21:08:58+00:00', 'masked_author': 'username_1', 'text': ""@username_0 I'm kind of pro doing work on the API to render the hash as a string and return it."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 474255955.0, 'datetime': '2019-03-19 09:07:15+00:00', 'masked_author': 'username_0', 'text': '@username_1 It is posible to include for each platform the checksum + checksum hash in the server api?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 474269886.0, 'datetime': '2019-03-19 09:43:20+00:00', 'masked_author': 'username_1', 'text': 'Yeah I can certainly take a look at that @username_0', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 476374513.0, 'datetime': '2019-03-25 20:57:33+00:00', 'masked_author': 'username_0', 'text': '@username_1 any news on this?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 483694232.0, 'datetime': '2019-04-16 14:49:24+00:00', 'masked_author': 'username_2', 'text': '@username_0 Merge conflicts', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 483760687.0, 'datetime': '2019-04-16 17:04:49+00:00', 'masked_author': 'username_0', 'text': ""This PR is not ready to be merged yet, I'm still waiting for @username_1 responses. As I said, if the server api comes with hash and hash algh, we need only to adapt the ui, but if we need to call server to download each hash file, then some things must be changed on server side to avoid CORS errors."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 483761970.0, 'datetime': '2019-04-16 17:08:20+00:00', 'masked_author': 'username_0', 'text': 'Ok, it seems that client can now download hash files, so we need only update the client to read its content.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 483762679.0, 'datetime': '2019-04-16 17:10:18+00:00', 'masked_author': 'username_0', 'text': ""I'm at office, later at home I'll check it again, I'll try to add logic to parse the response, seems to be failing for same reason."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 483767296.0, 'datetime': '2019-04-16 17:23:14+00:00', 'masked_author': 'username_0', 'text': ""To solve the conflict (I dont know from what branch):\r\nFor current 2.0.1:\r\n```javascript\r\n// browser-sync task\r\ngulp.task('browser-sync', function() {\r\n    browserSync.init({\r\n        server: {\r\n            baseDir: './'\r\n        },\r\n        cors: true,\r\n        notify: false\r\n    });\r\n});\r\n\r\n// robots task\r\ngulp.task('robots', function () {\r\n  gulp.src('index.html')\r\n    .pipe(robots({\r\n      useragent: '*',\r\n      allow: ['/'],\r\n      disallow: ['/404.html', '/banner.html', '/dist']\r\n    }))\r\n    .pipe(gulp.dest('./'));\r\n});\r\n```\r\nor for this conflict:\r\n```javascript\r\n// browser-sync task\r\ngulp.task('browser-sync', function() {\r\n    browserSync.init({\r\n        server: {\r\n            baseDir: './'\r\n        },\r\n        cors: true,\r\n        notify: false\r\n    });\r\n});\r\n\r\n// robots task\r\ngulp.task('robots', function () {\r\n  gulp.src('index.html')\r\n    .pipe(robots({\r\n      useragent: '*',\r\n      allow: ['/'],\r\n      disallow: ['/404.html', '/dist']\r\n    }))\r\n    .pipe(gulp.dest('./'));\r\n});\r\n```"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484280958.0, 'datetime': '2019-04-17 22:13:18+00:00', 'masked_author': 'username_0', 'text': '@username_2 The response for api data now has the cors header, but we also need cors header on responses for sha256.txt files:\r\n\r\n![api_call](https://user-images.githubusercontent.com/6311119/56324254-ac81df00-616e-11e9-973a-52fc16607399.png)\r\n\r\n![sha256 txt](https://user-images.githubusercontent.com/6311119/56324266-b3105680-616e-11e9-989b-b41f161872e1.png)\r\n\r\n![cors-errors](https://user-images.githubusercontent.com/6311119/56324276-b73c7400-616e-11e9-90ca-97839e958498.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484289182.0, 'datetime': '2019-04-17 22:45:33+00:00', 'masked_author': 'username_0', 'text': 'Well, by passing cors on chrome, just works, I need to do some final checks and I will update the PR. I need to check it on staging, but will not work due to CORS headers...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484290715.0, 'datetime': '2019-04-17 22:51:56+00:00', 'masked_author': 'username_0', 'text': '```javascript\r\n2637dab3bc81274e19991eebc27684276b482dd71d0f84fedf703d4fba3576e5  OpenJDK8U-jdk_x64_windows_hotspot_8u202b08.zip\r\n```\r\n![cors_disabled_chrome2](https://user-images.githubusercontent.com/6311119/56325849-1c469880-6174-11e9-9772-481e182b1913.png)\r\n\r\n![cors_disabled_chrome](https://user-images.githubusercontent.com/6311119/56325732-8d398080-6173-11e9-835a-b3ef582465b0.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484338856.0, 'datetime': '2019-04-18 03:07:20+00:00', 'masked_author': 'username_0', 'text': ""@username_2 I just push to my repo the changes and now it is working (see link below), and updated mac os x commands, I cannot test on linux now, maybe tomorrow  (it's 5 o'clock in the morning and I'm going to sleep;))..\r\n\r\nI have tested on local on a Windows 10, starting chrome with no security: https://alfilatov.com/posts/run-chrome-without-cors/"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484344956.0, 'datetime': '2019-04-18 03:44:51+00:00', 'masked_author': 'username_0', 'text': 'Upps, there is something wrong: before update the master I just update but resolving the conflict updates changes @username_1 do:\r\n\r\n![imagen](https://user-images.githubusercontent.com/6311119/56335378-95f27c80-619c-11e9-8a30-9a9aaa8acd96.png)\r\n\r\nSome files was changed, but not present on my master branch (package.json and gulp.js), and at least gulp.js is wrong on my branch and in this PR (robots missing and robots task also missing on my gulp.js).\r\n\r\nI dont want to push my changes, waiting to see where we are and how to solve the problem.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484347399.0, 'datetime': '2019-04-18 04:00:50+00:00', 'masked_author': 'username_0', 'text': '@username_1 where are you touching? Your 2 last changes are missing from this master and I dont know where are included. See previous image.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484348389.0, 'datetime': '2019-04-18 04:06:58+00:00', 'masked_author': 'username_0', 'text': '@username_1 Once I resolve the conflict manually on gulp.js file, I have compared my updated version againts your changes: as you can see bellow on the images, my gulp file has references to robots but clipboard no (copied from this master)\r\n\r\n![imagen](https://user-images.githubusercontent.com/6311119/56336148-87f22b00-619f-11e9-8c05-1eba466355e4.png)\r\n\r\n![imagen](https://user-images.githubusercontent.com/6311119/56336272-fd5dfb80-619f-11e9-8591-8c577c802a14.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484506707.0, 'datetime': '2019-04-18 13:24:11+00:00', 'masked_author': 'username_0', 'text': ""I'm trying another approach to avoid download the sha256.txt files for each platform, just using curl or wget  to download sha256 file and then check it, it is a good solution with only one command (for example, for mac):\r\n```shell\r\ncurl -O -L FILEHASHURL && shasum -a 256 -c FILEHASHNAME\r\n```\r\nWe can also hide download progress including `-s` flag:\r\n```shell\r\ncurl -O -L -s FILEHASHURL && shasum -a 256 -c FILEHASHNAME\r\n```\r\n![mac_checksum_alternative_command](https://user-images.githubusercontent.com/6311119/56363775-38d2e700-61ed-11e9-83fe-c3e4a1697af2.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484533833.0, 'datetime': '2019-04-18 14:27:19+00:00', 'masked_author': 'username_0', 'text': 'For linux/unix (tested only on ubuntu 18):\r\n```shell\r\nwget -O- -T 1 -t 1 FILEHASHURL  | sha256sum -c\r\n```\r\nWe can also hide download progress including `-q` flag:\r\n```shell\r\nwget -O- -q -T 1 -t 1 FILEHASHURL  | sha256sum -c\r\n```\r\n![Captura de pantalla de 2019-04-18 16-21-40](https://user-images.githubusercontent.com/6311119/56367891-96b7fc80-61f6-11e9-8154-65c7973561e4.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484879890.0, 'datetime': '2019-04-19 12:29:32+00:00', 'masked_author': 'username_0', 'text': 'And finally, after some tedious work, for windows (only `PowerShell >= 3.0`):\r\n\r\n```shell\r\npowershell -command ""[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;  iwr -outf FILEHASHNAME FILEHASHURL"" && powershell ""$CHECKSUMVAR=($(Get-FileHash -Algorithm SHA256 -LiteralPath FILENAME | Format-List -Property Hash | Out-String) -replace \\""Hash : \\"", \\""\\"" -replace \\""`r`n\\"", \\""\\""); Select-String -LiteralPath FILEHASHNAME -Pattern $CHECKSUMVAR | Format-List -Property FileName | Out-String"" | find /i ""FILEHASHNAME"">Nul && ( echo ""FILENAME: The SHA-256 fingerprint matches"" ) || ( echo ""FILENAME: The SHA-256 fingerprint does NOT match"" )\r\n```\r\n![windows_checksum_alternative_command](https://user-images.githubusercontent.com/6311119/56424170-697b5500-62af-11e9-9016-a6c7d34da5e2.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484880956.0, 'datetime': '2019-04-19 12:33:13+00:00', 'masked_author': 'username_0', 'text': ""With this new approach, there is no need to download the sha256 files, so when the user executes the command (for ist corresponding SO), the sha256 file is downloaded and the file verified.\r\nI'm updating the ui to reflect this changes."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 484914220.0, 'datetime': '2019-04-19 14:33:11+00:00', 'masked_author': 'username_0', 'text': '@username_2, @username_1 For windows I have not found a way to do it using windows shell, if some expert on it can rewrite the command instead using PowerShell, just need to replace the command on config.json file.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 485136801.0, 'datetime': '2019-04-20 15:40:06+00:00', 'masked_author': 'username_2', 'text': ""@username_1 I'll await your review next."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 486369726.0, 'datetime': '2019-04-24 18:23:07+00:00', 'masked_author': 'username_0', 'text': '@username_1 can you ignore `package.json` and `package-lock.json`  from my PR? I dont know who and when touched these files and in which branch. I only updated my master branch  followed by a  `npm install` before making and pushing last changes in my master, and the result were those `package.json` and `package-lock.json` files.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488029216.0, 'datetime': '2019-04-30 16:51:53+00:00', 'masked_author': 'username_2', 'text': ""@username_0 I think you'll need to rebase/resolve the conflict and push again then I think this is good to go."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 488033728.0, 'datetime': '2019-04-30 17:04:16+00:00', 'masked_author': 'username_0', 'text': ""@username_2 later at home I'll try or maybe tomorrow"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 488264190.0, 'datetime': '2019-05-01 11:49:47+00:00', 'masked_author': 'username_0', 'text': ""@username_2 there is no way to rebase package.json and package-lock.json from upstream/master, I'll try to just copy/paste both files into my master and try again..."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 488266516.0, 'datetime': '2019-05-01 12:04:09+00:00', 'masked_author': 'username_0', 'text': 'ok, I just forget to do `npm install`, but then all versions change on package-lock.json and some dependencies were removed  (see images below).\r\n\r\njust push or wait?\r\n\r\n![imagen](https://user-images.githubusercontent.com/6311119/57016324-cf55ce00-6c19-11e9-9489-e316fb0d3dd9.png)\r\n\r\n![imagen](https://user-images.githubusercontent.com/6311119/57016237-5b1b2a80-6c19-11e9-8df9-f18b3b3c533d.png)\r\n![imagen](https://user-images.githubusercontent.com/6311119/57016312-bd742b00-6c19-11e9-8d78-78e93494514a.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488351200.0, 'datetime': '2019-05-01 17:30:30+00:00', 'masked_author': 'username_2', 'text': 'Yes push.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'userquin', 'comment_id': 488576696.0, 'datetime': '2019-05-02 07:29:36+00:00', 'masked_author': 'username_0', 'text': 'browser-sync fails on travis ci build, it needs browser-sync-client module to run, so I need to add it to `package.json`:\r\n```json\r\n    ""browser-sync-client"": ""^2.26.4"", <=== to fix build\r\n    ""browser-sync"": ""^2.26.5"",\r\n```', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: PR for 422
username_0: Due to the fact client cannot download sha256.txt file (see https://github.com/AdoptOpenJDK/openjdk-website/issues/422#issuecomment-473655077), the changes are not finished, just need to parse the file and replace FILEHASH on the `autoResultCommand` text.
<issue_comment>username_0: My intention is to made it available to all platforms:

For linux/unix:
```shell
echo ""FILEHASH  FILENAME"" 2>&1 | sha256sum -c
```

and for macosx:
```shell
echo ""FILEHASH FILENAME"" 2>&1 | shasum -a 256 -c
```
<issue_comment>username_0: @username_2 the optimael solution will be if the server api includes the hash for each platform, this will prevent download each sha256.txt file and the auto comannd can be directly calculated.

The code is ready to handle this situation, and if the server api is changed to oncluded the hash, then 95% of the changes can be removed.
<issue_comment>username_1: @username_0 I'm kind of pro doing work on the API to render the hash as a string and return it.
<issue_comment>username_0: @username_1 It is posible to include for each platform the checksum + checksum hash in the server api?
<issue_comment>username_1: Yeah I can certainly take a look at that @username_0
<issue_comment>username_0: @username_1 any news on this?
<issue_comment>username_2: @username_0 Merge conflicts
<issue_comment>username_0: This PR is not ready to be merged yet, I'm still waiting for @username_1 responses. As I said, if the server api comes with hash and hash algh, we need only to adapt the ui, but if we need to call server to download each hash file, then some things must be changed on server side to avoid CORS errors.
<issue_comment>username_0: Ok, it seems that client can now download hash files, so we need only update the client to read its content.
<issue_comment>username_0: I'm at office, later at home I'll check it again, I'll try to add logic to parse the response, seems to be failing for same reason.
<issue_comment>username_0: To solve the conflict (I dont know from what branch):
For current 2.0.1:
```javascript
// browser-sync task
gulp.task('browser-sync', function() {
    browserSync.init({
        server: {
            baseDir: './'
        },
        cors: true,
        notify: false
    });
});

// robots task
gulp.task('robots', function () {
  gulp.src('index.html')
    .pipe(robots({
      useragent: '*',
      allow: ['/'],
      disallow: ['/404.html', '/banner.html', '/dist']
    }))
    .pipe(gulp.dest('./'));
});
```
or for this conflict:
```javascript
// browser-sync task
gulp.task('browser-sync', function() {
    browserSync.init({
        server: {
            baseDir: './'
        },
        cors: true,
        notify: false
    });
});

// robots task
gulp.task('robots', function () {
  gulp.src('index.html')
    .pipe(robots({
      useragent: '*',
      allow: ['/'],
      disallow: ['/404.html', '/dist']
    }))
    .pipe(gulp.dest('./'));
});
```
<issue_comment>username_0: @username_2 The response for api data now has the cors header, but we also need cors header on responses for sha256.txt files:

![api_call](https://user-images.githubusercontent.com/6311119/56324254-ac81df00-616e-11e9-973a-52fc16607399.png)

![sha256 txt](https://user-images.githubusercontent.com/6311119/56324266-b3105680-616e-11e9-989b-b41f161872e1.png)

![cors-errors](https://user-images.githubusercontent.com/6311119/56324276-b73c7400-616e-11e9-90ca-97839e958498.png)
<issue_comment>username_0: Well, by passing cors on chrome, just works, I need to do some final checks and I will update the PR. I need to check it on staging, but will not work due to CORS headers...
<issue_comment>username_0: ```javascript
2637dab3bc81274e19991eebc27684276b482dd71d0f84fedf703d4fba3576e5  OpenJDK8U-jdk_x64_windows_hotspot_8u202b08.zip
```
![cors_disabled_chrome2](https://user-images.githubusercontent.com/6311119/56325849-1c469880-6174-11e9-9772-481e182b1913.png)

![cors_disabled_chrome](https://user-images.githubusercontent.com/6311119/56325732-8d398080-6173-11e9-835a-b3ef582465b0.png)
<issue_comment>username_0: @username_2 I just push to my repo the changes and now it is working (see link below), and updated mac os x commands, I cannot test on linux now, maybe tomorrow  (it's 5 o'clock in the morning and I'm going to sleep;))..

I have tested on local on a Windows 10, starting chrome with no security: https://alfilatov.com/posts/run-chrome-without-cors/
<issue_comment>username_0: Upps, there is something wrong: before update the master I just update but resolving the conflict updates changes @username_1 do:

![imagen](https://user-images.githubusercontent.com/6311119/56335378-95f27c80-619c-11e9-8a30-9a9aaa8acd96.png)

Some files was changed, but not present on my master branch (package.json and gulp.js), and at least gulp.js is wrong on my branch and in this PR (robots missing and robots task also missing on my gulp.js).

I dont want to push my changes, waiting to see where we are and how to solve the problem.
<issue_comment>username_0: @username_1 where are you touching? Your 2 last changes are missing from this master and I dont know where are included. See previous image.
<issue_comment>username_0: @username_1 Once I resolve the conflict manually on gulp.js file, I have compared my updated version againts your changes: as you can see bellow on the images, my gulp file has references to robots but clipboard no (copied from this master)

![imagen](https://user-images.githubusercontent.com/6311119/56336148-87f22b00-619f-11e9-8c05-1eba466355e4.png)

![imagen](https://user-images.githubusercontent.com/6311119/56336272-fd5dfb80-619f-11e9-8591-8c577c802a14.png)
<issue_comment>username_0: I'm trying another approach to avoid download the sha256.txt files for each platform, just using curl or wget  to download sha256 file and then check it, it is a good solution with only one command (for example, for mac):
```shell
curl -O -L FILEHASHURL && shasum -a 256 -c FILEHASHNAME
```
We can also hide download progress including `-s` flag:
```shell
curl -O -L -s FILEHASHURL && shasum -a 256 -c FILEHASHNAME
```
![mac_checksum_alternative_command](https://user-images.githubusercontent.com/6311119/56363775-38d2e700-61ed-11e9-83fe-c3e4a1697af2.png)
<issue_comment>username_0: For linux/unix (tested only on ubuntu 18):
```shell
wget -O- -T 1 -t 1 FILEHASHURL  | sha256sum -c
```
We can also hide download progress including `-q` flag:
```shell
wget -O- -q -T 1 -t 1 FILEHASHURL  | sha256sum -c
```
![Captura de pantalla de 2019-04-18 16-21-40](https://user-images.githubusercontent.com/6311119/56367891-96b7fc80-61f6-11e9-8154-65c7973561e4.png)
<issue_comment>username_0: And finally, after some tedious work, for windows (only `PowerShell >= 3.0`):

```shell
powershell -command ""[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;  iwr -outf FILEHASHNAME FILEHASHURL"" && powershell ""$CHECKSUMVAR=($(Get-FileHash -Algorithm SHA256 -LiteralPath FILENAME | Format-List -Property Hash | Out-String) -replace \""Hash : \"", \""\"" -replace \""`r`n\"", \""\""); Select-String -LiteralPath FILEHASHNAME -Pattern $CHECKSUMVAR | Format-List -Property FileName | Out-String"" | find /i ""FILEHASHNAME"">Nul && ( echo ""FILENAME: The SHA-256 fingerprint matches"" ) || ( echo ""FILENAME: The SHA-256 fingerprint does NOT match"" )
```
![windows_checksum_alternative_command](https://user-images.githubusercontent.com/6311119/56424170-697b5500-62af-11e9-9016-a6c7d34da5e2.png)
<issue_comment>username_0: With this new approach, there is no need to download the sha256 files, so when the user executes the command (for ist corresponding SO), the sha256 file is downloaded and the file verified.
I'm updating the ui to reflect this changes.
<issue_comment>username_0: @username_2, @username_1 For windows I have not found a way to do it using windows shell, if some expert on it can rewrite the command instead using PowerShell, just need to replace the command on config.json file.
<issue_comment>username_2: @username_1 I'll await your review next.
<issue_comment>username_0: @username_1 can you ignore `package.json` and `package-lock.json`  from my PR? I dont know who and when touched these files and in which branch. I only updated my master branch  followed by a  `npm install` before making and pushing last changes in my master, and the result were those `package.json` and `package-lock.json` files.
<issue_comment>username_2: @username_0 I think you'll need to rebase/resolve the conflict and push again then I think this is good to go.
<issue_comment>username_0: @username_2 later at home I'll try or maybe tomorrow
<issue_comment>username_0: @username_2 there is no way to rebase package.json and package-lock.json from upstream/master, I'll try to just copy/paste both files into my master and try again...
<issue_comment>username_0: ok, I just forget to do `npm install`, but then all versions change on package-lock.json and some dependencies were removed  (see images below).

just push or wait?

![imagen](https://user-images.githubusercontent.com/6311119/57016324-cf55ce00-6c19-11e9-9489-e316fb0d3dd9.png)

![imagen](https://user-images.githubusercontent.com/6311119/57016237-5b1b2a80-6c19-11e9-8df9-f18b3b3c533d.png)
![imagen](https://user-images.githubusercontent.com/6311119/57016312-bd742b00-6c19-11e9-8d78-78e93494514a.png)
<issue_comment>username_2: Yes push.
<issue_comment>username_0: browser-sync fails on travis ci build, it needs browser-sync-client module to run, so I need to add it to `package.json`:
```json
    ""browser-sync-client"": ""^2.26.4"", <=== to fix build
    ""browser-sync"": ""^2.26.5"",
```"
stevenschobert/instafeed.js,328743985,586,,"[{'action': 'opened', 'author': 'jpdpueyo', 'comment_id': None, 'datetime': '2018-06-02T13:24:29Z', 'masked_author': 'username_0', 'text': ""Hi I have been trying to browse for this issue but unfortunately can't seem to find it. I am trying to show the links from the caption of an instagram post. Can someone help? TIA"", 'title': 'Show links from the caption', 'type': 'issue'}
 {'action': 'created', 'author': 'benjamin-hull', 'comment_id': 394899497.0, 'datetime': '2018-06-06 00:11:07+00:00', 'masked_author': 'username_1', 'text': 'Hi @username_0 - Can you show an example of your code? A CodePen or JSFiddle example would be really helpful. Thanks!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jpdpueyo', 'comment_id': 395304625.0, 'datetime': '2018-06-07 06:11:16+00:00', 'masked_author': 'username_0', 'text': ""Hi @username_1! Thanks for the response. Here is my code.\r\n\r\nhttps://codepen.io/username_0/pen/aKmwYY\r\n\r\nWhat I'm trying to do is to get the link that I have placed in the caption then display it in my website feed.\r\n\r\nI have seen some projects like this. I would like to replicate them. Can you help? Thanks!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mustafaalawad', 'comment_id': 395805830.0, 'datetime': '2018-06-08 15:56:06+00:00', 'masked_author': 'username_2', 'text': 'Dear All, \r\nThe same problem I have it, like @username_0 .\r\n\r\nI had to read a lot of suggestions but unfortunately no one have the right way\r\nPlease @username_1 I appreciate that if you can helping me.\r\n\r\nThanks in Advance\r\nMustafa', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'benjamin-hull', 'comment_id': 396923581.0, 'datetime': '2018-06-13 12:42:39+00:00', 'masked_author': 'username_1', 'text': ""Hi guys,\r\n\r\nIf I understand correctly, you want to detect URLs in the image caption, and convert them to links?\r\n\r\nIf so, you'll need to do a little extra work with javascript make that happen. Doing this for any possible URL is harder than it seems at first glance. There are various packages out there to do a thorough job, for example https://soapbox.github.io/linkifyjs\r\n\r\nCheck this pen: https://codepen.io/username_1/pen/qKjXxX for an example of how to use instafeed.js `success` callback to run through and 'linkify' all the captions before they're inserted into the page.\r\n\r\nHope that helps - let me know how it goes!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mustafaalawad', 'comment_id': 397003634.0, 'datetime': '2018-06-13 16:34:10+00:00', 'masked_author': 'username_2', 'text': ""Dear @username_1, \r\n\r\nThanks a lot for your time and Effort to help us.\r\nFor me I found the solution but now I have another problem with the CSS to make it responsive but I hope I'll find the solution, if not I will write to you if that possible?\r\n\r\nwish you a beautiful day.\r\nMustafa"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jpdpueyo', 'comment_id': 397249234.0, 'datetime': '2018-06-14 10:32:35+00:00', 'masked_author': 'username_0', 'text': 'Hi @username_1 Thank you very much for your assistance. Really appreciate it. More power!', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'benjamin-hull', 'comment_id': None, 'datetime': '2018-06-19 00:47:11+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Show links from the caption
username_0: Hi I have been trying to browse for this issue but unfortunately can't seem to find it. I am trying to show the links from the caption of an instagram post. Can someone help? TIA
<issue_comment>username_1: Hi @username_0 - Can you show an example of your code? A CodePen or JSFiddle example would be really helpful. Thanks!
<issue_comment>username_0: Hi @username_1! Thanks for the response. Here is my code.

https://codepen.io/username_0/pen/aKmwYY

What I'm trying to do is to get the link that I have placed in the caption then display it in my website feed.

I have seen some projects like this. I would like to replicate them. Can you help? Thanks!
<issue_comment>username_2: Dear All, 
The same problem I have it, like @username_0 .

I had to read a lot of suggestions but unfortunately no one have the right way
Please @username_1 I appreciate that if you can helping me.

Thanks in Advance
Mustafa
<issue_comment>username_1: Hi guys,

If I understand correctly, you want to detect URLs in the image caption, and convert them to links?

If so, you'll need to do a little extra work with javascript make that happen. Doing this for any possible URL is harder than it seems at first glance. There are various packages out there to do a thorough job, for example https://soapbox.github.io/linkifyjs

Check this pen: https://codepen.io/username_1/pen/qKjXxX for an example of how to use instafeed.js `success` callback to run through and 'linkify' all the captions before they're inserted into the page.

Hope that helps - let me know how it goes!
<issue_comment>username_2: Dear @username_1, 

Thanks a lot for your time and Effort to help us.
For me I found the solution but now I have another problem with the CSS to make it responsive but I hope I'll find the solution, if not I will write to you if that possible?

wish you a beautiful day.
Mustafa
<issue_comment>username_0: Hi @username_1 Thank you very much for your assistance. Really appreciate it. More power!<issue_closed>"
AdoptOpenJDK/openjdk-website,438855321,477,,"[{'action': 'opened', 'author': 'tcarlisle2012', 'comment_id': None, 'datetime': '2019-04-30 16:01:59+00:00', 'masked_author': 'username_0', 'text': 'There is something about your binaries downloads that hangs Windows antimalware  service executable. The downloads finish transferring data, but then the browser kicks it over to antimalware service executable to scan, which consumes CPU or GPU indefinitely and never returns. Once this happens, user cannot download files from other sites either because this keeps the antimlaware service executable hung. \r\n\r\nNo other downloads from other sites do this. Verified on multiple PCs and multiple browsers.', 'title': 'AdoptOpenJDK - Download hangs on windows on 4/30/2019 (Edge & Chrome verified, multiple machines)', 'type': 'issue'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488011847.0, 'datetime': '2019-04-30 16:02:37+00:00', 'masked_author': 'username_1', 'text': '@username_0 Can you tell us which version of Windows you are using and the exact binary that you were trying to download?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 488017493.0, 'datetime': '2019-04-30 16:18:01+00:00', 'masked_author': 'username_0', 'text': 'Sorry I put this in the wrong section. Both systems are running version 1809. With different build numbers. One is build 17763.348 and the other is 17763.427. \r\n\r\nI was originally trying to download OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi, but then tried the .zip, then tried the 1.8LTS, and all do the same.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'adoptopenjdk-admin', 'comment_id': 488021089.0, 'datetime': '2019-04-30 16:28:08+00:00', 'masked_author': 'username_2', 'text': 'Andreas Ahlenstorf:   OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi with Edge on a yesterday installed Windows 10 1809 with all patches downloaded without issues. It took the malware scanner some time, but it finished.\r\n[1m]\r\n\r\nAndreas Ahlenstorf:   The JDK 8 MSI just finished, too.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488023616.0, 'datetime': '2019-04-30 16:35:29+00:00', 'masked_author': 'username_1', 'text': 'Have you perhaps got the Windows Defender settings higher than the default?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 488037029.0, 'datetime': '2019-04-30 17:14:02+00:00', 'masked_author': 'username_0', 'text': ""No, Windows defender settings were set to the usual and unmodified. Of course, when I disable real-time protection, it then works, but that defeats the purpose. It doesnt matter if cloud based or auto sample submission options are o or off, it hangs as long as real time protection is enabled, and works when that is disabled. \r\n\r\nAnother option, is to install a 3rd party like Avira, and then that product takes the front seat for real time protection. I installed Avira and verified no issue. \r\n\r\nBut for people running windows defender as their primary real time protection might report issues with this site. Never had any other sites do something like this. \r\n\r\nOf course, if it scanned and failed that would give us something to work with, but it just hangs. Normally, when a download completes it gives a spinning indication that scanning is happening. That doesn't happen at all in the broken state. It just never even begins, as best I can tell."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'keithc-ca', 'comment_id': 488038653.0, 'datetime': '2019-04-30 17:18:28+00:00', 'masked_author': 'username_3', 'text': ""I've seen long running times for the scan, but it has always (eventually) finished. It may take minutes, but it does finish."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488041992.0, 'datetime': '2019-04-30 17:28:21+00:00', 'masked_author': 'username_1', 'text': ""I'm unable to replicate a hang on my Windows 10 (via Virtual Box) either - Install was fine and it checked the London Jamocha Community Certificate.\r\n\r\n@username_0 Are you able to grab any Windows install / MSI / system logs?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 488060009.0, 'datetime': '2019-04-30 18:20:53+00:00', 'masked_author': 'username_0', 'text': 'Ok, I think I\'ve narrowed it. \r\n\r\nBut first, is everyone chiming in using nothing but windows defender? Because if not then it really isn\'t comparing apples to apples. \r\n\r\nUsing my test system, which only has windows defender, i moved the file to another web server and same thing. So we can rule out the web site or code. \r\n\r\nLooking further, if I right click the file (happens to be the zip file of your latest jdk11 x64 w/hotspot build) and choose to scan with Windows Defender, it scans indefinately. However, since I can see its status via the security settings front end, it is counting total files up in the 60,000 range now, and it is going to just keep going. Something about the archive is causing it to loop indefinitely in a scan by Windows Defender. \r\n\r\nScanning with Avira on another system it finishes and counts the right number of files (604) and folders (131). \r\n\r\nOk, while writing this, the windows defender scan of the extracted files did finish, counting a total of over 77,000 files. That can\'t be right, because there are not that many files extracted. Something is sending it into circles. \r\n\r\nLooking further, individually scanning each directory under the extratced jdk1.11.03 directory, they all complete in reasonable amounts of time, except the jmod directory takes about 15 minutes and counts thousands of files, yet there are only 71 files in that directory. \r\n\r\nSo the bottom line is windows defender scanning is going in circles scanning the jmods directory. I have a feeling avira skips it altogether. Windows defender is probably providing better security posture, as scanning jmods is probably the right thing to do. \r\n\r\nBut it should not scan in circles. Or perhaps it should.... I am not the expert in java > 1.8 and perhaps jmods call other jmods? If so, following that recursion is the right thing to do, but perhaps windows defender should track ones it already scanned. \r\n\r\nIn any event, it is looking like a windows defender + jmod scanning issue and not a web site issue.\r\n\r\nI did kick off a download of that built zip file (from the system running only windows defender) and am going to let it run until (or if) it finishes -- hours if that is what it takes. I will report the results here when that happens.  \r\n\r\nOn a side note, it looks like the files end up in the ""downloads"" directory as soon as they are done downloading, and before windows defender finishes its thing. But chrome & edge don\'t recognize it as complete until windows defender finishes. I mention this becuase people that are being held up with productivity because of this, since you are fairly sure the files are not malicious (you did check sha256 values, right?) you can continue working.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488070269.0, 'datetime': '2019-04-30 18:48:50+00:00', 'masked_author': 'username_1', 'text': ""I was just using Windows Defender yes.  If it's scanning each class file I could see why it gets into thousands of files.  I'm pinging my contact at MSFT to see if they can help here."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'keithc-ca', 'comment_id': 488079480.0, 'datetime': '2019-04-30 19:15:34+00:00', 'masked_author': 'username_3', 'text': ""If defender is recursively scanning jmod files (which are very much like zip files), then the count should be higher, but I'd expect something closer to double the number of files, not 100 times as many."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'keithc-ca', 'comment_id': 488085827.0, 'datetime': '2019-04-30 19:35:11+00:00', 'masked_author': 'username_3', 'text': ""And if it scans the 'modules' file the count would be much higher (it contains >27,000 resources in a Linux x64 build)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 488088208.0, 'datetime': '2019-04-30 19:41:57+00:00', 'masked_author': 'username_0', 'text': 'Good news, the system still running only windows defender did ultimately finish scanning the file after about 30 minutes. That system is way underpowered for the workload, but is the only one I have left without a third party security suite. But still, one would expect a downloaded msi or zip file to not take more than a few seconds. \r\n\r\nBottom line, windows defender takes a lot longer because the archive contains jmods, and windows defender doesn\'t return success and control back to the browser until that is done, versus avira does and continues scanning in the background (and skips the jmods probably by default). \r\n\r\nI just saw the same downloading a build from jdk.java.net, so I am more than comfortable closing this and considering it an issue of ""windows defender takes a very long time to scan JDK\'s""', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 488127217.0, 'datetime': '2019-04-30 21:47:52+00:00', 'masked_author': 'username_1', 'text': 'Great thank you.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'karianna', 'comment_id': None, 'datetime': '2019-04-30 21:47:57+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'douph1', 'comment_id': 489079456.0, 'datetime': '2019-05-03 12:31:59+00:00', 'masked_author': 'username_4', 'text': 'I confirm I have already seen same behaviour ( long long scan by windows defender ) for Oracle JDK.\r\nI think Windows Defender is running/executing jvm code ( class ) into sandboxed env to detectect malicious activity', 'title': None, 'type': 'comment'}
 {'action': 'reopened', 'author': 'karianna', 'comment_id': None, 'datetime': '2019-05-15 05:01:30+00:00', 'masked_author': 'username_1', 'text': 'There is something about your binaries downloads that hangs Windows antimalware  service executable. The downloads finish transferring data, but then the browser kicks it over to antimalware service executable to scan, which consumes CPU or GPU indefinitely and never returns. Once this happens, user cannot download files from other sites either because this keeps the antimlaware service executable hung. \r\n\r\nNo other downloads from other sites do this. Verified on multiple PCs and multiple browsers.', 'title': 'AdoptOpenJDK - Download hangs on windows on 4/30/2019 (Edge & Chrome verified, multiple machines)', 'type': 'issue'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 492504040.0, 'datetime': '2019-05-15 05:01:30+00:00', 'masked_author': 'username_1', 'text': 'Going to reopen this and get MSFT folks to comment', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 492504779.0, 'datetime': '2019-05-15 05:05:46+00:00', 'masked_author': 'username_5', 'text': ""Just ran into this bug... Interestingly enough, I have a project about 1/3 the size with quite a few class files as well as the entire Java FX runtime bundled and it takes seconds.\r\n\r\nIn my case, the project that does NOT suffer this issue is packaged as an EXE installer (not a MSI installer like AdoptOpenJDK).  Not sure if that information helps.  I can't imagine Microsoft would be OK with its OS spending 30 minutes scanning -- for example -- the .NET framework... this seems like something they'd be willing to help fix, assuming there's a proper escalation path.\r\n\r\n![image](https://user-images.githubusercontent.com/6345473/57749723-4759d480-76ad-11e9-8aa3-bec3364131a4.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 492592831.0, 'datetime': '2019-05-15 10:08:36+00:00', 'masked_author': 'username_0', 'text': 'Just to provide info, I was downloading the zipped JDK, not the installer version. Also, I have downloaded JDK from Oracles site and got the same issue. So I am fairly confident this is an issue with Windows Defender and how it handles java .MOD files. \r\n\r\nI would venture a guess that third party AV solutions, like Avira that I used to use, obtain better performance by not scanning java classes recursively. Clearly that would result in a lower security posture. Or, cloud based security features handle it by only scanning the file from the download source the first time the cloud sees that file signature, and upon determining it clean after that point the AV considers it trusted and other users are spared the scan. That would be better than skipping java archives altogether, but still be less secure than 100% scanning. \r\n\r\nI have gotten into the practice if turning Defender off when downloading a java archive from a reputable source.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 492694364.0, 'datetime': '2019-05-15 15:05:40+00:00', 'masked_author': 'username_5', 'text': ""@username_1 says MSFT is a sponsor to the AdoptOpenJDK project, so they're best to help with this.  This may be anecdotal, but Firefox didn't seem to trigger the 30-minute download/scan/delay issue, so that may be a stop-gap for users in addition to modifying the Windows Defender scan settings."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jesuiscamille', 'comment_id': 493658913.0, 'datetime': '2019-05-18 08:23:23+00:00', 'masked_author': 'username_6', 'text': 'I got the same problem with the ""OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi"" file.\r\nWell, I think... The download process hung at the end of the file-fetch. (I didn\'t verify if it was due to some antivirus scan).\r\n\r\nI\'m trying to fetch it with Firefox to see if I get another result (as username_5 stated)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 493690776.0, 'datetime': '2019-05-18 16:48:13+00:00', 'masked_author': 'username_0', 'text': ""Any decent browser is going to toss the file to Windows AV, which will toss\nit to a 3rd party AV if installed -- and the same issue will take place.\nYou will notice the same behavior if you go to oracle's site and download a\nzipped JDK from them, and most likely any java archive. I've searched\ngoogle for issues similar and people report this behavior with many\ndifferent types of zipped files -- like MalwareBtyes application.\n\nThere really is only one what to speed it up, which would be to have it not\ndive into each file and each call to other files recursively... or to trust\nthe file completely and not scan it or scan it lightly to make sure its\ncontents do match up with a signature of a version that has been deemed\nsafe. One would think that the cloud based features in Windows Defender\nwould be doing exactly this, but apparently not. The 3rd party solutions\nprobably are doing a much, much better job at this.\n\nSince they don't provide a way of turning off this recursion, your only\noptions (if you don't want to move to a 3rd party solution) are to exclude\na directory or a process or turn off real-time altogether (temporarily).\nThe problem with exclusions is that if you exclude your downloads directory\nor the browser process, that is really the main point of ingress where\nnasty code will come in from the external world. I am more comfortable\nrecommending to turn off real-time protection when downloading a file that\nis problematic this way which you are comfortable trusting.\n\nOr just wait. I suppose that is an option. It takes about 20 minutes on up\ndepending on the system. MS Defender is not designed to take all compute\nresource available in order to expedite, because if it did the performance\nfootprint would be way to high and no one would use it. It seems to max out\nat about 25% of my CPU on a modern Core-I7 and it never pushes disk IO\nanywhere near 100%.  Hence by design it is throttled and hence these scans\ntake a long time."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 494088678.0, 'datetime': '2019-05-20 17:55:42+00:00', 'masked_author': 'username_5', 'text': ""Just reiterating that Firefox doesn't. :D"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tcarlisle2012', 'comment_id': 494410185.0, 'datetime': '2019-05-21 14:15:38+00:00', 'masked_author': 'username_0', 'text': ""You are correct, Firefox doesn't scan downloads. Just tested with the\nproverbial eicar test file, and firefox will allow you to download it\nwithout any issues. It used to be common for firefox users to experience\ndownload delays and the solution was to disable scanning. I suppose that\nsince firefox is putting speed as its highest priority these days, that\nthey err on the side of speed in this regard."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'brainplot', 'comment_id': 496146086.0, 'datetime': '2019-05-27 09:26:07+00:00', 'masked_author': 'username_7', 'text': ""I'm experiencing the same behavior. It's not taking 30 minutes in my case though. I downloaded `OpenJDK8U-jdk_x64_windows_hotspot_8u212b03.msi` 2 hours ago and Chrome doesn't yet report the download as completed.\r\nI have a desktop machine with an i5-8600k and 16 GB of RAM, which should be plenty of computing power. Not sure if I should just wait or force-quit the process and retry with real-time protection disabled."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 496447502.0, 'datetime': '2019-05-28 09:51:57+00:00', 'masked_author': 'username_1', 'text': ""I'd try through Firefox as a workaround and if that fails then disable protection for that one download."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'brainplot', 'comment_id': 496451662.0, 'datetime': '2019-05-28 10:03:40+00:00', 'masked_author': 'username_7', 'text': ""That's what I ended up doing, eventually. I left it running for 3 and a half hours but it wouldn't finish scanning. However, I would like to point out that once I got the file downloaded, without real-time protection, I manually scanned the file with Windows Defender and it took 2-3 minutes. The scan reported something like 70k files that were scanned. I think the real-time protection process is assigned such a low priority and I/O bandwidth that it cannot scan that many files in a reasonable amount of time."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'frevds', 'comment_id': 500111383.0, 'datetime': '2019-06-08 09:48:40+00:00', 'masked_author': 'username_8', 'text': 'Same here for AdoptOpenJDK8, Intel Xeon 3GHz and 32GB, all newest Windows updates. \r\nWindows Defender keeps scanning indefinitely with 600mb of RAM usage and full use of all cores and disk. \r\nI entered the properties of the downloaded file and unblocked it (to be able to start it even though it came from an internet location). \r\nLooks like this is a bug in Windows Defender rather than the JDK binaries (after all it hangs).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'SirTwsted', 'comment_id': 508913935.0, 'datetime': '2019-07-06 10:06:17+00:00', 'masked_author': 'username_9', 'text': 'I can confirm this on July 6th 2019 6:10-am EDT.\r\nThis does not want to download, it stays stuck at the very very end and hangs there forever.\r\nIt does not want to finish & it somewhat makes it impossible to surf, because it half locks the browser.\r\nAs the browser is waiting for the download task to end,  but it doesnt.\r\nForcing me to Force hard boot the computer, because its the only way to break from it.\r\nI tried ending the task in task manager, but when I do, that then hangs the task manager.\r\nThis is just a pure headache right now.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'htfv', 'comment_id': 509626885.0, 'datetime': '2019-07-09 12:43:59+00:00', 'masked_author': 'username_10', 'text': ""I can confirm the issue, but I also want to add one detail. After Chrome finishes downloading, it hangs there forever. But at the same time, I can go to download folder, extract all files, and start using JDK without any issues.\r\n\r\nI don't know exactly how Chrome+Defender work together, but it seems like Defender has no problem when JDK files are extracted from zip. To confirm that real-time protection is active, I created the EICAR test file - Defender reacted immediately and suggested to remove the file.\r\n\r\nThis makes me think that Defender has problem with the zip file itself, not the files contained in the zip."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'frevds', 'comment_id': 509681815.0, 'datetime': '2019-07-09 15:07:45+00:00', 'masked_author': 'username_8', 'text': ""Yes, it's a bug in Defender and should be brought to @Microsoft's attention. It might be security relevant, if Defender is not reacting on other threats any more (but you @username_10 said it would be watching even if it hangs with a download). At least it's  not benefitial for system stability, as it prevents new downloads and stalls the CPU. So everybody can at least crash the system with such a ZIP file, if not crash Defender."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 509974890.0, 'datetime': '2019-07-10 08:56:53+00:00', 'masked_author': 'username_1', 'text': 'Hi all - This has been passed onto the Windows Defender team - hope to hear back in a few weeks.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 510161685.0, 'datetime': '2019-07-10 17:47:39+00:00', 'masked_author': 'username_5', 'text': 'To identify scope, I decided to run a test on other 64-bit installers.  @username_1 feel free to share this information with Microsoft if you think it will add value.  As a stop-gap, it may be beneficial to do a comparison on the better benchmarking installers (hint it\'s not file size as BellSoft and Amazon are 80MB larger than Adopt\'s) \r\n\r\n#### Environment\r\n\r\nTests were done on a brand new HP Spectre i7 Quad Core (8 logical processors) Laptop running Windows 10 Professional 64-bit from Microsoft (NOT the verison HP ships).\r\n* All tests had similar symptoms: The CPU was ~12% CPU using Task Manager ""Details"" Tab, ~130MB RAM.  (100% / 8 logical processors = 12.5% per logical processor).   Note, the ""Process"" tab shows a \r\n lower value, 8% - 10% CPU.\r\n* The laptop was running from battery üîã, so benchmarks may be influenced slightly by CPU throttling.\r\n* In all tests, I confirmed `MsMpEng.exe` was the top CPU process (no other high-CPU tasks stealing priority).\r\n\r\n#### Results\r\nIn order of severity (as and end-user I would only consider < 5 minutes to be ""acceptable"" results)\r\n\r\n* üêû AdoptOpenJDK JDK 11 MSI (Gave up after 3 hours)\r\n* üêû SapMachine JDK 11 ZIP (Gave up waiting after 35 minutes)\r\n* ‚ö†Ô∏è RedHat JDK 11 MSI (Finished scanning in under **15** minutes)\r\n* ‚ö†Ô∏è Azul Zulu JDK 11 MSI (Finished scanning in under **10** minutes)\r\n* ‚ö†Ô∏è Amazon Correto JDK 11 MSI (Finished scanning in under **10** minutes)\r\n* ‚ö†Ô∏è BellSoft Liberica JDK 11 MSI (Finished scanning in under **10** minutes)\r\n* ‚úÖ Oracle JDK 11 EXE (Finished scanning in under **5** minutes)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 510966219.0, 'datetime': '2019-07-12 17:21:43+00:00', 'masked_author': 'username_1', 'text': ""That's some amazing analysis @username_5 - thank you.  Hmmmm, that tells me that our MSI's are either shaped differently or are signed differently.\r\n\r\n@ali-ince Can you do a compare and contrast for us?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 511711000.0, 'datetime': '2019-07-16 08:03:34+00:00', 'masked_author': 'username_1', 'text': 'Hi all - had word back from the Defender team, who should have improved this already (please get your latest windows updates), with more improvements next month. Please let me know if you see improvement or not when you have time.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 511848658.0, 'datetime': '2019-07-16 14:47:04+00:00', 'masked_author': 'username_5', 'text': 'Any version specificites to share (e.g.)?\r\n* `KB2267602`: **`1.297.1192.0`** (July 16)\r\n* `KB2267602`: **`1.297.1087.0`** (July 14)\r\n* `KB2267602`: **`1.297.956.0`** (July 12)\r\n\r\nI tested with the following URLs:\r\n* https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.3%2B7/OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi<br><br>‚úÖ **Download finishes immediately**<br><br>\r\n* https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk11u-2019-07-16-04-03/OpenJDK11U-jdk_x64_windows_hotspot_2019-07-16-04-03.msi<br><br>üêû**Gave up after 10 minutes**<br><br>\r\n\r\n@username_1 Is it safe to assume they simply whitelisted the official installer this time around?  And is it safe to assume that by ""more improvements next month"", they\'re going to permanently fix the scanning engine to address this bug for all installers moving forward?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 511884638.0, 'datetime': '2019-07-16 16:14:49+00:00', 'masked_author': 'username_1', 'text': ""@username_5 I wonder if in the release stage we sign our binary in a different way, else as you say they've whitelisted our releases.\r\n\r\nI think they're looking at all installers yes."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mjpt777', 'comment_id': 512289076.0, 'datetime': '2019-07-17 14:48:59+00:00', 'masked_author': 'username_11', 'text': ""I've just tried 8u222 and it is having the issue again."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 512295345.0, 'datetime': '2019-07-17 15:03:27+00:00', 'masked_author': 'username_1', 'text': ""Thanks, Martin, I'll ping them again - they may be whitelisting us as we put new releases out."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mjpt777', 'comment_id': 512337978.0, 'datetime': '2019-07-17 15:45:30+00:00', 'masked_author': 'username_11', 'text': 'The latest is running for a few hours now at 30+ MBs to disk and eating a whole CPU. :-(', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 512347846.0, 'datetime': '2019-07-17 16:08:14+00:00', 'masked_author': 'username_12', 'text': 'my understanding as that as long as the binary is signed with the same cert it should already be whitelisted. @username_1 can you check whether they whitelisted our cert or a single binary?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 512349649.0, 'datetime': '2019-07-17 16:13:10+00:00', 'masked_author': 'username_12', 'text': ""@username_11 did you see any defender warnings when you went to open the installer? I'd be keen to know whether you see the warning below or not? Supposedly according to the Microsoft docs you can only remove this if you use an EV codesign cert which we can't as it requires a randomly changing token to unlock it. The docs do say that with a standard codesign cert you will stop seeing that warning once the certificate has been downloaded/trusted on a certain number of systems.\r\n\r\n![](https://filestore.community.support.microsoft.com/api/images/c3ae183d-b756-4432-8c7b-ed12415f7b24?upload=true)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 512355952.0, 'datetime': '2019-07-17 16:29:45+00:00', 'masked_author': 'username_12', 'text': '@username_11 I created a windows 10 VM in azure and had no issue download and running the following installer using edge: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk11u-2019-07-16-04-03/OpenJDK11U-jdk_x64_windows_hotspot_2019-07-16-04-03.msi\r\n\r\nMust have taken seconds from clicking downkload and run to the actual installer opening', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 512360920.0, 'datetime': '2019-07-17 16:43:24+00:00', 'masked_author': 'username_5', 'text': ""@username_12 just for clarification, the message above from @username_11 says 8u222.  It was my post before that which reported 11u2019-07-16-04.  I'll retest both now.\r\n\r\nRegarding EV: Yes, EV certs are a manual process unless you use a dedicated appliance and have someone sign into it periodically.  It may be worth it for official releases.\r\n\r\nNote, Apple's notarization (in addition to the signing requirements required today) and stapling (essentially, timestamping) adds even more complexity (although with the right tools can be automated).  It's off-topic to this thread, but it's going to be required in Catalina.  https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 512364779.0, 'datetime': '2019-07-17 16:54:20+00:00', 'masked_author': 'username_5', 'text': ""Defender has provided the following updates since my last testing:\r\n\r\n* `KB2267602`: **`1.297.1248.0`** (July 17)\r\n* `KB2267602`: **`1.297.1193.0`** (July 16)\r\n\r\n\r\n* ‚ùì@username_11 I was unable to locate 8u222, can you please provide a direct link for testing?\r\n* üêû@username_12 I've updated to the above Windows Defender patches and the comments I've posted in https://github.com/AdoptOpenJDK/openjdk-website/issues/477#issuecomment-511848658 still remain true.  I have not yet waited the full 10 minutes, but your testing results do not match my testing results."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 512372149.0, 'datetime': '2019-07-17 16:58:53+00:00', 'masked_author': 'username_5', 'text': ""Sorry, Defender platform found another update (unsure why this wasn't found the previous iteration).  Running tests again.\r\n   * `KB052623`: **`4.18.1907.4`** (July 17) (Platform Update -- NOT a definition update)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 512378719.0, 'datetime': '2019-07-17 17:01:40+00:00', 'masked_author': 'username_1', 'text': 'Oh, I think I might have an idea - @username_11 was probably using the jdk8u222-b10 upstream build that Red Hat produces but distributes through Adopt.  I suspect that does not have a signing cert.\r\n\r\nThe Adopt 8u222-b10 binary is still coming out of our pipelines.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 512390815.0, 'datetime': '2019-07-17 17:06:47+00:00', 'masked_author': 'username_5', 'text': ""Test results:\r\n* üêûThe latest Windows Defender Platform Update `4.18.1907.4` (NOT a definition update) update does **NOT** address the issue with the [nightly installer](https://github.com/AdoptOpenJDK/openjdk-website/issues/477#issuecomment-512355952).  It's been scanning for 5 minutes now... \r\n\r\n@username_12 I'm not sure how Azure handes Windows defender scans.  Was this platform suitable for reproducing previous issues?  If so, comparing defender definitions and scanning engines may be warranted if you cannot reproduce."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mjpt777', 'comment_id': 512500809.0, 'datetime': '2019-07-17 17:53:06+00:00', 'masked_author': 'username_11', 'text': 'The link I\'m using is: https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u222-b10/OpenJDK8u-jdk_x64_windows_8u222b10.zip\r\n\r\nIt has been running for a few hours now and my laptop is over heating! I did not get the ""Windows Protected up PC"" screen.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mjpt777', 'comment_id': 512501361.0, 'datetime': '2019-07-17 17:54:04+00:00', 'masked_author': 'username_11', 'text': 'BTW a similar issue has been observed with the Zulu JDK.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 512545759.0, 'datetime': '2019-07-17 19:58:26+00:00', 'masked_author': 'username_1', 'text': ""And they sign theirs I'd imagine but we should confirm that.\r\n\r\nwithin 24 hours we should get proper signed adopt binaries out and we can see how they fare (see if they're whitelisted)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 512546938.0, 'datetime': '2019-07-17 20:02:03+00:00', 'masked_author': 'username_12', 'text': 'There is no difference between a release and nightly build in terms of codesigning.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 512549513.0, 'datetime': '2019-07-17 20:10:06+00:00', 'masked_author': 'username_1', 'text': ""Hmm, in that case, I can only imagine whitelisting and/or a difference in the windows defender version on people's machines (although I'd expect most techies to aggressively upgrade that component)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'douph1', 'comment_id': 512726940.0, 'datetime': '2019-07-18 08:52:26+00:00', 'masked_author': 'username_4', 'text': ""Windows 10 + Chrome and definition update : KB2267602: 1.297.1299.0 from today and analysis *still running* after 1 hour for OpenJDK12U-jdk_x86-32_windows_hotspot_12.0.1_12.msi\r\nIt is worse than before .. usually it was between 3min(yesterday) and 20 minutes.\r\n\r\nIt can't be a signer whitlist ... and as people complain about scanning time for zip file ( wich is not signed ) event whitelisting our cert will not be sufficient"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'wormuth', 'comment_id': 512732258.0, 'datetime': '2019-07-18 09:07:38+00:00', 'masked_author': 'username_13', 'text': 'Thought me and my teammates where the only people facing this problem...\r\n\r\nMost downloads of significant size (>100m) via Chrome are blocking for us. No way out, yet but using FF for those kind of download :-/\r\n\r\nSo I would say this issue is definitely not specific to your AdoptOpenJDK archive.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mjpt777', 'comment_id': 513889428.0, 'datetime': '2019-07-22 17:58:36+00:00', 'masked_author': 'username_11', 'text': 'The latest signed build downloads and installs without issue. However when I attempt to delete the installer file (Shift + Del) the problem resurfaces with it taking forever to calculate how long to delete. I have to reboot to make progress.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sazsaz', 'comment_id': 514397208.0, 'datetime': '2019-07-23 21:50:16+00:00', 'masked_author': 'username_14', 'text': 'Having the same issue with Microsoft Edge 44.17763.1.0 / Chrome 75.0.3770.142. The JDK file `https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jdk_x64_windows_openj9_8u222b10_openj9-0.15.1.zip`  hangs while scanning using Windows Defender.\r\n\r\nIncidentally there is no issue when using Firefox.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 514816335.0, 'datetime': '2019-07-24 22:02:19+00:00', 'masked_author': 'username_1', 'text': 'Hi all,\r\n\r\nFYI - Windows defender is due another update in the next 24-48 hours and then a larger fix will occur in August.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stepheneb', 'comment_id': 516154610.0, 'datetime': '2019-07-29 20:43:39+00:00', 'masked_author': 'username_15', 'text': 'Seeing same issue downloading OpenJDK on Microsoft Edge 44.18362.1.0. After downloading scanning continued for over an hour before I terminated the operation.\r\n\r\nDownloaded and saved fine with Firefox and ran with Windows Installer. It took about 10 minutes before I got the dialog that OpenJDK was asking permission to install itself and then another 5m to complete.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'aahlenst', 'comment_id': 523786070.0, 'datetime': '2019-08-22 07:32:02+00:00', 'masked_author': 'username_16', 'text': '@username_1 I just tested freshly generated Windows 10 1903 images. All results with Edge, no third-party AV:\r\n\r\nJDK 8u222b10 MSI\r\nJDK 11.0.4+11 MSI \r\nJDK 11.0.4+11 ZIP\r\nJDK 12.0.2+10_openj9-0.15.1 ZIP\r\n\r\nall complete within 4 to 5 minutes on a machine with 4 CPUs and 16 GB RAM.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 524524860.0, 'datetime': '2019-08-24 06:21:10+00:00', 'masked_author': 'username_1', 'text': 'Thanks for confirming!  Can others check (please make sure your O/S, Windows defender, and browser are at the latest versions.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'badgerwithagun', 'comment_id': 524873402.0, 'datetime': '2019-08-26 15:03:46+00:00', 'masked_author': 'username_17', 'text': ""Crazy-long scan now on two different machines, but it _does_ eventually complete.  I've not encountered an indefinite hang yet (although I did nearly give up on the second one).  Definitely the longest scan I've seen on pretty much anything.\r\n\r\nIt seems that the browser has a single thread dedicated to download management, because it blocks that and stops anything else being downloaded in the meantime, but that's a bug for someone else!\r\n\r\nWindows Version 10.0.18362 Build 18362\r\nMSMpEng 4.18.1907.4-0\r\nBrave Browser Version 0.68.131 Chromium: 76.0.3809.100 (Official Build) (64-bit)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 526605665.0, 'datetime': '2019-08-30 13:40:18+00:00', 'masked_author': 'username_1', 'text': ""I'm now working for Microsoft :-).  I'm going to find the right team and track this down."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 527536109.0, 'datetime': '2019-09-03 16:30:17+00:00', 'masked_author': 'username_1', 'text': ""I've found the correct folks.  The update still needs to be rolled out to 100% of windows users.  I'll check back here in a week"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 552318819.0, 'datetime': '2019-11-11 07:01:28+00:00', 'masked_author': 'username_5', 'text': 'FYI, Defender is coming to Linux, so the problem may cascade to other platforms if the factors which influence this are common between AV engines/archives https://www.zdnet.com/article/microsoft-defender-atp-is-coming-to-linux-in-2020/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 552637768.0, 'datetime': '2019-11-11 22:04:58+00:00', 'masked_author': 'username_1', 'text': '@username_0 Have you had a chance to try again recently?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tresf', 'comment_id': 590985388.0, 'datetime': '2020-02-25 17:44:46+00:00', 'masked_author': 'username_5', 'text': ""I've been working with AdopOpenJDK on Windows right along and I had completely forgotten this bug, suggesting it has been fixed.  Today specifically, I installed 11.0.6, 8.0.242 (both JDK and JRE) and no endless wait times.\r\n\r\nI have a feeling that the bug will rear its ugly head again someday in the future, but the MSIs don't seem to be having issues any more. ü§û"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'aahlenst', 'comment_id': None, 'datetime': '2020-02-26 14:56:02+00:00', 'masked_author': 'username_16', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'aahlenst', 'comment_id': 591467621.0, 'datetime': '2020-02-26 14:56:02+00:00', 'masked_author': 'username_16', 'text': '@username_5 Thanks for confirming.\r\n\r\nIf the problem comes back, please do not hesitate to reopen.', 'title': None, 'type': 'comment'}
 {'action': 'reopened', 'author': 'gdams', 'comment_id': None, 'datetime': '2020-09-02 11:32:11+00:00', 'masked_author': 'username_12', 'text': 'There is something about your binaries downloads that hangs Windows antimalware  service executable. The downloads finish transferring data, but then the browser kicks it over to antimalware service executable to scan, which consumes CPU or GPU indefinitely and never returns. Once this happens, user cannot download files from other sites either because this keeps the antimlaware service executable hung. \r\n\r\nNo other downloads from other sites do this. Verified on multiple PCs and multiple browsers.', 'title': 'AdoptOpenJDK - Download hangs on windows on 4/30/2019 (Edge & Chrome verified, multiple machines)', 'type': 'issue'}
 {'action': 'created', 'author': 'gdams', 'comment_id': 685668823.0, 'datetime': '2020-09-02 11:32:36+00:00', 'masked_author': 'username_12', 'text': 'Issues have been reported with the new codesign cert. Sounds like it needs to be whitelisted by the defender team', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jmichler', 'comment_id': 821295898.0, 'datetime': '2021-04-16 16:31:31+00:00', 'masked_author': 'username_18', 'text': 'Hi,\r\nI think this is still an issue:\r\nC:\\Program Files (x86)\\Horus_269\\jre18282\\bin>java -version\r\nopenjdk version ""1.8.0_282""\r\nOpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_282-b08)\r\nOpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.282-b08, mixed mode)\r\n\r\nC:\\Program Files (x86)\\Horus_269\\jre18282\\bin>C:\\Users\\username_18\\Downloads\\Sigcheck\\sigcheck64.exe -a java.exe\r\n\r\nSigcheck v2.80 - File version and signature viewer\r\nCopyright (C) 2004-2020 Mark Russinovich\r\nSysinternals - www.sysinternals.com\r\n\r\nC:\\Program Files (x86)\\Horus_269\\jre18282\\bin\\java.exe:\r\n        Verified:       Signed\r\n        Signing date:   14:23 20.01.2021\r\n        Publisher:      London Jamocha Community CIC\r\n        Company:        AdoptOpenJDK\r\n        Description:    OpenJDK Platform binary\r\n        Product:        OpenJDK Platform 8\r\n        Prod version:   8.0.2820.8\r\n        File version:   8.0.2820.8\r\n        MachineType:    64-bit\r\n        Binary Version: 8.0.2820.8\r\n        Original Name:  java.exe\r\n        Internal Name:  java\r\n        Copyright:      Copyright ¬Æ 2021\r\n        Comments:       n/a\r\n        Entropy:        6.526\r\n\r\n\r\nI\'m having this for an app based on eclipse RCP; maybe it is only then? See also https://answers.microsoft.com/en-us/windows/forum/windows_10-security/first-start-of-eclipse-rich-client-based/42ada574-acba-49e2-b1ad-0f585b747fa3?tm=1618590387660', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'karianna', 'comment_id': 1039030341.0, 'datetime': '2022-02-14 12:28:45+00:00', 'masked_author': 'username_1', 'text': 'please raise this at gihub.com/adoptium if it is still an issue.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: AdoptOpenJDK - Download hangs on windows on 4/30/2019 (Edge & Chrome verified, multiple machines)
username_0: There is something about your binaries downloads that hangs Windows antimalware  service executable. The downloads finish transferring data, but then the browser kicks it over to antimalware service executable to scan, which consumes CPU or GPU indefinitely and never returns. Once this happens, user cannot download files from other sites either because this keeps the antimlaware service executable hung. 

No other downloads from other sites do this. Verified on multiple PCs and multiple browsers.
<issue_comment>username_1: @username_0 Can you tell us which version of Windows you are using and the exact binary that you were trying to download?
<issue_comment>username_0: Sorry I put this in the wrong section. Both systems are running version 1809. With different build numbers. One is build 17763.348 and the other is 17763.427. 

I was originally trying to download OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi, but then tried the .zip, then tried the 1.8LTS, and all do the same.
<issue_comment>username_2: Andreas Ahlenstorf:   OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi with Edge on a yesterday installed Windows 10 1809 with all patches downloaded without issues. It took the malware scanner some time, but it finished.
[1m]

Andreas Ahlenstorf:   The JDK 8 MSI just finished, too.
<issue_comment>username_1: Have you perhaps got the Windows Defender settings higher than the default?
<issue_comment>username_0: No, Windows defender settings were set to the usual and unmodified. Of course, when I disable real-time protection, it then works, but that defeats the purpose. It doesnt matter if cloud based or auto sample submission options are o or off, it hangs as long as real time protection is enabled, and works when that is disabled. 

Another option, is to install a 3rd party like Avira, and then that product takes the front seat for real time protection. I installed Avira and verified no issue. 

But for people running windows defender as their primary real time protection might report issues with this site. Never had any other sites do something like this. 

Of course, if it scanned and failed that would give us something to work with, but it just hangs. Normally, when a download completes it gives a spinning indication that scanning is happening. That doesn't happen at all in the broken state. It just never even begins, as best I can tell.
<issue_comment>username_3: I've seen long running times for the scan, but it has always (eventually) finished. It may take minutes, but it does finish.
<issue_comment>username_1: I'm unable to replicate a hang on my Windows 10 (via Virtual Box) either - Install was fine and it checked the London Jamocha Community Certificate.

@username_0 Are you able to grab any Windows install / MSI / system logs?
<issue_comment>username_0: Ok, I think I've narrowed it. 

But first, is everyone chiming in using nothing but windows defender? Because if not then it really isn't comparing apples to apples. 

Using my test system, which only has windows defender, i moved the file to another web server and same thing. So we can rule out the web site or code. 

Looking further, if I right click the file (happens to be the zip file of your latest jdk11 x64 w/hotspot build) and choose to scan with Windows Defender, it scans indefinately. However, since I can see its status via the security settings front end, it is counting total files up in the 60,000 range now, and it is going to just keep going. Something about the archive is causing it to loop indefinitely in a scan by Windows Defender. 

Scanning with Avira on another system it finishes and counts the right number of files (604) and folders (131). 

Ok, while writing this, the windows defender scan of the extracted files did finish, counting a total of over 77,000 files. That can't be right, because there are not that many files extracted. Something is sending it into circles. 

Looking further, individually scanning each directory under the extratced jdk1.11.03 directory, they all complete in reasonable amounts of time, except the jmod directory takes about 15 minutes and counts thousands of files, yet there are only 71 files in that directory. 

So the bottom line is windows defender scanning is going in circles scanning the jmods directory. I have a feeling avira skips it altogether. Windows defender is probably providing better security posture, as scanning jmods is probably the right thing to do. 

But it should not scan in circles. Or perhaps it should.... I am not the expert in java > 1.8 and perhaps jmods call other jmods? If so, following that recursion is the right thing to do, but perhaps windows defender should track ones it already scanned. 

In any event, it is looking like a windows defender + jmod scanning issue and not a web site issue.

I did kick off a download of that built zip file (from the system running only windows defender) and am going to let it run until (or if) it finishes -- hours if that is what it takes. I will report the results here when that happens.  

On a side note, it looks like the files end up in the ""downloads"" directory as soon as they are done downloading, and before windows defender finishes its thing. But chrome & edge don't recognize it as complete until windows defender finishes. I mention this becuase people that are being held up with productivity because of this, since you are fairly sure the files are not malicious (you did check sha256 values, right?) you can continue working.
<issue_comment>username_1: I was just using Windows Defender yes.  If it's scanning each class file I could see why it gets into thousands of files.  I'm pinging my contact at MSFT to see if they can help here.
<issue_comment>username_3: If defender is recursively scanning jmod files (which are very much like zip files), then the count should be higher, but I'd expect something closer to double the number of files, not 100 times as many.
<issue_comment>username_3: And if it scans the 'modules' file the count would be much higher (it contains >27,000 resources in a Linux x64 build).
<issue_comment>username_0: Good news, the system still running only windows defender did ultimately finish scanning the file after about 30 minutes. That system is way underpowered for the workload, but is the only one I have left without a third party security suite. But still, one would expect a downloaded msi or zip file to not take more than a few seconds. 

Bottom line, windows defender takes a lot longer because the archive contains jmods, and windows defender doesn't return success and control back to the browser until that is done, versus avira does and continues scanning in the background (and skips the jmods probably by default). 

I just saw the same downloading a build from jdk.java.net, so I am more than comfortable closing this and considering it an issue of ""windows defender takes a very long time to scan JDK's""
<issue_comment>username_1: Great thank you.<issue_closed>
<issue_comment>username_4: I confirm I have already seen same behaviour ( long long scan by windows defender ) for Oracle JDK.
I think Windows Defender is running/executing jvm code ( class ) into sandboxed env to detectect malicious activity
<issue_comment>username_1: There is something about your binaries downloads that hangs Windows antimalware  service executable. The downloads finish transferring data, but then the browser kicks it over to antimalware service executable to scan, which consumes CPU or GPU indefinitely and never returns. Once this happens, user cannot download files from other sites either because this keeps the antimlaware service executable hung. 

No other downloads from other sites do this. Verified on multiple PCs and multiple browsers.
<issue_comment>username_1: Going to reopen this and get MSFT folks to comment
<issue_comment>username_5: Just ran into this bug... Interestingly enough, I have a project about 1/3 the size with quite a few class files as well as the entire Java FX runtime bundled and it takes seconds.

In my case, the project that does NOT suffer this issue is packaged as an EXE installer (not a MSI installer like AdoptOpenJDK).  Not sure if that information helps.  I can't imagine Microsoft would be OK with its OS spending 30 minutes scanning -- for example -- the .NET framework... this seems like something they'd be willing to help fix, assuming there's a proper escalation path.

![image](https://user-images.githubusercontent.com/6345473/57749723-4759d480-76ad-11e9-8aa3-bec3364131a4.png)
<issue_comment>username_0: Just to provide info, I was downloading the zipped JDK, not the installer version. Also, I have downloaded JDK from Oracles site and got the same issue. So I am fairly confident this is an issue with Windows Defender and how it handles java .MOD files. 

I would venture a guess that third party AV solutions, like Avira that I used to use, obtain better performance by not scanning java classes recursively. Clearly that would result in a lower security posture. Or, cloud based security features handle it by only scanning the file from the download source the first time the cloud sees that file signature, and upon determining it clean after that point the AV considers it trusted and other users are spared the scan. That would be better than skipping java archives altogether, but still be less secure than 100% scanning. 

I have gotten into the practice if turning Defender off when downloading a java archive from a reputable source.
<issue_comment>username_5: @username_1 says MSFT is a sponsor to the AdoptOpenJDK project, so they're best to help with this.  This may be anecdotal, but Firefox didn't seem to trigger the 30-minute download/scan/delay issue, so that may be a stop-gap for users in addition to modifying the Windows Defender scan settings.
<issue_comment>username_6: I got the same problem with the ""OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi"" file.
Well, I think... The download process hung at the end of the file-fetch. (I didn't verify if it was due to some antivirus scan).

I'm trying to fetch it with Firefox to see if I get another result (as username_5 stated)
<issue_comment>username_0: Any decent browser is going to toss the file to Windows AV, which will toss
it to a 3rd party AV if installed -- and the same issue will take place.
You will notice the same behavior if you go to oracle's site and download a
zipped JDK from them, and most likely any java archive. I've searched
google for issues similar and people report this behavior with many
different types of zipped files -- like MalwareBtyes application.

There really is only one what to speed it up, which would be to have it not
dive into each file and each call to other files recursively... or to trust
the file completely and not scan it or scan it lightly to make sure its
contents do match up with a signature of a version that has been deemed
safe. One would think that the cloud based features in Windows Defender
would be doing exactly this, but apparently not. The 3rd party solutions
probably are doing a much, much better job at this.

Since they don't provide a way of turning off this recursion, your only
options (if you don't want to move to a 3rd party solution) are to exclude
a directory or a process or turn off real-time altogether (temporarily).
The problem with exclusions is that if you exclude your downloads directory
or the browser process, that is really the main point of ingress where
nasty code will come in from the external world. I am more comfortable
recommending to turn off real-time protection when downloading a file that
is problematic this way which you are comfortable trusting.

Or just wait. I suppose that is an option. It takes about 20 minutes on up
depending on the system. MS Defender is not designed to take all compute
resource available in order to expedite, because if it did the performance
footprint would be way to high and no one would use it. It seems to max out
at about 25% of my CPU on a modern Core-I7 and it never pushes disk IO
anywhere near 100%.  Hence by design it is throttled and hence these scans
take a long time.
<issue_comment>username_5: Just reiterating that Firefox doesn't. :D
<issue_comment>username_0: You are correct, Firefox doesn't scan downloads. Just tested with the
proverbial eicar test file, and firefox will allow you to download it
without any issues. It used to be common for firefox users to experience
download delays and the solution was to disable scanning. I suppose that
since firefox is putting speed as its highest priority these days, that
they err on the side of speed in this regard.
<issue_comment>username_7: I'm experiencing the same behavior. It's not taking 30 minutes in my case though. I downloaded `OpenJDK8U-jdk_x64_windows_hotspot_8u212b03.msi` 2 hours ago and Chrome doesn't yet report the download as completed.
I have a desktop machine with an i5-8600k and 16 GB of RAM, which should be plenty of computing power. Not sure if I should just wait or force-quit the process and retry with real-time protection disabled.
<issue_comment>username_1: I'd try through Firefox as a workaround and if that fails then disable protection for that one download.
<issue_comment>username_7: That's what I ended up doing, eventually. I left it running for 3 and a half hours but it wouldn't finish scanning. However, I would like to point out that once I got the file downloaded, without real-time protection, I manually scanned the file with Windows Defender and it took 2-3 minutes. The scan reported something like 70k files that were scanned. I think the real-time protection process is assigned such a low priority and I/O bandwidth that it cannot scan that many files in a reasonable amount of time.
<issue_comment>username_8: Same here for AdoptOpenJDK8, Intel Xeon 3GHz and 32GB, all newest Windows updates. 
Windows Defender keeps scanning indefinitely with 600mb of RAM usage and full use of all cores and disk. 
I entered the properties of the downloaded file and unblocked it (to be able to start it even though it came from an internet location). 
Looks like this is a bug in Windows Defender rather than the JDK binaries (after all it hangs).
<issue_comment>username_9: I can confirm this on July 6th 2019 6:10-am EDT.
This does not want to download, it stays stuck at the very very end and hangs there forever.
It does not want to finish & it somewhat makes it impossible to surf, because it half locks the browser.
As the browser is waiting for the download task to end,  but it doesnt.
Forcing me to Force hard boot the computer, because its the only way to break from it.
I tried ending the task in task manager, but when I do, that then hangs the task manager.
This is just a pure headache right now.
<issue_comment>username_10: I can confirm the issue, but I also want to add one detail. After Chrome finishes downloading, it hangs there forever. But at the same time, I can go to download folder, extract all files, and start using JDK without any issues.

I don't know exactly how Chrome+Defender work together, but it seems like Defender has no problem when JDK files are extracted from zip. To confirm that real-time protection is active, I created the EICAR test file - Defender reacted immediately and suggested to remove the file.

This makes me think that Defender has problem with the zip file itself, not the files contained in the zip.
<issue_comment>username_8: Yes, it's a bug in Defender and should be brought to @Microsoft's attention. It might be security relevant, if Defender is not reacting on other threats any more (but you @username_10 said it would be watching even if it hangs with a download). At least it's  not benefitial for system stability, as it prevents new downloads and stalls the CPU. So everybody can at least crash the system with such a ZIP file, if not crash Defender.
<issue_comment>username_1: Hi all - This has been passed onto the Windows Defender team - hope to hear back in a few weeks.
<issue_comment>username_5: To identify scope, I decided to run a test on other 64-bit installers.  @username_1 feel free to share this information with Microsoft if you think it will add value.  As a stop-gap, it may be beneficial to do a comparison on the better benchmarking installers (hint it's not file size as BellSoft and Amazon are 80MB larger than Adopt's) 

#### Environment

Tests were done on a brand new HP Spectre i7 Quad Core (8 logical processors) Laptop running Windows 10 Professional 64-bit from Microsoft (NOT the verison HP ships).
* All tests had similar symptoms: The CPU was ~12% CPU using Task Manager ""Details"" Tab, ~130MB RAM.  (100% / 8 logical processors = 12.5% per logical processor).   Note, the ""Process"" tab shows a 
 lower value, 8% - 10% CPU.
* The laptop was running from battery üîã, so benchmarks may be influenced slightly by CPU throttling.
* In all tests, I confirmed `MsMpEng.exe` was the top CPU process (no other high-CPU tasks stealing priority).

#### Results
In order of severity (as and end-user I would only consider < 5 minutes to be ""acceptable"" results)

* üêû AdoptOpenJDK JDK 11 MSI (Gave up after 3 hours)
* üêû SapMachine JDK 11 ZIP (Gave up waiting after 35 minutes)
* ‚ö†Ô∏è RedHat JDK 11 MSI (Finished scanning in under **15** minutes)
* ‚ö†Ô∏è Azul Zulu JDK 11 MSI (Finished scanning in under **10** minutes)
* ‚ö†Ô∏è Amazon Correto JDK 11 MSI (Finished scanning in under **10** minutes)
* ‚ö†Ô∏è BellSoft Liberica JDK 11 MSI (Finished scanning in under **10** minutes)
* ‚úÖ Oracle JDK 11 EXE (Finished scanning in under **5** minutes)
<issue_comment>username_1: That's some amazing analysis @username_5 - thank you.  Hmmmm, that tells me that our MSI's are either shaped differently or are signed differently.

@ali-ince Can you do a compare and contrast for us?
<issue_comment>username_1: Hi all - had word back from the Defender team, who should have improved this already (please get your latest windows updates), with more improvements next month. Please let me know if you see improvement or not when you have time.
<issue_comment>username_5: Any version specificites to share (e.g.)?
* `KB2267602`: **`1.297.1192.0`** (July 16)
* `KB2267602`: **`1.297.1087.0`** (July 14)
* `KB2267602`: **`1.297.956.0`** (July 12)

I tested with the following URLs:
* https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.3%2B7/OpenJDK11U-jdk_x64_windows_hotspot_11.0.3_7.msi<br><br>‚úÖ **Download finishes immediately**<br><br>
* https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk11u-2019-07-16-04-03/OpenJDK11U-jdk_x64_windows_hotspot_2019-07-16-04-03.msi<br><br>üêû**Gave up after 10 minutes**<br><br>

@username_1 Is it safe to assume they simply whitelisted the official installer this time around?  And is it safe to assume that by ""more improvements next month"", they're going to permanently fix the scanning engine to address this bug for all installers moving forward?
<issue_comment>username_1: @username_5 I wonder if in the release stage we sign our binary in a different way, else as you say they've whitelisted our releases.

I think they're looking at all installers yes.
<issue_comment>username_11: I've just tried 8u222 and it is having the issue again.
<issue_comment>username_1: Thanks, Martin, I'll ping them again - they may be whitelisting us as we put new releases out.
<issue_comment>username_11: The latest is running for a few hours now at 30+ MBs to disk and eating a whole CPU. :-(
<issue_comment>username_12: my understanding as that as long as the binary is signed with the same cert it should already be whitelisted. @username_1 can you check whether they whitelisted our cert or a single binary?
<issue_comment>username_12: @username_11 did you see any defender warnings when you went to open the installer? I'd be keen to know whether you see the warning below or not? Supposedly according to the Microsoft docs you can only remove this if you use an EV codesign cert which we can't as it requires a randomly changing token to unlock it. The docs do say that with a standard codesign cert you will stop seeing that warning once the certificate has been downloaded/trusted on a certain number of systems.

![](https://filestore.community.support.microsoft.com/api/images/c3ae183d-b756-4432-8c7b-ed12415f7b24?upload=true)
<issue_comment>username_12: @username_11 I created a windows 10 VM in azure and had no issue download and running the following installer using edge: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk11u-2019-07-16-04-03/OpenJDK11U-jdk_x64_windows_hotspot_2019-07-16-04-03.msi

Must have taken seconds from clicking downkload and run to the actual installer opening
<issue_comment>username_5: @username_12 just for clarification, the message above from @username_11 says 8u222.  It was my post before that which reported 11u2019-07-16-04.  I'll retest both now.

Regarding EV: Yes, EV certs are a manual process unless you use a dedicated appliance and have someone sign into it periodically.  It may be worth it for official releases.

Note, Apple's notarization (in addition to the signing requirements required today) and stapling (essentially, timestamping) adds even more complexity (although with the right tools can be automated).  It's off-topic to this thread, but it's going to be required in Catalina.  https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution.
<issue_comment>username_5: Defender has provided the following updates since my last testing:

* `KB2267602`: **`1.297.1248.0`** (July 17)
* `KB2267602`: **`1.297.1193.0`** (July 16)


* ‚ùì@username_11 I was unable to locate 8u222, can you please provide a direct link for testing?
* üêû@username_12 I've updated to the above Windows Defender patches and the comments I've posted in https://github.com/AdoptOpenJDK/openjdk-website/issues/477#issuecomment-511848658 still remain true.  I have not yet waited the full 10 minutes, but your testing results do not match my testing results.
<issue_comment>username_5: Sorry, Defender platform found another update (unsure why this wasn't found the previous iteration).  Running tests again.
   * `KB052623`: **`4.18.1907.4`** (July 17) (Platform Update -- NOT a definition update)
<issue_comment>username_1: Oh, I think I might have an idea - @username_11 was probably using the jdk8u222-b10 upstream build that Red Hat produces but distributes through Adopt.  I suspect that does not have a signing cert.

The Adopt 8u222-b10 binary is still coming out of our pipelines.
<issue_comment>username_5: Test results:
* üêûThe latest Windows Defender Platform Update `4.18.1907.4` (NOT a definition update) update does **NOT** address the issue with the [nightly installer](https://github.com/AdoptOpenJDK/openjdk-website/issues/477#issuecomment-512355952).  It's been scanning for 5 minutes now... 

@username_12 I'm not sure how Azure handes Windows defender scans.  Was this platform suitable for reproducing previous issues?  If so, comparing defender definitions and scanning engines may be warranted if you cannot reproduce.
<issue_comment>username_11: The link I'm using is: https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u222-b10/OpenJDK8u-jdk_x64_windows_8u222b10.zip

It has been running for a few hours now and my laptop is over heating! I did not get the ""Windows Protected up PC"" screen.
<issue_comment>username_11: BTW a similar issue has been observed with the Zulu JDK.
<issue_comment>username_1: And they sign theirs I'd imagine but we should confirm that.

within 24 hours we should get proper signed adopt binaries out and we can see how they fare (see if they're whitelisted)
<issue_comment>username_12: There is no difference between a release and nightly build in terms of codesigning.
<issue_comment>username_1: Hmm, in that case, I can only imagine whitelisting and/or a difference in the windows defender version on people's machines (although I'd expect most techies to aggressively upgrade that component).
<issue_comment>username_4: Windows 10 + Chrome and definition update : KB2267602: 1.297.1299.0 from today and analysis *still running* after 1 hour for OpenJDK12U-jdk_x86-32_windows_hotspot_12.0.1_12.msi
It is worse than before .. usually it was between 3min(yesterday) and 20 minutes.

It can't be a signer whitlist ... and as people complain about scanning time for zip file ( wich is not signed ) event whitelisting our cert will not be sufficient
<issue_comment>username_13: Thought me and my teammates where the only people facing this problem...

Most downloads of significant size (>100m) via Chrome are blocking for us. No way out, yet but using FF for those kind of download :-/

So I would say this issue is definitely not specific to your AdoptOpenJDK archive.
<issue_comment>username_11: The latest signed build downloads and installs without issue. However when I attempt to delete the installer file (Shift + Del) the problem resurfaces with it taking forever to calculate how long to delete. I have to reboot to make progress.
<issue_comment>username_14: Having the same issue with Microsoft Edge 44.17763.1.0 / Chrome 75.0.3770.142. The JDK file `https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jdk_x64_windows_openj9_8u222b10_openj9-0.15.1.zip`  hangs while scanning using Windows Defender.

Incidentally there is no issue when using Firefox.
<issue_comment>username_1: Hi all,

FYI - Windows defender is due another update in the next 24-48 hours and then a larger fix will occur in August.
<issue_comment>username_15: Seeing same issue downloading OpenJDK on Microsoft Edge 44.18362.1.0. After downloading scanning continued for over an hour before I terminated the operation.

Downloaded and saved fine with Firefox and ran with Windows Installer. It took about 10 minutes before I got the dialog that OpenJDK was asking permission to install itself and then another 5m to complete.
<issue_comment>username_16: @username_1 I just tested freshly generated Windows 10 1903 images. All results with Edge, no third-party AV:

JDK 8u222b10 MSI
JDK 11.0.4+11 MSI 
JDK 11.0.4+11 ZIP
JDK 12.0.2+10_openj9-0.15.1 ZIP

all complete within 4 to 5 minutes on a machine with 4 CPUs and 16 GB RAM.
<issue_comment>username_1: Thanks for confirming!  Can others check (please make sure your O/S, Windows defender, and browser are at the latest versions.
<issue_comment>username_17: Crazy-long scan now on two different machines, but it _does_ eventually complete.  I've not encountered an indefinite hang yet (although I did nearly give up on the second one).  Definitely the longest scan I've seen on pretty much anything.

It seems that the browser has a single thread dedicated to download management, because it blocks that and stops anything else being downloaded in the meantime, but that's a bug for someone else!

Windows Version 10.0.18362 Build 18362
MSMpEng 4.18.1907.4-0
Brave Browser Version 0.68.131 Chromium: 76.0.3809.100 (Official Build) (64-bit)
<issue_comment>username_1: I'm now working for Microsoft :-).  I'm going to find the right team and track this down.
<issue_comment>username_1: I've found the correct folks.  The update still needs to be rolled out to 100% of windows users.  I'll check back here in a week
<issue_comment>username_5: FYI, Defender is coming to Linux, so the problem may cascade to other platforms if the factors which influence this are common between AV engines/archives https://www.zdnet.com/article/microsoft-defender-atp-is-coming-to-linux-in-2020/
<issue_comment>username_1: @username_0 Have you had a chance to try again recently?
<issue_comment>username_5: I've been working with AdopOpenJDK on Windows right along and I had completely forgotten this bug, suggesting it has been fixed.  Today specifically, I installed 11.0.6, 8.0.242 (both JDK and JRE) and no endless wait times.

I have a feeling that the bug will rear its ugly head again someday in the future, but the MSIs don't seem to be having issues any more. ü§û<issue_closed>
<issue_comment>username_16: @username_5 Thanks for confirming.

If the problem comes back, please do not hesitate to reopen.
<issue_comment>username_12: There is something about your binaries downloads that hangs Windows antimalware  service executable. The downloads finish transferring data, but then the browser kicks it over to antimalware service executable to scan, which consumes CPU or GPU indefinitely and never returns. Once this happens, user cannot download files from other sites either because this keeps the antimlaware service executable hung. 

No other downloads from other sites do this. Verified on multiple PCs and multiple browsers.
<issue_comment>username_12: Issues have been reported with the new codesign cert. Sounds like it needs to be whitelisted by the defender team
<issue_comment>username_18: Hi,
I think this is still an issue:
C:\Program Files (x86)\Horus_269\jre18282\bin>java -version
openjdk version ""1.8.0_282""
OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_282-b08)
OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.282-b08, mixed mode)

C:\Program Files (x86)\Horus_269\jre18282\bin>C:\Users\username_18\Downloads\Sigcheck\sigcheck64.exe -a java.exe

Sigcheck v2.80 - File version and signature viewer
Copyright (C) 2004-2020 Mark Russinovich
Sysinternals - www.sysinternals.com

C:\Program Files (x86)\Horus_269\jre18282\bin\java.exe:
        Verified:       Signed
        Signing date:   14:23 20.01.2021
        Publisher:      London Jamocha Community CIC
        Company:        AdoptOpenJDK
        Description:    OpenJDK Platform binary
        Product:        OpenJDK Platform 8
        Prod version:   8.0.2820.8
        File version:   8.0.2820.8
        MachineType:    64-bit
        Binary Version: 8.0.2820.8
        Original Name:  java.exe
        Internal Name:  java
        Copyright:      Copyright ¬Æ 2021
        Comments:       n/a
        Entropy:        6.526


I'm having this for an app based on eclipse RCP; maybe it is only then? See also https://answers.microsoft.com/en-us/windows/forum/windows_10-security/first-start-of-eclipse-rich-client-based/42ada574-acba-49e2-b1ad-0f585b747fa3?tm=1618590387660
<issue_comment>username_1: please raise this at gihub.com/adoptium if it is still an issue."
datacommonsorg/website,943844529,1036,,"[{'action': 'opened', 'author': 'beets', 'comment_id': None, 'datetime': '2021-07-13 21:32:25+00:00', 'masked_author': 'username_0', 'text': 'when clicking on a link like this:\r\nhttps://autopush.datacommons.org/tools/timeline#place=geoId%2F06%2CgeoId%2F26&statsVar=Annual_Consumption_Coal_ElectricPower&chart=%7B%22consumption%22%3Afalse%2C%22cost%22%3Afalse%2C%22heatContent%22%3Afalse%7D\r\n\r\nthe current behavior is to stay collapsed, like this:\r\n![image](https://user-images.githubusercontent.com/6052978/125527842-8cf3b77f-fdbe-4453-bf2c-ea469e792433.png)\r\n\r\nshould we expand so it starts like this:\r\n![image](https://user-images.githubusercontent.com/6052978/125528026-ee53bd3d-e53a-43b6-bc54-d84a419c1551.png)\r\n\r\n\r\nthoughts?', 'title': '[tree widget] expand the tree for preselected vars when on page load', 'type': 'issue'}
 {'action': 'created', 'author': 'chejennifer', 'comment_id': 879442874.0, 'datetime': '2021-07-13 22:17:54+00:00', 'masked_author': 'username_1', 'text': ""I think it depends on if it's more likely for user to want to be in expanded form or not. \r\n\r\nI can see use cases for both. \r\n- if user wants to explore stat vars similar to the ones already selected, having the page open with menu expanded form will make it a lot easier for users to get to the sections of the selected stat vars. \r\n- If user just wants to look at what other stat vars are available in the menu, it might be easier for them if the menu isn't already expanded."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beets', 'comment_id': 879454595.0, 'datetime': '2021-07-13 22:45:48+00:00', 'masked_author': 'username_0', 'text': 'i think most often, the user will want to explore neighboring / related vars. it\'ll also help to ""teach"" about the tree widget, and it\'s existing behavior in the pv tree. the difference is now the tree is much richer so it could be a little overwhelming, but i think the context is still useful', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beets', 'comment_id': 880878691.0, 'datetime': '2021-07-15 17:22:55+00:00', 'masked_author': 'username_0', 'text': ""i think that will be rare in actual usage though -- most often, the stat vars will be related. at least it'll still show the context (part of the thinking here is our sv names do not always include the context, so this will help with that too).\r\n\r\nto help, perhaps we can expand only if all the children are under a single sv vertical?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shifucun', 'comment_id': 963486656.0, 'datetime': '2021-11-08 19:10:50+00:00', 'masked_author': 'username_2', 'text': 'We should at least expand for map tool.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [tree widget] expand the tree for preselected vars when on page load
username_0: when clicking on a link like this:
https://autopush.datacommons.org/tools/timeline#place=geoId%2F06%2CgeoId%2F26&statsVar=Annual_Consumption_Coal_ElectricPower&chart=%7B%22consumption%22%3Afalse%2C%22cost%22%3Afalse%2C%22heatContent%22%3Afalse%7D

the current behavior is to stay collapsed, like this:
![image](https://user-images.githubusercontent.com/6052978/125527842-8cf3b77f-fdbe-4453-bf2c-ea469e792433.png)

should we expand so it starts like this:
![image](https://user-images.githubusercontent.com/6052978/125528026-ee53bd3d-e53a-43b6-bc54-d84a419c1551.png)


thoughts?
<issue_comment>username_1: I think it depends on if it's more likely for user to want to be in expanded form or not. 

I can see use cases for both. 
- if user wants to explore stat vars similar to the ones already selected, having the page open with menu expanded form will make it a lot easier for users to get to the sections of the selected stat vars. 
- If user just wants to look at what other stat vars are available in the menu, it might be easier for them if the menu isn't already expanded.
<issue_comment>username_0: i think most often, the user will want to explore neighboring / related vars. it'll also help to ""teach"" about the tree widget, and it's existing behavior in the pv tree. the difference is now the tree is much richer so it could be a little overwhelming, but i think the context is still useful
<issue_comment>username_0: i think that will be rare in actual usage though -- most often, the stat vars will be related. at least it'll still show the context (part of the thinking here is our sv names do not always include the context, so this will help with that too).

to help, perhaps we can expand only if all the children are under a single sv vertical?
<issue_comment>username_2: We should at least expand for map tool."
kubernetes/website,610668602,20708,,"[{'action': 'opened', 'author': 'prakashid2', 'comment_id': None, 'datetime': '2020-05-01 09:44:31+00:00', 'masked_author': 'username_0', 'text': ""**This is a Bug Report**\r\n\r\n**Problem:**\r\nPowershell is throwing error in output. First command 'Install-Script' succeeded but did not show any lines in console output.\r\n\r\n-- Error in output --\r\nPS D:\\kubernetesInstalled> install-kubectl.ps1 -DownloadLocation D:\\kubernetesInstalled\r\ninstall-kubectl.ps1: The term 'install-kubectl.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nPS D:\\kubernetesInstalled>\r\n-- --\r\n\r\n**Proposed Solution:**\r\nI want someone to look into this issue rather than installing using Chocolatey package manager which is more difficult. Not sure why 'install-kubectl.ps1' command is throwing error.\r\n\r\n**Page to Update:**\r\nhttps://kubernetes.io/...\r\n\r\n![ErrorIn install-kubectl](https://user-images.githubusercontent.com/35317036/80796980-3a840880-8bbe-11ea-9223-a3e17f413a17.jpg)\r\n![Installing install-kubectl ps1](https://user-images.githubusercontent.com/35317036/80796981-3c4dcc00-8bbe-11ea-8635-fa4b29c4ba94.jpg)\r\n\r\nKubernetes version 1.18.0\r\n<!--Additional Information:-->"", 'title': 'Issue with k8s.io/docs/tasks/tools/install-kubectl/', 'type': 'issue'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 623012571.0, 'datetime': '2020-05-02 20:59:59+00:00', 'masked_author': 'username_1', 'text': '/sig windows', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'prakashid2', 'comment_id': 625076607.0, 'datetime': '2020-05-07 07:18:27+00:00', 'masked_author': 'username_0', 'text': ""Tim,\r\nI understand that you have added a label sig/windows. But I don't know the further plan, how this is going to resolve the issue. Please tell me what do I do to overcome this issue.\r\n\r\nThanks\r\nPrakash S."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 625111865.0, 'datetime': '2020-05-07 08:32:42+00:00', 'masked_author': 'username_1', 'text': 'Hi @username_0 \r\n\r\nIt sounds like there is a shortcoming in the documentation. What I hope that happens next is that a Kubernetes contributor will review this issue and triage it (confirm that there is indeed a shortcoming).\r\n\r\nThe label I added helps volunteers who use Windows / contribute to the Windows special interest group, so they can find this issue as one particularly relevant to Kubernetes on Windows.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 625112312.0, 'datetime': '2020-05-07 08:33:33+00:00', 'masked_author': 'username_1', 'text': 'You can also ask for help on the [Kubernetes Slack](http://slack.k8s.io/), the [Discuss Kubernetes](https://discuss.kubernetes.io/) forum, or using [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'prakashid2', 'comment_id': 626279020.0, 'datetime': '2020-05-10 06:06:22+00:00', 'masked_author': 'username_0', 'text': ""Tim.\r\n\r\nI've not installed Power Shell from PSGallery. Instead using Power Shell 7(x64) installed from Microsoft's website. I'm trying 'Install-Script' and 'install-kuebctl' commands inside the Power Shell 7(x64). Would this be a problem?\r\n\r\nOr do I have to install power shell from PSGallery? and try same commands. If yes, pls let me know what is the exact link to download power shell from PSGallery. Asking this because I don't know which file to take or what exact version of power shell is required for above commands to work fine. Please reply.\r\n\r\nThanks\r\nPrakash S."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 626568916.0, 'datetime': '2020-05-11 08:57:13+00:00', 'masked_author': 'username_1', 'text': ""Hi @username_0 \r\n\r\nWriting personally, _I_ don't plan to do any further work on this issue. I do hope that a different volunteer will offer their time to help."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tengqm', 'comment_id': 643715696.0, 'datetime': '2020-06-14 04:09:34+00:00', 'masked_author': 'username_2', 'text': 'closing as a dup of #20709 \r\n/close', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Issue with k8s.io/docs/tasks/tools/install-kubectl/
username_0: **This is a Bug Report**

**Problem:**
Powershell is throwing error in output. First command 'Install-Script' succeeded but did not show any lines in console output.

-- Error in output --
PS D:\kubernetesInstalled> install-kubectl.ps1 -DownloadLocation D:\kubernetesInstalled
install-kubectl.ps1: The term 'install-kubectl.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
PS D:\kubernetesInstalled>
-- --

**Proposed Solution:**
I want someone to look into this issue rather than installing using Chocolatey package manager which is more difficult. Not sure why 'install-kubectl.ps1' command is throwing error.

**Page to Update:**
https://kubernetes.io/...

![ErrorIn install-kubectl](https://user-images.githubusercontent.com/35317036/80796980-3a840880-8bbe-11ea-9223-a3e17f413a17.jpg)
![Installing install-kubectl ps1](https://user-images.githubusercontent.com/35317036/80796981-3c4dcc00-8bbe-11ea-8635-fa4b29c4ba94.jpg)

Kubernetes version 1.18.0
<!--Additional Information:-->
<issue_comment>username_1: /sig windows
<issue_comment>username_0: Tim,
I understand that you have added a label sig/windows. But I don't know the further plan, how this is going to resolve the issue. Please tell me what do I do to overcome this issue.

Thanks
Prakash S.
<issue_comment>username_1: Hi @username_0 

It sounds like there is a shortcoming in the documentation. What I hope that happens next is that a Kubernetes contributor will review this issue and triage it (confirm that there is indeed a shortcoming).

The label I added helps volunteers who use Windows / contribute to the Windows special interest group, so they can find this issue as one particularly relevant to Kubernetes on Windows.
<issue_comment>username_1: You can also ask for help on the [Kubernetes Slack](http://slack.k8s.io/), the [Discuss Kubernetes](https://discuss.kubernetes.io/) forum, or using [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes).
<issue_comment>username_0: Tim.

I've not installed Power Shell from PSGallery. Instead using Power Shell 7(x64) installed from Microsoft's website. I'm trying 'Install-Script' and 'install-kuebctl' commands inside the Power Shell 7(x64). Would this be a problem?

Or do I have to install power shell from PSGallery? and try same commands. If yes, pls let me know what is the exact link to download power shell from PSGallery. Asking this because I don't know which file to take or what exact version of power shell is required for above commands to work fine. Please reply.

Thanks
Prakash S.
<issue_comment>username_1: Hi @username_0 

Writing personally, _I_ don't plan to do any further work on this issue. I do hope that a different volunteer will offer their time to help.
<issue_comment>username_2: closing as a dup of #20709 
/close"
