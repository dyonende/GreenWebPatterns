11ty/11ty-website,559735431,286,"{'number': 286.0, 'repo': '11ty-website', 'user_login': '11ty'}","[{'action': 'opened', 'author': 'bertrandkeller', 'comment_id': None, 'datetime': '2020-02-04T13:55:20Z', 'masked_author': 'username_0', 'text': 'Example of websites made with Eleventy. This a migration from Jekyll to Eleventy with a try of keeping compatibility between each other (LiquidJS). The code is not open because the architecture is not stable and not usable.\r\nLowtus is a non profit action for helping people to see websites energy impact.', 'title': 'Add lowtus.fr to ""Sites Built using Eleventy""', 'type': 'issue'}
 {'action': 'created', 'author': 'Ryuno-Ki', 'comment_id': 581991036.0, 'datetime': '2020-02-04 16:22:03+00:00', 'masked_author': 'username_1', 'text': 'Out of curiousity: How do you do that? (Fine for me to discuss that off-topic. You can find my mail on my website linked in the profile).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zachleat', 'comment_id': 585266983.0, 'datetime': '2020-02-12 15:41:51+00:00', 'masked_author': 'username_2', 'text': 'Thanks!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add lowtus.fr to ""Sites Built using Eleventy""
username_0: Example of websites made with Eleventy. This a migration from Jekyll to Eleventy with a try of keeping compatibility between each other (LiquidJS). The code is not open because the architecture is not stable and not usable.
Lowtus is a non profit action for helping people to see websites energy impact.
<issue_comment>username_1: Out of curiousity: How do you do that? (Fine for me to discuss that off-topic. You can find my mail on my website linked in the profile).
<issue_comment>username_2: Thanks!"
oVirt/ovirt-site,162697372,340,,"[{'action': 'opened', 'author': 'jekader', 'comment_id': None, 'datetime': '2016-06-28 14:18:20+00:00', 'masked_author': 'username_0', 'text': 'Currently, lots of places in the QuickStart guide have outdated versions of CentOS/Fedora as well as old oVirt releases present:\r\nhttps://github.com/oVirt/ovirt-site/blob/master/source/documentation/quickstart/quickstart-guide.html.md\r\n\r\nThis should be updated. I can help with this, but first we need to agree on the supported list of platforms and oVirt versions since that changed a lot in 4.0. Should there be mentions of older OS and oVirt versions? IMHO the QuickStart should focus on the latest release only and add as little confusion as possible.', 'title': 'update QuickStart guide for 4.0', 'type': 'issue'}
 {'action': 'created', 'author': 'sandrobonazzola', 'comment_id': 353614984.0, 'datetime': '2017-12-22 15:04:15+00:00', 'masked_author': 'username_1', 'text': 'Updated. @username_0 can you please review again and open new issue if something else needs to be updated there?', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'sandrobonazzola', 'comment_id': None, 'datetime': '2017-12-22 15:04:16+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'jekader', 'comment_id': 353624597.0, 'datetime': '2017-12-22 15:55:06+00:00', 'masked_author': 'username_0', 'text': ""Sandro, thank you for updating the doc! I see several more things to improve but will try to submit a pull request myself to save you the extra effort.\r\n\r\nnote to myself:\r\n* release RPM download commands are corrupted across the site since the URL is enclosed in <> for some reason\r\n* Configure oVirt section contains screenshots of old Admin Portal and instructions to browse the tree pane which no longer exists\r\n* List of power management devices is corrupted\r\n* Create Virtual Machines section is missing the High Performance VM type\r\n* there is no mention of Glance images in the guide while it's much easier than getting an ISO domain set up\r\n* we might want to add a section covering non-admin user creation"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sandrobonazzola', 'comment_id': 353930321.0, 'datetime': '2017-12-26 07:16:07+00:00', 'masked_author': 'username_1', 'text': 'Thanks @username_0 feel free to add me as reviewer to your PRs.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: update QuickStart guide for 4.0
username_0: Currently, lots of places in the QuickStart guide have outdated versions of CentOS/Fedora as well as old oVirt releases present:
https://github.com/oVirt/ovirt-site/blob/master/source/documentation/quickstart/quickstart-guide.html.md

This should be updated. I can help with this, but first we need to agree on the supported list of platforms and oVirt versions since that changed a lot in 4.0. Should there be mentions of older OS and oVirt versions? IMHO the QuickStart should focus on the latest release only and add as little confusion as possible.
<issue_comment>username_1: Updated. @username_0 can you please review again and open new issue if something else needs to be updated there?<issue_closed>
<issue_comment>username_0: Sandro, thank you for updating the doc! I see several more things to improve but will try to submit a pull request myself to save you the extra effort.

note to myself:
* release RPM download commands are corrupted across the site since the URL is enclosed in <> for some reason
* Configure oVirt section contains screenshots of old Admin Portal and instructions to browse the tree pane which no longer exists
* List of power management devices is corrupted
* Create Virtual Machines section is missing the High Performance VM type
* there is no mention of Glance images in the guide while it's much easier than getting an ISO domain set up
* we might want to add a section covering non-admin user creation
<issue_comment>username_1: Thanks @username_0 feel free to add me as reviewer to your PRs."
appveyor/website,657600053,736,,"[{'action': 'opened', 'author': 'jacobq', 'comment_id': None, 'datetime': '2020-07-15 19:34:31+00:00', 'masked_author': 'username_0', 'text': 'However, there is no mention of corresponding `$isMacOS` or `CI_MACOS` variables. Furthermore, it sounds like `$isWindows` may not work on Windows (see https://github.com/appveyor/ci/issues/3214#issuecomment-658958475).', 'title': 'Update docs regarding OS environment variables to include MacOS', 'type': 'issue'}
 {'action': 'created', 'author': 'jacobq', 'comment_id': 658974093.0, 'datetime': '2020-07-15 19:52:25+00:00', 'masked_author': 'username_0', 'text': 'FWIW, on the `macos` image I see the following:\r\n\r\n```\r\nworker-628-001:my-project appveyor$ pwsh  -c Get-Variable\r\n\r\nName                           Value\r\n----                           -----\r\n...\r\nIsCoreCLR                      True\r\nIsLinux                        False\r\nIsMacOS                        True\r\nIsWindows                      False\r\n...\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jacobq', 'comment_id': 658998201.0, 'datetime': '2020-07-15 20:41:00+00:00', 'masked_author': 'username_0', 'text': 'It would be nice if the docs also clarified which variables are added by AppVeyor vs. being present already, e.g. https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-7#islinux', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Update docs regarding OS environment variables to include MacOS
username_0: However, there is no mention of corresponding `$isMacOS` or `CI_MACOS` variables. Furthermore, it sounds like `$isWindows` may not work on Windows (see https://github.com/appveyor/ci/issues/3214#issuecomment-658958475).
<issue_comment>username_0: FWIW, on the `macos` image I see the following:

```
worker-628-001:my-project appveyor$ pwsh  -c Get-Variable

Name                           Value
----                           -----
...
IsCoreCLR                      True
IsLinux                        False
IsMacOS                        True
IsWindows                      False
...
```
<issue_comment>username_0: It would be nice if the docs also clarified which variables are added by AppVeyor vs. being present already, e.g. https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-7#islinux"
kubernetes/website,684175682,23356,,"[{'action': 'opened', 'author': 'cyberprodigy', 'comment_id': None, 'datetime': '2020-08-23T12:36:10Z', 'masked_author': 'username_0', 'text': '**This is a Bug Report**\r\n\r\n<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->\r\n<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->\r\n\r\n<!--Required Information-->\r\n**Problem:**\r\nGetting these errors while following the procedure step by step\r\nüòÑ  minikube v1.12.3 on Ubuntu 20.04\r\n‚ú®  Using the docker driver based on existing profile\r\nüëç  Starting control plane node minikube in cluster minikube\r\nüèÉ  Updating the running docker ""minikube"" container ...\r\n‚ùó  This container is having trouble accessing https://k8s.gcr.io\r\nüí°  To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/\r\nüê≥  Preparing Kubernetes v1.18.3 on Docker 19.03.8 ...\r\nü§¶  Unable to restart cluster, will reset it: getting k8s client: client config: client config: context ""minikube"" does not exist\r\nüí•  initialization failed, will try again: run: /bin/bash -c ""sudo env PATH=/var/lib/minikube/binaries/v1.18.3:$PATH kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"": Process exited with status 1\r\nstdout:\r\n[init] Using Kubernetes version: v1.18.3\r\n[preflight] Running pre-flight checks\r\n[preflight] The system verification failed. Printing the output from the verification:\r\nKERNEL_VERSION: 5.4.0-42-generic\r\nDOCKER_VERSION: 19.03.8\r\nDOCKER_GRAPH_DRIVER: overlay2\r\nOS: Linux\r\nCGROUPS_CPU: enabled\r\nCGROUPS_CPUACCT: enabled\r\nCGROUPS_CPUSET: enabled\r\nCGROUPS_DEVICES: enabled\r\nCGROUPS_FREEZER: enabled\r\nCGROUPS_MEMORY: enabled\r\n[preflight] Pulling images required for setting up a Kubernetes cluster\r\n[preflight] This might take a minute or two, depending on the speed of your internet connection\r\n[preflight] You can also perform this action in beforehand using \'kubeadm config images pull\'\r\n[kubelet-start] Writing kubelet environment file with flags to file ""/var/lib/kubelet/kubeadm-flags.env""\r\n[kubelet-start] Writing kubelet configuration to file ""/var/lib/kubelet/config.yaml""\r\n[kubelet-start] Starting the kubelet\r\n[certs] Using certificateDir folder ""/var/lib/minikube/certs""\r\n[certs] Using existing ca certificate authority\r\n[certs] Using existing apiserver certificate and key on disk\r\n[certs] Using existing apiserver-kubelet-client certificate and key on disk\r\n[certs] Using existing front-proxy-ca certificate authority\r\n[certs] Using existing front-proxy-client certificate and key on disk\r\n[certs] Using existing etcd/ca certificate authority\r\n[certs] Using existing etcd/server certificate and key on disk\r\n[certs] Using existing etcd/peer certificate and key on disk\r\n[certs] Using existing etcd/healthcheck-client certificate and key on disk\r\n[certs] Using existing apiserver-etcd-client certificate and key on disk\r\n[certs] Using the existing ""sa"" key\r\n[kubeconfig] Using kubeconfig folder ""/etc/kubernetes""\r\n[kubeconfig] Writing ""admin.conf"" kubeconfig file\r\n[kubeconfig] Writing ""kubelet.conf"" kubeconfig file\r\n[kubeconfig] Writing ""controller-manager.conf"" kubeconfig file\r\n[kubeconfig] Writing ""scheduler.conf"" kubeconfig file\r\n[control-plane] Using manifest folder ""/etc/kubernetes/manifests""\r\n[control-plane] Creating static Pod manifest for ""kube-apiserver""\r\n[control-plane] Creating static Pod manifest for ""kube-controller-manager""\r\n[control-plane] Creating static Pod manifest for ""kube-scheduler""\r\n[etcd] Creating static Pod manifest for local etcd in ""/etc/kubernetes/manifests""\r\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory ""/etc/kubernetes/manifests"". This can take up to 4m0s\r\n[kubelet-check] Initial timeout of 40s passed.\r\n\r\n\tUnfortunately, an error has occurred:\r\n\t\ttimed out waiting for the condition\r\n\r\n\tThis error is likely caused by:\r\n\t\t- The kubelet is not running\r\n\t\t- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)\r\n\r\n\tIf you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:\r\n\t\t- \'systemctl status kubelet\'\r\n\t\t- \'journalctl -xeu kubelet\'\r\n\r\n\tAdditionally, a control plane component may have crashed or exited when started by the container runtime.\r\n\tTo troubleshoot, list all containers using your preferred container runtimes CLI.\r\n\r\n\tHere is one example how you may list all Kubernetes containers running in docker:\r\n\t\t- \'docker ps -a | grep kube | grep -v pause\'\r\n\t\tOnce you have found the failing container, you can inspect its logs with:\r\n\t\t- \'docker logs CONTAINERID\'\r\n[Truncated]\n\t[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: ""configs"", output: ""modprobe: FATAL: Module configs not found in directory /lib/modules/5.4.0-42-generic\\n"", err: exit status 1\r\n\t[WARNING Service-Kubelet]: kubelet service is not enabled, please run \'systemctl enable kubelet.service\'\r\nW0823 12:31:27.828286   59352 manifests.go:225] the default kube-apiserver authorization-mode is ""Node,RBAC""; using ""Node,RBAC""\r\nW0823 12:31:27.829339   59352 manifests.go:225] the default kube-apiserver authorization-mode is ""Node,RBAC""; using ""Node,RBAC""\r\nerror execution phase wait-control-plane: couldn\'t initialize a Kubernetes cluster\r\nTo see the stack trace of this error execute with --v=5 or higher\r\n\r\n\r\n\r\n**Proposed Solution:**\r\nN/A\r\n\r\n**Page to Update:**\r\nhttps://kubernetes.io/docs/tasks/tools/install-minikube/\r\n\r\n<!--Optional Information (remove the comment tags around information you would like to include)-->\r\n<!--Kubernetes Version:-->\r\n\r\n<!--Additional Information:-->\r\nUbuntu 20.04', 'title': 'Issue with k8s.io/docs/tasks/tools/install-minikube/', 'type': 'issue'}
 {'action': 'created', 'author': 'RA489', 'comment_id': 702003381.0, 'datetime': '2020-10-01 09:15:23+00:00', 'masked_author': 'username_1', 'text': '/kind support', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 707357691.0, 'datetime': '2020-10-12 21:37:03+00:00', 'masked_author': 'username_2', 'text': ""@username_0 I'm afraid that GitHub is not the right place to request support.\r\n\r\n/close"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Issue with k8s.io/docs/tasks/tools/install-minikube/
username_0: **This is a Bug Report**

<!-- Thanks for filing an issue! Before submitting, please fill in the following information. -->
<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->

<!--Required Information-->
**Problem:**
Getting these errors while following the procedure step by step
üòÑ  minikube v1.12.3 on Ubuntu 20.04
‚ú®  Using the docker driver based on existing profile
üëç  Starting control plane node minikube in cluster minikube
üèÉ  Updating the running docker ""minikube"" container ...
‚ùó  This container is having trouble accessing https://k8s.gcr.io
üí°  To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
üê≥  Preparing Kubernetes v1.18.3 on Docker 19.03.8 ...
ü§¶  Unable to restart cluster, will reset it: getting k8s client: client config: client config: context ""minikube"" does not exist
üí•  initialization failed, will try again: run: /bin/bash -c ""sudo env PATH=/var/lib/minikube/binaries/v1.18.3:$PATH kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.18.3
[preflight] Running pre-flight checks
[preflight] The system verification failed. Printing the output from the verification:
KERNEL_VERSION: 5.4.0-42-generic
DOCKER_VERSION: 19.03.8
DOCKER_GRAPH_DRIVER: overlay2
OS: Linux
CGROUPS_CPU: enabled
CGROUPS_CPUACCT: enabled
CGROUPS_CPUSET: enabled
CGROUPS_DEVICES: enabled
CGROUPS_FREEZER: enabled
CGROUPS_MEMORY: enabled
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[kubelet-start] Writing kubelet environment file with flags to file ""/var/lib/kubelet/kubeadm-flags.env""
[kubelet-start] Writing kubelet configuration to file ""/var/lib/kubelet/config.yaml""
[kubelet-start] Starting the kubelet
[certs] Using certificateDir folder ""/var/lib/minikube/certs""
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk
[certs] Using existing apiserver-kubelet-client certificate and key on disk
[certs] Using existing front-proxy-ca certificate authority
[certs] Using existing front-proxy-client certificate and key on disk
[certs] Using existing etcd/ca certificate authority
[certs] Using existing etcd/server certificate and key on disk
[certs] Using existing etcd/peer certificate and key on disk
[certs] Using existing etcd/healthcheck-client certificate and key on disk
[certs] Using existing apiserver-etcd-client certificate and key on disk
[certs] Using the existing ""sa"" key
[kubeconfig] Using kubeconfig folder ""/etc/kubernetes""
[kubeconfig] Writing ""admin.conf"" kubeconfig file
[kubeconfig] Writing ""kubelet.conf"" kubeconfig file
[kubeconfig] Writing ""controller-manager.conf"" kubeconfig file
[kubeconfig] Writing ""scheduler.conf"" kubeconfig file
[control-plane] Using manifest folder ""/etc/kubernetes/manifests""
[control-plane] Creating static Pod manifest for ""kube-apiserver""
[control-plane] Creating static Pod manifest for ""kube-controller-manager""
[control-plane] Creating static Pod manifest for ""kube-scheduler""
[etcd] Creating static Pod manifest for local etcd in ""/etc/kubernetes/manifests""
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory ""/etc/kubernetes/manifests"". This can take up to 4m0s
[kubelet-check] Initial timeout of 40s passed.

	Unfortunately, an error has occurred:
		timed out waiting for the condition

	This error is likely caused by:
		- The kubelet is not running
		- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)

	If you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:
		- 'systemctl status kubelet'
		- 'journalctl -xeu kubelet'

	Additionally, a control plane component may have crashed or exited when started by the container runtime.
	To troubleshoot, list all containers using your preferred container runtimes CLI.

	Here is one example how you may list all Kubernetes containers running in docker:
		- 'docker ps -a | grep kube | grep -v pause'
		Once you have found the failing container, you can inspect its logs with:
		- 'docker logs CONTAINERID'
[Truncated]
	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: ""configs"", output: ""modprobe: FATAL: Module configs not found in directory /lib/modules/5.4.0-42-generic\n"", err: exit status 1
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
W0823 12:31:27.828286   59352 manifests.go:225] the default kube-apiserver authorization-mode is ""Node,RBAC""; using ""Node,RBAC""
W0823 12:31:27.829339   59352 manifests.go:225] the default kube-apiserver authorization-mode is ""Node,RBAC""; using ""Node,RBAC""
error execution phase wait-control-plane: couldn't initialize a Kubernetes cluster
To see the stack trace of this error execute with --v=5 or higher



**Proposed Solution:**
N/A

**Page to Update:**
https://kubernetes.io/docs/tasks/tools/install-minikube/

<!--Optional Information (remove the comment tags around information you would like to include)-->
<!--Kubernetes Version:-->

<!--Additional Information:-->
Ubuntu 20.04
<issue_comment>username_1: /kind support
<issue_comment>username_2: @username_0 I'm afraid that GitHub is not the right place to request support.

/close"
facebook/docusaurus,557830418,2258,,"[{'action': 'opened', 'author': 'jartuso', 'comment_id': None, 'datetime': '2020-01-31 00:02:45+00:00', 'masked_author': 'username_0', 'text': '## üêõ Bug Report\r\n\r\nWhen trying to publish changes to our github pages hosted site, the npm run publish-gh-pages step fails with the following error code (full output from powershell attached)\r\n\r\ngenerate.js triggered...\r\nfeed.js triggered...\r\nfeed.js triggered...\r\nsitemap.js triggered...\r\nSite built successfully. Generated files in \'build\' folder.\r\n7ce717117293691c87678f7b3cc7fbe015e946de\r\nfatal: Too many arguments.\r\nError: git clone failed\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! @ publish-gh-pages: `docusaurus-publish`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the @ publish-gh-pages script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\artus\\AppData\\Roaming\\npm-cache\\_logs\\2020-01-30T23_49_07_563Z-debug.log\r\n\r\n### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?\r\n\r\nYes\r\n\r\n## To Reproduce\r\n\r\nnode (12.14.1)\r\nnpm (6.13.4)\r\nyarn (\r\n\r\n1. clone documentation repo locally\r\n2. make edits in visual studio code\r\n3. run command: cmd /C ""set GIT_USER=[myuser] && set CURRENT_BRANCH=master && npm run publish-gh-pages""\r\n4. fails :(\r\n\r\nNote -- also fails in the same way when using yarn run publish-gh-pages\r\n\r\n\r\n## Expected behavior\r\n\r\nMy 1st time trying to push changes to our docusaurus site. I expected it to work without any errors. \r\n\r\n## Actual Behavior\r\n\r\nnpm run publish-gh-pages failed\r\n\r\n## Reproducible Demo\r\n\r\nRepo that I\'m trying to push changes for\r\nhttps://github.com/OpenBCI/Documentation/tree/master\r\n\r\n[docusaurus-errortxt.txt](https://github.com/facebook/docusaurus/files/4136846/docusaurus-errortxt.txt)', 'title': 'Publish-gh-pages script fails -- error: git clone failed', 'type': 'issue'}
 {'action': 'created', 'author': 'LogicEveryWhere', 'comment_id': 581781394.0, 'datetime': '2020-02-04 07:41:24+00:00', 'masked_author': 'username_1', 'text': 'same issue with identical environment', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LogicEveryWhere', 'comment_id': 582129752.0, 'datetime': '2020-02-04 21:43:47+00:00', 'masked_author': 'username_1', 'text': 'Temporary solution!!\r\nfile ```website/node_modules/docusaurus/lib/publish-gh-pages.js```\r\nline 20: ```const GIT_USER = process.env.GIT_USER.trim();```\r\n\r\njust trim git user', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'prma85', 'comment_id': 583508341.0, 'datetime': '2020-02-07 17:17:22+00:00', 'masked_author': 'username_2', 'text': 'This is what I have been using in azure and works just fine\r\n```\r\ngit config --global user.email ""$(GH_USER)@users.noreply.github.com""\r\ngit config --global user.name ""$(GH_USER)""\r\nGIT_USER=$(GH_USER) npm run publish-gh-pages\r\n```\r\n\r\nRunning it directly from my machine (windows 10) also worked without errors.\r\n\r\nI hope it helps :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'OndrejNepozitek', 'comment_id': 584605279.0, 'datetime': '2020-02-11 12:09:17+00:00', 'masked_author': 'username_3', 'text': 'The problem is caused by a whiteline that is appended to the GIT_USER env variable on windows 10 when you run the `cmd /C ""set GIT_USER=<GITHUB_USERNAME> && yarn deploy""` command. It can be fixed by running `cmd /C ""set GIT_USER=<GITHUB_USERNAME>&& yarn deploy""`  instead (note the missing space between <GITHUB_USERNAME> and &&).\r\n\r\nIt\'s quite unfortunate that the command is included in the official docs so probably a lot of windows users will encounter this problem.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yangshun', 'comment_id': 584607084.0, 'datetime': '2020-02-11 12:14:29+00:00', 'masked_author': 'username_4', 'text': 'Could you help to submit a PR for Windows? That would be much appreciated!', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'yangshun', 'comment_id': None, 'datetime': '2020-02-21 01:46:14+00:00', 'masked_author': 'username_4', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'Turkyden', 'comment_id': 695755869.0, 'datetime': '2020-09-20 07:33:44+00:00', 'masked_author': 'username_5', 'text': 'Nice, it work ! Thank you sir.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'AlFalahTaieb', 'comment_id': 734894055.0, 'datetime': '2020-11-27 15:50:57+00:00', 'masked_author': 'username_6', 'text': ""I'm having this problem and i'm not even on Windows"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Publish-gh-pages script fails -- error: git clone failed
username_0: ## üêõ Bug Report

When trying to publish changes to our github pages hosted site, the npm run publish-gh-pages step fails with the following error code (full output from powershell attached)

generate.js triggered...
feed.js triggered...
feed.js triggered...
sitemap.js triggered...
Site built successfully. Generated files in 'build' folder.
7ce717117293691c87678f7b3cc7fbe015e946de
fatal: Too many arguments.
Error: git clone failed
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! @ publish-gh-pages: `docusaurus-publish`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the @ publish-gh-pages script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\artus\AppData\Roaming\npm-cache\_logs\2020-01-30T23_49_07_563Z-debug.log

### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes

## To Reproduce

node (12.14.1)
npm (6.13.4)
yarn (

1. clone documentation repo locally
2. make edits in visual studio code
3. run command: cmd /C ""set GIT_USER=[myuser] && set CURRENT_BRANCH=master && npm run publish-gh-pages""
4. fails :(

Note -- also fails in the same way when using yarn run publish-gh-pages


## Expected behavior

My 1st time trying to push changes to our docusaurus site. I expected it to work without any errors. 

## Actual Behavior

npm run publish-gh-pages failed

## Reproducible Demo

Repo that I'm trying to push changes for
https://github.com/OpenBCI/Documentation/tree/master

[docusaurus-errortxt.txt](https://github.com/facebook/docusaurus/files/4136846/docusaurus-errortxt.txt)
<issue_comment>username_1: same issue with identical environment
<issue_comment>username_1: Temporary solution!!
file ```website/node_modules/docusaurus/lib/publish-gh-pages.js```
line 20: ```const GIT_USER = process.env.GIT_USER.trim();```

just trim git user
<issue_comment>username_2: This is what I have been using in azure and works just fine
```
git config --global user.email ""$(GH_USER)@users.noreply.github.com""
git config --global user.name ""$(GH_USER)""
GIT_USER=$(GH_USER) npm run publish-gh-pages
```

Running it directly from my machine (windows 10) also worked without errors.

I hope it helps :)
<issue_comment>username_3: The problem is caused by a whiteline that is appended to the GIT_USER env variable on windows 10 when you run the `cmd /C ""set GIT_USER=<GITHUB_USERNAME> && yarn deploy""` command. It can be fixed by running `cmd /C ""set GIT_USER=<GITHUB_USERNAME>&& yarn deploy""`  instead (note the missing space between <GITHUB_USERNAME> and &&).

It's quite unfortunate that the command is included in the official docs so probably a lot of windows users will encounter this problem.
<issue_comment>username_4: Could you help to submit a PR for Windows? That would be much appreciated!<issue_closed>
<issue_comment>username_5: Nice, it work ! Thank you sir.
<issue_comment>username_6: I'm having this problem and i'm not even on Windows"
