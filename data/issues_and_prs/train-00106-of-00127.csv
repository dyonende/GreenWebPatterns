facebook/react-native-website,1157568981,2988,"{'number': 2988.0, 'repo': 'react-native-website', 'user_login': 'facebook'}","[{'action': 'opened', 'author': 'dmitryvinn', 'comment_id': None, 'datetime': '2022-03-02T18:53:10Z', 'masked_author': 'username_0', 'text': 'Summary\r\nFollowing a suggestion in https://github.com/facebook/react-native-website/pull/2986, moving to use an announcement bar:\r\n![Screen Shot 2022-03-02 at 10 43 30 AM](https://user-images.githubusercontent.com/12485205/156428804-b803ca16-8dc3-4abd-a3b0-7744ab5e9e97.png)', 'title': 'docs: Moving to use Announcement Banner for the Support Ukraine Initiative', 'type': 'issue'}
 {'action': 'created', 'author': 'dmitryvinn', 'comment_id': 1057291515.0, 'datetime': '2022-03-02 19:19:10+00:00', 'masked_author': 'username_0', 'text': ""Not sure why the deploy failed - it builds just fine on my local and the error message here doesn't seem related"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pushpender-singh-ap', 'comment_id': 1057299003.0, 'datetime': '2022-03-02 19:28:45+00:00', 'masked_author': 'username_1', 'text': '12:23:28 AM: API communication error. Canceling build. (Showing in Netlify Logs)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yungsters', 'comment_id': 1057611343.0, 'datetime': '2022-03-03 02:46:49+00:00', 'masked_author': 'username_2', 'text': '@Simek, any ideas?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'leggomuhgreggo', 'comment_id': 1057622540.0, 'datetime': '2022-03-03 03:11:45+00:00', 'masked_author': 'username_3', 'text': ""Very cool that the community is aiming to promote humanitarian aid!\r\n\r\nWhere should I direct suggestions that we should also add an option to support the people of Donbass?\r\n\r\nYa know -- just so it's clear that the community isn't supporting the puppet gov't installed after the US-directed coup in 2014?\r\n\r\nIf it's a question of need, I'd like to point out that 14k people have been killed as a result of the NATO/Ukranian onslaught against Donbass (which incidentally has been led in large part by IRL hitler-loving nazis)\r\n\r\nNothing but love to the people of Ukraine, but hope there's enough sense to realize there's nuance to the humanitarian dimensions here. \r\n\r\nNote: I made a similar [inquiry here](https://github.com/facebook/react-native-website/pull/2986) [[link from comment](https://twitter.com/consent_factory/status/1498257865693405185)] which was somewhat ungraciously responded to\r\n![Screenshot 2022-03-02 6 55 48 PM](https://user-images.githubusercontent.com/2213636/156488533-3aef302c-8ac4-4273-bad2-25d9a9a010a7.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dmitryvinn', 'comment_id': 1057636525.0, 'datetime': '2022-03-03 03:46:08+00:00', 'masked_author': 'username_0', 'text': 'Thank you, everyone, for your help in this initiative to support humanitarian causes in Ukraine. As we stated earlier, our mission at [Meta Open Source](https://opensource.facebook.com/) is to empower communities through open source. We believe that it means building a welcoming and safe environment for all. Adding this banner with a link to non-profits in Ukraine is another step towards that goal.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: docs: Moving to use Announcement Banner for the Support Ukraine Initiative
username_0: Summary
Following a suggestion in https://github.com/facebook/react-native-website/pull/2986, moving to use an announcement bar:
![Screen Shot 2022-03-02 at 10 43 30 AM](https://user-images.githubusercontent.com/12485205/156428804-b803ca16-8dc3-4abd-a3b0-7744ab5e9e97.png)
<issue_comment>username_0: Not sure why the deploy failed - it builds just fine on my local and the error message here doesn't seem related
<issue_comment>username_1: 12:23:28 AM: API communication error. Canceling build. (Showing in Netlify Logs)
<issue_comment>username_2: @Simek, any ideas?
<issue_comment>username_3: Very cool that the community is aiming to promote humanitarian aid!

Where should I direct suggestions that we should also add an option to support the people of Donbass?

Ya know -- just so it's clear that the community isn't supporting the puppet gov't installed after the US-directed coup in 2014?

If it's a question of need, I'd like to point out that 14k people have been killed as a result of the NATO/Ukranian onslaught against Donbass (which incidentally has been led in large part by IRL hitler-loving nazis)

Nothing but love to the people of Ukraine, but hope there's enough sense to realize there's nuance to the humanitarian dimensions here. 

Note: I made a similar [inquiry here](https://github.com/facebook/react-native-website/pull/2986) [[link from comment](https://twitter.com/consent_factory/status/1498257865693405185)] which was somewhat ungraciously responded to
![Screenshot 2022-03-02 6 55 48 PM](https://user-images.githubusercontent.com/2213636/156488533-3aef302c-8ac4-4273-bad2-25d9a9a010a7.png)
<issue_comment>username_0: Thank you, everyone, for your help in this initiative to support humanitarian causes in Ukraine. As we stated earlier, our mission at [Meta Open Source](https://opensource.facebook.com/) is to empower communities through open source. We believe that it means building a welcoming and safe environment for all. Adding this banner with a link to non-profits in Ukraine is another step towards that goal."
kubernetes/website,387961483,11552,"{'number': 11552.0, 'repo': 'website', 'user_login': 'kubernetes'}","[{'action': 'opened', 'author': 'lucperkins', 'comment_id': None, 'datetime': '2018-12-05T21:51:06Z', 'masked_author': 'username_0', 'text': 'Hugo version 0.52 adds support for HTML minification via the `--minify` flag. This PR updates the ""current"" Hugo version to 0.52.\r\n\r\nThis change will _not_ impact users running the site locally with an earlier version of Hugo. This will *only* affect the production build of the site. For users who *do* upgrade to 0.52 to run the site locally, the [in-browser error](https://gohugo.io/news/0.50-relnotes/) feature is disabled to ensure a smooth transition. We can discuss enabling that (very nice but potentially disruptive) functionality in the future.', 'title': 'Upgrade Hugo to 0.52', 'type': 'issue'}
 {'action': 'created', 'author': 'lucperkins', 'comment_id': 444663897.0, 'datetime': '2018-12-05 21:51:19+00:00', 'masked_author': 'username_0', 'text': '/assign @username_2', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zacharysarah', 'comment_id': 444694074.0, 'datetime': '2018-12-05 23:42:32+00:00', 'masked_author': 'username_1', 'text': '@username_0 Apart from netlify building successfully ([which it did](https://deploy-preview-11552--kubernetes-io-master-staging.netlify.com)) and travis passing ([which it did](https://travis-ci.org/kubernetes/website/builds/464065717?utm_source=github_status&utm_medium=notification)), is there a way we should be testing these changes prior to merge?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lucperkins', 'comment_id': 444695047.0, 'datetime': '2018-12-05 23:47:30+00:00', 'masked_author': 'username_0', 'text': ""@username_1 I ran the site locally via both a standard Hugo binary and the Docker image and it worked just fine, as far as I can tell. I think that's about as much of a testing battery as we can throw at it. Perhaps it'd be useful to codify this somewhere?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zacharysarah', 'comment_id': 444696338.0, 'datetime': '2018-12-05 23:53:44+00:00', 'masked_author': 'username_1', 'text': ""@username_0 I didn't test with a docker image, but I also ran locally with success. What are you thinking we should codify outside the issue itself?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zacharysarah', 'comment_id': 444704334.0, 'datetime': '2018-12-06 00:35:00+00:00', 'masked_author': 'username_1', 'text': ""@GuessWhoSamFoo Good point--I could foresee potential issues arising if [Dockerfile](https://github.com/kubernetes/website/blob/462b8ed2a25e83b30692af00b632288720c0b083/Dockerfile#L19) passed in `HUGO_VERSION` from a Makefile that doesn't match with `.travis.yml` and/or `netlify.toml`."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chenopis', 'comment_id': 445016699.0, 'datetime': '2018-12-06 20:22:52+00:00', 'masked_author': 'username_2', 'text': 'This approach makes sense to me.\r\n/LGTM', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Upgrade Hugo to 0.52
username_0: Hugo version 0.52 adds support for HTML minification via the `--minify` flag. This PR updates the ""current"" Hugo version to 0.52.

This change will _not_ impact users running the site locally with an earlier version of Hugo. This will *only* affect the production build of the site. For users who *do* upgrade to 0.52 to run the site locally, the [in-browser error](https://gohugo.io/news/0.50-relnotes/) feature is disabled to ensure a smooth transition. We can discuss enabling that (very nice but potentially disruptive) functionality in the future.
<issue_comment>username_0: /assign @username_2
<issue_comment>username_1: @username_0 Apart from netlify building successfully ([which it did](https://deploy-preview-11552--kubernetes-io-master-staging.netlify.com)) and travis passing ([which it did](https://travis-ci.org/kubernetes/website/builds/464065717?utm_source=github_status&utm_medium=notification)), is there a way we should be testing these changes prior to merge?
<issue_comment>username_0: @username_1 I ran the site locally via both a standard Hugo binary and the Docker image and it worked just fine, as far as I can tell. I think that's about as much of a testing battery as we can throw at it. Perhaps it'd be useful to codify this somewhere?
<issue_comment>username_1: @username_0 I didn't test with a docker image, but I also ran locally with success. What are you thinking we should codify outside the issue itself?
<issue_comment>username_1: @GuessWhoSamFoo Good point--I could foresee potential issues arising if [Dockerfile](https://github.com/kubernetes/website/blob/462b8ed2a25e83b30692af00b632288720c0b083/Dockerfile#L19) passed in `HUGO_VERSION` from a Makefile that doesn't match with `.travis.yml` and/or `netlify.toml`.
<issue_comment>username_2: This approach makes sense to me.
/LGTM"
facebook/docusaurus,523055150,1995,,"[{'action': 'opened', 'author': 'lex111', 'comment_id': None, 'datetime': '2019-11-14 19:22:04+00:00', 'masked_author': 'username_0', 'text': '## 🐛 Bug Report\r\n\r\nWhen loading a page with dark mode turned on, a light theme is visible for a while before the previously selected dark theme is applied.\r\n\r\n### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?\r\n\r\nYes\r\n\r\n## To Reproduce\r\n\r\n1. Select dark theme in navbar\r\n1. Reload this Page\r\n\r\n## Expected behavior\r\n\r\nA dark theme should be shown right away\r\n\r\n## Actual Behavior\r\n\r\nFor a second or so, a ""regular"" light theme is showed, and only then a dark theme:\r\n\r\n![AwesomeScreenshot-2019-11-14-1573758888334](https://user-images.githubusercontent.com/4408379/68888998-0eb6b880-072d-11ea-9e7d-e7ca64c25cd6.gif)', 'title': 'White flash between page loads', 'type': 'issue'}
 {'action': 'created', 'author': 'yangshun', 'comment_id': 554042258.0, 'datetime': '2019-11-14 19:29:08+00:00', 'masked_author': 'username_1', 'text': ""Yeah we're aware of this issue. It's because the theme is only applied after page load, that's why we see the flash. It's a little annoying but possible to fix - gatsbyjs.org doesn't have this issue."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 554043803.0, 'datetime': '2019-11-14 19:32:54+00:00', 'masked_author': 'username_0', 'text': 'A good example where there is no such issue - https://overreacted.io/ (yeah, powered by Gatbsy).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'endiliey', 'comment_id': 554189630.0, 'datetime': '2019-11-15 03:02:34+00:00', 'masked_author': 'username_2', 'text': 'Try reading this https://github.com/donavon/use-dark-mode/blob/develop/README.md#that-flash\n\nTo fix this, we need a setbody hooks to inject script into html body. So that it wont wait till React load to actually enter dark mode', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'endiliey', 'comment_id': None, 'datetime': '2019-12-01 13:01:36+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: White flash between page loads
username_0: ## 🐛 Bug Report

When loading a page with dark mode turned on, a light theme is visible for a while before the previously selected dark theme is applied.

### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes

## To Reproduce

1. Select dark theme in navbar
1. Reload this Page

## Expected behavior

A dark theme should be shown right away

## Actual Behavior

For a second or so, a ""regular"" light theme is showed, and only then a dark theme:

![AwesomeScreenshot-2019-11-14-1573758888334](https://user-images.githubusercontent.com/4408379/68888998-0eb6b880-072d-11ea-9e7d-e7ca64c25cd6.gif)
<issue_comment>username_1: Yeah we're aware of this issue. It's because the theme is only applied after page load, that's why we see the flash. It's a little annoying but possible to fix - gatsbyjs.org doesn't have this issue.
<issue_comment>username_0: A good example where there is no such issue - https://overreacted.io/ (yeah, powered by Gatbsy).
<issue_comment>username_2: Try reading this https://github.com/donavon/use-dark-mode/blob/develop/README.md#that-flash

To fix this, we need a setbody hooks to inject script into html body. So that it wont wait till React load to actually enter dark mode<issue_closed>"
kubernetes/website,499900465,16607,,"[{'action': 'opened', 'author': 'hjacobs', 'comment_id': None, 'datetime': '2019-09-29 11:01:54+00:00', 'masked_author': 'username_0', 'text': ""**This is a Feature Request**\r\n\r\n**What would you like to be added**\r\n\r\nI would like to have a clear warning that Liveness Probes can worsen the situation for applications: they can lead to cascading failures (e.g. in high-load situations when the health endpoint does not respond anymore, app restarts might take a long time).\r\n\r\nSome proposed text (I'm open for anything better):\r\n\r\n```\r\nPlease note that liveness probes can lead to cascading failures,\r\ne.g. causing excessive downtime due to container restarts in high-load situations.\r\nUnderstand the difference between readiness and liveness probes\r\nand when to apply them for your app.\r\n```\r\n\r\n**Why is this needed**\r\n\r\nKubernetes documentation pages are often read by inexperienced app developers who are not familiar with Kubernetes. The current page only mentions Liveness Probes as a way to **increase availability** for containers which get stuck, but does not say anything about the danger of using Liveness Probes. I observe app developers often using Liveness Probes in the same way as Readiness Probes (sometimes even with the exact same probe settings), which will cause more harm than good.\r\n\r\nFor more context and Zalando's recommendations for app developers, see my blog post: https://srcco.de/posts/kubernetes-liveness-probes-are-dangerous.html"", 'title': 'Liveness Probes: mention that they can worsen app availability', 'type': 'issue'}
 {'action': 'created', 'author': 'hjacobs', 'comment_id': 536284904.0, 'datetime': '2019-09-29 11:07:41+00:00', 'masked_author': 'username_0', 'text': ""This was triggered by this Tweet which suggests reading the docs is enough (which it's not as the pitfalls are not mentioned): https://twitter.com/Guillaume_Swiss/status/1178258781152563200"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hjacobs', 'comment_id': 536285718.0, 'datetime': '2019-09-29 11:14:29+00:00', 'masked_author': 'username_0', 'text': 'I don\'t want to add ""never use liveness probes"", but I think the documentation page is currently not balanced as it mentions ""availability"" only as benefit of Liveness Probe and not the downsides.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hjacobs', 'comment_id': 536287120.0, 'datetime': '2019-09-29 11:26:26+00:00', 'masked_author': 'username_0', 'text': 'For the naive application developer this might sound good (""restart my container on failure? yes, I want this of course!"") --- the documentation does not mention that there is no coordination across Pods and that PDBs are not respected, i.e. that often all containers are restarted due to some external event/dependency (e.g. high load, health check on DB which has a hiccup, etc).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 536561753.0, 'datetime': '2019-09-30 13:31:09+00:00', 'masked_author': 'username_1', 'text': 'This is a valid issue\r\n/priority backlog', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thockin', 'comment_id': 536781619.0, 'datetime': '2019-09-30 22:40:20+00:00', 'masked_author': 'username_2', 'text': ""I'm OK to add something, but I'd rather phrase it in a more positive light.  E.g.\r\n\r\nLiveness probes can be a powerful way to recover from application failures, but they should be used with caution.  Liveness probes must be configured carefully to ensure that they truly indicate unrecoverable application failure, for example a deadlock.  A common pattern for liveness probes is to use the same low-cost HTTP endpoint as for readiness probes, but with a higher failureThreshold.  This ensures that the pod is observed as not-ready for some period of time before it is hard killed.\r\n\r\nIncorrect configuration of liveness probes can lead to cascading failures.  For example, killing the pod when it has high load, as opposed to being crashed, can lead to failed client requests or traffic being shifted onto other pods in the same deployment or service, thereby overloading them.\r\n\r\nUnderstand the difference between readiness and liveness probes and when to apply them for your app."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 536924430.0, 'datetime': '2019-10-01 08:18:35+00:00', 'masked_author': 'username_1', 'text': ""My gut feeling is that there's enough material here for a new Task page, aimed at developers (think CKAD), that describes how to design readiness, liveness and startup probes for your workload.\r\n\r\nThe website has a _lot_ of task pages, but (IMO) that's because there are a lot of different tasks that readers might want to do."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hjacobs', 'comment_id': 536971803.0, 'datetime': '2019-10-01 10:21:01+00:00', 'masked_author': 'username_0', 'text': '@username_2 your text proposal LGTM :smile:', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thockin', 'comment_id': 537053537.0, 'datetime': '2019-10-01 14:08:03+00:00', 'masked_author': 'username_2', 'text': ""I think a good task doc would be great!  How do we go about doing that?\nI'm happy to consult, but I am not a writer.."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'szuecs', 'comment_id': 537103310.0, 'datetime': '2019-10-01 15:54:57+00:00', 'masked_author': 'username_3', 'text': 'Thanks @username_2, very good proposed text, that doesn’t hide the problem, and guides how and when to use', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hjacobs', 'comment_id': 537159979.0, 'datetime': '2019-10-01 18:09:49+00:00', 'masked_author': 'username_0', 'text': ""I'm happy to do a PR, but I'm not sure if it should be after the second paragraph or somewhere else (?)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'szuecs', 'comment_id': 537228364.0, 'datetime': '2019-10-01 21:00:27+00:00', 'masked_author': 'username_3', 'text': 'I would create a short paragraph about LivenessProbe and ReadinessProbe just before the more verbose sections that show the how.\r\nMaybe https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes would be a better place and maybe link from the configuration page.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thockin', 'comment_id': 554104713.0, 'datetime': '2019-11-14 22:13:15+00:00', 'masked_author': 'username_2', 'text': 'Did this get finished?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hjacobs', 'comment_id': 559443028.0, 'datetime': '2019-11-28 10:47:30+00:00', 'masked_author': 'username_0', 'text': '@username_2 no, not yet. I was on vacation and will follow up.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thockin', 'comment_id': 586043157.0, 'datetime': '2020-02-14 00:45:58+00:00', 'masked_author': 'username_2', 'text': 'Is this done now?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'xiaods', 'comment_id': 593756803.0, 'datetime': '2020-03-03 04:04:37+00:00', 'masked_author': 'username_4', 'text': 'any update?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Lechus', 'comment_id': 609687412.0, 'datetime': '2020-04-06 09:40:44+00:00', 'masked_author': 'username_5', 'text': 'any progress Mr @username_0 ?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ultra-baba', 'comment_id': 878842816.0, 'datetime': '2021-07-13 07:19:43+00:00', 'masked_author': 'username_6', 'text': 'any update  @username_0 ?', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Liveness Probes: mention that they can worsen app availability
username_0: **This is a Feature Request**

**What would you like to be added**

I would like to have a clear warning that Liveness Probes can worsen the situation for applications: they can lead to cascading failures (e.g. in high-load situations when the health endpoint does not respond anymore, app restarts might take a long time).

Some proposed text (I'm open for anything better):

```
Please note that liveness probes can lead to cascading failures,
e.g. causing excessive downtime due to container restarts in high-load situations.
Understand the difference between readiness and liveness probes
and when to apply them for your app.
```

**Why is this needed**

Kubernetes documentation pages are often read by inexperienced app developers who are not familiar with Kubernetes. The current page only mentions Liveness Probes as a way to **increase availability** for containers which get stuck, but does not say anything about the danger of using Liveness Probes. I observe app developers often using Liveness Probes in the same way as Readiness Probes (sometimes even with the exact same probe settings), which will cause more harm than good.

For more context and Zalando's recommendations for app developers, see my blog post: https://srcco.de/posts/kubernetes-liveness-probes-are-dangerous.html
<issue_comment>username_0: This was triggered by this Tweet which suggests reading the docs is enough (which it's not as the pitfalls are not mentioned): https://twitter.com/Guillaume_Swiss/status/1178258781152563200
<issue_comment>username_0: I don't want to add ""never use liveness probes"", but I think the documentation page is currently not balanced as it mentions ""availability"" only as benefit of Liveness Probe and not the downsides.
<issue_comment>username_0: For the naive application developer this might sound good (""restart my container on failure? yes, I want this of course!"") --- the documentation does not mention that there is no coordination across Pods and that PDBs are not respected, i.e. that often all containers are restarted due to some external event/dependency (e.g. high load, health check on DB which has a hiccup, etc).
<issue_comment>username_1: This is a valid issue
/priority backlog
<issue_comment>username_2: I'm OK to add something, but I'd rather phrase it in a more positive light.  E.g.

Liveness probes can be a powerful way to recover from application failures, but they should be used with caution.  Liveness probes must be configured carefully to ensure that they truly indicate unrecoverable application failure, for example a deadlock.  A common pattern for liveness probes is to use the same low-cost HTTP endpoint as for readiness probes, but with a higher failureThreshold.  This ensures that the pod is observed as not-ready for some period of time before it is hard killed.

Incorrect configuration of liveness probes can lead to cascading failures.  For example, killing the pod when it has high load, as opposed to being crashed, can lead to failed client requests or traffic being shifted onto other pods in the same deployment or service, thereby overloading them.

Understand the difference between readiness and liveness probes and when to apply them for your app.
<issue_comment>username_1: My gut feeling is that there's enough material here for a new Task page, aimed at developers (think CKAD), that describes how to design readiness, liveness and startup probes for your workload.

The website has a _lot_ of task pages, but (IMO) that's because there are a lot of different tasks that readers might want to do.
<issue_comment>username_0: @username_2 your text proposal LGTM :smile:
<issue_comment>username_2: I think a good task doc would be great!  How do we go about doing that?
I'm happy to consult, but I am not a writer..
<issue_comment>username_3: Thanks @username_2, very good proposed text, that doesn’t hide the problem, and guides how and when to use
<issue_comment>username_0: I'm happy to do a PR, but I'm not sure if it should be after the second paragraph or somewhere else (?).
<issue_comment>username_3: I would create a short paragraph about LivenessProbe and ReadinessProbe just before the more verbose sections that show the how.
Maybe https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes would be a better place and maybe link from the configuration page.
<issue_comment>username_2: Did this get finished?
<issue_comment>username_0: @username_2 no, not yet. I was on vacation and will follow up.
<issue_comment>username_2: Is this done now?
<issue_comment>username_4: any update?
<issue_comment>username_5: any progress Mr @username_0 ?
<issue_comment>username_6: any update  @username_0 ?"
flutter/website,318416334,986,"{'number': 986.0, 'repo': 'website', 'user_login': 'flutter'}","[{'action': 'opened', 'author': 'rock3r', 'comment_id': None, 'datetime': '2018-04-27T13:47:55Z', 'masked_author': 'username_0', 'text': ""This PR is for the tenth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.\r\n\r\nFollowing the same rough format as the `flutter-for-android.md` document, with iOS details instead.\r\n\r\nThe following sections have been created:\r\n\r\n* How do I access UserDefaults in Flutter?\r\n* What is the equivalent to CoreData in Flutter?\r\n\r\n⚠️ **This requires #985 to be merged first!** ⚠️"", 'title': 'Flutter for iOS — Storage & DB section', 'type': 'issue'}
 {'action': 'created', 'author': 'rock3r', 'comment_id': 385894474.0, 'datetime': '2018-05-02 07:54:31+00:00', 'masked_author': 'username_0', 'text': 'Contents covered in #993, closing this.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Flutter for iOS — Storage & DB section
username_0: This PR is for the tenth section of the work to create the `flutter-for-ios.md` document. Writing by @niamh-power on Novoda's behalf, I am just a proxy.

Following the same rough format as the `flutter-for-android.md` document, with iOS details instead.

The following sections have been created:

* How do I access UserDefaults in Flutter?
* What is the equivalent to CoreData in Flutter?

⚠️ **This requires #985 to be merged first!** ⚠️
<issue_comment>username_0: Contents covered in #993, closing this."
GDQuest/website,535583900,132,,"[{'action': 'opened', 'author': 'razcore-art', 'comment_id': None, 'datetime': '2019-12-10 08:56:04+00:00', 'masked_author': 'username_0', 'text': 'Since we started using [hugo-theme-learn](//github.com/matcornic/hugo-theme-learn/) there\'s an overlap in some layouts & partials. This needs to be organized a bit better. For example we have `toc.html` from hugo-theme-learn (which I overwrote so that we can have TOC for Blender Power Sequencer Reference page which is generated with a shortcode) and we also have `table-of-contents.html` which is probably used by the ""main website"".\r\n\r\nThere\'s also overlap on the CSS side.\r\n\r\nThere\'s the footer that we need to fix/rethink. \r\n\r\nThings like these.', 'title': 'Verify layouts/shortcodes & trim unnecessary', 'type': 'issue'}
 {'action': 'closed', 'author': 'NathanLovato', 'comment_id': None, 'datetime': '2020-06-21 20:25:09+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'NathanLovato', 'comment_id': 647177308.0, 'datetime': '2020-06-21 20:25:09+00:00', 'masked_author': 'username_1', 'text': ""I went through most of the website over the past days, this is mostly done. There's always stray code left to clean up, but the bulk of it should be done."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Verify layouts/shortcodes & trim unnecessary
username_0: Since we started using [hugo-theme-learn](//github.com/matcornic/hugo-theme-learn/) there's an overlap in some layouts & partials. This needs to be organized a bit better. For example we have `toc.html` from hugo-theme-learn (which I overwrote so that we can have TOC for Blender Power Sequencer Reference page which is generated with a shortcode) and we also have `table-of-contents.html` which is probably used by the ""main website"".

There's also overlap on the CSS side.

There's the footer that we need to fix/rethink. 

Things like these.<issue_closed>
<issue_comment>username_1: I went through most of the website over the past days, this is mostly done. There's always stray code left to clean up, but the bulk of it should be done."
kubernetes/website,544604269,18419,"{'number': 18419.0, 'repo': 'website', 'user_login': 'kubernetes'}","[{'action': 'opened', 'author': 'mfilocha', 'comment_id': None, 'datetime': '2020-01-02T14:38:09Z', 'masked_author': 'username_0', 'text': 'An initial config for Polish localization.', 'title': 'Init Polish localization', 'type': 'issue'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570227917.0, 'datetime': '2020-01-02 14:43:57+00:00', 'masked_author': 'username_1', 'text': 'Am I right that this is a work-in-progress?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570228747.0, 'datetime': '2020-01-02 14:46:59+00:00', 'masked_author': 'username_1', 'text': '@username_0 would you like help with, for example, getting a new branch made for the Polish work?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570230521.0, 'datetime': '2020-01-02 14:53:03+00:00', 'masked_author': 'username_0', 'text': '@username_1 - @jimangel and @username_2 asked me to reopen my previous PR against the master branch: https://github.com/kubernetes/website/pull/18254#issuecomment-569769916', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'rlenferink', 'comment_id': 570241637.0, 'datetime': '2020-01-02 15:29:54+00:00', 'masked_author': 'username_2', 'text': '@username_1, we want to have this merged to master (our latest) branch as described by Jim as well. Why do you want to add `pl` to the `disableLanguages`? This adds all the initial configs and it will be a lot easier to translate and review when this will be deployed for every PR.\r\n\r\nAs I understand @username_0 processed all feedback from the previous pull request and created this one after processing the feedback. The only thing left to do is for @username_4 to request [org membership](https://github.com/kubernetes/org/issues/new?assignees=&labels=area%2Fgithub-membership&template=membership.md&title=REQUEST%3A+New+membership+for+%3Cyour-GH-handle%3E) (because OWNERS files are checked automatically) (@username_3 and me offered to sponsor).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570252226.0, 'datetime': '2020-01-02 16:02:36+00:00', 'masked_author': 'username_0', 'text': '@username_3', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570260669.0, 'datetime': '2020-01-02 16:29:41+00:00', 'masked_author': 'username_1', 'text': ""This pull request does not yet add the [minimum required content](https://kubernetes.io/docs/contribute/localization/#minimum-required-content) for a new localization. For that reason, it's not ready for approval.\r\n\r\nAccording to the contribution guide, this new localization needs:\r\n- A translation of the CNCF code of conduct into Polish\r\n- A home page with all heading and subheading URLs\r\n- A setup section - https://kubernetes.io/pl/docs/setup/ - with heading and subheading URLs \r\n- The _Kubernetes basics_ tutorial\r\n- The _Hello Minikube_ tutorial\r\n- All site strings in a new localized TOML file\r\n\r\nThat's quite some work. So I'm recommending starting a new branch and working on making a series of changes to the new branch, until it is ready to merge into _master_."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570261497.0, 'datetime': '2020-01-02 16:32:34+00:00', 'masked_author': 'username_1', 'text': ""@kubernetes/sig-docs-l10n-admins can you advise on whether I've [mis]understood?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570264269.0, 'datetime': '2020-01-02 16:41:28+00:00', 'masked_author': 'username_0', 'text': ""I'll follow whatever is the recommended way. \r\nMy biggest concern is that the PR containing all translated minimum will be of XXL size. And who will review this PR for correctness/style of translation?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570268886.0, 'datetime': '2020-01-02 16:56:28+00:00', 'masked_author': 'username_1', 'text': ""@username_0 you're talking about the merge from the Polish localization dev branch into _master_? Because that XXL merge will consist only of already-approved changes, it won't need code review, just signoff.\r\n\r\nFor an example, see commit 487505d03883a73a00fa436e195b66a67d9090aa from PR #16551. I'm assuming that this single commit is the result of squashing a branch that includes many PRs (I haven't actually done one of these; that's what it looks like to me)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'remyleone', 'comment_id': 570273563.0, 'datetime': '2020-01-02 17:11:27+00:00', 'masked_author': 'username_3', 'text': 'I think targetting master is the way to go to start a localization and can be proven by the following successfully merged init localization: https://github.com/kubernetes/website/pull/12548 https://github.com/kubernetes/website/pull/16965/files', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'remyleone', 'comment_id': 570276761.0, 'datetime': '2020-01-02 17:21:28+00:00', 'masked_author': 'username_3', 'text': '@username_0 got already a lot of content translated in Polish in his own fork ( https://github.com/username_0/website/tree/dev-1.16-pl.1 ). \r\nMy take would be to merge this initial PR as quickly as possible to make @username_0 and the rest of the Polish translation team as autonomous as possible. Having this PR merged will make them able to quickly merge a lot of already made content that will be beneficial to the Polish-speaking users.\r\n\r\nSlowing it down with extra requirements (that were not enforced for instance in the past of the Vietnamese translation) is not justified in this case IMHO. \r\n\r\n@username_4 let me know when you open your org membership request, I will give my sponsoring to it.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570319863.0, 'datetime': '2020-01-02 19:42:50+00:00', 'masked_author': 'username_1', 'text': ""Also see https://github.com/kubernetes/website/issues/17388\r\n\r\nI agree: the current guidelines aren't clear, but there's a bug open to fix that."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570323369.0, 'datetime': '2020-01-02 19:54:26+00:00', 'masked_author': 'username_1', 'text': ""@username_3 can I follow up on https://github.com/kubernetes/website/pull/18419#issuecomment-570273563 ?\r\n\r\n#12548 looks like an example of a valid new localization, whereas it looks to me as if PR #16965 was merged too early (it should have waited on the changes that came in #17655). The Vietnamese localization team are doing a great job though, they've landed _lots_ of good PRs since that first one.\r\n\r\n@username_0 I do not think that https://deploy-preview-18419--kubernetes-io-master-staging.netlify.com/pl/ looks good to merge; to me, this pull request looks like a strong work-in-progress. You can `/retitle [WIP] Init Polish localization` if you agree that there's more to do."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570353255.0, 'datetime': '2020-01-02 21:17:46+00:00', 'masked_author': 'username_0', 'text': ""I wonder if dropping [config.toml](https://github.com/kubernetes/website/pull/18419/files#diff-618063036395fe9ee107f22b46c9eade) from this PR could help to avoid the scenario with the empty page as pointed by @username_1? \r\nIf I'm right this may allow us to follow the way set out by @username_3  in https://github.com/kubernetes/website/pull/18419#issuecomment-570276761."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'remyleone', 'comment_id': 570384740.0, 'datetime': '2020-01-02 22:47:14+00:00', 'masked_author': 'username_3', 'text': ""@username_1 I disagree and think that a team should be able to show results as fast as possible and I'm not in favor of enforcing an arbitrary number of PR before they can have the gratification to see their work live. Wikipedia is a clear demonstration of this principle. Plus as you trust/empower a team as early as possible they have all agency to show other potential contributors that they can to quickly have an impact. All actions that delay the gratification of seeing your work in production should be removed in IMHO"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570538419.0, 'datetime': '2020-01-03 10:49:33+00:00', 'masked_author': 'username_0', 'text': 'PR to create a label for Polish language https://github.com/kubernetes/test-infra/pull/15684 is on hold waiting for this PR to be merged.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570641473.0, 'datetime': '2020-01-03 17:33:09+00:00', 'masked_author': 'username_1', 'text': ""To make https://deploy-preview-18419--kubernetes-io-master-staging.netlify.com/pl/ look right you need at least an `_index.html` page and to localize all the strings it uses.\r\n\r\nThe way I see it, the minimum guidelines do indeed cover what's necessary to get a sensible-looking preview rendering OK for a new localization.\r\n\r\nThere are 2 “essential” pages in the minimum requirements; one is _Hello Minikube_ and the other is the _Kubernetes basics_ tutorial. I can see why those are included, they are really useful for people new to Kubernetes. It's OK to launch a localization once those 2 pages are ready, even before the remaining hundreds of pages are ready to publish."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570647182.0, 'datetime': '2020-01-03 17:53:30+00:00', 'masked_author': 'username_0', 'text': ""@username_1 All required translated content is ready at my branch: https://github.com/kubernetes/website/compare/master...username_0:dev-1.17-pl.1-master - I'm going to split it into smaller PRs for review. \r\nBut this should happen on a separate branch in the upstream repository, as soon as the localization team is established, I guess."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 570650127.0, 'datetime': '2020-01-03 18:03:40+00:00', 'masked_author': 'username_1', 'text': ""So it sounds to me that if an admin creates a new branch _dev-1.17-pl.1_ in **this** repo, @username_0 you can send in pull requests that target that branch and that you're all ready to do that?\r\n\r\n(and then those commits can merge into _master_ in a single PR that does preview OK)\r\n\r\nHave I got that right?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570723360.0, 'datetime': '2020-01-03 22:59:13+00:00', 'masked_author': 'username_0', 'text': ""@username_1 Yes, I'm ready to send PR to that branch. I hope I understand it right that the PR to add localization team (https://github.com/kubernetes/org/pull/1508) can be approved regardless of the status of this PR, so that new team can approve PRs in the newly created branch."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'rlenferink', 'comment_id': 570771516.0, 'datetime': '2020-01-04 09:45:10+00:00', 'masked_author': 'username_2', 'text': 'To better follow the process on the localization page and be able to split up content to review in smaller PRs I have just created the *dev-1.17-pl.1* branch. Content to this branch can be added and reviewed in separate pull requests. When the [minimum required content](https://kubernetes.io/docs/contribute/localization/#minimum-required-content) is in place a pull request from *dev-1.17-pl.1* to *master* can be created which only needs sign-off because the actual content has already been reviewed at that point in time.\r\n\r\nFor this pull request I changed the base branch from *master* to *dev-1.17-pl.1* as well.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 570783375.0, 'datetime': '2020-01-04 12:55:25+00:00', 'masked_author': 'username_0', 'text': 'Above PRs contain required minimum translated content, split by smaller pieces.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mfilocha', 'comment_id': 573256394.0, 'datetime': '2020-01-11 00:24:49+00:00', 'masked_author': 'username_0', 'text': '/assign @username_5', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 573336635.0, 'datetime': '2020-01-11 17:29:04+00:00', 'masked_author': 'username_1', 'text': ""@username_4 can you add /lgtm to this PR if you're happy with it? You're listed as a future reviewer."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nvtkaszpir', 'comment_id': 573399358.0, 'datetime': '2020-01-12 10:02:39+00:00', 'masked_author': 'username_4', 'text': '/lgtm', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'rlenferink', 'comment_id': 573422290.0, 'datetime': '2020-01-12 14:48:19+00:00', 'masked_author': 'username_2', 'text': '2 times `/lgtm` by pl-reviewers. I think this is good to be merged @username_1 🎉', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zacharysarah', 'comment_id': 573478171.0, 'datetime': '2020-01-13 00:52:36+00:00', 'masked_author': 'username_5', 'text': 'Congratulations! 🎉', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 574219721.0, 'datetime': '2020-01-14 15:10:26+00:00', 'masked_author': 'username_1', 'text': '/language pl', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Init Polish localization
username_0: An initial config for Polish localization.
<issue_comment>username_1: Am I right that this is a work-in-progress?
<issue_comment>username_1: @username_0 would you like help with, for example, getting a new branch made for the Polish work?
<issue_comment>username_0: @username_1 - @jimangel and @username_2 asked me to reopen my previous PR against the master branch: https://github.com/kubernetes/website/pull/18254#issuecomment-569769916
<issue_comment>username_2: @username_1, we want to have this merged to master (our latest) branch as described by Jim as well. Why do you want to add `pl` to the `disableLanguages`? This adds all the initial configs and it will be a lot easier to translate and review when this will be deployed for every PR.

As I understand @username_0 processed all feedback from the previous pull request and created this one after processing the feedback. The only thing left to do is for @username_4 to request [org membership](https://github.com/kubernetes/org/issues/new?assignees=&labels=area%2Fgithub-membership&template=membership.md&title=REQUEST%3A+New+membership+for+%3Cyour-GH-handle%3E) (because OWNERS files are checked automatically) (@username_3 and me offered to sponsor).
<issue_comment>username_0: @username_3
<issue_comment>username_1: This pull request does not yet add the [minimum required content](https://kubernetes.io/docs/contribute/localization/#minimum-required-content) for a new localization. For that reason, it's not ready for approval.

According to the contribution guide, this new localization needs:
- A translation of the CNCF code of conduct into Polish
- A home page with all heading and subheading URLs
- A setup section - https://kubernetes.io/pl/docs/setup/ - with heading and subheading URLs 
- The _Kubernetes basics_ tutorial
- The _Hello Minikube_ tutorial
- All site strings in a new localized TOML file

That's quite some work. So I'm recommending starting a new branch and working on making a series of changes to the new branch, until it is ready to merge into _master_.
<issue_comment>username_1: @kubernetes/sig-docs-l10n-admins can you advise on whether I've [mis]understood?
<issue_comment>username_0: I'll follow whatever is the recommended way. 
My biggest concern is that the PR containing all translated minimum will be of XXL size. And who will review this PR for correctness/style of translation?
<issue_comment>username_1: @username_0 you're talking about the merge from the Polish localization dev branch into _master_? Because that XXL merge will consist only of already-approved changes, it won't need code review, just signoff.

For an example, see commit 487505d03883a73a00fa436e195b66a67d9090aa from PR #16551. I'm assuming that this single commit is the result of squashing a branch that includes many PRs (I haven't actually done one of these; that's what it looks like to me).
<issue_comment>username_3: I think targetting master is the way to go to start a localization and can be proven by the following successfully merged init localization: https://github.com/kubernetes/website/pull/12548 https://github.com/kubernetes/website/pull/16965/files
<issue_comment>username_3: @username_0 got already a lot of content translated in Polish in his own fork ( https://github.com/username_0/website/tree/dev-1.16-pl.1 ). 
My take would be to merge this initial PR as quickly as possible to make @username_0 and the rest of the Polish translation team as autonomous as possible. Having this PR merged will make them able to quickly merge a lot of already made content that will be beneficial to the Polish-speaking users.

Slowing it down with extra requirements (that were not enforced for instance in the past of the Vietnamese translation) is not justified in this case IMHO. 

@username_4 let me know when you open your org membership request, I will give my sponsoring to it.
<issue_comment>username_1: Also see https://github.com/kubernetes/website/issues/17388

I agree: the current guidelines aren't clear, but there's a bug open to fix that.
<issue_comment>username_1: @username_3 can I follow up on https://github.com/kubernetes/website/pull/18419#issuecomment-570273563 ?

#12548 looks like an example of a valid new localization, whereas it looks to me as if PR #16965 was merged too early (it should have waited on the changes that came in #17655). The Vietnamese localization team are doing a great job though, they've landed _lots_ of good PRs since that first one.

@username_0 I do not think that https://deploy-preview-18419--kubernetes-io-master-staging.netlify.com/pl/ looks good to merge; to me, this pull request looks like a strong work-in-progress. You can `/retitle [WIP] Init Polish localization` if you agree that there's more to do.
<issue_comment>username_0: I wonder if dropping [config.toml](https://github.com/kubernetes/website/pull/18419/files#diff-618063036395fe9ee107f22b46c9eade) from this PR could help to avoid the scenario with the empty page as pointed by @username_1? 
If I'm right this may allow us to follow the way set out by @username_3  in https://github.com/kubernetes/website/pull/18419#issuecomment-570276761.
<issue_comment>username_3: @username_1 I disagree and think that a team should be able to show results as fast as possible and I'm not in favor of enforcing an arbitrary number of PR before they can have the gratification to see their work live. Wikipedia is a clear demonstration of this principle. Plus as you trust/empower a team as early as possible they have all agency to show other potential contributors that they can to quickly have an impact. All actions that delay the gratification of seeing your work in production should be removed in IMHO
<issue_comment>username_0: PR to create a label for Polish language https://github.com/kubernetes/test-infra/pull/15684 is on hold waiting for this PR to be merged.
<issue_comment>username_1: To make https://deploy-preview-18419--kubernetes-io-master-staging.netlify.com/pl/ look right you need at least an `_index.html` page and to localize all the strings it uses.

The way I see it, the minimum guidelines do indeed cover what's necessary to get a sensible-looking preview rendering OK for a new localization.

There are 2 “essential” pages in the minimum requirements; one is _Hello Minikube_ and the other is the _Kubernetes basics_ tutorial. I can see why those are included, they are really useful for people new to Kubernetes. It's OK to launch a localization once those 2 pages are ready, even before the remaining hundreds of pages are ready to publish.
<issue_comment>username_0: @username_1 All required translated content is ready at my branch: https://github.com/kubernetes/website/compare/master...username_0:dev-1.17-pl.1-master - I'm going to split it into smaller PRs for review. 
But this should happen on a separate branch in the upstream repository, as soon as the localization team is established, I guess.
<issue_comment>username_1: So it sounds to me that if an admin creates a new branch _dev-1.17-pl.1_ in **this** repo, @username_0 you can send in pull requests that target that branch and that you're all ready to do that?

(and then those commits can merge into _master_ in a single PR that does preview OK)

Have I got that right?
<issue_comment>username_0: @username_1 Yes, I'm ready to send PR to that branch. I hope I understand it right that the PR to add localization team (https://github.com/kubernetes/org/pull/1508) can be approved regardless of the status of this PR, so that new team can approve PRs in the newly created branch.
<issue_comment>username_2: To better follow the process on the localization page and be able to split up content to review in smaller PRs I have just created the *dev-1.17-pl.1* branch. Content to this branch can be added and reviewed in separate pull requests. When the [minimum required content](https://kubernetes.io/docs/contribute/localization/#minimum-required-content) is in place a pull request from *dev-1.17-pl.1* to *master* can be created which only needs sign-off because the actual content has already been reviewed at that point in time.

For this pull request I changed the base branch from *master* to *dev-1.17-pl.1* as well.
<issue_comment>username_0: Above PRs contain required minimum translated content, split by smaller pieces.
<issue_comment>username_0: /assign @username_5
<issue_comment>username_1: @username_4 can you add /lgtm to this PR if you're happy with it? You're listed as a future reviewer.
<issue_comment>username_4: /lgtm
<issue_comment>username_2: 2 times `/lgtm` by pl-reviewers. I think this is good to be merged @username_1 🎉
<issue_comment>username_5: Congratulations! 🎉
<issue_comment>username_1: /language pl"
