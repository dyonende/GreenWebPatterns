AdoptOpenJDK/openjdk-website,398333976,390,,"[{'action': 'opened', 'author': 'ChrisKibble', 'comment_id': None, 'datetime': '2019-01-11T15:24:46Z', 'masked_author': 'username_0', 'text': ""On the Installation Page for Windows, the documentation states that to change the path you execute **set PATH=%cd%\\jdk-11.0.1+13\\bin;%PATH%**.  This will only change the path for the current session - as soon as the terminal window is closed, you'll have lost that change.  Recommend changing this to either using SETX (on versions of Windows that support it) or modifying the variable through system setting."", 'title': 'Windows Installation Path Instruction Modification', 'type': 'issue'}
 {'action': 'created', 'author': 'ParkerM', 'comment_id': 460013212.0, 'datetime': '2019-02-03 00:59:37+00:00', 'masked_author': 'username_1', 'text': 'It looks like using `setx` to set the path can be destructive due to a 1024 character limit (see [this post](https://superuser.com/questions/387619/overcoming-the-1024-character-limit-with-setx)).\r\n\r\nAn alternative option could be to use Powershell commands, but it looks like the documented solutions only mention how to persist path changes for new Powershell sessions. I think this is because Windows environment variables are stored in the registry, which _can_ technically be edited through Powershell by invoking .NET libraries or directly updating registry values. In either case I don\'t think there\'s any built-in one-liners that don\'t rely on helper scripts or third-party tools.\r\n\r\nThe [Powershell docs](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-6#changing-environment-variables) suggest changing env vars through the system settings GUI. Same with Oracle\'s help page [How do I set or change the PATH system variable?](https://www.java.com/en/download/help/path.xml).\r\n\r\nI imagine most users would select the MSI installers once they become available (see [openjdk-installer/issues/27](https://github.com/AdoptOpenJDK/openjdk-installer/issues/27)), which would remove the manual step for updating path. Power users or users who would otherwise prefer a binary archive would likely understand the path requirements, so perhaps the message could then be removed or made more generic for Windows archives (e.g. ""Add `bin` directory to path"").', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lootkips', 'comment_id': 462747655.0, 'datetime': '2019-02-12 12:52:24+00:00', 'masked_author': 'username_2', 'text': 'I would suggest the first method which will create a persistent system path variable:  This is a method I use as just making a new path will delete the regkeys for existing system paths:  Guide here:\r\nhttps://peter.hahndorf.eu/blog/AddingToPathVariable.html\r\nhttps://github.com/hahndorf/hacops/blob/master/Set-PathVariable.ps1', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Windows Installation Path Instruction Modification
username_0: On the Installation Page for Windows, the documentation states that to change the path you execute **set PATH=%cd%\jdk-11.0.1+13\bin;%PATH%**.  This will only change the path for the current session - as soon as the terminal window is closed, you'll have lost that change.  Recommend changing this to either using SETX (on versions of Windows that support it) or modifying the variable through system setting.
<issue_comment>username_1: It looks like using `setx` to set the path can be destructive due to a 1024 character limit (see [this post](https://superuser.com/questions/387619/overcoming-the-1024-character-limit-with-setx)).

An alternative option could be to use Powershell commands, but it looks like the documented solutions only mention how to persist path changes for new Powershell sessions. I think this is because Windows environment variables are stored in the registry, which _can_ technically be edited through Powershell by invoking .NET libraries or directly updating registry values. In either case I don't think there's any built-in one-liners that don't rely on helper scripts or third-party tools.

The [Powershell docs](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-6#changing-environment-variables) suggest changing env vars through the system settings GUI. Same with Oracle's help page [How do I set or change the PATH system variable?](https://www.java.com/en/download/help/path.xml).

I imagine most users would select the MSI installers once they become available (see [openjdk-installer/issues/27](https://github.com/AdoptOpenJDK/openjdk-installer/issues/27)), which would remove the manual step for updating path. Power users or users who would otherwise prefer a binary archive would likely understand the path requirements, so perhaps the message could then be removed or made more generic for Windows archives (e.g. ""Add `bin` directory to path"").
<issue_comment>username_2: I would suggest the first method which will create a persistent system path variable:  This is a method I use as just making a new path will delete the regkeys for existing system paths:  Guide here:
https://peter.hahndorf.eu/blog/AddingToPathVariable.html
https://github.com/hahndorf/hacops/blob/master/Set-PathVariable.ps1"
givanz/VvvebJs,545771738,130,,"[{'action': 'opened', 'author': 'spydreb1t3', 'comment_id': None, 'datetime': '2020-01-06 15:01:47+00:00', 'masked_author': 'username_0', 'text': ""Is it possible to latch a custom external wysiwig editor to edit inline text with vvveb? I know grapesjs supports this feature and I have a customer that's looking for a more powerful inline wysiwyg experience.\r\n\r\nIs this at all possible or am I just dreaming?"", 'title': 'Wysiwyg Editor', 'type': 'issue'}
 {'action': 'created', 'author': 'assadnazar', 'comment_id': 845958287.0, 'datetime': '2021-05-21 13:40:54+00:00', 'masked_author': 'username_1', 'text': 'Bump?', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Wysiwyg Editor
username_0: Is it possible to latch a custom external wysiwig editor to edit inline text with vvveb? I know grapesjs supports this feature and I have a customer that's looking for a more powerful inline wysiwyg experience.

Is this at all possible or am I just dreaming?
<issue_comment>username_1: Bump?"
jscraftcamp/website,553135880,824,,"[{'action': 'opened', 'author': 'Narigo', 'comment_id': None, 'datetime': '2020-01-21 21:19:34+00:00', 'masked_author': 'username_0', 'text': '# Why Snacks?\r\n\r\nPrevent a low blood sugar by providing quick energy refilling snacks in the form of sweets, baked goods and candy. Keep those hard working brains happy - either by choosing yourself what to get or just leave it up to us to find the right sugar-bombs!\r\n\r\n# How does it work?\r\n\r\nLast year we asked some food companies for offers and had the sponsor confirm that amount up front. Once the food was delivered on the day the sponsor pulled out the credit card and made all attendees happy by enabling them to making the blood sugar level catch up.', 'title': 'Sponsor needed for snacks on Friday üçåüçéüç™üçêüç©üç¶ - üí∞', 'type': 'issue'}]","<issue_start><issue_comment>Title: Sponsor needed for snacks on Friday üçåüçéüç™üçêüç©üç¶ - üí∞
username_0: # Why Snacks?

Prevent a low blood sugar by providing quick energy refilling snacks in the form of sweets, baked goods and candy. Keep those hard working brains happy - either by choosing yourself what to get or just leave it up to us to find the right sugar-bombs!

# How does it work?

Last year we asked some food companies for offers and had the sponsor confirm that amount up front. Once the food was delivered on the day the sponsor pulled out the credit card and made all attendees happy by enabling them to making the blood sugar level catch up."
nodejs/nodejs.org,194985503,1070,,"[{'action': 'opened', 'author': 'psrodka-neurosys', 'comment_id': None, 'datetime': '2016-12-12 14:19:17+00:00', 'masked_author': 'username_0', 'text': '<!--\r\nThanks for wanting to report an issue you\'ve found on the nodejs.org website.\r\n\r\nFor issues regarding the Node.js API docs, please head over to:\r\nhttps://github.com/nodejs/node/issues/ (prefix your issue name with ""doc"")\r\n\r\nFor general questions about Node.js:\r\nhttps://github.com/nodejs/help/issues/\r\n\r\nPlease fill in the template below by replacing the HTML comments with an\r\nappropriate answer. If unsure about something, just do as best as you\'re able.\r\nIf you are reporting a visual glitch, it will be much easier for us to fix it\r\nwhen you attach a screenshot as well.\r\n\r\nThank you!\r\n-->\r\n\r\n* **https://nodejs.org/en/download/**:\r\n* **Chrome 54**:\r\n* **Windows 10 Pro**:\r\n\r\n<!-- Enter your issue details below this comment. -->\r\n\r\nOn the website https://nodejs.org/en/download/ one can find official node docker image which is misleading as it is Linux based image and since we got now Linux and Windows images one can be confused by the label. \r\n\r\nProposition\r\n1. Create Windows based image, e.g.:\r\n\r\n# escape = ` (backtick)\r\nFROM microsoft/windowsservercore\r\nSHELL [""powershell"", ""-command""]\r\n# Required by chocolatey\r\nENV chocolateyUseWindowsCompression false\r\n# Download and run chocolatey installer\r\nRUN iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex\r\n# install 7 zip as required by nodejs installer\r\nRUN cinst -y 7zip.install\r\n# Install nodejs\r\nRUN cinst -y nodejs.install\r\n\r\n2. Update download site to reflect complex reality ;)', 'title': 'Misleading download option: official node docker image', 'type': 'issue'}
 {'action': 'created', 'author': 'fhemberger', 'comment_id': 273686346.0, 'datetime': '2017-01-19 05:34:23+00:00', 'masked_author': 'username_1', 'text': ""@nodejs/docker Do you want to add a Windows tag to the official Docker image? I'm not so sure if its feasible, the `windowsservercore` base image is already whopping 5 GB. Not the best foundation to run Node.js microservices. ;)\r\n\r\n@username_0 Regarding your example: Instead of using chocolatey, you should grab the Windows ZIP file directly from our dist, e.g.: https://nodejs.org/dist/latest/node-v7.4.0-win-x86.zip - Thus you always have the latest releases and don't need additional tools for installation. Powershell 5 has the function `Expand-Archive $pathToZip $targetDir`, that should work as well."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'psrodka-neurosys', 'comment_id': 273733166.0, 'datetime': '2017-01-19 10:12:38+00:00', 'masked_author': 'username_0', 'text': ""@username_1 Thanks for comment. If you get from .../latest/<version> you will need to know the <version> number, so you will have to update Dockerfile along with new version of Node. In my example you are only using cinst -y nodejs.install, which I assume is latest on chocolatey. Maybe Node.js can introduce  https://nodejs.org/dist/latest/node-latest-win-x86.zip - that would be most effective.\r\n\r\nAbout 5GB - that is true, but if Windows guys are using Node as frontend layer for ASP.NET MVC application, then they will benefit anyway from Node on Docker as images don't sum up - they will share the same base image windowsservercore.\r\n\r\nThe real reason is still the confusing link name - there is no more Docker, period. Since introducing containers to Windows we will have to distinguish between the two not compatible worlds."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fhemberger', 'comment_id': 273974415.0, 'datetime': '2017-01-20 04:23:14+00:00', 'masked_author': 'username_1', 'text': ""@username_0 `/latest/` was just an example. You always want a *specific* version which is tagged accordingly to ensure reproducible builds. Same goes for the base image.\r\n\r\nAnd the link name is just fine. Host system and image base system don't matter in the container world. We went with the most widely adopted base systems (Debian and Alpine Linux) for our image. Both options work totally fine on Docker for Windows as well."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'fhemberger', 'comment_id': None, 'datetime': '2017-01-20 04:25:01+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Misleading download option: official node docker image
username_0: <!--
Thanks for wanting to report an issue you've found on the nodejs.org website.

For issues regarding the Node.js API docs, please head over to:
https://github.com/nodejs/node/issues/ (prefix your issue name with ""doc"")

For general questions about Node.js:
https://github.com/nodejs/help/issues/

Please fill in the template below by replacing the HTML comments with an
appropriate answer. If unsure about something, just do as best as you're able.
If you are reporting a visual glitch, it will be much easier for us to fix it
when you attach a screenshot as well.

Thank you!
-->

* **https://nodejs.org/en/download/**:
* **Chrome 54**:
* **Windows 10 Pro**:

<!-- Enter your issue details below this comment. -->

On the website https://nodejs.org/en/download/ one can find official node docker image which is misleading as it is Linux based image and since we got now Linux and Windows images one can be confused by the label. 

Proposition
1. Create Windows based image, e.g.:

# escape = ` (backtick)
FROM microsoft/windowsservercore
SHELL [""powershell"", ""-command""]
# Required by chocolatey
ENV chocolateyUseWindowsCompression false
# Download and run chocolatey installer
RUN iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex
# install 7 zip as required by nodejs installer
RUN cinst -y 7zip.install
# Install nodejs
RUN cinst -y nodejs.install

2. Update download site to reflect complex reality ;)
<issue_comment>username_1: @nodejs/docker Do you want to add a Windows tag to the official Docker image? I'm not so sure if its feasible, the `windowsservercore` base image is already whopping 5 GB. Not the best foundation to run Node.js microservices. ;)

@username_0 Regarding your example: Instead of using chocolatey, you should grab the Windows ZIP file directly from our dist, e.g.: https://nodejs.org/dist/latest/node-v7.4.0-win-x86.zip - Thus you always have the latest releases and don't need additional tools for installation. Powershell 5 has the function `Expand-Archive $pathToZip $targetDir`, that should work as well.
<issue_comment>username_0: @username_1 Thanks for comment. If you get from .../latest/<version> you will need to know the <version> number, so you will have to update Dockerfile along with new version of Node. In my example you are only using cinst -y nodejs.install, which I assume is latest on chocolatey. Maybe Node.js can introduce  https://nodejs.org/dist/latest/node-latest-win-x86.zip - that would be most effective.

About 5GB - that is true, but if Windows guys are using Node as frontend layer for ASP.NET MVC application, then they will benefit anyway from Node on Docker as images don't sum up - they will share the same base image windowsservercore.

The real reason is still the confusing link name - there is no more Docker, period. Since introducing containers to Windows we will have to distinguish between the two not compatible worlds.
<issue_comment>username_1: @username_0 `/latest/` was just an example. You always want a *specific* version which is tagged accordingly to ensure reproducible builds. Same goes for the base image.

And the link name is just fine. Host system and image base system don't matter in the container world. We went with the most widely adopted base systems (Debian and Alpine Linux) for our image. Both options work totally fine on Docker for Windows as well.<issue_closed>"
datacommonsorg/website,943837525,1030,,"[{'action': 'opened', 'author': 'beets', 'comment_id': None, 'datetime': '2021-07-13 21:20:58+00:00', 'masked_author': 'username_0', 'text': 'all datapoints should be plotted. the browser has the right plot.\r\n\r\nhttps://autopush.datacommons.org/tools/timeline#place=geoId%2F06%2CgeoId%2F26&statsVar=Annual_Consumption_Coal_ElectricPower&chart=%7B%22consumption%22%3Afalse%2C%22cost%22%3Afalse%2C%22heatContent%22%3Afalse%7D\r\n\r\nvs\r\n\r\nhttps://datacommons.org/browser/geoId/06?statVar=Annual_Consumption_Coal_ElectricPower', 'title': '[timeline] zero values are not plotted', 'type': 'issue'}
 {'action': 'closed', 'author': 'beets', 'comment_id': None, 'datetime': '2021-07-15 20:28:03+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: [timeline] zero values are not plotted
username_0: all datapoints should be plotted. the browser has the right plot.

https://autopush.datacommons.org/tools/timeline#place=geoId%2F06%2CgeoId%2F26&statsVar=Annual_Consumption_Coal_ElectricPower&chart=%7B%22consumption%22%3Afalse%2C%22cost%22%3Afalse%2C%22heatContent%22%3Afalse%7D

vs

https://datacommons.org/browser/geoId/06?statVar=Annual_Consumption_Coal_ElectricPower<issue_closed>"
LukeSmithxyz/based.cooking,836839587,266,,"[{'action': 'opened', 'author': 'Dko1905', 'comment_id': None, 'datetime': '2021-03-20 15:38:36+00:00', 'masked_author': 'username_0', 'text': ""Some people don't like using a centralized website, that has the power to take down any repo for any reason. Therefore I suggest that this repo should be moved to self hosted alternative, Gitea is good but it requires a lot of setup and is still quite bloated, we could also do what [suckless](suckless.org) do."", 'title': 'Move to self hosted GitHub alternative', 'type': 'issue'}
 {'action': 'created', 'author': 'kiprasmel', 'comment_id': 803383597.0, 'datetime': '2021-03-20 15:44:19+00:00', 'masked_author': 'username_1', 'text': 'I mean luke perhaps could mirror this on gitlab, or on his own site (gitlab is oss and available for self-hosting too), but there\'s a tradeoff of being ""decentralized"" and being useful, and I don\'t think a cooking recipe website is at risk (if it were - we\'d have way more problems to worry about lol)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LukeSmithxyz', 'comment_id': 803398150.0, 'datetime': '2021-03-20 16:21:51+00:00', 'masked_author': 'username_2', 'text': ""I already have a Gitea server, but it doesn't really have the administrative capabilities to do many things. I'm not using Gitlab for sure, which sucks (there is a mirror on my Gitlab right now, but who cares).\r\n\r\nI'll be more likely to move to Sourcehut or an actually good place when I get absolutely sick of being inundated with PRs here (getting close tbh)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Dko1905', 'comment_id': 803402670.0, 'datetime': '2021-03-20 16:45:09+00:00', 'masked_author': 'username_0', 'text': 'I have heard a lot of good things about Sourcehut, but the UI is not very intuitive.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Morelcia', 'comment_id': 803427019.0, 'datetime': '2021-03-20 17:12:00+00:00', 'masked_author': 'username_3', 'text': ""I think that interest would die if pr/issues etc would get moved away from github as it's most popular platform. Just mirrors are enough I guess. \r\nAlso if you can't handle retards not following templates then maybe getting another maintainer with rights to merging would be good solution?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Dko1905', 'comment_id': 803430480.0, 'datetime': '2021-03-20 17:28:40+00:00', 'masked_author': 'username_0', 'text': ""You're probably right that some of the interest would go away if we switched away from Github, but groups like suckless still survive without Github. I think it's more relevant now because Microsoft owns GitHub.\nMore people with merge permissions would also help with the current amount of prs, but I think it's just a spike right now."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'wesleydeal', 'comment_id': 803500361.0, 'datetime': '2021-03-21 02:15:32+00:00', 'masked_author': 'username_4', 'text': 'Though certainly possible, I find it hard to believe that GitHub would be interested in terminating a simple repository of recipes, regardless of how many articles The Guardian writes about Luke.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Knarkzel', 'comment_id': 803646661.0, 'datetime': '2021-03-21 19:33:28+00:00', 'masked_author': 'username_5', 'text': ""It's very easy to host via sourcehut as well, using https://srht.site. Also based to use email > github frontend."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'the3dfxdude', 'comment_id': 807067861.0, 'datetime': '2021-03-25 16:40:05+00:00', 'masked_author': 'username_6', 'text': 'There is no reason to use any of these centralized git sites for submissions or its collaboration features. People trafficking the based.cooking site for recipes is the best way to generate interest in submissions. So there can be a link to a page explaining there what to do and the submission could be a form, or a designated email address. No one needs to know there is git managing it underneath.\r\n\r\nThe only good git sites are for something like this is for mirroring the data. Even that is not really needed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Dko1905', 'comment_id': 808123088.0, 'datetime': '2021-03-26 11:02:27+00:00', 'masked_author': 'username_0', 'text': '@username_6 As I understand, you want a form or email for creating recipes, if so this is against one of the reasons this project was created.\r\nLuke Smith specifically created this site to create, edit and share recipes using git, because git is cool.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'the3dfxdude', 'comment_id': 809047436.0, 'datetime': '2021-03-29 03:54:31+00:00', 'masked_author': 'username_6', 'text': 'I was speaking about places like github being unnecessary to manage collaboration. git can still be used to track changes. So whatever form that can take will work.\r\n\r\nI thought sharing recipes was supposed to be through visiting the website.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Dko1905', 'comment_id': 809198209.0, 'datetime': '2021-03-29 08:52:01+00:00', 'masked_author': 'username_0', 'text': 'Viewing the recipes is through the web page, but creating & editing is through git.\r\n\r\nYou may be interested in #466, it proposes a script for recipe creation.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'the3dfxdude', 'comment_id': 809848173.0, 'datetime': '2021-03-30 02:02:25+00:00', 'masked_author': 'username_6', 'text': ""It's great that you know git and know how to use GPG keys to sign your commits. I'm not suggesting anything to prevent that as it happens now, or even really talking about ways to use git. I'm talking about collaboration. Collaboration should begin from the traffic through the website. If you want the most resilient site that does not primarily rely on collaborating through a github style webpage, or even that git is involved, and attract the kinds of people looking to exchange recipes, then the steps should be normie friendly enough. The audience could increase considerably with some simple additions.\r\n\r\nI showed the website to others, and they thought it was cool it wasn't filled with ads costing only pennies and could be made with everyone's help. But if I start talking about git and how that made the website, then you'll get a you're a crazy talking about nothing I care about look."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Yaroslav-95', 'comment_id': 812618214.0, 'datetime': '2021-04-02 17:03:11+00:00', 'masked_author': 'username_7', 'text': ""I say that is a good decision, especially if you decide to adopt the decentralized email-based git worflow instead of the centralized Github PR worflow. That way there wouldn't be any need for people that are not registered on Github or any other git-hosting service to submit their recipes."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Dko1905', 'comment_id': 812626813.0, 'datetime': '2021-04-02 17:21:24+00:00', 'masked_author': 'username_0', 'text': '**b a s e d !**', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Move to self hosted GitHub alternative
username_0: Some people don't like using a centralized website, that has the power to take down any repo for any reason. Therefore I suggest that this repo should be moved to self hosted alternative, Gitea is good but it requires a lot of setup and is still quite bloated, we could also do what [suckless](suckless.org) do.
<issue_comment>username_1: I mean luke perhaps could mirror this on gitlab, or on his own site (gitlab is oss and available for self-hosting too), but there's a tradeoff of being ""decentralized"" and being useful, and I don't think a cooking recipe website is at risk (if it were - we'd have way more problems to worry about lol)
<issue_comment>username_2: I already have a Gitea server, but it doesn't really have the administrative capabilities to do many things. I'm not using Gitlab for sure, which sucks (there is a mirror on my Gitlab right now, but who cares).

I'll be more likely to move to Sourcehut or an actually good place when I get absolutely sick of being inundated with PRs here (getting close tbh).
<issue_comment>username_0: I have heard a lot of good things about Sourcehut, but the UI is not very intuitive.
<issue_comment>username_3: I think that interest would die if pr/issues etc would get moved away from github as it's most popular platform. Just mirrors are enough I guess. 
Also if you can't handle retards not following templates then maybe getting another maintainer with rights to merging would be good solution?
<issue_comment>username_0: You're probably right that some of the interest would go away if we switched away from Github, but groups like suckless still survive without Github. I think it's more relevant now because Microsoft owns GitHub.
More people with merge permissions would also help with the current amount of prs, but I think it's just a spike right now.
<issue_comment>username_4: Though certainly possible, I find it hard to believe that GitHub would be interested in terminating a simple repository of recipes, regardless of how many articles The Guardian writes about Luke.
<issue_comment>username_5: It's very easy to host via sourcehut as well, using https://srht.site. Also based to use email > github frontend.
<issue_comment>username_6: There is no reason to use any of these centralized git sites for submissions or its collaboration features. People trafficking the based.cooking site for recipes is the best way to generate interest in submissions. So there can be a link to a page explaining there what to do and the submission could be a form, or a designated email address. No one needs to know there is git managing it underneath.

The only good git sites are for something like this is for mirroring the data. Even that is not really needed.
<issue_comment>username_0: @username_6 As I understand, you want a form or email for creating recipes, if so this is against one of the reasons this project was created.
Luke Smith specifically created this site to create, edit and share recipes using git, because git is cool.
<issue_comment>username_6: I was speaking about places like github being unnecessary to manage collaboration. git can still be used to track changes. So whatever form that can take will work.

I thought sharing recipes was supposed to be through visiting the website.
<issue_comment>username_0: Viewing the recipes is through the web page, but creating & editing is through git.

You may be interested in #466, it proposes a script for recipe creation.
<issue_comment>username_6: It's great that you know git and know how to use GPG keys to sign your commits. I'm not suggesting anything to prevent that as it happens now, or even really talking about ways to use git. I'm talking about collaboration. Collaboration should begin from the traffic through the website. If you want the most resilient site that does not primarily rely on collaborating through a github style webpage, or even that git is involved, and attract the kinds of people looking to exchange recipes, then the steps should be normie friendly enough. The audience could increase considerably with some simple additions.

I showed the website to others, and they thought it was cool it wasn't filled with ads costing only pennies and could be made with everyone's help. But if I start talking about git and how that made the website, then you'll get a you're a crazy talking about nothing I care about look.
<issue_comment>username_7: I say that is a good decision, especially if you decide to adopt the decentralized email-based git worflow instead of the centralized Github PR worflow. That way there wouldn't be any need for people that are not registered on Github or any other git-hosting service to submit their recipes.
<issue_comment>username_0: **b a s e d !**"
flutter/website,741586348,4983,"{'number': 4983.0, 'repo': 'website', 'user_login': 'flutter'}","[{'action': 'opened', 'author': 'eduardoflorence', 'comment_id': None, 'datetime': '2020-11-12T13:08:04Z', 'masked_author': 'username_0', 'text': 'Reverts flutter/website#4981\r\n\r\n* Adds the GetX package as an option among state managers.\r\n* Currently GetX is the second most liked package on pub.dev\r\n* For newer developers, GetX can help simplify work with Flutter\r\n* As a package user, I can attest that this package has greatly improved my productivity with Flutter', 'title': 'Revert ""Removing the GetX package from Options""', 'type': 'issue'}
 {'action': 'created', 'author': 'mkiisoft', 'comment_id': 726087411.0, 'datetime': '2020-11-12 13:46:43+00:00', 'masked_author': 'username_1', 'text': 'Please, do not spam PR.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'aloisdeniel', 'comment_id': 726090696.0, 'datetime': '2020-11-12 13:52:00+00:00', 'masked_author': 'username_2', 'text': ""What's the difference with #4982 ?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'eduardoflorence', 'comment_id': 726096572.0, 'datetime': '2020-11-12 14:02:09+00:00', 'masked_author': 'username_0', 'text': ""I didn't know that the person who has been criticizing GetX (@username_4)  had the power to close PR on behalf of the Flutter team, so I stop here, but GetX keeps growing and improving"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stefandevo', 'comment_id': 726106082.0, 'datetime': '2020-11-12 14:18:30+00:00', 'masked_author': 'username_3', 'text': 'Yeah ... I found out on Twitter that @username_4 keeps on criticising that package ... so he\'s not playing it very nice here. He found it strange why GetX had so many likes on pub.dev ... between the lines he accused ""that community"" of doing fraudulent things to pub.dev to ""get the likes"". I mentioned the fact that maybe it was because GetX was also mentioned on the page on the flutter website. That was a nice tip he said; result: he added his own packages and then complained so that GetX was removed. This is such a community my friends :-) \r\n\r\nI spent lots of hours to contribute to pub but I think it\'s not worth it anymore...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mkiisoft', 'comment_id': 726108955.0, 'datetime': '2020-11-12 14:23:29+00:00', 'masked_author': 'username_1', 'text': '@username_0 this PR was closed for being a duplicate of #4982 and for being a spam-like-fashion.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stefandevo', 'comment_id': 726109466.0, 'datetime': '2020-11-12 14:24:21+00:00', 'masked_author': 'username_3', 'text': '@username_1 I not sure why the thumbs down... can you explain pls? Did you check his twitter account?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mkiisoft', 'comment_id': 726111017.0, 'datetime': '2020-11-12 14:27:00+00:00', 'masked_author': 'username_1', 'text': ""@username_3 I'm trying to stop the communication over this PR for being a duplicate and avoid the whole drama which is against CoC. @username_5 Please, this comments here. Thanks in advance!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'eduardoflorence', 'comment_id': 726112755.0, 'datetime': '2020-11-12 14:30:07+00:00', 'masked_author': 'username_0', 'text': 'I understood @username_1, I had closed [# 4982](https://github.com/flutter/website/pull/4982), because a group of haters was making improper comments, but I have reopened', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stefandevo', 'comment_id': 726113502.0, 'datetime': '2020-11-12 14:31:17+00:00', 'masked_author': 'username_3', 'text': ""Ok understood; it seems it's no comment allowed here."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'escamoteur', 'comment_id': 726144206.0, 'datetime': '2020-11-12 15:20:22+00:00', 'masked_author': 'username_4', 'text': '@username_3 your accusations are wrong. All I did is pointing out lies and misleading information in the docs and changelog of getX.\r\nYes I find the extreme increase of likes in a short time suspicious but this is about violating the CoC after several communicaty members have tried to convince the package author to change his style which he refused\r\nOver night he made a new commit softening the bragging a bit. But at tge same time started a new claim how much faster his Value and Streams are than ValueNotifier. \r\nWhich is misleading in multiple ways. \r\nConcerning your tip, you reminded me of what Filiph had already told me,nothing more. \r\nSo acusing me of foul play is wrong.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'stefandevo', 'comment_id': 726175945.0, 'datetime': '2020-11-12 16:10:39+00:00', 'masked_author': 'username_3', 'text': '@username_4 I am going to stop this thread here (and on Twitter); your twitter feeds says it all.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Hixie', 'comment_id': 726396577.0, 'datetime': '2020-11-12 23:07:44+00:00', 'masked_author': 'username_5', 'text': ""People, I don't feel welcomed when I read this thread. This applies to everyone posting here. Please, be kind, be welcoming, be friendly. If you find you would need to post something negative, whether to defend yourself or to criticize or just because you're in a bad mood, just don't, and come back the next day to write it in a positive way instead."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Revert ""Removing the GetX package from Options""
username_0: Reverts flutter/website#4981

* Adds the GetX package as an option among state managers.
* Currently GetX is the second most liked package on pub.dev
* For newer developers, GetX can help simplify work with Flutter
* As a package user, I can attest that this package has greatly improved my productivity with Flutter
<issue_comment>username_1: Please, do not spam PR.
<issue_comment>username_2: What's the difference with #4982 ?
<issue_comment>username_0: I didn't know that the person who has been criticizing GetX (@username_4)  had the power to close PR on behalf of the Flutter team, so I stop here, but GetX keeps growing and improving
<issue_comment>username_3: Yeah ... I found out on Twitter that @username_4 keeps on criticising that package ... so he's not playing it very nice here. He found it strange why GetX had so many likes on pub.dev ... between the lines he accused ""that community"" of doing fraudulent things to pub.dev to ""get the likes"". I mentioned the fact that maybe it was because GetX was also mentioned on the page on the flutter website. That was a nice tip he said; result: he added his own packages and then complained so that GetX was removed. This is such a community my friends :-) 

I spent lots of hours to contribute to pub but I think it's not worth it anymore...
<issue_comment>username_1: @username_0 this PR was closed for being a duplicate of #4982 and for being a spam-like-fashion.
<issue_comment>username_3: @username_1 I not sure why the thumbs down... can you explain pls? Did you check his twitter account?
<issue_comment>username_1: @username_3 I'm trying to stop the communication over this PR for being a duplicate and avoid the whole drama which is against CoC. @username_5 Please, this comments here. Thanks in advance!
<issue_comment>username_0: I understood @username_1, I had closed [# 4982](https://github.com/flutter/website/pull/4982), because a group of haters was making improper comments, but I have reopened
<issue_comment>username_3: Ok understood; it seems it's no comment allowed here.
<issue_comment>username_4: @username_3 your accusations are wrong. All I did is pointing out lies and misleading information in the docs and changelog of getX.
Yes I find the extreme increase of likes in a short time suspicious but this is about violating the CoC after several communicaty members have tried to convince the package author to change his style which he refused
Over night he made a new commit softening the bragging a bit. But at tge same time started a new claim how much faster his Value and Streams are than ValueNotifier. 
Which is misleading in multiple ways. 
Concerning your tip, you reminded me of what Filiph had already told me,nothing more. 
So acusing me of foul play is wrong.
<issue_comment>username_3: @username_4 I am going to stop this thread here (and on Twitter); your twitter feeds says it all.
<issue_comment>username_5: People, I don't feel welcomed when I read this thread. This applies to everyone posting here. Please, be kind, be welcoming, be friendly. If you find you would need to post something negative, whether to defend yourself or to criticize or just because you're in a bad mood, just don't, and come back the next day to write it in a positive way instead."
ethereum/ethereum-org-website,779288463,2207,,"[{'action': 'opened', 'author': 'ontologymachine', 'comment_id': None, 'datetime': '2021-01-05 16:55:40+00:00', 'masked_author': 'username_0', 'text': '**Is your feature request related to a problem? Please describe.**\r\n\r\nOmen, the decentralized prediction market platform developed by the DXdao and powered using Gnosis\' conditional tokens framework, is missing from the list of Trading and prediction market apps and it would be great if it could be added!\r\n\r\n**Describe the solution you\'d like**\r\n\r\nI would like to list Omen ([omen.eth.link](url)) prediction market platform, powered by Gnosis\' Conditional Tokens Framework, as a Dapp under ""Trading and prediction markets"" on [ethereum.org/en/dapps](url)\r\n\r\n**Describe alternatives you\'ve considered**\r\n\r\nThere can be no alternative - this is the only way ;)\r\n\r\n**Additional context**\r\n\r\nI am making this request based on the directions here: https://ethereum.org/en/contributing/adding-products/ so I hope it came to the right place.\r\n\r\nFor more information on Omen, please read [](https://blog.gnosis.pm/omen-and-the-next-generation-of-prediction-markets-2e7a2dd604e) and check it out for yourself at [omen.eth.link](url)!\r\n\r\nFor further questions please feel free to message me on Telegram at @username_0 or email upchh@example.com.', 'title': 'List Omen as a Dapp under ""Trading and prediction markets"" on ethereum.org/dapps', 'type': 'issue'}
 {'action': 'created', 'author': 'ryancreatescopy', 'comment_id': 756111662.0, 'datetime': '2021-01-07 13:19:44+00:00', 'masked_author': 'username_1', 'text': ""Hi @username_0 thanks for this. Could you please provide the information asked for in the dapp issue template and we'll look into adding your product! https://github.com/ethereum/ethereum-org-website/issues/new?assignees=&labels=Type%3A+Feature%2C+Type%3A+Content&template=suggest_dapp.md&title="", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'GeorgeTrotter', 'comment_id': 780550622.0, 'datetime': '2021-02-17 13:19:35+00:00', 'masked_author': 'username_2', 'text': ""Hey @username_0 - following up on this! Can you provide the information requested below so we can have a look at listing your dapp? Thank you!\r\n\r\nBefore suggesting a dapp, make sure you've read [our listing policy](https://www.ethereum.org/en/contributing/adding-products/).\r\n\r\nOnly continue with the issue if your dapp meets the criteria listed there.\r\n\r\nIf it does complete the following information which we need to accurately list the wallet.\r\n\r\n**Please describe the measures taken to ensure the dapp's security and provide documentation wherever possible**\r\n\r\n<!-- Please provide a link to a report or repo. If you haven't been audited but think your wallet should be listed anyway, explain here. -->\r\n\r\n**Is your dapp open source?**\r\n\r\n<!-- Can community developers open PRs against the repo? Is your smart contract available for other developers to use? -->\r\n\r\n**Can a user access the dapp without creating an account?**\r\n\r\n<!-- Can a user simply connect with their Ethereum address? If not, explain the process. -->\r\n\r\n**Are dapp funds non-custodial?**\r\n\r\n<!-- If your product frontend disappears, can users can still access and move their funds. -->\r\n\r\n**Do you offer community support?**\r\n\r\n<!-- Please let us know about any Discord servers or other means of providing support to users. -->\r\n\r\n**Describe any geographical restrictions on usage of your dapp**\r\n\r\n<!-- Is usage globally accessible or do you have restrictions? -->\r\n\r\n**Dapp title**\r\n\r\n<!-- Please provide the official name of the dapp -->\r\n\r\n**Dapp description**\r\n\r\n<!-- Please provide a short 1-2 sentence description of the dapp -->\r\n\r\n**Dapp logo**\r\n\r\n<!-- Please provide a hi-res SVG or transparent PNG in a square format -->\r\n\r\n**Brand color**\r\n\r\n<!-- Please provide a hex code for the brand color. -->"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'GeorgeTrotter', 'comment_id': None, 'datetime': '2021-03-02 14:50:59+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'GeorgeTrotter', 'comment_id': 788963481.0, 'datetime': '2021-03-02 14:50:59+00:00', 'masked_author': 'username_2', 'text': ""Hi @username_0 - we're closing this issue for now. Please feel free to reopen with the above info any time you like!"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: List Omen as a Dapp under ""Trading and prediction markets"" on ethereum.org/dapps
username_0: **Is your feature request related to a problem? Please describe.**

Omen, the decentralized prediction market platform developed by the DXdao and powered using Gnosis' conditional tokens framework, is missing from the list of Trading and prediction market apps and it would be great if it could be added!

**Describe the solution you'd like**

I would like to list Omen ([omen.eth.link](url)) prediction market platform, powered by Gnosis' Conditional Tokens Framework, as a Dapp under ""Trading and prediction markets"" on [ethereum.org/en/dapps](url)

**Describe alternatives you've considered**

There can be no alternative - this is the only way ;)

**Additional context**

I am making this request based on the directions here: https://ethereum.org/en/contributing/adding-products/ so I hope it came to the right place.

For more information on Omen, please read [](https://blog.gnosis.pm/omen-and-the-next-generation-of-prediction-markets-2e7a2dd604e) and check it out for yourself at [omen.eth.link](url)!

For further questions please feel free to message me on Telegram at @username_0 or email beth.mccarthy@gnosis.io.
<issue_comment>username_1: Hi @username_0 thanks for this. Could you please provide the information asked for in the dapp issue template and we'll look into adding your product! https://github.com/ethereum/ethereum-org-website/issues/new?assignees=&labels=Type%3A+Feature%2C+Type%3A+Content&template=suggest_dapp.md&title=
<issue_comment>username_2: Hey @username_0 - following up on this! Can you provide the information requested below so we can have a look at listing your dapp? Thank you!

Before suggesting a dapp, make sure you've read [our listing policy](https://www.ethereum.org/en/contributing/adding-products/).

Only continue with the issue if your dapp meets the criteria listed there.

If it does complete the following information which we need to accurately list the wallet.

**Please describe the measures taken to ensure the dapp's security and provide documentation wherever possible**

<!-- Please provide a link to a report or repo. If you haven't been audited but think your wallet should be listed anyway, explain here. -->

**Is your dapp open source?**

<!-- Can community developers open PRs against the repo? Is your smart contract available for other developers to use? -->

**Can a user access the dapp without creating an account?**

<!-- Can a user simply connect with their Ethereum address? If not, explain the process. -->

**Are dapp funds non-custodial?**

<!-- If your product frontend disappears, can users can still access and move their funds. -->

**Do you offer community support?**

<!-- Please let us know about any Discord servers or other means of providing support to users. -->

**Describe any geographical restrictions on usage of your dapp**

<!-- Is usage globally accessible or do you have restrictions? -->

**Dapp title**

<!-- Please provide the official name of the dapp -->

**Dapp description**

<!-- Please provide a short 1-2 sentence description of the dapp -->

**Dapp logo**

<!-- Please provide a hi-res SVG or transparent PNG in a square format -->

**Brand color**

<!-- Please provide a hex code for the brand color. --><issue_closed>
<issue_comment>username_2: Hi @username_0 - we're closing this issue for now. Please feel free to reopen with the above info any time you like!"
conda-forge/conda-forge.github.io,169819351,204,,"[{'action': 'opened', 'author': 'astrofrog', 'comment_id': None, 'datetime': '2016-08-07 22:21:54+00:00', 'masked_author': 'username_0', 'text': ""As discussed with @username_1 in https://github.com/conda-forge/hdf5-feedstock/pull/28#issuecomment-238109575, it would be nice if the builds produced by the CI as part of the testing of PRs could get uploaded to the conda-forge channel under a temporary label. This would allow people to test out a build locally or even as part of other builds, or do other kinds of more extensive testing, before deciding to go ahead and merge the PRs into master.\r\n\r\nThe label names would have to be unique, so one possibility would be to adopt the convention ``pr-<package>-<pr number>``, for instance ``pr-hdf5-28``. The label would then always contain the latest build from a PR (so we'd need to upload and overwrite previous builds), and when a PR is merged, we could make it so that it deletes the label.\r\n\r\nI think it would be better to have unique labels such as this, because otherwise if we had a single ``test`` or ``staging`` label, it would be hard to isolate which package local issues were due to."", 'title': 'Automatically upload builds from PRs to a temporary label', 'type': 'issue'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 238112733.0, 'datetime': '2016-08-07 22:32:01+00:00', 'masked_author': 'username_1', 'text': ""So as mentioned before I generally like this idea, but we may need to fill out some more pieces. Here are a couple that come to mind.\r\n\r\nWhen should a build be uploaded under this label? Should this be done every step of the PR or should there be some explicit act to make this release.\r\n\r\nAlso, how do we resolve naming conflicts? In other words, labels don't make packages with the same name unique. The name itself is unique and labels are applied to it. So if multiple PRs have the same build name and build number, they will have conflicts when uploading. Maybe one way to resolve this issue is changing the build string.\r\n\r\nFinally there may be some security issues that may need to be resolved by putting the required tokens in each PR. Not sure what the answer is for this one, but it is worth thinking about. Maybe how the first point is addressed may in some way resolve this point."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'astrofrog', 'comment_id': 238112982.0, 'datetime': '2016-08-07 22:36:51+00:00', 'masked_author': 'username_0', 'text': ""One possibility if we don't want this to be done for every single build would be to have this be triggered by a tag in the commit, e.g. ``[publish builds]`` - the label would then be auto-generated and guaranteed to be unique, and a bot could then comment on the PR with instructions on how to install the build (including the auto-generated label name)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 239513640.0, 'datetime': '2016-08-12 17:47:19+00:00', 'masked_author': 'username_1', 'text': ""Should note that there may very well be a technical issue. Namely encrypted environment variable may not be available in the PR. This is certainly the case with Travis CI. Though I know less with the other CIs. Still this idea is powerful and promising enough that we should try to figure this out or structure the process so that is a non-issue/part of the publication process.\r\n\r\nOne way might be to have a maintainer add the PR as a branch or similar (with proper configuration). This process is still a bit messy ATM, but maybe we could work on the procedure a bit. Perhaps in the long run it can be automated to match the commit approach mentioned above.\r\n\r\nAnother solution would be to use build artifacts with the CIs. AppVeyor has a pretty [clear procedure]( https://www.appveyor.com/docs/packaging-artifacts ) for making this work and is pretty easy to use. CircleCI also seems to have a pretty nice [procedure]( https://circleci.com/docs/build-artifacts/ ) for this. Travis CI has a [procedure]( https://docs.travis-ci.com/user/uploading-artifacts/ ), but it looks like one needs an S3 bucket configured. There is also region to consider (don't forget region movement does have a cost though further investigation is needed/welcome). Also it is unclear to me if this is Linux only or it works for the OS X builds too. Not sure how we would want to manage this. There is a [free tier]( https://aws.amazon.com/free/ ) for S3, but it is limited to 5GBs. So could be eaten through pretty fast if we used one for the whole org. Maybe it is worth talking with Amazon and/or Travis about what they can do to make this process simpler for us. Admittedly the build artifacts are less pleasant to install than having them in a label on the `conda-forge` channel. However, they are easier to get up and working. In short CircleCI and AppVeyor could be worked into `conda-smithy` relatively easily. May be worth double checking the limitations of this strategy. Travis CI will require more investigation, discussion, and work to get right."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 239514176.0, 'datetime': '2016-08-12 17:49:29+00:00', 'masked_author': 'username_1', 'text': 'In the long run, this may become an EP (enhancement proposal). So am starting to cobble together ideas in this [hackpad]( https://conda-forge.hackpad.com/Release-Staging-DZNKZdgiMbF ) and would appreciate more thoughts in it and the discussion continuing here (possibly there) as needed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 620259877.0, 'datetime': '2020-04-27 22:03:43+00:00', 'masked_author': 'username_1', 'text': 'I wonder if `cf-staging` or another appropriate channel could be used for this. Thoughts?\r\n\r\ncc @username_2', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'beckermr', 'comment_id': 620350815.0, 'datetime': '2020-04-28 03:05:49+00:00', 'masked_author': 'username_2', 'text': 'We should not use the staging channel for this. If people need to test packages, they can push a build to the dev label per our rc release policy. \r\n\r\nThe staging channel is an implementation detail of cfep-13', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'phil-blain', 'comment_id': 649907745.0, 'datetime': '2020-06-26 02:05:26+00:00', 'masked_author': 'username_3', 'text': ""@isuruf suggested to me on [gitter today](https://gitter.im/conda-forge/conda-forge.github.io?at=5ef51807d65a3b0292add884) that I could use the `testing` label for this, but I haven't found any reference either in CFEP or the docs for the use of this label..."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Automatically upload builds from PRs to a temporary label
username_0: As discussed with @username_1 in https://github.com/conda-forge/hdf5-feedstock/pull/28#issuecomment-238109575, it would be nice if the builds produced by the CI as part of the testing of PRs could get uploaded to the conda-forge channel under a temporary label. This would allow people to test out a build locally or even as part of other builds, or do other kinds of more extensive testing, before deciding to go ahead and merge the PRs into master.

The label names would have to be unique, so one possibility would be to adopt the convention ``pr-<package>-<pr number>``, for instance ``pr-hdf5-28``. The label would then always contain the latest build from a PR (so we'd need to upload and overwrite previous builds), and when a PR is merged, we could make it so that it deletes the label.

I think it would be better to have unique labels such as this, because otherwise if we had a single ``test`` or ``staging`` label, it would be hard to isolate which package local issues were due to.
<issue_comment>username_1: So as mentioned before I generally like this idea, but we may need to fill out some more pieces. Here are a couple that come to mind.

When should a build be uploaded under this label? Should this be done every step of the PR or should there be some explicit act to make this release.

Also, how do we resolve naming conflicts? In other words, labels don't make packages with the same name unique. The name itself is unique and labels are applied to it. So if multiple PRs have the same build name and build number, they will have conflicts when uploading. Maybe one way to resolve this issue is changing the build string.

Finally there may be some security issues that may need to be resolved by putting the required tokens in each PR. Not sure what the answer is for this one, but it is worth thinking about. Maybe how the first point is addressed may in some way resolve this point.
<issue_comment>username_0: One possibility if we don't want this to be done for every single build would be to have this be triggered by a tag in the commit, e.g. ``[publish builds]`` - the label would then be auto-generated and guaranteed to be unique, and a bot could then comment on the PR with instructions on how to install the build (including the auto-generated label name).
<issue_comment>username_1: Should note that there may very well be a technical issue. Namely encrypted environment variable may not be available in the PR. This is certainly the case with Travis CI. Though I know less with the other CIs. Still this idea is powerful and promising enough that we should try to figure this out or structure the process so that is a non-issue/part of the publication process.

One way might be to have a maintainer add the PR as a branch or similar (with proper configuration). This process is still a bit messy ATM, but maybe we could work on the procedure a bit. Perhaps in the long run it can be automated to match the commit approach mentioned above.

Another solution would be to use build artifacts with the CIs. AppVeyor has a pretty [clear procedure]( https://www.appveyor.com/docs/packaging-artifacts ) for making this work and is pretty easy to use. CircleCI also seems to have a pretty nice [procedure]( https://circleci.com/docs/build-artifacts/ ) for this. Travis CI has a [procedure]( https://docs.travis-ci.com/user/uploading-artifacts/ ), but it looks like one needs an S3 bucket configured. There is also region to consider (don't forget region movement does have a cost though further investigation is needed/welcome). Also it is unclear to me if this is Linux only or it works for the OS X builds too. Not sure how we would want to manage this. There is a [free tier]( https://aws.amazon.com/free/ ) for S3, but it is limited to 5GBs. So could be eaten through pretty fast if we used one for the whole org. Maybe it is worth talking with Amazon and/or Travis about what they can do to make this process simpler for us. Admittedly the build artifacts are less pleasant to install than having them in a label on the `conda-forge` channel. However, they are easier to get up and working. In short CircleCI and AppVeyor could be worked into `conda-smithy` relatively easily. May be worth double checking the limitations of this strategy. Travis CI will require more investigation, discussion, and work to get right.
<issue_comment>username_1: In the long run, this may become an EP (enhancement proposal). So am starting to cobble together ideas in this [hackpad]( https://conda-forge.hackpad.com/Release-Staging-DZNKZdgiMbF ) and would appreciate more thoughts in it and the discussion continuing here (possibly there) as needed.
<issue_comment>username_1: I wonder if `cf-staging` or another appropriate channel could be used for this. Thoughts?

cc @username_2
<issue_comment>username_2: We should not use the staging channel for this. If people need to test packages, they can push a build to the dev label per our rc release policy. 

The staging channel is an implementation detail of cfep-13
<issue_comment>username_3: @isuruf suggested to me on [gitter today](https://gitter.im/conda-forge/conda-forge.github.io?at=5ef51807d65a3b0292add884) that I could use the `testing` label for this, but I haven't found any reference either in CFEP or the docs for the use of this label..."
