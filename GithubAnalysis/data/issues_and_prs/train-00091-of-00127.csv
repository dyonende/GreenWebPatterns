RSS-Bridge/rss-bridge,556543953,1436,"{'number': 1436.0, 'repo': 'rss-bridge', 'user_login': 'RSS-Bridge'}","[{'action': 'opened', 'author': 'AntoineTurmel', 'comment_id': None, 'datetime': '2020-01-28T23:13:04Z', 'masked_author': 'username_0', 'text': 'Removing unnecessary insult/swearing as those targeted people will not likely read this...\r\nAlso the ""rant"" part should be a blog post on medium or somewhere more visible in my opinion.', 'title': 'Remove unnecessary insult/swearing from README', 'type': 'issue'}
 {'action': 'created', 'author': 'em92', 'comment_id': 579601636.0, 'datetime': '2020-01-29 05:34:19+00:00', 'masked_author': 'username_1', 'text': 'You mean ""Copy"" + ""Paste"" - I agree. If you mean ""Cut"" + ""Paste"" - why cut?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'AntoineTurmel', 'comment_id': 579717286.0, 'datetime': '2020-01-29 11:40:34+00:00', 'masked_author': 'username_0', 'text': 'Keeping the rant is fine. Copy + Paste and spreading the word about why Feeds are still important', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'somini', 'comment_id': 580048417.0, 'datetime': '2020-01-30 01:55:04+00:00', 'masked_author': 'username_2', 'text': 'Just a though, but the targeted ""people"" are faceless megacorps (or pedantically, websites). Only humans have feelings.\r\n\r\nViolence against [inanimate objects](https://www.youtube.com/watch?v=Xa_db5l0q4Q) can be cathartic.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 580085672.0, 'datetime': '2020-01-30 05:08:33+00:00', 'masked_author': 'username_1', 'text': 'No, it is not childish. When you say ""Fuck you"" without solid base it is childish. In our situation solid base is hypocrisy (""–ª–∏—Ü–µ–º–µ—Ä–∏–µ"" in Russian) when those bourgeois megacorps call themselves social websites.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 580086602.0, 'datetime': '2020-01-30 05:13:09+00:00', 'masked_author': 'username_1', 'text': ""Do you mean Marshall Rosenberg's nonviolent communication?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'AntoineTurmel', 'comment_id': 580208013.0, 'datetime': '2020-01-30 11:21:25+00:00', 'masked_author': 'username_0', 'text': ""Yes ;) Anyway that's just a proposal. I would have replaced it by something like ¬´ You are hurting the web ¬ª ^^'"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'em92', 'comment_id': 580600362.0, 'datetime': '2020-01-31 06:23:50+00:00', 'masked_author': 'username_1', 'text': 'It does NOT work in our world. See bourgeois and working class. They have opposite needs. This can be started (but not finished yet) to resolve, when working class takes power (or rule/governance. ""–≤–ª–∞—Å—Ç—å"" in Russian) from bourgeois. One of the first attempts of it were Commune de Paris in 1871, Soviet Russia/Union in 1917 and others.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'triatic', 'comment_id': 586497363.0, 'datetime': '2020-02-14 22:21:56+00:00', 'masked_author': 'username_3', 'text': 'I tend to agree with removing the swearing, in my opinion resorting to swearing and vulgarity weakens the argument being made and just makes the person swearing look petulant.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Niehztog', 'comment_id': 658161028.0, 'datetime': '2020-07-14 12:51:40+00:00', 'masked_author': 'username_4', 'text': 'Please accept this PR and have this words removed from README. Its just not a nice style to express aggression so directly. Just doesn\'t feel ""right"".', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Remove unnecessary insult/swearing from README
username_0: Removing unnecessary insult/swearing as those targeted people will not likely read this...
Also the ""rant"" part should be a blog post on medium or somewhere more visible in my opinion.
<issue_comment>username_1: You mean ""Copy"" + ""Paste"" - I agree. If you mean ""Cut"" + ""Paste"" - why cut?
<issue_comment>username_0: Keeping the rant is fine. Copy + Paste and spreading the word about why Feeds are still important
<issue_comment>username_2: Just a though, but the targeted ""people"" are faceless megacorps (or pedantically, websites). Only humans have feelings.

Violence against [inanimate objects](https://www.youtube.com/watch?v=Xa_db5l0q4Q) can be cathartic.
<issue_comment>username_1: No, it is not childish. When you say ""Fuck you"" without solid base it is childish. In our situation solid base is hypocrisy (""–ª–∏—Ü–µ–º–µ—Ä–∏–µ"" in Russian) when those bourgeois megacorps call themselves social websites.
<issue_comment>username_1: Do you mean Marshall Rosenberg's nonviolent communication?
<issue_comment>username_0: Yes ;) Anyway that's just a proposal. I would have replaced it by something like ¬´ You are hurting the web ¬ª ^^'
<issue_comment>username_1: It does NOT work in our world. See bourgeois and working class. They have opposite needs. This can be started (but not finished yet) to resolve, when working class takes power (or rule/governance. ""–≤–ª–∞—Å—Ç—å"" in Russian) from bourgeois. One of the first attempts of it were Commune de Paris in 1871, Soviet Russia/Union in 1917 and others.
<issue_comment>username_3: I tend to agree with removing the swearing, in my opinion resorting to swearing and vulgarity weakens the argument being made and just makes the person swearing look petulant.
<issue_comment>username_4: Please accept this PR and have this words removed from README. Its just not a nice style to express aggression so directly. Just doesn't feel ""right""."
ethereum/ethereum-org-website,1041946779,4371,"{'number': 4371.0, 'repo': 'ethereum-org-website', 'user_login': 'ethereum'}","[{'action': 'opened', 'author': 'collincusce', 'comment_id': None, 'datetime': '2021-11-02T07:03:27Z', 'masked_author': 'username_0', 'text': 'I hope you don\'t mind, but there was a lot that was factually wrong in this document, so I took a timeout to correct it. \r\n\r\nFor example, under ""What is consensus?"" I had to remove that blockchains required 51% agreement on state. This is false. Anyone can propose a block if they discover a nonce as Proof of Work. Then that block gets added to the chain. If someone finds another block with the same proof of work, they can add to the chain as well. Whoever builds next needs to choose which chain to build on. The 51% portion comes in when someone controls over 51% of the hashpower themselves they can use this to control the chain itself. This is what\'s known as a safety violation or a 51% attack. It\'s not the same as having 51% of the network agree.\r\n\r\nRather than write all that out, I decided to remove the incorrect sentence.\r\n\r\nThere\'s no such thing as a ""consensus mechanism"". The correct term is ""consensus protocol"". As proof, scope out this article... not a primary source, I know, but it\'s a quick way to show you what I mean.  Ctrl-f ""mechanism"" then ctrl-f ""protocol"". See? Not just being anal here, this is the right terminology. The original description used the correct term. https://en.wikipedia.org/wiki/Consensus_(computer_science)\r\n\r\nYou\'re going to want to fix the URL path to remove ""mechanism"" as well.\r\n\r\nThere\'s a buncha changes in there. Double check with whoever you need to. \r\n\r\nFYI, casper is susceptible to 34% attacks (actually it\'s more complicated than that, but it\'s not worth going over here). Previous version implied 51% and that\'s not correct. You need 2/3rds positive attestation, which means 1/3rd + 1 of the committee can control the vote. A very easy analysis to follow is found here which back up this claim: https://www.adiasg.me/2020/03/31/casper-ffg-explainer.html\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->', 'title': 'Update index.md', 'type': 'issue'}
 {'action': 'created', 'author': 'minimalsm', 'comment_id': 957272351.0, 'datetime': '2021-11-02 09:42:43+00:00', 'masked_author': 'username_1', 'text': 'Hey @username_0 just wanted to say thanks for the PR üò¨ Had a quick skim but will try to get this looked at properly later today or early tomorrow.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'minimalsm', 'comment_id': 981712794.0, 'datetime': '2021-11-29 14:58:10+00:00', 'masked_author': 'username_1', 'text': 'Hey @username_0, sorry for the delay on this. Going to try to get this done this week.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'minimalsm', 'comment_id': 1047813791.0, 'datetime': '2022-02-22 13:47:20+00:00', 'masked_author': 'username_1', 'text': ""@username_0 just checking in you've seen the change requests on this üôè."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'minimalsm', 'comment_id': 1054253266.0, 'datetime': '2022-02-28 13:23:43+00:00', 'masked_author': 'username_1', 'text': '@username_0 any update?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vbuterin', 'comment_id': 1061019487.0, 'datetime': '2022-03-07 18:54:34+00:00', 'masked_author': 'username_2', 'text': 'Censoring slashed transactions doesn\'t work because it\'s an assumption of the system that if an attacker attempts to censor, honest users and validators will coordinate on a minority fork that includes the slashing transactions and leaks the attacker (this is a soft fork, NOT a hard fork; no ""irregular state changes"" are required).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'collincusce', 'comment_id': 1061143858.0, 'datetime': '2022-03-07 21:15:35+00:00', 'masked_author': 'username_0', 'text': 'You mean like Ethereum Classic did?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'minimalsm', 'comment_id': 1063123651.0, 'datetime': '2022-03-09 16:39:54+00:00', 'masked_author': 'username_1', 'text': ""I think the conversation here is getting circuitous, and we're not going to reach a productive conclusion by carrying on here.\r\n\r\nI think the clear next steps are:\r\n\r\n1. Integrate the existing improvements that aren't up for debate (mostly the Sybil resistance improvements). I'm happy to pick this up and credit you @username_0. Should be able to do it by the end of this week.\r\n\r\n3. Close this PR\r\n\r\n5. Create a ticket for adding clarity on 34%/51% and ask for a researcher to help us write this clarification.\r\n\r\n7. Get a review from a proof-of-stake researcher to ensure the page comprehensively covers consensus mechanisms\r\n\r\nAppreciate you highlighting these @username_0"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'minimalsm', 'comment_id': 1063123887.0, 'datetime': '2022-03-09 16:40:08+00:00', 'masked_author': 'username_1', 'text': '@all-contributors please add @username_0 for docs, ideas, feedback', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Update index.md
username_0: I hope you don't mind, but there was a lot that was factually wrong in this document, so I took a timeout to correct it. 

For example, under ""What is consensus?"" I had to remove that blockchains required 51% agreement on state. This is false. Anyone can propose a block if they discover a nonce as Proof of Work. Then that block gets added to the chain. If someone finds another block with the same proof of work, they can add to the chain as well. Whoever builds next needs to choose which chain to build on. The 51% portion comes in when someone controls over 51% of the hashpower themselves they can use this to control the chain itself. This is what's known as a safety violation or a 51% attack. It's not the same as having 51% of the network agree.

Rather than write all that out, I decided to remove the incorrect sentence.

There's no such thing as a ""consensus mechanism"". The correct term is ""consensus protocol"". As proof, scope out this article... not a primary source, I know, but it's a quick way to show you what I mean.  Ctrl-f ""mechanism"" then ctrl-f ""protocol"". See? Not just being anal here, this is the right terminology. The original description used the correct term. https://en.wikipedia.org/wiki/Consensus_(computer_science)

You're going to want to fix the URL path to remove ""mechanism"" as well.

There's a buncha changes in there. Double check with whoever you need to. 

FYI, casper is susceptible to 34% attacks (actually it's more complicated than that, but it's not worth going over here). Previous version implied 51% and that's not correct. You need 2/3rds positive attestation, which means 1/3rd + 1 of the committee can control the vote. A very easy analysis to follow is found here which back up this claim: https://www.adiasg.me/2020/03/31/casper-ffg-explainer.html

<!--- Provide a general summary of your changes in the Title above -->

## Description

<!--- Describe your changes in detail -->

## Related Issue

<!--- This project accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
<issue_comment>username_1: Hey @username_0 just wanted to say thanks for the PR üò¨ Had a quick skim but will try to get this looked at properly later today or early tomorrow.
<issue_comment>username_1: Hey @username_0, sorry for the delay on this. Going to try to get this done this week.
<issue_comment>username_1: @username_0 just checking in you've seen the change requests on this üôè.
<issue_comment>username_1: @username_0 any update?
<issue_comment>username_2: Censoring slashed transactions doesn't work because it's an assumption of the system that if an attacker attempts to censor, honest users and validators will coordinate on a minority fork that includes the slashing transactions and leaks the attacker (this is a soft fork, NOT a hard fork; no ""irregular state changes"" are required).
<issue_comment>username_0: You mean like Ethereum Classic did?
<issue_comment>username_1: I think the conversation here is getting circuitous, and we're not going to reach a productive conclusion by carrying on here.

I think the clear next steps are:

1. Integrate the existing improvements that aren't up for debate (mostly the Sybil resistance improvements). I'm happy to pick this up and credit you @username_0. Should be able to do it by the end of this week.

3. Close this PR

5. Create a ticket for adding clarity on 34%/51% and ask for a researcher to help us write this clarification.

7. Get a review from a proof-of-stake researcher to ensure the page comprehensively covers consensus mechanisms

Appreciate you highlighting these @username_0
<issue_comment>username_1: @all-contributors please add @username_0 for docs, ideas, feedback"
kubeflow/website,754123545,2381,,"[{'action': 'opened', 'author': 'Bobgy', 'comment_id': None, 'datetime': '2020-12-01 07:35:24+00:00', 'masked_author': 'username_0', 'text': 'In general, I did some quick research, it seems the extra rules like ""always adding empty lines before and after code blocks"" are not implemented by markdown formatters. However, they can be enforced by linters like https://github.com/DavidAnson/vscode-markdownlint#configure. Install that plugin on your vscode and it automatically highlights problems. Additionally, we could set up the same process in presubmit tests, so it\'s automatically checked for everyone. I think that\'s a much better way to get everyone writing markdowns with the same set of best practices. It should also save all the manual review efforts we spend on these.\r\n\r\n_Originally posted by @username_0 in https://github.com/kubeflow/website/pull/2372#discussion_r533124536_', 'title': '[Testing] Standardize markdown linting rules', 'type': 'issue'}
 {'action': 'created', 'author': 'Bobgy', 'comment_id': 736283461.0, 'datetime': '2020-12-01 07:36:42+00:00', 'masked_author': 'username_0', 'text': '/cc @username_2 @username_1 \r\nI feel like this is the best way to align on best practices with minimum ongoing cost.\r\nWhat do you think?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '8bitmp3', 'comment_id': 736774926.0, 'datetime': '2020-12-01 19:41:35+00:00', 'masked_author': 'username_1', 'text': ""Thanks @username_0 that's a good idea IMO üëç \r\n\r\nPerhaps to make things easy we can also explore adding a linter to CI that test `.md` files and highlights things to PR authors. For example, there's https://github.com/markdownlint/markdownlint and https://github.com/marketplace/actions/markdownlint-cli\r\n\r\nVS Code has some good extensions - I'm not 100% sure all contributors would be using it ü§î.\r\n\r\nI'd also highly recommend adding a link checker to CI - some PRs may cause 404 errors on other pages (e.g. `kfserving` very recently)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '8bitmp3', 'comment_id': 736779968.0, 'datetime': '2020-12-01 19:51:17+00:00', 'masked_author': 'username_1', 'text': ""@username_2 I think that's a great idea üëç \r\n\r\nAt TensorFlow, @lamberta and team built the `nblint` tool for notebooks that you may be aware of (https://github.com/tensorflow/docs/tree/master/tools/tensorflow_docs/tools). Here's a Google `style` guide example: https://github.com/tensorflow/docs/blob/master/tools/tensorflow_docs/tools/nblint/style/google.py"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bobgy', 'comment_id': 736999168.0, 'datetime': '2020-12-02 05:25:31+00:00', 'masked_author': 'username_0', 'text': ""Totally agree, https://github.com/DavidAnson/markdownlint is a nodejs tool that powers the vscode plugin I mentioned in the issue. I believe adding it to CI will be very beneficial for guarding new changes.\r\n\r\nAlthough, to achieve the best contribution experience, I'd suggest any contributors to install the plugin, so that they can get instant feedback right in the editor, when they write the documentation."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bobgy', 'comment_id': 737001683.0, 'datetime': '2020-12-02 05:33:11+00:00', 'masked_author': 'username_0', 'text': 'Is there any existing tools that can do this? That will be very beneficial', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '8bitmp3', 'comment_id': 737269601.0, 'datetime': '2020-12-02 14:37:36+00:00', 'masked_author': 'username_1', 'text': ""I agree but I'm not 100% sure everyone wants to use VS Code as an IDE. Some folks may be editing Markdown using PyCharm, Atom, or the GitHub app/web UI. \r\n\r\nMaybe we can point users to the Kubernetes Style Guide (https://kubernetes.io/docs/contribute/style/content-guide/), which is like a concise version of the Google Style Guide and it's Kubeflow is K8s-based, so it's üëç . \r\n\r\nSo, I suggest we should have: \r\n\r\n1) A step that notifies the users to review their code using the Kubernetes style guide when they open a PR (issue and PR creation can be customized?) \r\n\r\n2) Let the CI/GitHub Actions - e.g. a Markdown linter and a link checker - do the job on the background\r\n\r\n---\r\n\r\nK8s' [`CONTRIBUTING.md`](https://github.com/kubernetes/website/blob/master/CONTRIBUTING.md) under `/website` has the following paragraph:\r\n\r\n```\r\nBefore submitting a pull request to create new content, please review the [Kubernetes.io style guide](http://kubernetes.io/docs/home/contribute/style-guide/) and follow the [instructions for using page templates](https://kubernetes.io/docs/contribute/style/page-content-types/).\r\n```\r\n\r\nHowever, I'm not 100% sure all users check `CONTRIBUTING.md` before submitting a PR, especially existing contributors. But having the above-mentioned step is still a nice-to-have.\r\n\r\nKubeflow's site currently has a lengthy contributing section (https://www.kubeflow.org/docs/about/contributing/) and I can't find `CONTRIBUTING.md` on `github.com/kubeflow/website`. Maybe we should have something similar to https://github.com/kubernetes/website/blob/master/CONTRIBUTING.md and include the style guide somewhere in the beginning, since it gets a bit technical with `OWNERS` etc.\r\n\r\ncc @username_3 @jlewi"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'joeliedtke', 'comment_id': 737460818.0, 'datetime': '2020-12-02 19:57:53+00:00', 'masked_author': 'username_2', 'text': 'I\'m curious to see if these link checkers work well with our content. It would be great if they could help us prevent the publication of broken links.\r\n\r\nTo prevent file deletions from breaking links, would it make sense to consider adding a check like the following: ""If a file was deleted by this PR, does this PR also include a change to the redirects file?"" The thought being that if a file is deleted then we may need a change to the redirects file to prevent links from being broken. This is not necessarily required, since a PR could properly remove all links to a page.\r\n\r\nRegarding the style guide, currently Kubeflow has a [style guide](https://www.kubeflow.org/docs/about/style-guide/) that is written at a similar level as the Kubernetes guide. I do tend to refer to the Google style guide in reviews, since it has good illustrations for specific issues that aren\'t covered directly in the Kubeflow guide. Are there specific changes that we should consider making to the Kubeflow style guide? \r\n\r\n@username_1 , thanks for pointing out the TensorFlow notebook linter. That might be a good starting point for linting for specific terms.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Bobgy', 'comment_id': 737625514.0, 'datetime': '2020-12-03 02:41:23+00:00', 'masked_author': 'username_0', 'text': 'I think each of these editors should have similar plugins -- maybe even powered by the same tool -- except GitHub app/web UI. A commandline tool that tells what is wrong will be the fallback if a contributor do not have access to any of those.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'RFMVasconcelos', 'comment_id': 739056402.0, 'datetime': '2020-12-04 22:25:46+00:00', 'masked_author': 'username_3', 'text': 'Love the thought process in this discussion! Standard linting and CI for links both sound fantastic', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [Testing] Standardize markdown linting rules
username_0: In general, I did some quick research, it seems the extra rules like ""always adding empty lines before and after code blocks"" are not implemented by markdown formatters. However, they can be enforced by linters like https://github.com/DavidAnson/vscode-markdownlint#configure. Install that plugin on your vscode and it automatically highlights problems. Additionally, we could set up the same process in presubmit tests, so it's automatically checked for everyone. I think that's a much better way to get everyone writing markdowns with the same set of best practices. It should also save all the manual review efforts we spend on these.

_Originally posted by @username_0 in https://github.com/kubeflow/website/pull/2372#discussion_r533124536_
<issue_comment>username_0: /cc @username_2 @username_1 
I feel like this is the best way to align on best practices with minimum ongoing cost.
What do you think?
<issue_comment>username_1: Thanks @username_0 that's a good idea IMO üëç 

Perhaps to make things easy we can also explore adding a linter to CI that test `.md` files and highlights things to PR authors. For example, there's https://github.com/markdownlint/markdownlint and https://github.com/marketplace/actions/markdownlint-cli

VS Code has some good extensions - I'm not 100% sure all contributors would be using it ü§î.

I'd also highly recommend adding a link checker to CI - some PRs may cause 404 errors on other pages (e.g. `kfserving` very recently).
<issue_comment>username_1: @username_2 I think that's a great idea üëç 

At TensorFlow, @lamberta and team built the `nblint` tool for notebooks that you may be aware of (https://github.com/tensorflow/docs/tree/master/tools/tensorflow_docs/tools). Here's a Google `style` guide example: https://github.com/tensorflow/docs/blob/master/tools/tensorflow_docs/tools/nblint/style/google.py
<issue_comment>username_0: Totally agree, https://github.com/DavidAnson/markdownlint is a nodejs tool that powers the vscode plugin I mentioned in the issue. I believe adding it to CI will be very beneficial for guarding new changes.

Although, to achieve the best contribution experience, I'd suggest any contributors to install the plugin, so that they can get instant feedback right in the editor, when they write the documentation.
<issue_comment>username_0: Is there any existing tools that can do this? That will be very beneficial
<issue_comment>username_1: I agree but I'm not 100% sure everyone wants to use VS Code as an IDE. Some folks may be editing Markdown using PyCharm, Atom, or the GitHub app/web UI. 

Maybe we can point users to the Kubernetes Style Guide (https://kubernetes.io/docs/contribute/style/content-guide/), which is like a concise version of the Google Style Guide and it's Kubeflow is K8s-based, so it's üëç . 

So, I suggest we should have: 

1) A step that notifies the users to review their code using the Kubernetes style guide when they open a PR (issue and PR creation can be customized?) 

2) Let the CI/GitHub Actions - e.g. a Markdown linter and a link checker - do the job on the background

---

K8s' [`CONTRIBUTING.md`](https://github.com/kubernetes/website/blob/master/CONTRIBUTING.md) under `/website` has the following paragraph:

```
Before submitting a pull request to create new content, please review the [Kubernetes.io style guide](http://kubernetes.io/docs/home/contribute/style-guide/) and follow the [instructions for using page templates](https://kubernetes.io/docs/contribute/style/page-content-types/).
```

However, I'm not 100% sure all users check `CONTRIBUTING.md` before submitting a PR, especially existing contributors. But having the above-mentioned step is still a nice-to-have.

Kubeflow's site currently has a lengthy contributing section (https://www.kubeflow.org/docs/about/contributing/) and I can't find `CONTRIBUTING.md` on `github.com/kubeflow/website`. Maybe we should have something similar to https://github.com/kubernetes/website/blob/master/CONTRIBUTING.md and include the style guide somewhere in the beginning, since it gets a bit technical with `OWNERS` etc.

cc @username_3 @jlewi
<issue_comment>username_2: I'm curious to see if these link checkers work well with our content. It would be great if they could help us prevent the publication of broken links.

To prevent file deletions from breaking links, would it make sense to consider adding a check like the following: ""If a file was deleted by this PR, does this PR also include a change to the redirects file?"" The thought being that if a file is deleted then we may need a change to the redirects file to prevent links from being broken. This is not necessarily required, since a PR could properly remove all links to a page.

Regarding the style guide, currently Kubeflow has a [style guide](https://www.kubeflow.org/docs/about/style-guide/) that is written at a similar level as the Kubernetes guide. I do tend to refer to the Google style guide in reviews, since it has good illustrations for specific issues that aren't covered directly in the Kubeflow guide. Are there specific changes that we should consider making to the Kubeflow style guide? 

@username_1 , thanks for pointing out the TensorFlow notebook linter. That might be a good starting point for linting for specific terms.
<issue_comment>username_0: I think each of these editors should have similar plugins -- maybe even powered by the same tool -- except GitHub app/web UI. A commandline tool that tells what is wrong will be the fallback if a contributor do not have access to any of those.
<issue_comment>username_3: Love the thought process in this discussion! Standard linting and CI for links both sound fantastic"
daattali/beautiful-jekyll,259068821,253,,"[{'action': 'opened', 'author': 'OCram85', 'comment_id': None, 'datetime': '2017-09-20 07:40:16+00:00', 'masked_author': 'username_0', 'text': 'Hi Dean,\r\nwhat do you think about adding a basic template file for new posts/pages?\r\n\r\nEspecially for the possible *YAML Front Matter* variables and their meanings?\r\n\r\nMaybe something like this:\r\n\r\n```\r\n---\r\nlayout: # page | post (blog) | minimal\r\ntitle:\t# Page or blog post title\r\nsubtitle: # Short description of page or blog post that goes under the title\r\nimage: # /path/to/img\r\nshow-avatar:  #(false) | true\r\nbigimg:\t# /path/to/img - or multiple entries <- ""Path"": ""Description"">\r\ncategory: # Powershell\r\ntags: # [tag1, tag2, tag3]\r\n\r\n# ---- Jekyll optional vars ---- #\r\n# date: # overrides tha tage from the file name YYYY-MM-DD HH:MM:SS\r\n# permalink: # (default /year/month/day/title.html)\r\n# published: # (true) | false\r\n\r\n# ---- Theme based optional vars ---- #\r\n# comments: # (false) | true\r\n# show-avatar: # (true) | false\r\n# social-share: # If you don\'t want to show buttons to share a blog post on social media, use social-share: false (this feature is turned on by default).\r\n# use-site-title: # (false) | true\r\n---\r\n\r\n**Content**\r\n* TOC Placeholder\r\n{:toc}\r\n```\r\n\r\nSo it would be easier for users starting a new page/post without jumping back and forth between the readme and actual file.', 'title': 'Post and Page Templates', 'type': 'issue'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 330915751.0, 'datetime': '2017-09-20 17:00:19+00:00', 'masked_author': 'username_1', 'text': ""Hi Marco, I think this would be very useful for some people, but those are likely the people who wouldn't really need this kind of help. I'm trying to think of the jekyll/internet noobs (that was always the focus of this theme - make something incredibly simple with instructions that hopefully my mom could follow and use) and I think for them this page would be intimidating and they wouldn't know what to do with it. The brackets, the `|` signs, the fact that they need to type the value after the field name but before the comment character - I think this is convenient for people who understand this but for the majority of people who are not power users it can be offputting."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'OCram85', 'comment_id': 338119611.0, 'datetime': '2017-10-20 06:40:56+00:00', 'masked_author': 'username_0', 'text': ""I'm ok with that.\r\nI came up with the template idea when I first started with beatuiful-jekyll. I was trying to create a overview fo the possible vars in the front matter area of a post. I know there are some mandatory and optional feature realted vars.\r\n\r\nBut I absolutely understand to keep it as simple as possible. Simplicity always wins^^"", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'daattali', 'comment_id': None, 'datetime': '2017-10-20 14:57:19+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'daattali', 'comment_id': 338231074.0, 'datetime': '2017-10-20 14:57:19+00:00', 'masked_author': 'username_1', 'text': ""I think title is the only mandatory field. Although even if you don't set that"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Post and Page Templates
username_0: Hi Dean,
what do you think about adding a basic template file for new posts/pages?

Especially for the possible *YAML Front Matter* variables and their meanings?

Maybe something like this:

```
---
layout: # page | post (blog) | minimal
title:	# Page or blog post title
subtitle: # Short description of page or blog post that goes under the title
image: # /path/to/img
show-avatar:  #(false) | true
bigimg:	# /path/to/img - or multiple entries <- ""Path"": ""Description"">
category: # Powershell
tags: # [tag1, tag2, tag3]

# ---- Jekyll optional vars ---- #
# date: # overrides tha tage from the file name YYYY-MM-DD HH:MM:SS
# permalink: # (default /year/month/day/title.html)
# published: # (true) | false

# ---- Theme based optional vars ---- #
# comments: # (false) | true
# show-avatar: # (true) | false
# social-share: # If you don't want to show buttons to share a blog post on social media, use social-share: false (this feature is turned on by default).
# use-site-title: # (false) | true
---

**Content**
* TOC Placeholder
{:toc}
```

So it would be easier for users starting a new page/post without jumping back and forth between the readme and actual file.
<issue_comment>username_1: Hi Marco, I think this would be very useful for some people, but those are likely the people who wouldn't really need this kind of help. I'm trying to think of the jekyll/internet noobs (that was always the focus of this theme - make something incredibly simple with instructions that hopefully my mom could follow and use) and I think for them this page would be intimidating and they wouldn't know what to do with it. The brackets, the `|` signs, the fact that they need to type the value after the field name but before the comment character - I think this is convenient for people who understand this but for the majority of people who are not power users it can be offputting.
<issue_comment>username_0: I'm ok with that.
I came up with the template idea when I first started with beatuiful-jekyll. I was trying to create a overview fo the possible vars in the front matter area of a post. I know there are some mandatory and optional feature realted vars.

But I absolutely understand to keep it as simple as possible. Simplicity always wins^^<issue_closed>
<issue_comment>username_1: I think title is the only mandatory field. Although even if you don't set that"
corona-warn-app/cwa-website,1015229480,1816,"{'number': 1816.0, 'repo': 'cwa-website', 'user_login': 'corona-warn-app'}","[{'action': 'opened', 'author': 'brifemu', 'comment_id': None, 'datetime': '2021-10-04T14:07:14Z', 'masked_author': 'username_0', 'text': 'In this branch I added blogs and science entries on broken list Cypress test dynamically.\r\n\r\n![dd9165a81c0b90112ed4761a5f6a0c35](https://user-images.githubusercontent.com/44208107/135865899-34b16ce7-8e81-4081-b96b-178cd31e13e7.png)\r\n\r\nFirst test item appears failed because I force stop.', 'title': 'Added blog and science entries to Cypress test', 'type': 'issue'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 933629471.0, 'datetime': '2021-10-04 16:03:38+00:00', 'masked_author': 'username_1', 'text': '@username_0 \r\nDid this script run to completion?\r\nHow many tests passed?\r\nHow many tests failed?\r\nHow long did it take to run?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 933656191.0, 'datetime': '2021-10-04 16:35:32+00:00', 'masked_author': 'username_1', 'text': ""I don't think that this script is clean yet. It took a long time to run and then it failed almost at the end, then restarted automatically, overwriting the previous session log.\r\n\r\nIt also complained about some coronawarn.app links which should not be present in the web when it is run locally."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 934130085.0, 'datetime': '2021-10-05 07:10:52+00:00', 'masked_author': 'username_1', 'text': 'Test failure in Google Chrome\r\n\r\n![image](https://user-images.githubusercontent.com/66998419/135976549-8b7d1291-3693-4413-a1d6-87cd76b1b5ff.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 934139841.0, 'datetime': '2021-10-05 07:25:24+00:00', 'masked_author': 'username_1', 'text': '```\r\n\r\n![image](https://user-images.githubusercontent.com/66998419/135978431-58ef38e3-2eb2-4b30-bbe9-dca285d145b2.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'brifemu', 'comment_id': 934245646.0, 'datetime': '2021-10-05 09:45:06+00:00', 'masked_author': 'username_0', 'text': 'About test results, I push this to get access on other computer more powerful to make the test. When I finish, I will come back here and post the results.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'brifemu', 'comment_id': 934351593.0, 'datetime': '2021-10-05 12:11:33+00:00', 'masked_author': 'username_0', 'text': ""I had to edit cypress.json to be able to complete the test. I will push the changes after sending  this comment.\r\n\r\nAbout test results. It takes 614.17 seconds, failing 5/30 tests.\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136019628-b76dfd96-9317-4ac8-b2bd-cd2d8829aeb5.png)\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136019783-1de9eed4-e55d-4ccf-aa7a-9fbbd04c19e8.png)\r\n\r\n**Errors in /de/faq/**\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136017936-06d44a7d-c5f0-446d-a0e6-0819274da4aa.png)\r\n\r\n**Errors in /en/faq/**\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018070-04c0f683-387a-4786-b900-8cae064611d7.png)\r\n\r\n**Errors in /en/blog/**\r\nThese errors happen because GitHub blocks multiple connections. They are not 404 errors. There are more, but I don't include them because there are a lot.\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018251-ae9c475f-27ff-4e84-aaab-0d6b81d5ef07.png)\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018287-8db262a3-ac86-422c-a2b2-829ab5b7d9c2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018319-00048ad6-6575-4941-9bcc-d41c2c714017.png)\r\n\r\n**Errors in /de/science/**\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018668-38a91989-e52e-4514-aa32-1546bb8dbe93.png)\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018733-77c15c7f-76c3-4ae9-9268-c25ffa39e714.png)\r\n\r\n**Errors in /en/science/**\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018868-1d01e2c4-fb32-45ae-a954-57ca0aa913ca.png)\r\n\r\n![image](https://user-images.githubusercontent.com/44208107/136018902-00dd6f8b-b8ee-4af7-9120-1ade70d4597c.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 934541536.0, 'datetime': '2021-10-05 15:59:16+00:00', 'masked_author': 'username_1', 'text': ""@username_0 \r\nIt's good to see you are making progress! I submitted a new issue #1824 regarding the mp4 files.\r\n\r\nBefore this PR is merged I suggest that it should pass an integration test with the other cypress tests together:\r\n\r\n```\r\nnpm run test:chrome\r\nnpm run test:firefox\r\n```\r\n\r\nWe are not quite at that stage yet!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'MikeMcC399', 'comment_id': 940057778.0, 'datetime': '2021-10-11 13:59:33+00:00', 'masked_author': 'username_1', 'text': '@username_2 / @username_0 \r\n\r\nAfter 38 minutes run-time I got 30 tests passed, 0 tests failed! üöÄ üëçüèª', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'dsarkar', 'comment_id': 940167220.0, 'datetime': '2021-10-11 16:13:54+00:00', 'masked_author': 'username_2', 'text': '@username_1 @username_0 Thanks!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Added blog and science entries to Cypress test
username_0: In this branch I added blogs and science entries on broken list Cypress test dynamically.

![dd9165a81c0b90112ed4761a5f6a0c35](https://user-images.githubusercontent.com/44208107/135865899-34b16ce7-8e81-4081-b96b-178cd31e13e7.png)

First test item appears failed because I force stop.
<issue_comment>username_1: @username_0 
Did this script run to completion?
How many tests passed?
How many tests failed?
How long did it take to run?
<issue_comment>username_1: I don't think that this script is clean yet. It took a long time to run and then it failed almost at the end, then restarted automatically, overwriting the previous session log.

It also complained about some coronawarn.app links which should not be present in the web when it is run locally.
<issue_comment>username_1: Test failure in Google Chrome

![image](https://user-images.githubusercontent.com/66998419/135976549-8b7d1291-3693-4413-a1d6-87cd76b1b5ff.png)
<issue_comment>username_1: ```

![image](https://user-images.githubusercontent.com/66998419/135978431-58ef38e3-2eb2-4b30-bbe9-dca285d145b2.png)
<issue_comment>username_0: About test results, I push this to get access on other computer more powerful to make the test. When I finish, I will come back here and post the results.
<issue_comment>username_0: I had to edit cypress.json to be able to complete the test. I will push the changes after sending  this comment.

About test results. It takes 614.17 seconds, failing 5/30 tests.

![image](https://user-images.githubusercontent.com/44208107/136019628-b76dfd96-9317-4ac8-b2bd-cd2d8829aeb5.png)

![image](https://user-images.githubusercontent.com/44208107/136019783-1de9eed4-e55d-4ccf-aa7a-9fbbd04c19e8.png)

**Errors in /de/faq/**

![image](https://user-images.githubusercontent.com/44208107/136017936-06d44a7d-c5f0-446d-a0e6-0819274da4aa.png)

**Errors in /en/faq/**

![image](https://user-images.githubusercontent.com/44208107/136018070-04c0f683-387a-4786-b900-8cae064611d7.png)

**Errors in /en/blog/**
These errors happen because GitHub blocks multiple connections. They are not 404 errors. There are more, but I don't include them because there are a lot.

![image](https://user-images.githubusercontent.com/44208107/136018251-ae9c475f-27ff-4e84-aaab-0d6b81d5ef07.png)

![image](https://user-images.githubusercontent.com/44208107/136018287-8db262a3-ac86-422c-a2b2-829ab5b7d9c2.png)

![image](https://user-images.githubusercontent.com/44208107/136018319-00048ad6-6575-4941-9bcc-d41c2c714017.png)

**Errors in /de/science/**

![image](https://user-images.githubusercontent.com/44208107/136018668-38a91989-e52e-4514-aa32-1546bb8dbe93.png)

![image](https://user-images.githubusercontent.com/44208107/136018733-77c15c7f-76c3-4ae9-9268-c25ffa39e714.png)

**Errors in /en/science/**

![image](https://user-images.githubusercontent.com/44208107/136018868-1d01e2c4-fb32-45ae-a954-57ca0aa913ca.png)

![image](https://user-images.githubusercontent.com/44208107/136018902-00dd6f8b-b8ee-4af7-9120-1ade70d4597c.png)
<issue_comment>username_1: @username_0 
It's good to see you are making progress! I submitted a new issue #1824 regarding the mp4 files.

Before this PR is merged I suggest that it should pass an integration test with the other cypress tests together:

```
npm run test:chrome
npm run test:firefox
```

We are not quite at that stage yet!
<issue_comment>username_1: @username_2 / @username_0 

After 38 minutes run-time I got 30 tests passed, 0 tests failed! üöÄ üëçüèª
<issue_comment>username_2: @username_1 @username_0 Thanks!"
kubernetes/website,640219947,21839,,"[{'action': 'opened', 'author': 'oke-py', 'comment_id': None, 'datetime': '2020-06-17 07:48:19+00:00', 'masked_author': 'username_0', 'text': '**This is a Feature Request**\r\n\r\n<!-- Please only use this template for submitting feature/enhancement requests -->\r\n<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->\r\n\r\n**What would you like to be added**\r\nUpdate docs/concepts/overview/what-is-kubernetes.md to follow v1.17 of the original (English) text.\r\n\r\n**Why is this needed**\r\ncontent/ja/docs/concepts/overview/what-is-kubernetes.md is outdated.\r\n\r\n**Comments**\r\n/language ja\r\n/good-first-issue\r\n\r\nFile to update\r\nhttps://github.com/kubernetes/website/blob/dev-1.17-ja.3/content/ja/docs/concepts/overview/what-is-kubernetes.md\r\n\r\nOriginal\r\nhttps://github.com/kubernetes/website/blob/release-1.17/content/en/docs/concepts/overview/what-is-kubernetes.md\r\n\r\ndiff between translated and v1.17\r\nhttps://gist.github.com/59fc53287d4ea65945211ca7f10aa728\r\n\r\n**Note**\r\nCurrently, we use dev-1.17-ja.2 branch. Please open a PR targeting the branch.\r\n\r\nref\r\n[How To Contribute](https://kubernetes-docs-ja.kibe.la/shared/entries/c5878aa5-ad1f-4f29-a5bb-25853cbc14ec)\r\n[ÁøªË®≥„Çπ„Çø„Ç§„É´„Ç¨„Ç§„Éâ](https://kubernetes-docs-ja.kibe.la/shared/entries/5efe4fa7-d2a1-4a1d-8bc3-ce7ccdc064a6)\r\n\r\nIf you have a question, feel free to ask us at slack.k8s.io #kubernetes-docs-ja channel', 'title': 'ja: Make docs/concepts/overview/what-is-kubernetes.md follow v1.17 of the original text', 'type': 'issue'}
 {'action': 'created', 'author': 'chaspy', 'comment_id': 645483450.0, 'datetime': '2020-06-17 16:35:34+00:00', 'masked_author': 'username_1', 'text': '/assign', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chaspy', 'comment_id': 645547195.0, 'datetime': '2020-06-17 18:32:29+00:00', 'masked_author': 'username_1', 'text': '```diff\r\n--- 1.13-row.md\t2020-06-18 03:31:08.000000000 +0900\r\n+++ 1.17-row.md\t2020-06-18 03:24:32.000000000 +0900\r\n@@ -2,10 +2,12 @@\r\n reviewers:\r\n - bgrant0607\r\n - mikedanese\r\n-title: What is Kubernetes?\r\n+title: What is Kubernetes\r\n+description: >\r\n+  Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.\r\n content_template: templates/concept\r\n weight: 10\r\n-card: \r\n+card:\r\n   name: concepts\r\n   weight: 10\r\n ---\r\n@@ -15,91 +17,78 @@\r\n {{% /capture %}}\r\n \r\n {{% capture body %}}\r\n-Kubernetes is a portable, extensible open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.\r\n+Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.\r\n \r\n-Google open-sourced the Kubernetes project in 2014. Kubernetes builds upon a [decade and a half of experience that Google has with running\r\n-production workloads at scale](https://research.google.com/pubs/pub43438.html), combined with best-of-breed ideas and practices from the community.\r\n+The name Kubernetes originates from Greek, meaning helmsman or pilot. Google open-sourced the Kubernetes project in 2014. Kubernetes combines [over 15 years of Google\'s experience](/blog/2015/04/borg-predecessor-to-kubernetes/) running production workloads at scale with best-of-breed ideas and practices from the community.\r\n \r\n-## Why do I need Kubernetes and what can it do?\r\n+## Going back in time\r\n \r\n-Kubernetes has a number of features. It can be thought of as:\r\n+Let\'s take a look at why Kubernetes is so useful by going back in time.\r\n \r\n-- a container platform\r\n-- a microservices platform\r\n-- a portable cloud platform\r\n-and a lot more.\r\n+![Deployment evolution](/images/docs/Container_Evolution.svg)\r\n \r\n-Kubernetes provides a **container-centric** management environment. It orchestrates computing, networking, and storage infrastructure on behalf of user workloads. This provides much of the simplicity of Platform as a Service (PaaS) with the flexibility of Infrastructure as a Service (IaaS), and enables portability across infrastructure providers.\r\n+**Traditional deployment era:**\r\n+Early on, organizations ran applications on physical servers. There was no way to define resource boundaries for applications in a physical server, and this caused resource allocation issues. For example, if multiple applications run on a physical server, there can be instances where one application would take up most of the resources, and as a result, the other applications would underperform. A solution for this would be to run each application on a different physical server. But this did not scale as resources were underutilized, and it was expensive for organizations to maintain many physical servers.\r\n \r\n-## How is Kubernetes a platform?\r\n+**Virtualized deployment era:**  As a solution, virtualization was introduced. It allows you to run multiple Virtual Machines (VMs) on a single physical server\'s CPU. Virtualization allows applications to be isolated between VMs and provides a level of security as the information of one application cannot be freely accessed by another application.\r\n \r\n-Even though Kubernetes provides a lot of functionality, there are always new scenarios that would benefit from new features. Application-specific workflows can be streamlined to accelerate developer velocity. Ad hoc orchestration that is acceptable initially often requires robust automation at scale. This is why Kubernetes was also designed to serve as a platform for building an ecosystem of components and tools to make it easier to deploy, scale, and manage applications.\r\n+Virtualization allows better utilization of resources in a physical server and allows better scalability because an application can be added or updated easily, reduces hardware costs, and much more. With virtualization you can present a set of physical resources as a cluster of disposable virtual machines.\r\n \r\n-[Labels](/docs/concepts/overview/working-with-objects/labels/) empower users to organize their resources however they please. [Annotations](/docs/concepts/overview/working-with-objects/annotations/) enable users to decorate resources with custom information to facilitate their workflows and provide an easy way for management tools to checkpoint state.\r\n+Each VM is a full machine running all the components, including its own operating system, on top of the virtualized hardware.\r\n \r\n-Additionally, the [Kubernetes control plane](/docs/concepts/overview/components/) is built upon the same [APIs](/docs/reference/using-api/api-overview/) that are available to developers and users. Users can write their own controllers, such as [schedulers](https://github.com/kubernetes/community/blob/{{< param ""githubbranch"" >}}/contributors/devel/scheduler.md), with [their own APIs](/docs/concepts/api-extension/custom-resources/) that can be targeted by a general-purpose [command-line tool](/docs/user-guide/kubectl-overview/).\r\n+**Container deployment era:** Containers are similar to VMs, but they have relaxed isolation properties to share the Operating System (OS) among the applications. Therefore, containers are considered lightweight. Similar to a VM, a container has its own filesystem, CPU, memory, process space, and more. As they are decoupled from the underlying infrastructure, they are portable across clouds and OS distributions.\r\n \r\n-This [design](https://git.k8s.io/community/contributors/design-proposals/architecture/architecture.md) has enabled a number of other systems to build atop Kubernetes.\r\n+Containers have become popular because they provide extra benefits, such as:\r\n \r\n-## What Kubernetes is not\r\n-\r\n-Kubernetes is not a traditional, all-inclusive PaaS (Platform as a Service) system. Since Kubernetes operates at the container level rather than at the hardware level, it provides some generally applicable features common to PaaS offerings, such as deployment, scaling, load balancing, logging, and monitoring. However, Kubernetes is not monolithic, and these default solutions are optional and pluggable. Kubernetes provides the building blocks for building developer platforms, but preserves user choice and flexibility where it is important.\r\n-\r\n-Kubernetes:\r\n-\r\n-* Does not limit the types of applications supported. Kubernetes aims to support an extremely diverse variety of workloads, including stateless, stateful, and data-processing workloads. If an application can run in a container, it should run great on Kubernetes.\r\n-* Does not deploy source code and does not build your application. Continuous Integration, Delivery, and Deployment (CI/CD) workflows are determined by organization cultures and preferences as well as technical requirements.\r\n-* Does not provide application-level services, such as middleware (e.g., message buses), data-processing frameworks (for example, Spark), databases (e.g., mysql), caches, nor cluster storage systems (e.g., Ceph) as built-in services. Such components can run on Kubernetes, and/or can be accessed by applications running on Kubernetes through portable mechanisms, such as the Open Service Broker.\r\n-* Does not dictate logging, monitoring, or alerting solutions. It provides some integrations as proof of concept, and mechanisms to collect and export metrics.\r\n-* Does not provide nor mandate a configuration language/system (e.g., [jsonnet](https://github.com/google/jsonnet)). It provides a declarative API that may be targeted by arbitrary forms of declarative specifications * Does not provide nor adopt any comprehensive machine configuration, maintenance, management, or self-healing systems.\r\n-\r\n-Additionally, Kubernetes is not a mere *orchestration system*. In fact, it eliminates the need for orchestration. The technical definition of *orchestration* is execution of a defined workflow: first do A, then B, then C. In contrast, Kubernetes is comprised of a set of independent, composable control processes that continuously drive the current state towards the provided desired state. It shouldn\'t matter how you get from A to C. Centralized control is also not required. This results in a system that is easier to use and more powerful, robust, resilient, and extensible.\r\n+* Agile application creation and deployment: increased ease and efficiency of container image creation compared to VM image use.\r\n+* Continuous development, integration, and deployment: provides for reliable and frequent container image build and deployment with quick and easy rollbacks (due to image immutability).\r\n+* Dev and Ops separation of concerns: create application container images at build/release time rather than deployment time, thereby decoupling applications from infrastructure.\r\n+* Observability not only surfaces OS-level information and metrics, but also application health and other signals.\r\n+* Environmental consistency across development, testing, and production: Runs the same on a laptop as it does in the cloud.\r\n+* Cloud and OS distribution portability: Runs on Ubuntu, RHEL, CoreOS, on-premises, on major public clouds, and anywhere else.\r\n+* Application-centric management: Raises the level of abstraction from running an OS on virtual hardware to running an application on an OS using logical resources.\r\n[Truncated]\n-""8"".\r\n+* Does not limit the types of applications supported. Kubernetes aims to support an extremely diverse variety of workloads, including stateless, stateful, and data-processing workloads. If an application can run in a container, it should run great on Kubernetes.\r\n+* Does not deploy source code and does not build your application. Continuous Integration, Delivery, and Deployment (CI/CD) workflows are determined by organization cultures and preferences as well as technical requirements.\r\n+* Does not provide application-level services, such as middleware (for example, message buses), data-processing frameworks (for example, Spark), databases (for example, MySQL), caches, nor cluster storage systems (for example, Ceph) as built-in services. Such components can run on Kubernetes, and/or can be accessed by applications running on Kubernetes through portable mechanisms, such as the [Open Service Broker](https://openservicebrokerapi.org/).\r\n+* Does not dictate logging, monitoring, or alerting solutions. It provides some integrations as proof of concept, and mechanisms to collect and export metrics.\r\n+* Does not provide nor mandate a configuration language/system (for example, Jsonnet). It provides a declarative API that may be targeted by arbitrary forms of declarative specifications.\r\n+* Does not provide nor adopt any comprehensive machine configuration, maintenance, management, or self-healing systems.\r\n+* Additionally, Kubernetes is not a mere orchestration system. In fact, it eliminates the need for orchestration. The technical definition of orchestration is execution of a defined workflow: first do A, then B, then C. In contrast, Kubernetes comprises a set of independent, composable control processes that continuously drive the current state towards the provided desired state. It shouldn‚Äôt matter how you get from A to C. Centralized control is also not required. This results in a system that is easier to use and more powerful, robust, resilient, and extensible.\r\n \r\n {{% /capture %}}\r\n \r\n {{% capture whatsnext %}}\r\n+*   Take a look at the [Kubernetes Components](/docs/concepts/overview/components/)\r\n *   Ready to [Get Started](/docs/setup/)?\r\n-*   For more details, see the [Kubernetes Documentation](/docs/home/).\r\n {{% /capture %}}\r\n-\r\n-\r\n\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chaspy', 'comment_id': 645547369.0, 'datetime': '2020-06-17 18:32:51+00:00', 'masked_author': 'username_1', 'text': '1.13 „ÅÆÊîπË°å„ÇíÈô§„ÅÑ„Å¶„ÇÇ„ÄÅÁµêÊßã„Å™Â∑ÆÂàÜ„Åå„ÅÇ„Çä„Åæ„Åô„Å≠„ÄÇ', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chaspy', 'comment_id': 652308933.0, 'datetime': '2020-07-01 09:34:28+00:00', 'masked_author': 'username_1', 'text': ""Sorry, I'm busy for now, let me unassign üôè"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chaspy', 'comment_id': 652308992.0, 'datetime': '2020-07-01 09:34:35+00:00', 'masked_author': 'username_1', 'text': '/unassign username_1', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'takaf04', 'comment_id': 659816307.0, 'datetime': '2020-07-17 03:20:49+00:00', 'masked_author': 'username_2', 'text': '/assign', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: ja: Make docs/concepts/overview/what-is-kubernetes.md follow v1.17 of the original text
username_0: **This is a Feature Request**

<!-- Please only use this template for submitting feature/enhancement requests -->
<!-- See https://kubernetes.io/docs/contribute/start/ for guidance on writing an actionable issue description. -->

**What would you like to be added**
Update docs/concepts/overview/what-is-kubernetes.md to follow v1.17 of the original (English) text.

**Why is this needed**
content/ja/docs/concepts/overview/what-is-kubernetes.md is outdated.

**Comments**
/language ja
/good-first-issue

File to update
https://github.com/kubernetes/website/blob/dev-1.17-ja.3/content/ja/docs/concepts/overview/what-is-kubernetes.md

Original
https://github.com/kubernetes/website/blob/release-1.17/content/en/docs/concepts/overview/what-is-kubernetes.md

diff between translated and v1.17
https://gist.github.com/59fc53287d4ea65945211ca7f10aa728

**Note**
Currently, we use dev-1.17-ja.2 branch. Please open a PR targeting the branch.

ref
[How To Contribute](https://kubernetes-docs-ja.kibe.la/shared/entries/c5878aa5-ad1f-4f29-a5bb-25853cbc14ec)
[ÁøªË®≥„Çπ„Çø„Ç§„É´„Ç¨„Ç§„Éâ](https://kubernetes-docs-ja.kibe.la/shared/entries/5efe4fa7-d2a1-4a1d-8bc3-ce7ccdc064a6)

If you have a question, feel free to ask us at slack.k8s.io #kubernetes-docs-ja channel
<issue_comment>username_1: /assign
<issue_comment>username_1: ```diff
--- 1.13-row.md	2020-06-18 03:31:08.000000000 +0900
+++ 1.17-row.md	2020-06-18 03:24:32.000000000 +0900
@@ -2,10 +2,12 @@
 reviewers:
 - bgrant0607
 - mikedanese
-title: What is Kubernetes?
+title: What is Kubernetes
+description: >
+  Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.
 content_template: templates/concept
 weight: 10
-card: 
+card:
   name: concepts
   weight: 10
 ---
@@ -15,91 +17,78 @@
 {{% /capture %}}
 
 {{% capture body %}}
-Kubernetes is a portable, extensible open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.
+Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.
 
-Google open-sourced the Kubernetes project in 2014. Kubernetes builds upon a [decade and a half of experience that Google has with running
-production workloads at scale](https://research.google.com/pubs/pub43438.html), combined with best-of-breed ideas and practices from the community.
+The name Kubernetes originates from Greek, meaning helmsman or pilot. Google open-sourced the Kubernetes project in 2014. Kubernetes combines [over 15 years of Google's experience](/blog/2015/04/borg-predecessor-to-kubernetes/) running production workloads at scale with best-of-breed ideas and practices from the community.
 
-## Why do I need Kubernetes and what can it do?
+## Going back in time
 
-Kubernetes has a number of features. It can be thought of as:
+Let's take a look at why Kubernetes is so useful by going back in time.
 
-- a container platform
-- a microservices platform
-- a portable cloud platform
-and a lot more.
+![Deployment evolution](/images/docs/Container_Evolution.svg)
 
-Kubernetes provides a **container-centric** management environment. It orchestrates computing, networking, and storage infrastructure on behalf of user workloads. This provides much of the simplicity of Platform as a Service (PaaS) with the flexibility of Infrastructure as a Service (IaaS), and enables portability across infrastructure providers.
+**Traditional deployment era:**
+Early on, organizations ran applications on physical servers. There was no way to define resource boundaries for applications in a physical server, and this caused resource allocation issues. For example, if multiple applications run on a physical server, there can be instances where one application would take up most of the resources, and as a result, the other applications would underperform. A solution for this would be to run each application on a different physical server. But this did not scale as resources were underutilized, and it was expensive for organizations to maintain many physical servers.
 
-## How is Kubernetes a platform?
+**Virtualized deployment era:**  As a solution, virtualization was introduced. It allows you to run multiple Virtual Machines (VMs) on a single physical server's CPU. Virtualization allows applications to be isolated between VMs and provides a level of security as the information of one application cannot be freely accessed by another application.
 
-Even though Kubernetes provides a lot of functionality, there are always new scenarios that would benefit from new features. Application-specific workflows can be streamlined to accelerate developer velocity. Ad hoc orchestration that is acceptable initially often requires robust automation at scale. This is why Kubernetes was also designed to serve as a platform for building an ecosystem of components and tools to make it easier to deploy, scale, and manage applications.
+Virtualization allows better utilization of resources in a physical server and allows better scalability because an application can be added or updated easily, reduces hardware costs, and much more. With virtualization you can present a set of physical resources as a cluster of disposable virtual machines.
 
-[Labels](/docs/concepts/overview/working-with-objects/labels/) empower users to organize their resources however they please. [Annotations](/docs/concepts/overview/working-with-objects/annotations/) enable users to decorate resources with custom information to facilitate their workflows and provide an easy way for management tools to checkpoint state.
+Each VM is a full machine running all the components, including its own operating system, on top of the virtualized hardware.
 
-Additionally, the [Kubernetes control plane](/docs/concepts/overview/components/) is built upon the same [APIs](/docs/reference/using-api/api-overview/) that are available to developers and users. Users can write their own controllers, such as [schedulers](https://github.com/kubernetes/community/blob/{{< param ""githubbranch"" >}}/contributors/devel/scheduler.md), with [their own APIs](/docs/concepts/api-extension/custom-resources/) that can be targeted by a general-purpose [command-line tool](/docs/user-guide/kubectl-overview/).
+**Container deployment era:** Containers are similar to VMs, but they have relaxed isolation properties to share the Operating System (OS) among the applications. Therefore, containers are considered lightweight. Similar to a VM, a container has its own filesystem, CPU, memory, process space, and more. As they are decoupled from the underlying infrastructure, they are portable across clouds and OS distributions.
 
-This [design](https://git.k8s.io/community/contributors/design-proposals/architecture/architecture.md) has enabled a number of other systems to build atop Kubernetes.
+Containers have become popular because they provide extra benefits, such as:
 
-## What Kubernetes is not
-
-Kubernetes is not a traditional, all-inclusive PaaS (Platform as a Service) system. Since Kubernetes operates at the container level rather than at the hardware level, it provides some generally applicable features common to PaaS offerings, such as deployment, scaling, load balancing, logging, and monitoring. However, Kubernetes is not monolithic, and these default solutions are optional and pluggable. Kubernetes provides the building blocks for building developer platforms, but preserves user choice and flexibility where it is important.
-
-Kubernetes:
-
-* Does not limit the types of applications supported. Kubernetes aims to support an extremely diverse variety of workloads, including stateless, stateful, and data-processing workloads. If an application can run in a container, it should run great on Kubernetes.
-* Does not deploy source code and does not build your application. Continuous Integration, Delivery, and Deployment (CI/CD) workflows are determined by organization cultures and preferences as well as technical requirements.
-* Does not provide application-level services, such as middleware (e.g., message buses), data-processing frameworks (for example, Spark), databases (e.g., mysql), caches, nor cluster storage systems (e.g., Ceph) as built-in services. Such components can run on Kubernetes, and/or can be accessed by applications running on Kubernetes through portable mechanisms, such as the Open Service Broker.
-* Does not dictate logging, monitoring, or alerting solutions. It provides some integrations as proof of concept, and mechanisms to collect and export metrics.
-* Does not provide nor mandate a configuration language/system (e.g., [jsonnet](https://github.com/google/jsonnet)). It provides a declarative API that may be targeted by arbitrary forms of declarative specifications * Does not provide nor adopt any comprehensive machine configuration, maintenance, management, or self-healing systems.
-
-Additionally, Kubernetes is not a mere *orchestration system*. In fact, it eliminates the need for orchestration. The technical definition of *orchestration* is execution of a defined workflow: first do A, then B, then C. In contrast, Kubernetes is comprised of a set of independent, composable control processes that continuously drive the current state towards the provided desired state. It shouldn't matter how you get from A to C. Centralized control is also not required. This results in a system that is easier to use and more powerful, robust, resilient, and extensible.
+* Agile application creation and deployment: increased ease and efficiency of container image creation compared to VM image use.
+* Continuous development, integration, and deployment: provides for reliable and frequent container image build and deployment with quick and easy rollbacks (due to image immutability).
+* Dev and Ops separation of concerns: create application container images at build/release time rather than deployment time, thereby decoupling applications from infrastructure.
+* Observability not only surfaces OS-level information and metrics, but also application health and other signals.
+* Environmental consistency across development, testing, and production: Runs the same on a laptop as it does in the cloud.
+* Cloud and OS distribution portability: Runs on Ubuntu, RHEL, CoreOS, on-premises, on major public clouds, and anywhere else.
+* Application-centric management: Raises the level of abstraction from running an OS on virtual hardware to running an application on an OS using logical resources.
[Truncated]
-""8"".
+* Does not limit the types of applications supported. Kubernetes aims to support an extremely diverse variety of workloads, including stateless, stateful, and data-processing workloads. If an application can run in a container, it should run great on Kubernetes.
+* Does not deploy source code and does not build your application. Continuous Integration, Delivery, and Deployment (CI/CD) workflows are determined by organization cultures and preferences as well as technical requirements.
+* Does not provide application-level services, such as middleware (for example, message buses), data-processing frameworks (for example, Spark), databases (for example, MySQL), caches, nor cluster storage systems (for example, Ceph) as built-in services. Such components can run on Kubernetes, and/or can be accessed by applications running on Kubernetes through portable mechanisms, such as the [Open Service Broker](https://openservicebrokerapi.org/).
+* Does not dictate logging, monitoring, or alerting solutions. It provides some integrations as proof of concept, and mechanisms to collect and export metrics.
+* Does not provide nor mandate a configuration language/system (for example, Jsonnet). It provides a declarative API that may be targeted by arbitrary forms of declarative specifications.
+* Does not provide nor adopt any comprehensive machine configuration, maintenance, management, or self-healing systems.
+* Additionally, Kubernetes is not a mere orchestration system. In fact, it eliminates the need for orchestration. The technical definition of orchestration is execution of a defined workflow: first do A, then B, then C. In contrast, Kubernetes comprises a set of independent, composable control processes that continuously drive the current state towards the provided desired state. It shouldn‚Äôt matter how you get from A to C. Centralized control is also not required. This results in a system that is easier to use and more powerful, robust, resilient, and extensible.
 
 {{% /capture %}}
 
 {{% capture whatsnext %}}
+*   Take a look at the [Kubernetes Components](/docs/concepts/overview/components/)
 *   Ready to [Get Started](/docs/setup/)?
-*   For more details, see the [Kubernetes Documentation](/docs/home/).
 {{% /capture %}}
-
-

```
<issue_comment>username_1: 1.13 „ÅÆÊîπË°å„ÇíÈô§„ÅÑ„Å¶„ÇÇ„ÄÅÁµêÊßã„Å™Â∑ÆÂàÜ„Åå„ÅÇ„Çä„Åæ„Åô„Å≠„ÄÇ
<issue_comment>username_1: Sorry, I'm busy for now, let me unassign üôè
<issue_comment>username_1: /unassign username_1
<issue_comment>username_2: /assign"
11ty/11ty-website,941396081,1095,,"[{'action': 'opened', 'author': 'zesty', 'comment_id': None, 'datetime': '2021-07-11 07:54:17+00:00', 'masked_author': 'username_0', 'text': 'https://github.com/11ty/11ty-website/blob/master/src/docs/config.md\r\n\r\nshows example config for pathPrefix as:\r\n\r\n```\r\nmodule.exports = {\r\n    pathPrefix: ""/eleventy-base-blog/""\r\n};\r\n```\r\n\r\nmaybe should be:\r\n\r\n```\r\nmodule.exports = function (eleventyConfig) {\r\n    return {\r\n        pathPrefix: ""/eleventy-base-blog/""\r\n    };\r\n};\r\n```\r\n\r\nThe former doesn\'t work reliably.', 'title': 'pathPrefix docs', 'type': 'issue'}
 {'action': 'created', 'author': 'zachleat', 'comment_id': 881393929.0, 'datetime': '2021-07-16 11:58:24+00:00', 'masked_author': 'username_1', 'text': 'I‚Äôm curious as to your last comment‚Äîis there a bug there?\r\n\r\nBut I totally agree that we need to move all of the examples on `config.md` to use the API function rather than the Object. The Object is still supported but it sees very little use and is so much less powerful.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tannerdolby', 'comment_id': 883120302.0, 'datetime': '2021-07-20 06:32:58+00:00', 'masked_author': 'username_2', 'text': ""I'm curious about that too, I can't reproduce a bug.\r\n\r\nAll examples on https://github.com/11ty/11ty-website/blob/master/src/docs/config.md have now been converted to use the API function rather than objects. cc @username_1"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zesty', 'comment_id': 883616092.0, 'datetime': '2021-07-20 18:49:02+00:00', 'masked_author': 'username_0', 'text': ""Didn't save the test case, but the gist of it was that if I put anything else in module exports, the path prefix wouldn't work. Probably I was just mixing up the syntax between the two. Call it fixed."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'zesty', 'comment_id': None, 'datetime': '2021-07-20 18:49:02+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'zesty', 'comment_id': 883617196.0, 'datetime': '2021-07-20 18:51:07+00:00', 'masked_author': 'username_0', 'text': ""Didn't save the test case, but the gist of it was that if I put anything else in module exports, the path prefix wouldn't work. Probably I was just mixing up the syntax between the two. Call it fixed."", 'title': None, 'type': 'comment'}
 {'action': 'reopened', 'author': 'zesty', 'comment_id': None, 'datetime': '2021-07-20 18:51:07+00:00', 'masked_author': 'username_0', 'text': 'https://github.com/11ty/11ty-website/blob/master/src/docs/config.md\r\n\r\nshows example config for pathPrefix as:\r\n\r\n```\r\nmodule.exports = {\r\n    pathPrefix: ""/eleventy-base-blog/""\r\n};\r\n```\r\n\r\nmaybe should be:\r\n\r\n```\r\nmodule.exports = function (eleventyConfig) {\r\n    return {\r\n        pathPrefix: ""/eleventy-base-blog/""\r\n    };\r\n};\r\n```\r\n\r\nThe former doesn\'t work reliably.', 'title': 'pathPrefix docs', 'type': 'issue'}
 {'action': 'closed', 'author': 'zesty', 'comment_id': None, 'datetime': '2021-07-20 19:09:10+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'zesty', 'comment_id': 883628086.0, 'datetime': '2021-07-20 19:09:10+00:00', 'masked_author': 'username_0', 'text': 'Not all examples converted? (and there\'s a lot of markup on the page: `{% codetitle "".eleventy.js"" %}`).\r\n\r\nDidn\'t save it, but I think my test case depended on having mixed up the two formats.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tannerdolby', 'comment_id': 883633204.0, 'datetime': '2021-07-20 19:17:41+00:00', 'masked_author': 'username_2', 'text': ""@username_0 This shouldn't be closed until #1107 is merged. All of the Objects should be converted to use the API function in examples on `config.md`. Feel free to reopen."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: pathPrefix docs
username_0: https://github.com/11ty/11ty-website/blob/master/src/docs/config.md

shows example config for pathPrefix as:

```
module.exports = {
    pathPrefix: ""/eleventy-base-blog/""
};
```

maybe should be:

```
module.exports = function (eleventyConfig) {
    return {
        pathPrefix: ""/eleventy-base-blog/""
    };
};
```

The former doesn't work reliably.
<issue_comment>username_1: I‚Äôm curious as to your last comment‚Äîis there a bug there?

But I totally agree that we need to move all of the examples on `config.md` to use the API function rather than the Object. The Object is still supported but it sees very little use and is so much less powerful.
<issue_comment>username_2: I'm curious about that too, I can't reproduce a bug.

All examples on https://github.com/11ty/11ty-website/blob/master/src/docs/config.md have now been converted to use the API function rather than objects. cc @username_1
<issue_comment>username_0: Didn't save the test case, but the gist of it was that if I put anything else in module exports, the path prefix wouldn't work. Probably I was just mixing up the syntax between the two. Call it fixed.<issue_closed>
<issue_comment>username_0: Didn't save the test case, but the gist of it was that if I put anything else in module exports, the path prefix wouldn't work. Probably I was just mixing up the syntax between the two. Call it fixed.
<issue_comment>username_0: https://github.com/11ty/11ty-website/blob/master/src/docs/config.md

shows example config for pathPrefix as:

```
module.exports = {
    pathPrefix: ""/eleventy-base-blog/""
};
```

maybe should be:

```
module.exports = function (eleventyConfig) {
    return {
        pathPrefix: ""/eleventy-base-blog/""
    };
};
```

The former doesn't work reliably.<issue_closed>
<issue_comment>username_0: Not all examples converted? (and there's a lot of markup on the page: `{% codetitle "".eleventy.js"" %}`).

Didn't save it, but I think my test case depended on having mixed up the two formats.
<issue_comment>username_2: @username_0 This shouldn't be closed until #1107 is merged. All of the Objects should be converted to use the API function in examples on `config.md`. Feel free to reopen."
ethereum/ethereum-org-website,1073982283,4686,,"[{'action': 'opened', 'author': 'MashaZhou666', 'comment_id': None, 'datetime': '2021-12-08 03:53:46+00:00', 'masked_author': 'username_0', 'text': 'Unlike fiat currency like the U.S. dollar ‚Äì as the Federal Reserve can simply decide to print more banknotes ‚Äì Bitcoin‚Äôs supply is finite: BTC has a maximum supply embedded in its design, of which roughly 89 percent had been reached in April 2021. It is believed that Bitcoin will run out by 2040, despite more powerful mining equipment. This is because mining becomes exponentially more difficult and power-hungry every four years, a part of Bitcoin‚Äôs original design. Because of this, a Bitcoin mining transaction could equal the energy consumption of a small country in 2021.\r\n\r\nBitcoin keeps coming back in the headlines. With any Bitcoin price change making news and keeping investors guessing.\r\n\r\nHere you can learn more about [bitcoin price prediction](https://www.gate.io/trade/BTC_USDT)', 'title': 'Is the world running out of Bitcoin?', 'type': 'issue'}
 {'action': 'closed', 'author': 'minimalsm', 'comment_id': None, 'datetime': '2021-12-08 15:19:27+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Is the world running out of Bitcoin?
username_0: Unlike fiat currency like the U.S. dollar ‚Äì as the Federal Reserve can simply decide to print more banknotes ‚Äì Bitcoin‚Äôs supply is finite: BTC has a maximum supply embedded in its design, of which roughly 89 percent had been reached in April 2021. It is believed that Bitcoin will run out by 2040, despite more powerful mining equipment. This is because mining becomes exponentially more difficult and power-hungry every four years, a part of Bitcoin‚Äôs original design. Because of this, a Bitcoin mining transaction could equal the energy consumption of a small country in 2021.

Bitcoin keeps coming back in the headlines. With any Bitcoin price change making news and keeping investors guessing.

Here you can learn more about [bitcoin price prediction](https://www.gate.io/trade/BTC_USDT)<issue_closed>"
JuliaLang/www.julialang.org,1063473753,1440,"{'number': 1440.0, 'repo': 'www.julialang.org', 'user_login': 'JuliaLang'}","[{'action': 'opened', 'author': 'PallHaraldsson', 'comment_id': None, 'datetime': '2021-11-25T11:30:01Z', 'masked_author': 'username_0', 'text': ""It's best to not promise it working, as it's not popular anyway (never was). Windows 8.1 IS supported still, and 8 in a sense by Microsoft, only by you upgrading to 8.1.\r\n\r\nPowershell 4.0 can be relied on for Windows 8.1+, so that could be a reason if you want to support it. For Windows Server, versions still supported, you however could not rely on that recent (the shell mode in the REPL might however be less needed on Server).\r\n\r\nWindow 8 has 1.07% usage share, and 8.1. 3.17% (additionally)."", 'title': 'Windows 8 is EOLed', 'type': 'issue'}
 {'action': 'created', 'author': 'DilumAluthge', 'comment_id': 982381120.0, 'datetime': '2021-11-30 08:08:18+00:00', 'masked_author': 'username_1', 'text': '@staticfloat @username_2 Are you fine with dropping support for Windows 8 and requiring Windows 8.1+', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'vtjnash', 'comment_id': 982699188.0, 'datetime': '2021-11-30 14:40:21+00:00', 'masked_author': 'username_2', 'text': 'Largely the same to me. It was tier 2 anyways', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Windows 8 is EOLed
username_0: It's best to not promise it working, as it's not popular anyway (never was). Windows 8.1 IS supported still, and 8 in a sense by Microsoft, only by you upgrading to 8.1.

Powershell 4.0 can be relied on for Windows 8.1+, so that could be a reason if you want to support it. For Windows Server, versions still supported, you however could not rely on that recent (the shell mode in the REPL might however be less needed on Server).

Window 8 has 1.07% usage share, and 8.1. 3.17% (additionally).
<issue_comment>username_1: @staticfloat @username_2 Are you fine with dropping support for Windows 8 and requiring Windows 8.1+
<issue_comment>username_2: Largely the same to me. It was tier 2 anyways"
cake-build/website,735616665,1208,"{'number': 1208.0, 'repo': 'website', 'user_login': 'cake-build'}","[{'action': 'opened', 'author': 'gep13', 'comment_id': None, 'datetime': '2020-11-03T20:33:17Z', 'masked_author': 'username_0', 'text': 'Add additional redirects for more bootstrappers for .Net Tool and .Net\r\nCore.  Also, for consistency, move existing bootstappers into a\r\ndotnet-framework folder.', 'title': 'Add/update redirects for bootstrappers', 'type': 'issue'}
 {'action': 'created', 'author': 'gep13', 'comment_id': 721360480.0, 'datetime': '2020-11-03 20:34:15+00:00', 'masked_author': 'username_0', 'text': 'This should then hopefully mean that the following URL\'s within VSCode extension, and for the website, should work:\r\n\r\n```\r\n""cake.bootstrappers"": {\r\n          ""type"": ""object"",\r\n          ""default"": {\r\n            ""powershell"": ""https://cakebuild.net/download/bootstrapper/dotnet-framework/powershell"",\r\n            ""bash"": ""https://cakebuild.net/download/bootstrapper/dotnet-framework/bash"",\r\n            ""dotnetcore-powershell"": ""https://cakebuild.net/download/bootstrapper/dotnet-core/powershell"",\r\n            ""dotnetcore-bash"": ""https://cakebuild.net/download/bootstrapper/dotnet-core/bash"",\r\n            ""dotnetcoretool-powershell"": ""https://cakebuild.net/download/bootstrapper/dotnet-tool/powershell"",\r\n            ""dotnetcoretool-bash"": ""https://cakebuild.net/download/bootstrapper/dotnet-tool/bash""\r\n          },\r\n          ""description"": ""The Cake bootstrapper URIs.""\r\n        },\r\n```', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add/update redirects for bootstrappers
username_0: Add additional redirects for more bootstrappers for .Net Tool and .Net
Core.  Also, for consistency, move existing bootstappers into a
dotnet-framework folder.
<issue_comment>username_0: This should then hopefully mean that the following URL's within VSCode extension, and for the website, should work:

```
""cake.bootstrappers"": {
          ""type"": ""object"",
          ""default"": {
            ""powershell"": ""https://cakebuild.net/download/bootstrapper/dotnet-framework/powershell"",
            ""bash"": ""https://cakebuild.net/download/bootstrapper/dotnet-framework/bash"",
            ""dotnetcore-powershell"": ""https://cakebuild.net/download/bootstrapper/dotnet-core/powershell"",
            ""dotnetcore-bash"": ""https://cakebuild.net/download/bootstrapper/dotnet-core/bash"",
            ""dotnetcoretool-powershell"": ""https://cakebuild.net/download/bootstrapper/dotnet-tool/powershell"",
            ""dotnetcoretool-bash"": ""https://cakebuild.net/download/bootstrapper/dotnet-tool/bash""
          },
          ""description"": ""The Cake bootstrapper URIs.""
        },
```"
kubernetes/website,839574594,27190,,"[{'action': 'opened', 'author': 'CyprianFusi', 'comment_id': None, 'datetime': '2021-03-24 10:27:18+00:00', 'masked_author': 'username_0', 'text': 'Is there any future plan to merge Docker and Kubernetes to form Dockernetes? There seems to be a lot of overlaps and integration already. Consolidating both would probably be powerful...', 'title': 'Contribute to K8s docs', 'type': 'issue'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 805865919.0, 'datetime': '2021-03-24 14:26:03+00:00', 'masked_author': 'username_1', 'text': ""No.\r\n\r\nThis question is not really about contributing to Kubernetes documentation @username_0. I'm going to close it.\r\n\r\n/triage unresolved\r\n/close"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Contribute to K8s docs
username_0: Is there any future plan to merge Docker and Kubernetes to form Dockernetes? There seems to be a lot of overlaps and integration already. Consolidating both would probably be powerful...
<issue_comment>username_1: No.

This question is not really about contributing to Kubernetes documentation @username_0. I'm going to close it.

/triage unresolved
/close"
ProseMirror/website,130699542,19,,"[{'action': 'opened', 'author': 'ericandrewlewis', 'comment_id': None, 'datetime': '2016-02-02 14:35:14+00:00', 'masked_author': 'username_0', 'text': ""return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\nError: ENOENT: no such file or directory, open '/Users/eric/Code/github/ProseMirror/website/src/build/../../markdown/../node_modules/prosemirror/CHANGELOG.md'\r\n    at Error (native)\r\n    at Object.fs.openSync (fs.js:584:18)\r\n    at Object.fs.readFileSync (fs.js:431:33)\r\n    at mold.defs.markdownFile (/Users/eric/Code/github/ProseMirror/website/src/build/templates.js:17:34)\r\n    at Mold.dispatch (/Users/eric/Code/github/ProseMirror/website/node_modules/mold-template/mold.js:30:25)\r\n    at eval (eval at evaluate (/Users/eric/Code/github/ProseMirror/website/node_modules/mold-template/mold.js:180:10), <anonymous>:8:12)\r\n    at /Users/eric/Code/github/ProseMirror/website/src/build/build.js:36:35\r\n    at Array.forEach (native)\r\n    at Object.<anonymous> (/Users/eric/Code/github/ProseMirror/website/src/build/build.js:27:7)\r\n    at Module._compile (module.js:398:26)\r\nmake: *** [public/changelog.html] Error 1\r\n```"", 'title': 'make fails', 'type': 'issue'}
 {'action': 'created', 'author': 'marijnh', 'comment_id': 178612705.0, 'datetime': '2016-02-02 14:52:48+00:00', 'masked_author': 'username_1', 'text': ""Yeah, that would make sense.\r\n\r\nI think in general, I'm not really willing to commit to the website being buildable by anyone at any point in time. I can see how that is desirable, but given all the churn the project is experiencing, it would take a bunch of energy to keep all the details lined up all the time, and I'd rather spend that energy on other things."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'marijnh', 'comment_id': None, 'datetime': '2016-03-02 13:13:45+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: make fails
username_0: return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);
                 ^
Error: ENOENT: no such file or directory, open '/Users/eric/Code/github/ProseMirror/website/src/build/../../markdown/../node_modules/prosemirror/CHANGELOG.md'
    at Error (native)
    at Object.fs.openSync (fs.js:584:18)
    at Object.fs.readFileSync (fs.js:431:33)
    at mold.defs.markdownFile (/Users/eric/Code/github/ProseMirror/website/src/build/templates.js:17:34)
    at Mold.dispatch (/Users/eric/Code/github/ProseMirror/website/node_modules/mold-template/mold.js:30:25)
    at eval (eval at evaluate (/Users/eric/Code/github/ProseMirror/website/node_modules/mold-template/mold.js:180:10), <anonymous>:8:12)
    at /Users/eric/Code/github/ProseMirror/website/src/build/build.js:36:35
    at Array.forEach (native)
    at Object.<anonymous> (/Users/eric/Code/github/ProseMirror/website/src/build/build.js:27:7)
    at Module._compile (module.js:398:26)
make: *** [public/changelog.html] Error 1
```
<issue_comment>username_1: Yeah, that would make sense.

I think in general, I'm not really willing to commit to the website being buildable by anyone at any point in time. I can see how that is desirable, but given all the churn the project is experiencing, it would take a bunch of energy to keep all the details lined up all the time, and I'd rather spend that energy on other things.<issue_closed>"
