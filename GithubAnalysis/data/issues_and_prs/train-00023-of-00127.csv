ethereum/ethereum-org-website,1164176998,5633,,"[{'action': 'opened', 'author': 'tsudmi', 'comment_id': None, 'datetime': '2022-03-09 16:38:45+00:00', 'masked_author': 'username_0', 'text': 'Placing RocketPool as recommended staking solution for users with less than 32 ETH breaks the idea that Ethereum Foundation should stay neutral to the protocols that build on top. There should be a link to all the solutions out there, and the user should be able to evaluate all of them and choose the one he likes the most.', 'title': 'Remove RocketPool as the recommended staking solution', 'type': 'issue'}
 {'action': 'created', 'author': 'tsudmi', 'comment_id': 1063137718.0, 'datetime': '2022-03-09 16:50:49+00:00', 'masked_author': 'username_0', 'text': 'Reverts https://github.com/ethereum/ethereum-org-website/pull/5349', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'djrtwo', 'comment_id': 1063324313.0, 'datetime': '2022-03-09 20:14:34+00:00', 'masked_author': 'username_1', 'text': 'Agreed that rocketpool should not be *independently* highlighted like this on the ethereum.org website.\r\nI think the page should either give a better range of possibilities or not address the issue at all', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'corwintines', 'comment_id': 1063365687.0, 'datetime': '2022-03-09 20:59:41+00:00', 'masked_author': 'username_2', 'text': 'At the risk of looking dumb here, what other staking services let you run a validator with less than 32 ETH? Going to do some looking on my own, but any direction on this would be appreciated. I do think we should flush this section out more, but I also think Rocket Pool ended up getting some consideration due to you being able to run a validator with less than 32 ETH as well.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 1063584368.0, 'datetime': '2022-03-10 02:18:41+00:00', 'masked_author': 'username_3', 'text': ""We still provide a link to beaconcha.in with all the solutions out there. Users can still evaluate all of them. While I didn’t directly approve the community PR (https://github.com/ethereum/ethereum-org-website/pull/5349), I agree with our team’s decision to merge it. RocketPool seems to be the unanimous top recommendation from most experts (like the EthStaker core team), so we think the update improved the page. It didn’t take remove any content such as the link to beaconchain’s list. We also knew we'd be updating the page soon anyway, which brings us to...\r\n\r\n**Second, providing context on our current staking content plans. Input welcome!**\r\n\r\nOur staking resources are something we’re actively working to improve right now (as you can see on our Q1 roadmap: #5105). Our primary goals are to expand our resources around both pooled staking & solo staking to make this process easier to understand & easier to accomplish for our site visitors.\r\n\r\nOur new designers (hi @konopkja & @nloureiro!) just started last week, so it’s early stages, but they're currently working on a redesign of this page. Happy to share designs & content on this soon to gather feedback, so stay tuned.\r\n\r\nWe’re also looking into:\r\n1. Creating a listing criteria for staking providers.\r\n2. Building out more documentation on how the process of staking works as well a risks & considerations when doing it. This may evolve into a “docs” section similar to [our current developer docs](https://ethereum.org/en/developers/docs/). \r\n\r\nWe’d love to collaborate with any staking experts out there, so feel free to comment here or [drop in our Discord](https://discord.gg/CetY6Y4) if you’re interested in adding input or getting involved! I'll leave this issue open for discussion until we ship that updated page."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 1063585012.0, 'datetime': '2022-03-10 02:20:03+00:00', 'masked_author': 'username_3', 'text': '@username_2 the list we currently link to on our staking page provides info on the minimum stake required for many services:\r\nhttps://beaconcha.in/stakingServices', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hanniabu', 'comment_id': 1063587960.0, 'datetime': '2022-03-10 02:25:54+00:00', 'masked_author': 'username_4', 'text': '@timbeiko The page clearly lists a link to other staking providers and is in no way giving the impression that Rocket Pool is the only solution. This issue was brought up by a tweet (by username_0) that intentionally cropped out the link to mislead the crypto community and drive an angry mob your way.\r\n\r\nGiven the marketshare of Lido and other centralized services along with their marketing and purchasing power, listing Rocket Pool (the only truly decentralized staking pool solution) is the responsible and prudent thing at the time. Rocket Pool has notoriously been helping support client diversity and is responsible for >10% (13.8%?) of consensus nodes despite having only 1.1% of staked ETH.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'flaskr', 'comment_id': 1063597417.0, 'datetime': '2022-03-10 02:47:50+00:00', 'masked_author': 'username_5', 'text': ""That's a good point - a lot of services allow you to 'stake', but not run a validator (permissionlessly or not) on their behalf."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kiriyha', 'comment_id': 1063978314.0, 'datetime': '2022-03-10 11:57:42+00:00', 'masked_author': 'username_6', 'text': '@username_3 It seems like even the opinions of credibly neutral ETH2 heavyweights who commented on this issue cannot sway your opinion. Your team also seems to have ignored your own guidelines regarding the minimum period that the project should be operational before it gets highlighted. Finally, if the minipool concept (ie run your own node with <32 ETH) is so great, why Ankr (who were running with this concept for almost a year before RP) was never mentioned anywhere? Seems like a lot of DD was performed before making changes on the page. Nice. \r\n\r\nIf the Ethereum Foundation is OK with you taking this biased approach then I guess there is nothing to discuss. Personally, watching this unfold has been incredibly frustrating. I hope you realize that this is how you get devoted Ethereum builders to become disillusioned with our collective mission.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'flaskr', 'comment_id': 1064079900.0, 'datetime': '2022-03-10 13:45:09+00:00', 'masked_author': 'username_5', 'text': 'Have you done your own DD on Ankr? Last I checked a few months ago, they were very loud on how you could run your own validators, but the docs were missing a lot of information and there was no way someone could just come in and spin up something themselves.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'eccentricexit', 'comment_id': 1064091065.0, 'datetime': '2022-03-10 13:57:25+00:00', 'masked_author': 'username_7', 'text': 'Ethereum foundation not only should keep rocketpool there but also add a note saying something like:\r\n\r\n“We discourage using centralized staking services as those degrade the decentralization and censorship resistance of the network. Instead, we recommend using a permissionless, decentralized protocol like rocketpool since it increases it.”\r\n\r\nIf the website was choosing a specific company, then it would be biased.\r\n\r\nThis is not the case here. Don’t be fooled into thinking rocketpool is the same as the others.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'AD1528', 'comment_id': 1064094461.0, 'datetime': '2022-03-10 14:00:43+00:00', 'masked_author': 'username_8', 'text': 'Context is important.  \r\n\r\nBefore mentioning any particular service or protocol (or, ideally, a curated group of offerings, rather than just one), It would actually be more helpful to state some of the values that benefit the health and resilience of Ethereum overall.  \r\n\r\nE.g. a section intro that talks about client diversity and increasing the number of validators could be added to better educate those landing on this page and help inform their decision?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 1064542708.0, 'datetime': '2022-03-10 21:58:01+00:00', 'masked_author': 'username_3', 'text': 'Appreciate the additional input folks! \r\n\r\nFYI I created a couple more issues aiming to address much of your feedback & to improve our listing of staking services. Encourage you to give those a read & weigh in if you have input:\r\n- Revamp the Staking page #5647\r\n- Create a listing policy for staking services #5646', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tsudmi', 'comment_id': 1065070152.0, 'datetime': '2022-03-11 12:28:57+00:00', 'masked_author': 'username_0', 'text': '@username_3 I still think we should temporarily remove rocketpool from that page and bring it back once the staking page will be revamped. Currently, there are multiple wallets user can choose from, same goes for dapps and only one staking solution if you have less than 32 ETH.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yokem55', 'comment_id': 1065903301.0, 'datetime': '2022-03-12 15:33:16+00:00', 'masked_author': 'username_9', 'text': ""I'm going to advocate a somewhat different position: ethereum.org should not have a 'staking services' page at all. \r\n\r\nJust 'staking' in and of itself is at best a neutral thing for Ethereum. Just throwing ether over the wall into the deposit contract looking for a return does not by itself do anything good for the protocol. What does help the protocol is getting more distinct and independent individuals *operating validating nodes.* \r\n\r\nSo, instead of a 'staking services' page. There should instead be a 'validating node tools' to help more people **operate validating nodes on their own**.\r\n\r\nIe, tools like the Wagyu toolset, Dappnode and Stereum for better user interfaces for running a node. Hardware vendors like Avado who can sell preconfigured/built hardware bundles for those who need help on the hardware side. Node hosting services like AllNodes for folks who don't have reliable internet. A list of up-to-date and well written and edited guides for Windows and Mac users.  And yes, RocketPool as a tool to enable folks with less then 32 ether to run a validating node. \r\n\r\nIf folks really just want a 'staking services' page, a link to the Beaconcha.in list is more then sufficient."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gakonst', 'comment_id': 1066160940.0, 'datetime': '2022-03-13 18:51:43+00:00', 'masked_author': 'username_10', 'text': '', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jasperghost1', 'comment_id': 1066165105.0, 'datetime': '2022-03-13 19:18:45+00:00', 'masked_author': 'username_11', 'text': ""The discussion was vague because it's been readily fleshed out in other forums. There are three simple axes, principally, we ought to define our staking services by as these are the same standards we hold Ethereum itself to. Rocket Pool is the clear leader in all of them. \r\n\r\nPermissionlessness - anyone can spin up an Ethereum node without KYC or any loopholes. \r\n\r\nDecentralized - the whole network shouldn't have central points of failure\r\n\r\nTrustless - no counterparty risk \r\n\r\nWe can start at the top, there aren't any other permissionless protocols. You can apply through a governance process over quite some time and put up (likely) large capital bonds, but that's a far, far cry from permisionless. \r\n\r\nDecentralized? No service has provided more individual node operators than Rocket Pool. Combine all the rest of them and they'd be less than what Rocket Pool has put together in a few months. Not just that, but in the most diverse client set of any (https://pools.invis.cloud/). Over 800 nodes, at least 400 unique operators, across every time zone on Earth. \r\n\r\nRocket Pool isn't perfect with trust. There are upgradable contracts that node operators can opt into, there's an oracle DAO that controls certain parameters, however, it is trust minimized compared to the field. \r\n\r\nWe can talk about expanding the services out, but why would you want to harm the only product that actually is healthy for the network? It's clearly in Ethereum's best interests and that's what Ethereum.org ought care about."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'danielgmason', 'comment_id': 1067218508.0, 'datetime': '2022-03-14 19:45:57+00:00', 'masked_author': 'username_12', 'text': ""Seems helpful to have an option up until the page gets revamped even if it's suboptimal, but agree that something that presents more information about staking + the myriad of providers with pros/cons is definitely better."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 1068434220.0, 'datetime': '2022-03-15 20:24:17+00:00', 'masked_author': 'username_3', 'text': 'Again, appreciate the input on this folks 👌 \r\n\r\nOverall I think much of the pushback on https://github.com/ethereum/ethereum-org-website/pull/5349 is valid but rather than focus on ""remove RocketPool"" I think it\'s more productive to focus on how to display multiple staking options. \r\n\r\n@nloureiro just shared some design prototypes of how we might accomplish that. I encourage you all to check it out & add your feedback: https://github.com/ethereum/ethereum-org-website/issues/5647#issuecomment-1068394781\r\n\r\nI\'m going to close this issue out but hope to keep the conversation going. I encourage you all to bring further discussion on this topic to #5647', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gakonst', 'comment_id': 1068489575.0, 'datetime': '2022-03-15 21:27:43+00:00', 'masked_author': 'username_10', 'text': '@username_3 thanks for the follow up! The direction towards revamping the page seems good! Given that, do you not think it makes sense to move forward with https://github.com/ethereum/ethereum-org-website/pull/5635, since #5647 ACKs that the previous design was not clear enough, and that the original https://github.com/ethereum/ethereum-org-website/pull/5349 PR was not the ""right"" solution?', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Remove RocketPool as the recommended staking solution
username_0: Placing RocketPool as recommended staking solution for users with less than 32 ETH breaks the idea that Ethereum Foundation should stay neutral to the protocols that build on top. There should be a link to all the solutions out there, and the user should be able to evaluate all of them and choose the one he likes the most.
<issue_comment>username_0: Reverts https://github.com/ethereum/ethereum-org-website/pull/5349
<issue_comment>username_1: Agreed that rocketpool should not be *independently* highlighted like this on the ethereum.org website.
I think the page should either give a better range of possibilities or not address the issue at all
<issue_comment>username_2: At the risk of looking dumb here, what other staking services let you run a validator with less than 32 ETH? Going to do some looking on my own, but any direction on this would be appreciated. I do think we should flush this section out more, but I also think Rocket Pool ended up getting some consideration due to you being able to run a validator with less than 32 ETH as well.
<issue_comment>username_3: We still provide a link to beaconcha.in with all the solutions out there. Users can still evaluate all of them. While I didn’t directly approve the community PR (https://github.com/ethereum/ethereum-org-website/pull/5349), I agree with our team’s decision to merge it. RocketPool seems to be the unanimous top recommendation from most experts (like the EthStaker core team), so we think the update improved the page. It didn’t take remove any content such as the link to beaconchain’s list. We also knew we'd be updating the page soon anyway, which brings us to...

**Second, providing context on our current staking content plans. Input welcome!**

Our staking resources are something we’re actively working to improve right now (as you can see on our Q1 roadmap: #5105). Our primary goals are to expand our resources around both pooled staking & solo staking to make this process easier to understand & easier to accomplish for our site visitors.

Our new designers (hi @konopkja & @nloureiro!) just started last week, so it’s early stages, but they're currently working on a redesign of this page. Happy to share designs & content on this soon to gather feedback, so stay tuned.

We’re also looking into:
1. Creating a listing criteria for staking providers.
2. Building out more documentation on how the process of staking works as well a risks & considerations when doing it. This may evolve into a “docs” section similar to [our current developer docs](https://ethereum.org/en/developers/docs/). 

We’d love to collaborate with any staking experts out there, so feel free to comment here or [drop in our Discord](https://discord.gg/CetY6Y4) if you’re interested in adding input or getting involved! I'll leave this issue open for discussion until we ship that updated page.
<issue_comment>username_3: @username_2 the list we currently link to on our staking page provides info on the minimum stake required for many services:
https://beaconcha.in/stakingServices
<issue_comment>username_4: @timbeiko The page clearly lists a link to other staking providers and is in no way giving the impression that Rocket Pool is the only solution. This issue was brought up by a tweet (by username_0) that intentionally cropped out the link to mislead the crypto community and drive an angry mob your way.

Given the marketshare of Lido and other centralized services along with their marketing and purchasing power, listing Rocket Pool (the only truly decentralized staking pool solution) is the responsible and prudent thing at the time. Rocket Pool has notoriously been helping support client diversity and is responsible for >10% (13.8%?) of consensus nodes despite having only 1.1% of staked ETH.
<issue_comment>username_5: That's a good point - a lot of services allow you to 'stake', but not run a validator (permissionlessly or not) on their behalf.
<issue_comment>username_6: @username_3 It seems like even the opinions of credibly neutral ETH2 heavyweights who commented on this issue cannot sway your opinion. Your team also seems to have ignored your own guidelines regarding the minimum period that the project should be operational before it gets highlighted. Finally, if the minipool concept (ie run your own node with <32 ETH) is so great, why Ankr (who were running with this concept for almost a year before RP) was never mentioned anywhere? Seems like a lot of DD was performed before making changes on the page. Nice. 

If the Ethereum Foundation is OK with you taking this biased approach then I guess there is nothing to discuss. Personally, watching this unfold has been incredibly frustrating. I hope you realize that this is how you get devoted Ethereum builders to become disillusioned with our collective mission.
<issue_comment>username_5: Have you done your own DD on Ankr? Last I checked a few months ago, they were very loud on how you could run your own validators, but the docs were missing a lot of information and there was no way someone could just come in and spin up something themselves.
<issue_comment>username_7: Ethereum foundation not only should keep rocketpool there but also add a note saying something like:

“We discourage using centralized staking services as those degrade the decentralization and censorship resistance of the network. Instead, we recommend using a permissionless, decentralized protocol like rocketpool since it increases it.”

If the website was choosing a specific company, then it would be biased.

This is not the case here. Don’t be fooled into thinking rocketpool is the same as the others.
<issue_comment>username_8: Context is important.  

Before mentioning any particular service or protocol (or, ideally, a curated group of offerings, rather than just one), It would actually be more helpful to state some of the values that benefit the health and resilience of Ethereum overall.  

E.g. a section intro that talks about client diversity and increasing the number of validators could be added to better educate those landing on this page and help inform their decision?
<issue_comment>username_3: Appreciate the additional input folks! 

FYI I created a couple more issues aiming to address much of your feedback & to improve our listing of staking services. Encourage you to give those a read & weigh in if you have input:
- Revamp the Staking page #5647
- Create a listing policy for staking services #5646
<issue_comment>username_0: @username_3 I still think we should temporarily remove rocketpool from that page and bring it back once the staking page will be revamped. Currently, there are multiple wallets user can choose from, same goes for dapps and only one staking solution if you have less than 32 ETH.
<issue_comment>username_9: I'm going to advocate a somewhat different position: ethereum.org should not have a 'staking services' page at all. 

Just 'staking' in and of itself is at best a neutral thing for Ethereum. Just throwing ether over the wall into the deposit contract looking for a return does not by itself do anything good for the protocol. What does help the protocol is getting more distinct and independent individuals *operating validating nodes.* 

So, instead of a 'staking services' page. There should instead be a 'validating node tools' to help more people **operate validating nodes on their own**.

Ie, tools like the Wagyu toolset, Dappnode and Stereum for better user interfaces for running a node. Hardware vendors like Avado who can sell preconfigured/built hardware bundles for those who need help on the hardware side. Node hosting services like AllNodes for folks who don't have reliable internet. A list of up-to-date and well written and edited guides for Windows and Mac users.  And yes, RocketPool as a tool to enable folks with less then 32 ether to run a validating node. 

If folks really just want a 'staking services' page, a link to the Beaconcha.in list is more then sufficient.
<issue_comment>username_11: The discussion was vague because it's been readily fleshed out in other forums. There are three simple axes, principally, we ought to define our staking services by as these are the same standards we hold Ethereum itself to. Rocket Pool is the clear leader in all of them. 

Permissionlessness - anyone can spin up an Ethereum node without KYC or any loopholes. 

Decentralized - the whole network shouldn't have central points of failure

Trustless - no counterparty risk 

We can start at the top, there aren't any other permissionless protocols. You can apply through a governance process over quite some time and put up (likely) large capital bonds, but that's a far, far cry from permisionless. 

Decentralized? No service has provided more individual node operators than Rocket Pool. Combine all the rest of them and they'd be less than what Rocket Pool has put together in a few months. Not just that, but in the most diverse client set of any (https://pools.invis.cloud/). Over 800 nodes, at least 400 unique operators, across every time zone on Earth. 

Rocket Pool isn't perfect with trust. There are upgradable contracts that node operators can opt into, there's an oracle DAO that controls certain parameters, however, it is trust minimized compared to the field. 

We can talk about expanding the services out, but why would you want to harm the only product that actually is healthy for the network? It's clearly in Ethereum's best interests and that's what Ethereum.org ought care about.
<issue_comment>username_12: Seems helpful to have an option up until the page gets revamped even if it's suboptimal, but agree that something that presents more information about staking + the myriad of providers with pros/cons is definitely better.
<issue_comment>username_3: Again, appreciate the input on this folks 👌 

Overall I think much of the pushback on https://github.com/ethereum/ethereum-org-website/pull/5349 is valid but rather than focus on ""remove RocketPool"" I think it's more productive to focus on how to display multiple staking options. 

@nloureiro just shared some design prototypes of how we might accomplish that. I encourage you all to check it out & add your feedback: https://github.com/ethereum/ethereum-org-website/issues/5647#issuecomment-1068394781

I'm going to close this issue out but hope to keep the conversation going. I encourage you all to bring further discussion on this topic to #5647
<issue_comment>username_10: @username_3 thanks for the follow up! The direction towards revamping the page seems good! Given that, do you not think it makes sense to move forward with https://github.com/ethereum/ethereum-org-website/pull/5635, since #5647 ACKs that the previous design was not clear enough, and that the original https://github.com/ethereum/ethereum-org-website/pull/5349 PR was not the ""right"" solution?"
gdg-x/hoverboard,540836706,689,,"[{'action': 'opened', 'author': 'shnathoskhan', 'comment_id': None, 'datetime': '2019-12-20 07:57:47+00:00', 'masked_author': 'username_0', 'text': 'Pls, refer my log file.\r\n\r\nPFA.\r\n\r\nhttps://docs.google.com/document/d/1uLc9VaTE3i5hDCyQqbhD6P0Hp8AJGG3v5FTYfP9qfwc/edit?usp=sharing\r\n\r\nnode-pre-gyp WARN', 'title': 'Error npm install on windows', 'type': 'issue'}
 {'action': 'created', 'author': 'abraham', 'comment_id': 570626075.0, 'datetime': '2020-01-03 16:38:53+00:00', 'masked_author': 'username_1', 'text': ""I was able to install and run on Windows 10 with PowerShell and with WSL with node 10. It looks like you're using node 13. Can you try with node 10 and see if that works. If node 10 doesn't work please include details about your Windows version, PowerShell/WLS versions, and as much about the environment as you can."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shnathoskhan', 'comment_id': 571007350.0, 'datetime': '2020-01-06 05:17:48+00:00', 'masked_author': 'username_0', 'text': '@username_1 Thanks for reply.\r\n\r\ni installed Node 10 and i tried npm install but i got same error.\r\n\r\nPowerShell version:\r\nVersion\r\n-------\r\n5.1.18362.145\r\n\r\nWindows Version:\r\nVersion 1903 (OS Build 18362.476)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'abraham', 'comment_id': 571148299.0, 'datetime': '2020-01-06 14:01:01+00:00', 'masked_author': 'username_1', 'text': 'Can you attach the node 10 logs please. \r\n\r\nAre you trying to use the latest version of the master branch? If not what version of the app are you trying to use?\r\n\r\nHow are you installing node? With the official windows installer? Some other way?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shnathoskhan', 'comment_id': 571261106.0, 'datetime': '2020-01-06 18:48:35+00:00', 'masked_author': 'username_0', 'text': 'Yes i tried master branch. and sure i used official windows installer https://nodejs.org/dist/v10.0.0/ .\r\n\r\ni attached my log.\r\nhttps://drive.google.com/file/d/1BehLzv4dXi92QMCq1PHRi-YmYiv2zB52/view', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'abraham', 'comment_id': 571264722.0, 'datetime': '2020-01-06 18:56:44+00:00', 'masked_author': 'username_1', 'text': ""If you used v10.0.0 that's pretty old. Try the 10.18 version https://nodejs.org/dist/latest-v10.x/"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'abraham', 'comment_id': 604045367.0, 'datetime': '2020-03-25 19:39:38+00:00', 'masked_author': 'username_1', 'text': 'If you still have issues please let me know.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'abraham', 'comment_id': None, 'datetime': '2020-03-25 19:39:38+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Error npm install on windows
username_0: Pls, refer my log file.

PFA.

https://docs.google.com/document/d/1uLc9VaTE3i5hDCyQqbhD6P0Hp8AJGG3v5FTYfP9qfwc/edit?usp=sharing

node-pre-gyp WARN
<issue_comment>username_1: I was able to install and run on Windows 10 with PowerShell and with WSL with node 10. It looks like you're using node 13. Can you try with node 10 and see if that works. If node 10 doesn't work please include details about your Windows version, PowerShell/WLS versions, and as much about the environment as you can.
<issue_comment>username_0: @username_1 Thanks for reply.

i installed Node 10 and i tried npm install but i got same error.

PowerShell version:
Version
-------
5.1.18362.145

Windows Version:
Version 1903 (OS Build 18362.476)
<issue_comment>username_1: Can you attach the node 10 logs please. 

Are you trying to use the latest version of the master branch? If not what version of the app are you trying to use?

How are you installing node? With the official windows installer? Some other way?
<issue_comment>username_0: Yes i tried master branch. and sure i used official windows installer https://nodejs.org/dist/v10.0.0/ .

i attached my log.
https://drive.google.com/file/d/1BehLzv4dXi92QMCq1PHRi-YmYiv2zB52/view
<issue_comment>username_1: If you used v10.0.0 that's pretty old. Try the 10.18 version https://nodejs.org/dist/latest-v10.x/
<issue_comment>username_1: If you still have issues please let me know.<issue_closed>"
facebook/docusaurus,677733544,3272,,"[{'action': 'opened', 'author': 'kewp', 'comment_id': None, 'datetime': '2020-08-12 14:22:19+00:00', 'masked_author': 'username_0', 'text': '| id: doc1\r\n| title: Style Guide\r\n @ c:/users/karlp/firkin-www/.docusaurus/registry.js 1:3494-3536 1:3394-3471\r\n @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js\r\n @ c:/users/karlp/firkin-www/.docusaurus/routes.js\r\n @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.js\r\n @ multi c:/users/karlp/firkin-www/node_modules/react-dev-utils/webpackHotDevClient.js c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.jsc:/users/karlp/firkin-www/docs/doc2.md 1:2\r\nModule parse failed: Assigning to rvalue (1:2)\r\n```\r\n\r\n## Your Environment\r\n\r\n- Docusaurus version used: 2.0.0-alpha.61\r\n- Environment name and version: node 12.8.3\r\n- Operating system and version: Windows 10', 'title': ""Couldn't start classic template: Module parse failed: Assigning to rvalue"", 'type': 'issue'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 674029958.0, 'datetime': '2020-08-14 11:29:17+00:00', 'masked_author': 'username_1', 'text': ""I have no idea what's going on but it works for me.\r\n\r\nCan someone reproduce this consistently? \r\nMaybe it's specific to your env.\r\n\r\nCan you try with yarn instead of npm? \r\n\r\nHave you modified anything at all of the generated project?\r\n\r\nAre you sure you are in the correct directory? I see you created `my-website`, yet the logs show you are in `firkin-www`"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kewp', 'comment_id': 674033839.0, 'datetime': '2020-08-14 11:40:42+00:00', 'masked_author': 'username_0', 'text': ""Hey @username_1 \r\n\r\nI just tried this on another machine (also Windows) and it worked fine. So you may be right - it might just be my env.\r\n\r\nTo answer your questions, though - I didn't modify anything in the generated project. And I was in the correct directory (the initial command using `my-website` was wrong)."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'slorber', 'comment_id': None, 'datetime': '2020-08-14 12:30:17+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 674051003.0, 'datetime': '2020-08-14 12:30:17+00:00', 'masked_author': 'username_1', 'text': ""Ok great to know.\r\n\r\nNot sure what I can do about this issue, so I'm closing, but let's reopen it if other users are affected and we get more info."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'limkinZero', 'comment_id': 678105007.0, 'datetime': '2020-08-21 08:05:03+00:00', 'masked_author': 'username_2', 'text': '| id: mdx\r\n| title: Powered by MDX\r\n @ ./.docusaurus/registry.js 1:5809-5875 1:5657-5762\r\n @ ./node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js\r\n @ ./.docusaurus/routes.js\r\n @ ./node_modules/@docusaurus/core/lib/client/clientEntry.js\r\n @ multi ./node_modules/react-dev-utils/webpackHotDevClient.js ./node_modules/@docusaurus/core/lib/client/clientEntry.js\r\n\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'limkinZero', 'comment_id': 678105297.0, 'datetime': '2020-08-21 08:05:47+00:00', 'masked_author': 'username_2', 'text': '| id: mdx\r\n| title: Powered by MDX\r\n @ ./.docusaurus/registry.js 1:5809-5875 1:5657-5762\r\n @ ./node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js\r\n @ ./.docusaurus/routes.js\r\n @ ./node_modules/@docusaurus/core/lib/client/clientEntry.js\r\n @ multi ./node_modules/react-dev-utils/webpackHotDevClient.js ./node_modules/@docusaurus/core/lib/client/clientEntry.js\r\n\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'reopened', 'author': 'slorber', 'comment_id': None, 'datetime': '2020-08-21 08:57:13+00:00', 'masked_author': 'username_1', 'text': '| id: doc1\r\n| title: Style Guide\r\n @ c:/users/karlp/firkin-www/.docusaurus/registry.js 1:3494-3536 1:3394-3471\r\n @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js\r\n @ c:/users/karlp/firkin-www/.docusaurus/routes.js\r\n @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.js\r\n @ multi c:/users/karlp/firkin-www/node_modules/react-dev-utils/webpackHotDevClient.js c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.jsc:/users/karlp/firkin-www/docs/doc2.md 1:2\r\nModule parse failed: Assigning to rvalue (1:2)\r\n```\r\n\r\n## Your Environment\r\n\r\n- Docusaurus version used: 2.0.0-alpha.61\r\n- Environment name and version: node 12.8.3\r\n- Operating system and version: Windows 10', 'title': ""Couldn't start classic template: Module parse failed: Assigning to rvalue"", 'type': 'issue'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 678127491.0, 'datetime': '2020-08-21 08:58:18+00:00', 'masked_author': 'username_1', 'text': 'Hi,\r\n\r\nCan you give us more infos on your env?\r\n\r\nAre you both on Windows?\r\n\r\nWonder if you use a fs path with spaces in it or something? That can lead to issues sometimes.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CyborgMaster', 'comment_id': 687686492.0, 'datetime': '2020-09-06 01:51:07+00:00', 'masked_author': 'username_3', 'text': ""I'm running into the same issue, when trying to use files that a symlink in from another directory.  Are you aware of any issues with symlinks?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CyborgMaster', 'comment_id': 687687309.0, 'datetime': '2020-09-06 02:02:51+00:00', 'masked_author': 'username_3', 'text': ""It almost seems that docusaurus isn't finding the files and compiling them from markdown into js files?  Or maybe webpack can't handle symlinks?  I don't have enough background to really say."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CyborgMaster', 'comment_id': 687687823.0, 'datetime': '2020-09-06 02:10:11+00:00', 'masked_author': 'username_3', 'text': 'It may have something to do with this https://github.com/webpack/webpack/issues/1643', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kewp', 'comment_id': 687692042.0, 'datetime': '2020-09-06 03:04:54+00:00', 'masked_author': 'username_0', 'text': ""Yes! @username_3 this is what fixed it for me.\r\n\r\nFor me, my user folder `c:\\users\\karl` is actually a symlink to `c:\\users\\karlp`. If I try run `npm run start` from the symlink folder it fails but it works from the actually one!\r\n\r\nI assume what you're thinking is correct - that webpack doesn't understand symbolic links. Somehow some of the files are not being found."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 688334322.0, 'datetime': '2020-09-07 13:41:36+00:00', 'masked_author': 'username_1', 'text': ""Thanks for reporting this.\r\n\r\nDo you think we can do anything about it?\r\n\r\nNote we have this `resolve.symlinks: true` in config (https://webpack.js.org/configuration/resolve/#resolvesymlinks).\r\n\r\nBy using a local site plugin + configureWebpack you should be able to override any default setting we set, so maybe it's worth checking if you find a final config that works for your usecase?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kewp', 'comment_id': 688339568.0, 'datetime': '2020-09-07 13:50:46+00:00', 'masked_author': 'username_0', 'text': ""Not sure how to fix this. I've tried creating a `webpack.config.js` locally and setting the config you mention, @username_1 , but it has no effect. Not sure how to create a local site plugin as you suggest either."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 688409489.0, 'datetime': '2020-09-07 15:59:06+00:00', 'masked_author': 'username_1', 'text': ""@username_0 we don't read any webpack.config.js file.\r\n\r\nThe doc to create a local plugin is very simple:\r\nhttps://v2.docusaurus.io/docs/using-plugins#creating-plugins\r\nhttps://v2.docusaurus.io/docs/lifecycle-apis#configurewebpackconfig-isserver-utils\r\n\r\nI think something like that:\r\n\r\n```js\r\nmodule.exports = function (context, options) {\r\n  return {\r\n    name: 'custom-docusaurus-plugin',\r\n    configureWebpack(config, isServer, utils) {\r\n      return {\r\n        resolve {\r\n          symlinks: false\r\n        },\r\n      };\r\n    },\r\n  };\r\n};\r\n```"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'kewp', 'comment_id': 688411632.0, 'datetime': '2020-09-07 16:03:16+00:00', 'masked_author': 'username_0', 'text': 'Hi @username_1 . Yup that worked too :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'CyborgMaster', 'comment_id': 688422327.0, 'datetime': '2020-09-07 16:24:58+00:00', 'masked_author': 'username_3', 'text': ""@username_1, that worked for me too.  I added the plugin you provided in your comment and now the symlinked files work.\r\n\r\nI'm obviously not understanding something here, but it feels completely backwards to me that in order to get docs that are symlinked in to work we have to set `resolve symlinks: false` in the webpack config.  But hey, it works.  \r\n\r\nThanks for you help!  This may be super specific to our setup so I don't know if it belongs in the docusaurus docs or not, but it was certainly tricky to find."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 688423773.0, 'datetime': '2020-09-07 16:28:07+00:00', 'masked_author': 'username_1', 'text': 'Also saw this webpack setting and found it confusing, but as far as I understand it, true means webpack will try to ""replace"" the symlink by its real location, not that it will enable some kind of mode that works with symlinks.\r\n\r\nI don\'t know either why in Docusaurus we have symlinks: true exactly, not sure we\'ll be able to know now', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 708309281.0, 'datetime': '2020-10-14 10:21:30+00:00', 'masked_author': 'username_1', 'text': ""Another issue with this symlinks error: https://github.com/facebook/docusaurus/issues/3579\r\n\r\nMaybe we should consider switching symlinks to false by default. Not sure about the impact of this, so we'd rather be prepared to revert if users report bugs after release"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'BiosSun', 'comment_id': 780539523.0, 'datetime': '2021-02-17 12:59:17+00:00', 'masked_author': 'username_4', 'text': 'Set `resolve.symlinks: false` is works. But when I modify the docs, the local site does not auto refresh and display the new modified content.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'plaurent', 'comment_id': 852541530.0, 'datetime': '2021-06-01 22:58:56+00:00', 'masked_author': 'username_5', 'text': ""I'm running into the same error now, with docusaurus 2.0.0-beta.0 and symlinks out to ../site/* for my `docs`, `src` and `static` folders.\r\n\r\nThe above workaround does not appear to work any longer.  Might that be due to the updates for v5.x?  Does anyone know of a workaround for the current docusaurus?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'plaurent', 'comment_id': 852559507.0, 'datetime': '2021-06-01 23:35:47+00:00', 'masked_author': 'username_5', 'text': 'To clarify: the plugin workaround does work for `npm run build` and serving the static site, but does not work for `npm run start`.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 853724859.0, 'datetime': '2021-06-03 09:22:08+00:00', 'masked_author': 'username_1', 'text': 'Maybe worth trying updating the `watchOptions.followSymlinks` option mentioned by @username_4 \r\n\r\nYou can edit the file locally. here and restart your server: `node_modules/docusaurus/lib/commands/start.js`', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'felipecrs', 'comment_id': 858031787.0, 'datetime': '2021-06-09 19:26:23+00:00', 'masked_author': 'username_6', 'text': '@username_1 it does not seem to work, sadly.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bravo-kernel', 'comment_id': 860788967.0, 'datetime': '2021-06-14 15:43:47+00:00', 'masked_author': 'username_7', 'text': 'FWIW I just had the exact same issue after upgrading to `2.0.0-beta.0`.\r\n\r\nRemoving `node_modules` followed by a `yarn install` solved it for me.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'silverqx', 'comment_id': 876374383.0, 'datetime': '2021-07-08 11:52:19+00:00', 'masked_author': 'username_8', 'text': ""I have the same problem and `symlinks: false` solve it, add this to `docusaurus.config.js` and you are ready to go on symlinked folders:\r\n```\r\nplugins: [\r\n  function (context, options) {\r\n    return {\r\n      name: 'webpack-configuration-plugin',\r\n      configureWebpack(config, isServer, utils) {\r\n        return {\r\n          resolve: {\r\n            symlinks: false,\r\n          }\r\n        };\r\n      }\r\n    };\r\n  },\r\n],\r\n```\r\n\r\nAlso `HMR` works ok."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 876483266.0, 'datetime': '2021-07-08 14:23:31+00:00', 'masked_author': 'username_1', 'text': ""yes, we can now pass plugins as inline config functions :)\r\n\r\nI'm not sure to understand why we have `symlink: true` in our webpack config anymore, so I think we could just remove that and see if anyone complains. Just be aware that I may have to revert it if any significant bug is reported about that change."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 876567307.0, 'datetime': '2021-07-08 16:12:04+00:00', 'masked_author': 'username_1', 'text': ""FYI I coudn't find any reason to use `symlink: true`.\r\nThe code introducing this is very old and does not explain this setting (https://github.com/facebook/docusaurus/commit/2ab412e563e4aa7ac87d05edaa05ebbfb4c7d8d1)\r\n\r\n\r\nGoing to revert to false in https://github.com/facebook/docusaurus/pull/5126\r\n\r\nUsing a symlinked folder as source docs seems to work fine (in dev/watchmode + prod)\r\n\r\nUsing symlinks inside the regular docs folder does not really work, and probably require more work so that features such as auto-generated sidebars etc work as intended.\r\n\r\nDo you all have the same use-case to create a single symlink for the root docs folder?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'silverqx', 'comment_id': 876579974.0, 'datetime': '2021-07-08 16:30:19+00:00', 'masked_author': 'username_8', 'text': 'Nice thank you 🙏 For me it makes sense.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'felipecrs', 'comment_id': 876583717.0, 'datetime': '2021-07-08 16:35:58+00:00', 'masked_author': 'username_6', 'text': ""That's very much like my use case as well."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'slorber', 'comment_id': None, 'datetime': '2021-07-08 16:59:57+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 876598981.0, 'datetime': '2021-07-08 17:01:07+00:00', 'masked_author': 'username_1', 'text': ""great, we'll figure out later if using symlinks inside the docs root folder is necessary.\r\n\r\nIf you have this need please explain your usecase.\r\n\r\nI've added a new docs plugin instance using a root symlink so that we keep this behavior working over time. CI builds fine on linux/windows: https://deploy-preview-5126--docusaurus-2.netlify.app/docs-tests"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 879295056.0, 'datetime': '2021-07-13 18:09:11+00:00', 'masked_author': 'username_1', 'text': ""Unfortunately, I have to revert the change I made (https://github.com/facebook/docusaurus/pull/5164). \r\n\r\nThere is a bug in Webpack 5 caching and using `resolve.symlinks: false` lead to deploying a Docusaurus site with stale cache entries. \r\n\r\nIf you implement a Docusaurus plugin as part of a monorepo and change some UI code, your new deployment (dev + prod) may not see your changes. Not many sites will be affected by this in practice (theme components should be fine fine), but it's particularly painful for ourselves: Docusaurus PR Netlify deploy previews show stale UI components.\r\n\r\nIf you decide to stick to using `webpack.resolve.symlinks = false` in your site for symlinks reasons, and have some monorepo UI lib symlinked, I recommend to run `docusaurus clear` to be free of nasty side-effects.\r\n\r\nAlso, I'm not sure using `symlinks: false` is a good solution, and webpack contributors do not seem to agree it's a good idea to use `false` either.\r\n\r\nI'd like to recommend another workaround to try: instead of using `symlinks: false`, you can try to resolve the symlink to the real location, directly in your config:\r\n\r\n```js\r\n    [\r\n      '@docusaurus/plugin-content-docs',\r\n      {\r\n        routeBasePath: 'docs',\r\n        sidebarPath: 'sidebars.js',\r\n        path: fs.realpathSync('docs-symlink'),\r\n      },\r\n    ],\r\n```\r\n\r\nPlease let me know if this workaround works for your site. \r\nWe'll only try to apply `symlinks: false` again if some come up with a case where it does not work and we can't find any other solution (repros / linked repos appreciated)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yokymia', 'comment_id': 879395892.0, 'datetime': '2021-07-13 20:54:51+00:00', 'masked_author': 'username_9', 'text': 'Hello everyone', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'nitinkatyal1314', 'comment_id': 887464228.0, 'datetime': '2021-07-27 12:18:50+00:00', 'masked_author': 'username_10', 'text': 'Can confirm on this. With `{ symlink: false}` HMR does not work. Tried using the `{ followsymlinks: true}` option in `devServer` conf, but it does not work as intended. The app recompiles on changes but the browser does not refreshes the content.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'leograba', 'comment_id': 895422321.0, 'datetime': '2021-08-09 17:57:04+00:00', 'masked_author': 'username_11', 'text': 'If one has a [docs multi-instance](https://docusaurus.io/docs/docs-multi-instance) and wants to share a directory with [partials](https://docusaurus.io/docs/markdown-features/react#importing-markdown) between two docs instances, would the symlink approach work?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 895908559.0, 'datetime': '2021-08-10 10:17:28+00:00', 'masked_author': 'username_1', 'text': '@username_11 the canary now allows putting mdx docs anywhere (https://github.com/facebook/docusaurus/pull/5299) so you shouldn\'t need symlinks anymore: just import the mdx files where you want to use them. \r\n\r\nHowever keep in mind the link resolution in those partials is ""simpler"", it doesn\'t resolve relative md file paths but only regular relative/abslute links. Also there\'s a TOC limitation (https://github.com/facebook/docusaurus/issues/3915)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'leograba', 'comment_id': 895998956.0, 'datetime': '2021-08-10 12:48:24+00:00', 'masked_author': 'username_11', 'text': '@username_1 thanks! I have tested it with the canary release `0.0.0-3900` and it worked well.\r\n\r\nAbout the link resolution, I have previously noticed that that the ""simpler"" link resolution also affects referring to a different doc in a multi-docs setup, so I\'ve been already using relative links. I\'ll keep in mind the [limitations of relative links instead of relative file paths](https://docusaurus.io/docs/next/docs-markdown-features#referencing-other-documents).\r\n\r\nAbout the TOC, keeping an eye on (#3915) :)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 896008504.0, 'datetime': '2021-08-10 13:02:34+00:00', 'masked_author': 'username_1', 'text': ""Yes, only the docs plugin resolve relative md file paths currently and it's limited to the scope of a single instance. We need some additional infrastructure so that plugins can expose to each others a `filePath => absolute url` mapping. But anyway if 2 instances have different version schemes you'd rather avoid such links because it won't play well with versioning, as the versined docs would be in a totally different folders. In such case we'll probably need to support something like `[SomeLink](@site/docs/myDoc.md)` to make those links easier to version."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 901982826.0, 'datetime': '2021-08-19 14:53:23+00:00', 'masked_author': 'username_1', 'text': 'The Webpack 5 caching bug should be resolved in https://github.com/webpack/webpack/pull/14019\r\nUsing `symlinks: false` should be safe again in webpack 5.51.0', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Couldn't start classic template: Module parse failed: Assigning to rvalue
username_0: | id: doc1
| title: Style Guide
 @ c:/users/karlp/firkin-www/.docusaurus/registry.js 1:3494-3536 1:3394-3471
 @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js
 @ c:/users/karlp/firkin-www/.docusaurus/routes.js
 @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.js
 @ multi c:/users/karlp/firkin-www/node_modules/react-dev-utils/webpackHotDevClient.js c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.jsc:/users/karlp/firkin-www/docs/doc2.md 1:2
Module parse failed: Assigning to rvalue (1:2)
```

## Your Environment

- Docusaurus version used: 2.0.0-alpha.61
- Environment name and version: node 12.8.3
- Operating system and version: Windows 10
<issue_comment>username_1: I have no idea what's going on but it works for me.

Can someone reproduce this consistently? 
Maybe it's specific to your env.

Can you try with yarn instead of npm? 

Have you modified anything at all of the generated project?

Are you sure you are in the correct directory? I see you created `my-website`, yet the logs show you are in `firkin-www`
<issue_comment>username_0: Hey @username_1 

I just tried this on another machine (also Windows) and it worked fine. So you may be right - it might just be my env.

To answer your questions, though - I didn't modify anything in the generated project. And I was in the correct directory (the initial command using `my-website` was wrong).<issue_closed>
<issue_comment>username_1: Ok great to know.

Not sure what I can do about this issue, so I'm closing, but let's reopen it if other users are affected and we get more info.
<issue_comment>username_2: | id: mdx
| title: Powered by MDX
 @ ./.docusaurus/registry.js 1:5809-5875 1:5657-5762
 @ ./node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js
 @ ./.docusaurus/routes.js
 @ ./node_modules/@docusaurus/core/lib/client/clientEntry.js
 @ multi ./node_modules/react-dev-utils/webpackHotDevClient.js ./node_modules/@docusaurus/core/lib/client/clientEntry.js

```
<issue_comment>username_2: | id: mdx
| title: Powered by MDX
 @ ./.docusaurus/registry.js 1:5809-5875 1:5657-5762
 @ ./node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js
 @ ./.docusaurus/routes.js
 @ ./node_modules/@docusaurus/core/lib/client/clientEntry.js
 @ multi ./node_modules/react-dev-utils/webpackHotDevClient.js ./node_modules/@docusaurus/core/lib/client/clientEntry.js

```
<issue_comment>username_1: | id: doc1
| title: Style Guide
 @ c:/users/karlp/firkin-www/.docusaurus/registry.js 1:3494-3536 1:3394-3471
 @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/exports/ComponentCreator.js
 @ c:/users/karlp/firkin-www/.docusaurus/routes.js
 @ c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.js
 @ multi c:/users/karlp/firkin-www/node_modules/react-dev-utils/webpackHotDevClient.js c:/users/karlp/firkin-www/node_modules/@docusaurus/core/lib/client/clientEntry.jsc:/users/karlp/firkin-www/docs/doc2.md 1:2
Module parse failed: Assigning to rvalue (1:2)
```

## Your Environment

- Docusaurus version used: 2.0.0-alpha.61
- Environment name and version: node 12.8.3
- Operating system and version: Windows 10
<issue_comment>username_1: Hi,

Can you give us more infos on your env?

Are you both on Windows?

Wonder if you use a fs path with spaces in it or something? That can lead to issues sometimes.
<issue_comment>username_3: I'm running into the same issue, when trying to use files that a symlink in from another directory.  Are you aware of any issues with symlinks?
<issue_comment>username_3: It almost seems that docusaurus isn't finding the files and compiling them from markdown into js files?  Or maybe webpack can't handle symlinks?  I don't have enough background to really say.
<issue_comment>username_3: It may have something to do with this https://github.com/webpack/webpack/issues/1643
<issue_comment>username_0: Yes! @username_3 this is what fixed it for me.

For me, my user folder `c:\users\karl` is actually a symlink to `c:\users\karlp`. If I try run `npm run start` from the symlink folder it fails but it works from the actually one!

I assume what you're thinking is correct - that webpack doesn't understand symbolic links. Somehow some of the files are not being found.
<issue_comment>username_1: Thanks for reporting this.

Do you think we can do anything about it?

Note we have this `resolve.symlinks: true` in config (https://webpack.js.org/configuration/resolve/#resolvesymlinks).

By using a local site plugin + configureWebpack you should be able to override any default setting we set, so maybe it's worth checking if you find a final config that works for your usecase?
<issue_comment>username_0: Not sure how to fix this. I've tried creating a `webpack.config.js` locally and setting the config you mention, @username_1 , but it has no effect. Not sure how to create a local site plugin as you suggest either.
<issue_comment>username_1: @username_0 we don't read any webpack.config.js file.

The doc to create a local plugin is very simple:
https://v2.docusaurus.io/docs/using-plugins#creating-plugins
https://v2.docusaurus.io/docs/lifecycle-apis#configurewebpackconfig-isserver-utils

I think something like that:

```js
module.exports = function (context, options) {
  return {
    name: 'custom-docusaurus-plugin',
    configureWebpack(config, isServer, utils) {
      return {
        resolve {
          symlinks: false
        },
      };
    },
  };
};
```
<issue_comment>username_0: Hi @username_1 . Yup that worked too :)
<issue_comment>username_3: @username_1, that worked for me too.  I added the plugin you provided in your comment and now the symlinked files work.

I'm obviously not understanding something here, but it feels completely backwards to me that in order to get docs that are symlinked in to work we have to set `resolve symlinks: false` in the webpack config.  But hey, it works.  

Thanks for you help!  This may be super specific to our setup so I don't know if it belongs in the docusaurus docs or not, but it was certainly tricky to find.
<issue_comment>username_1: Also saw this webpack setting and found it confusing, but as far as I understand it, true means webpack will try to ""replace"" the symlink by its real location, not that it will enable some kind of mode that works with symlinks.

I don't know either why in Docusaurus we have symlinks: true exactly, not sure we'll be able to know now
<issue_comment>username_1: Another issue with this symlinks error: https://github.com/facebook/docusaurus/issues/3579

Maybe we should consider switching symlinks to false by default. Not sure about the impact of this, so we'd rather be prepared to revert if users report bugs after release
<issue_comment>username_4: Set `resolve.symlinks: false` is works. But when I modify the docs, the local site does not auto refresh and display the new modified content.
<issue_comment>username_5: I'm running into the same error now, with docusaurus 2.0.0-beta.0 and symlinks out to ../site/* for my `docs`, `src` and `static` folders.

The above workaround does not appear to work any longer.  Might that be due to the updates for v5.x?  Does anyone know of a workaround for the current docusaurus?
<issue_comment>username_5: To clarify: the plugin workaround does work for `npm run build` and serving the static site, but does not work for `npm run start`.
<issue_comment>username_1: Maybe worth trying updating the `watchOptions.followSymlinks` option mentioned by @username_4 

You can edit the file locally. here and restart your server: `node_modules/docusaurus/lib/commands/start.js`
<issue_comment>username_6: @username_1 it does not seem to work, sadly.
<issue_comment>username_7: FWIW I just had the exact same issue after upgrading to `2.0.0-beta.0`.

Removing `node_modules` followed by a `yarn install` solved it for me.
<issue_comment>username_8: I have the same problem and `symlinks: false` solve it, add this to `docusaurus.config.js` and you are ready to go on symlinked folders:
```
plugins: [
  function (context, options) {
    return {
      name: 'webpack-configuration-plugin',
      configureWebpack(config, isServer, utils) {
        return {
          resolve: {
            symlinks: false,
          }
        };
      }
    };
  },
],
```

Also `HMR` works ok.
<issue_comment>username_1: yes, we can now pass plugins as inline config functions :)

I'm not sure to understand why we have `symlink: true` in our webpack config anymore, so I think we could just remove that and see if anyone complains. Just be aware that I may have to revert it if any significant bug is reported about that change.
<issue_comment>username_1: FYI I coudn't find any reason to use `symlink: true`.
The code introducing this is very old and does not explain this setting (https://github.com/facebook/docusaurus/commit/2ab412e563e4aa7ac87d05edaa05ebbfb4c7d8d1)


Going to revert to false in https://github.com/facebook/docusaurus/pull/5126

Using a symlinked folder as source docs seems to work fine (in dev/watchmode + prod)

Using symlinks inside the regular docs folder does not really work, and probably require more work so that features such as auto-generated sidebars etc work as intended.

Do you all have the same use-case to create a single symlink for the root docs folder?
<issue_comment>username_8: Nice thank you 🙏 For me it makes sense.
<issue_comment>username_6: That's very much like my use case as well.<issue_closed>
<issue_comment>username_1: great, we'll figure out later if using symlinks inside the docs root folder is necessary.

If you have this need please explain your usecase.

I've added a new docs plugin instance using a root symlink so that we keep this behavior working over time. CI builds fine on linux/windows: https://deploy-preview-5126--docusaurus-2.netlify.app/docs-tests
<issue_comment>username_1: Unfortunately, I have to revert the change I made (https://github.com/facebook/docusaurus/pull/5164). 

There is a bug in Webpack 5 caching and using `resolve.symlinks: false` lead to deploying a Docusaurus site with stale cache entries. 

If you implement a Docusaurus plugin as part of a monorepo and change some UI code, your new deployment (dev + prod) may not see your changes. Not many sites will be affected by this in practice (theme components should be fine fine), but it's particularly painful for ourselves: Docusaurus PR Netlify deploy previews show stale UI components.

If you decide to stick to using `webpack.resolve.symlinks = false` in your site for symlinks reasons, and have some monorepo UI lib symlinked, I recommend to run `docusaurus clear` to be free of nasty side-effects.

Also, I'm not sure using `symlinks: false` is a good solution, and webpack contributors do not seem to agree it's a good idea to use `false` either.

I'd like to recommend another workaround to try: instead of using `symlinks: false`, you can try to resolve the symlink to the real location, directly in your config:

```js
    [
      '@docusaurus/plugin-content-docs',
      {
        routeBasePath: 'docs',
        sidebarPath: 'sidebars.js',
        path: fs.realpathSync('docs-symlink'),
      },
    ],
```

Please let me know if this workaround works for your site. 
We'll only try to apply `symlinks: false` again if some come up with a case where it does not work and we can't find any other solution (repros / linked repos appreciated)
<issue_comment>username_9: Hello everyone
<issue_comment>username_10: Can confirm on this. With `{ symlink: false}` HMR does not work. Tried using the `{ followsymlinks: true}` option in `devServer` conf, but it does not work as intended. The app recompiles on changes but the browser does not refreshes the content.
<issue_comment>username_11: If one has a [docs multi-instance](https://docusaurus.io/docs/docs-multi-instance) and wants to share a directory with [partials](https://docusaurus.io/docs/markdown-features/react#importing-markdown) between two docs instances, would the symlink approach work?
<issue_comment>username_1: @username_11 the canary now allows putting mdx docs anywhere (https://github.com/facebook/docusaurus/pull/5299) so you shouldn't need symlinks anymore: just import the mdx files where you want to use them. 

However keep in mind the link resolution in those partials is ""simpler"", it doesn't resolve relative md file paths but only regular relative/abslute links. Also there's a TOC limitation (https://github.com/facebook/docusaurus/issues/3915)
<issue_comment>username_11: @username_1 thanks! I have tested it with the canary release `0.0.0-3900` and it worked well.

About the link resolution, I have previously noticed that that the ""simpler"" link resolution also affects referring to a different doc in a multi-docs setup, so I've been already using relative links. I'll keep in mind the [limitations of relative links instead of relative file paths](https://docusaurus.io/docs/next/docs-markdown-features#referencing-other-documents).

About the TOC, keeping an eye on (#3915) :)
<issue_comment>username_1: Yes, only the docs plugin resolve relative md file paths currently and it's limited to the scope of a single instance. We need some additional infrastructure so that plugins can expose to each others a `filePath => absolute url` mapping. But anyway if 2 instances have different version schemes you'd rather avoid such links because it won't play well with versioning, as the versined docs would be in a totally different folders. In such case we'll probably need to support something like `[SomeLink](@site/docs/myDoc.md)` to make those links easier to version.
<issue_comment>username_1: The Webpack 5 caching bug should be resolved in https://github.com/webpack/webpack/pull/14019
Using `symlinks: false` should be safe again in webpack 5.51.0"
appveyor/website,578259846,709,,"[{'action': 'opened', 'author': 'HariSekhon', 'comment_id': None, 'datetime': '2020-03-10 00:13:24+00:00', 'masked_author': 'username_0', 'text': ""Hi,\r\n\r\nI've been testing BYOC functionality but it exits immediately after setting up in a docker container.\r\n\r\n```\r\nReading Host Agent authorization token from the existing cloud.\r\n\r\nEnsure build worker image is available for AppVeyor projects\r\nAppVeyor build worker image 'Linux' already exists.\r\n\r\nInstalling AppVeyor Host Agent\r\nOS: Linux\r\nHost Agent is already installed\r\n7.0.2546\r\n\r\nThe script successfully completed in 00:00:07.\r\n\r\nNext steps:\r\n - Optionally review build environment 3247bb2f0aad at https://ci.appveyor.com/build-clouds/812\r\n - To start building on this computer select Linux build worker image and 3247bb2f0aad build cloud on AppVeyor project settings or in appveyor.yml:\r\n\r\nbuild_cloud: 3247bb2f0aad\r\nimage: Linux\r\n\r\n\r\nPS /pwd> root@3247bb2f0aad:/pwd#\r\nroot@3247bb2f0aad:/pwd#\r\n```\r\n\r\nYou can reproduce exactly what I am doing using this script:\r\n\r\nhttps://github.com/username_0/DevOps-Bash-tools/blob/master/appveyor_byoc_debian.sh\r\n\r\n(it leverages several other adjacent scripts to install powershell, appveyor module, debian dependency packages etc so it's easier if you just git clone and then run it).\r\n\r\nThe agent appears offline shortly after install in the cloud builds page:\r\n\r\nhttps://ci.appveyor.com/build-clouds\r\n\r\nAlso, it would be helpful if we didn't have to specify a single cloud build environment but could specify to use any one of several available environments that match criteria, eg. Linux.\r\n\r\nAdditionally, because I am running this in a container the hostname from which the cloud name is defined is temporary, it there something we could do to just use any cloud environment that has Linux agent from any cloud environment?\r\n\r\nThis bit around having to name a specific build_cloud seems like something that needs clarifying, as well as why the agent is offline.\r\n\r\nThe script I've provided should enable you to reproduce it exactly, all you need is `APPVEYOR_TOKEN` in the environment and docker installed and it'll do everything else.\r\n\r\nOne other minor issue I noticed, the terminal gets messed up and resets to the top without clearing and then starts overwriting the existing output, making it hard to see (I've had to hold enter to clear it while it's running so new information is printed further down to see what's going on, at which point it exists and the pending newlines race down the screen so I then have to scroll up - it's a minor annoyance but would be good if it could be fixed).\r\n\r\nThanks\r\n\r\nHari"", 'title': 'BYOC documentation clarity', 'type': 'issue'}
 {'action': 'created', 'author': 'FeodorFitsner', 'comment_id': 596845124.0, 'datetime': '2020-03-10 00:42:21+00:00', 'masked_author': 'username_1', 'text': 'Will take a look. Where `pwsh` is getting from? Does `debian:9` already contain it?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'HariSekhon', 'comment_id': 597043266.0, 'datetime': '2020-03-10 11:44:54+00:00', 'masked_author': 'username_0', 'text': ""Yes the script I mentioned uses the official install method from Microsoft for powershell. You can simply run it, it'll run a debian docker container, install powershell, the appveyor module and run it to reproduce the error I showed above."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'FeodorFitsner', 'comment_id': 597209697.0, 'datetime': '2020-03-10 17:21:17+00:00', 'masked_author': 'username_1', 'text': ""AppVeyor Host Agent is installed as systemd service. AFAIK systemd is not available in Docker containers - could it be the problem? So, if you want to have Host Agent inside container I'd expect something like `docker run <image-with-host-agent> <path-to-host-agent-executable>`."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'HariSekhon', 'comment_id': None, 'datetime': '2020-03-18 14:37:55+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'HariSekhon', 'comment_id': 600660282.0, 'datetime': '2020-03-18 14:37:55+00:00', 'masked_author': 'username_0', 'text': 'Yes I should have noticed that, looks like starting it myself gets it up and running, thanks!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: BYOC documentation clarity
username_0: Hi,

I've been testing BYOC functionality but it exits immediately after setting up in a docker container.

```
Reading Host Agent authorization token from the existing cloud.

Ensure build worker image is available for AppVeyor projects
AppVeyor build worker image 'Linux' already exists.

Installing AppVeyor Host Agent
OS: Linux
Host Agent is already installed
7.0.2546

The script successfully completed in 00:00:07.

Next steps:
 - Optionally review build environment 3247bb2f0aad at https://ci.appveyor.com/build-clouds/812
 - To start building on this computer select Linux build worker image and 3247bb2f0aad build cloud on AppVeyor project settings or in appveyor.yml:

build_cloud: 3247bb2f0aad
image: Linux


PS /pwd> root@3247bb2f0aad:/pwd#
root@3247bb2f0aad:/pwd#
```

You can reproduce exactly what I am doing using this script:

https://github.com/username_0/DevOps-Bash-tools/blob/master/appveyor_byoc_debian.sh

(it leverages several other adjacent scripts to install powershell, appveyor module, debian dependency packages etc so it's easier if you just git clone and then run it).

The agent appears offline shortly after install in the cloud builds page:

https://ci.appveyor.com/build-clouds

Also, it would be helpful if we didn't have to specify a single cloud build environment but could specify to use any one of several available environments that match criteria, eg. Linux.

Additionally, because I am running this in a container the hostname from which the cloud name is defined is temporary, it there something we could do to just use any cloud environment that has Linux agent from any cloud environment?

This bit around having to name a specific build_cloud seems like something that needs clarifying, as well as why the agent is offline.

The script I've provided should enable you to reproduce it exactly, all you need is `APPVEYOR_TOKEN` in the environment and docker installed and it'll do everything else.

One other minor issue I noticed, the terminal gets messed up and resets to the top without clearing and then starts overwriting the existing output, making it hard to see (I've had to hold enter to clear it while it's running so new information is printed further down to see what's going on, at which point it exists and the pending newlines race down the screen so I then have to scroll up - it's a minor annoyance but would be good if it could be fixed).

Thanks

Hari
<issue_comment>username_1: Will take a look. Where `pwsh` is getting from? Does `debian:9` already contain it?
<issue_comment>username_0: Yes the script I mentioned uses the official install method from Microsoft for powershell. You can simply run it, it'll run a debian docker container, install powershell, the appveyor module and run it to reproduce the error I showed above.
<issue_comment>username_1: AppVeyor Host Agent is installed as systemd service. AFAIK systemd is not available in Docker containers - could it be the problem? So, if you want to have Host Agent inside container I'd expect something like `docker run <image-with-host-agent> <path-to-host-agent-executable>`.<issue_closed>
<issue_comment>username_0: Yes I should have noticed that, looks like starting it myself gets it up and running, thanks!"
gohugoio/hugo,339418665,4919,,"[{'action': 'opened', 'author': 'Jos512', 'comment_id': None, 'datetime': '2018-07-09 11:55:17+00:00', 'masked_author': 'username_0', 'text': 'From the releases page I downloaded `hugo_extended_0.43_Windows-64bit.zip`, unzipped the file, and moved `hugo.exe` to my Hugo folder on PATH.\r\n\r\nHowever, the `hugo` and `hugo server` command don\'t do anything -- no output nor errors show:\r\n\r\n~~~\r\nC:\\site>hugo server\r\n\r\nC:\\site>hugo\r\n\r\nC:\\site>hugo env\r\n\r\nC:\\site>hugo --help\r\n~~~\r\n\r\nThe above is the literal output from the console. There is no error, so Windows does succeed in finding the Hugo executable. But there\'s no output from the Hugo process.\r\n\r\nThings I\'ve tried myself:\r\n\r\n- Remove `hugo.exe` and downloaded zip file and download again.\r\n- Run the console as Administrator.\r\n\r\n---\r\n\r\nIf I download the regular Hugo version (`hugo_0.43_Windows-64bit.zip` from the releases page) and put that `hugo.exe` on my PATH, everything seems fine:\r\n\r\n~~~\r\nC:\\site>hugo server\r\nBuilding sites …\r\n                   | EN\r\n+------------------+----+\r\n  Pages            | 29\r\n  Paginator pages  |  0\r\n  Non-page files   |  0\r\n  Static files     | 24\r\n  Processed images |  0\r\n  Aliases          |  0\r\n  Sitemaps         |  1\r\n  Cleaned          |  0\r\n\r\nTotal in 93 ms\r\nWatching for changes in C:\\Kodify\\kodify-site\\{content,data,layouts,static,themes}\r\nWatching for config changes in C:\\Kodify\\kodify-site\\config.toml\r\nServing pages from memory\r\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\r\nPress Ctrl+C to stop\r\n\r\nC:\\site>hugo env\r\nHugo Static Site Generator v0.43 windows/amd64 BuildDate: 2018-07-09T10:01:11Z\r\nGOOS=""windows""\r\nGOARCH=""amd64""\r\nGOVERSION=""go1.10.1""\r\n~~~\r\n\r\nPerhaps I missed something obvious?', 'title': ""[0.43] Hugo extended (Windows) doesn't do anything "", 'type': 'issue'}
 {'action': 'created', 'author': 'bep', 'comment_id': 403466276.0, 'datetime': '2018-07-09 12:45:30+00:00', 'masked_author': 'username_1', 'text': ""So, I have tested that EXE file on Windows 10 (running Parallels on MacOS), so it's at least working for some (me). You can start by telling me what Windows version you are running.\r\n\r\nAlso, judging by havoc the build related troubles this release has given me this weekend and today, I would not hold my breath for a fix from me on this today ... :-)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'coliff', 'comment_id': 403468081.0, 'datetime': '2018-07-09 12:52:30+00:00', 'masked_author': 'username_2', 'text': ""Hi. I downloaded the `hugo_extended_0.43_Windows-64bit.zip` and am experiencing the same issues as @username_0. It doesn't do anything. I'm using Windows 10 Professional (Build 1709)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 403472441.0, 'datetime': '2018-07-09 13:08:23+00:00', 'masked_author': 'username_1', 'text': ""But at least it's fast. OK, I will eventually look into it. I may ask one of you for some test help ..."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Jos512', 'comment_id': 403487057.0, 'datetime': '2018-07-09 13:53:35+00:00', 'masked_author': 'username_0', 'text': 'I have a flexible schedule so can definitely help with that.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 403544259.0, 'datetime': '2018-07-09 16:46:59+00:00', 'masked_author': 'username_1', 'text': 'OK, I think I know what is happening. I tested the Win binary in Git bash on Windows, where it works. It fails (with an error) in Command. I think I need to compile this as a static binary to make sure everything is there, always. Will update this when you can try.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Jos512', 'comment_id': 403548337.0, 'datetime': '2018-07-09 17:00:37+00:00', 'masked_author': 'username_0', 'text': ""It seems you're on the right track.\r\n\r\nWith Git bash I get:\r\n\r\n~~~\r\nJos@Jos-ownbuild MINGW32 /c/site (sassHugo)\r\n$ hugo server\r\nC:/Hugo/hugo.exe: error while loading shared libraries: ?: cannot open shared ob\r\nject file: No such file or directory\r\n~~~\r\n\r\nPowerShell gives:\r\n\r\n~~~\r\nPS C:\\site> hugo server\r\nPS C:\\site>\r\n~~~\r\n(So nothing happens.)\r\n\r\nAnd with command prompt (`cmd.exe`) I get:\r\n\r\n~~~\r\nC:\\site>hugo server\r\n~~~\r\n\r\nAnd then this prompt pops up:\r\n\r\n![2018-07-09_18-59-56](https://user-images.githubusercontent.com/13403160/42464762-5376472c-83aa-11e8-8050-de3b0635ffea.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 403580563.0, 'datetime': '2018-07-09 18:43:47+00:00', 'masked_author': 'username_1', 'text': '@username_0 I have no pushed a set of new ""extended"" archives (only the Windows is actually different).\r\n\r\nI have tested this OK in my ""commands console"" (where it failed before).\r\n\r\nLet me know.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Jos512', 'comment_id': 403586661.0, 'datetime': '2018-07-09 19:04:12+00:00', 'masked_author': 'username_0', 'text': 'The new archive works for me!  Both running the commands in consoles work (see below) as well as the Sass features (the `toCSS` function).\r\n\r\nAwesome, thank you very much! :+1: \r\n\r\n---\r\n\r\nPowerShell:\r\n\r\n~~~\r\nPS C:\\site> hugo env\r\nHugo Static Site Generator v0.44-DEV/extended windows/amd64 BuildDate: unknown\r\nGOOS=""windows""\r\nGOARCH=""amd64""\r\nGOVERSION=""go1.10.3""\r\nPS C:\\site> hugo server -DF\r\nBuilding sites .\r\n                   | EN\r\n+------------------+----+\r\n  Pages            | 29\r\n  Paginator pages  |  0\r\n  Non-page files   |  0\r\n  Static files     | 19\r\n  Processed images |  0\r\n  Aliases          |  0\r\n  Sitemaps         |  1\r\n  Cleaned          |  0\r\n\r\nTotal in 81 ms\r\nWatching for changes in C:\\site\\{content,data,layouts,static,themes}\r\nWatching for config changes in C:\\site\\config.toml\r\nServing pages from memory\r\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\r\nPress Ctrl+C to stop\r\n~~~\r\n\r\nGit bash:\r\n\r\n~~~\r\nJos@Jos-ownbuild MINGW32 /c/site (sassHugo)\r\n$ hugo env\r\nHugo Static Site Generator v0.44-DEV/extended windows/amd64 BuildDate: unknown\r\nGOOS=""windows""\r\nGOARCH=""amd64""\r\nGOVERSION=""go1.10.3""\r\n\r\nJos@Jos-ownbuild MINGW32 /c/site (sassHugo)\r\n$ hugo server -DF\r\nBuilding sites .\r\n                   | EN\r\n+------------------+----+\r\n  Pages            | 29\r\n  Paginator pages  |  0\r\n  Non-page files   |  0\r\n  Static files     | 19\r\n  Processed images |  0\r\n  Aliases          |  0\r\n  Sitemaps         |  1\r\n  Cleaned          |  0\r\n\r\nTotal in 73 ms\r\nWatching for changes in C:\\site\\{content,data,layouts,static,theme\r\ns}\r\nWatching for config changes in C:\\site\\config.toml\r\nServing pages from memory\r\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\r\nPress Ctrl+C to stop\r\n~~~\r\n\r\nAnd the default command prompt (`cmd.exe`):\r\n\r\n~~~\r\nC:\\site>hugo env\r\nHugo Static Site Generator v0.44-DEV/extended windows/amd64 BuildDate: unknown\r\nGOOS=""windows""\r\nGOARCH=""amd64""\r\nGOVERSION=""go1.10.3""\r\n\r\nC:\\site>hugo server -DF\r\nBuilding sites .\r\n                   | EN\r\n+------------------+----+\r\n  Pages            | 29\r\n  Paginator pages  |  0\r\n  Non-page files   |  0\r\n  Static files     | 19\r\n  Processed images |  0\r\n  Aliases          |  0\r\n  Sitemaps         |  1\r\n  Cleaned          |  0\r\n\r\nTotal in 77 ms\r\nWatching for changes in C:\\site\\{content,data,layouts,static,theme\r\ns}\r\nWatching for config changes in C:\\site\\config.toml\r\nServing pages from memory\r\nWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\r\nPress Ctrl+C to stop\r\n~~~\r\n\r\nSo 3 out of 3. Great fix, and very fast too! :slightly_smiling_face:', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bep', 'comment_id': None, 'datetime': '2018-07-09 19:23:39+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: [0.43] Hugo extended (Windows) doesn't do anything 
username_0: From the releases page I downloaded `hugo_extended_0.43_Windows-64bit.zip`, unzipped the file, and moved `hugo.exe` to my Hugo folder on PATH.

However, the `hugo` and `hugo server` command don't do anything -- no output nor errors show:

~~~
C:\site>hugo server

C:\site>hugo

C:\site>hugo env

C:\site>hugo --help
~~~

The above is the literal output from the console. There is no error, so Windows does succeed in finding the Hugo executable. But there's no output from the Hugo process.

Things I've tried myself:

- Remove `hugo.exe` and downloaded zip file and download again.
- Run the console as Administrator.

---

If I download the regular Hugo version (`hugo_0.43_Windows-64bit.zip` from the releases page) and put that `hugo.exe` on my PATH, everything seems fine:

~~~
C:\site>hugo server
Building sites …
                   | EN
+------------------+----+
  Pages            | 29
  Paginator pages  |  0
  Non-page files   |  0
  Static files     | 24
  Processed images |  0
  Aliases          |  0
  Sitemaps         |  1
  Cleaned          |  0

Total in 93 ms
Watching for changes in C:\Kodify\kodify-site\{content,data,layouts,static,themes}
Watching for config changes in C:\Kodify\kodify-site\config.toml
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop

C:\site>hugo env
Hugo Static Site Generator v0.43 windows/amd64 BuildDate: 2018-07-09T10:01:11Z
GOOS=""windows""
GOARCH=""amd64""
GOVERSION=""go1.10.1""
~~~

Perhaps I missed something obvious?
<issue_comment>username_1: So, I have tested that EXE file on Windows 10 (running Parallels on MacOS), so it's at least working for some (me). You can start by telling me what Windows version you are running.

Also, judging by havoc the build related troubles this release has given me this weekend and today, I would not hold my breath for a fix from me on this today ... :-)
<issue_comment>username_2: Hi. I downloaded the `hugo_extended_0.43_Windows-64bit.zip` and am experiencing the same issues as @username_0. It doesn't do anything. I'm using Windows 10 Professional (Build 1709)
<issue_comment>username_1: But at least it's fast. OK, I will eventually look into it. I may ask one of you for some test help ...
<issue_comment>username_0: I have a flexible schedule so can definitely help with that.
<issue_comment>username_1: OK, I think I know what is happening. I tested the Win binary in Git bash on Windows, where it works. It fails (with an error) in Command. I think I need to compile this as a static binary to make sure everything is there, always. Will update this when you can try.
<issue_comment>username_0: It seems you're on the right track.

With Git bash I get:

~~~
Jos@Jos-ownbuild MINGW32 /c/site (sassHugo)
$ hugo server
C:/Hugo/hugo.exe: error while loading shared libraries: ?: cannot open shared ob
ject file: No such file or directory
~~~

PowerShell gives:

~~~
PS C:\site> hugo server
PS C:\site>
~~~
(So nothing happens.)

And with command prompt (`cmd.exe`) I get:

~~~
C:\site>hugo server
~~~

And then this prompt pops up:

![2018-07-09_18-59-56](https://user-images.githubusercontent.com/13403160/42464762-5376472c-83aa-11e8-8050-de3b0635ffea.png)
<issue_comment>username_1: @username_0 I have no pushed a set of new ""extended"" archives (only the Windows is actually different).

I have tested this OK in my ""commands console"" (where it failed before).

Let me know.
<issue_comment>username_0: The new archive works for me!  Both running the commands in consoles work (see below) as well as the Sass features (the `toCSS` function).

Awesome, thank you very much! :+1: 

---

PowerShell:

~~~
PS C:\site> hugo env
Hugo Static Site Generator v0.44-DEV/extended windows/amd64 BuildDate: unknown
GOOS=""windows""
GOARCH=""amd64""
GOVERSION=""go1.10.3""
PS C:\site> hugo server -DF
Building sites .
                   | EN
+------------------+----+
  Pages            | 29
  Paginator pages  |  0
  Non-page files   |  0
  Static files     | 19
  Processed images |  0
  Aliases          |  0
  Sitemaps         |  1
  Cleaned          |  0

Total in 81 ms
Watching for changes in C:\site\{content,data,layouts,static,themes}
Watching for config changes in C:\site\config.toml
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
~~~

Git bash:

~~~
Jos@Jos-ownbuild MINGW32 /c/site (sassHugo)
$ hugo env
Hugo Static Site Generator v0.44-DEV/extended windows/amd64 BuildDate: unknown
GOOS=""windows""
GOARCH=""amd64""
GOVERSION=""go1.10.3""

Jos@Jos-ownbuild MINGW32 /c/site (sassHugo)
$ hugo server -DF
Building sites .
                   | EN
+------------------+----+
  Pages            | 29
  Paginator pages  |  0
  Non-page files   |  0
  Static files     | 19
  Processed images |  0
  Aliases          |  0
  Sitemaps         |  1
  Cleaned          |  0

Total in 73 ms
Watching for changes in C:\site\{content,data,layouts,static,theme
s}
Watching for config changes in C:\site\config.toml
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
~~~

And the default command prompt (`cmd.exe`):

~~~
C:\site>hugo env
Hugo Static Site Generator v0.44-DEV/extended windows/amd64 BuildDate: unknown
GOOS=""windows""
GOARCH=""amd64""
GOVERSION=""go1.10.3""

C:\site>hugo server -DF
Building sites .
                   | EN
+------------------+----+
  Pages            | 29
  Paginator pages  |  0
  Non-page files   |  0
  Static files     | 19
  Processed images |  0
  Aliases          |  0
  Sitemaps         |  1
  Cleaned          |  0

Total in 77 ms
Watching for changes in C:\site\{content,data,layouts,static,theme
s}
Watching for config changes in C:\site\config.toml
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
~~~

So 3 out of 3. Great fix, and very fast too! :slightly_smiling_face:<issue_closed>"
GDQuest/website,818887810,251,,"[{'action': 'opened', 'author': 'Feniks-Gaming', 'comment_id': None, 'datetime': '2021-03-01 13:52:54+00:00', 'masked_author': 'username_0', 'text': '**I\'m submitting a...**\r\n\r\n- [ ] Bug report.\r\n- [x ] Feature request.\r\n\r\n## Feature request ##\r\n\r\n**Describe the problem you\'re trying to solve.**\r\n\r\nIn current version some parts of code are not very easy to follow\r\n\r\n```\r\nfunc _physics_process(delta: float) -> void:\r\n\t#...\r\n\t# Instead of using different functions and variables, we can now use a single variable \r\n\t# to manage the current state.\r\n\tvar is_jumping: bool = _state == States.ON_GROUND and Input.is_action_just_pressed(""move_up"")\r\n```\r\n\r\nI feel that \r\n\r\n`var is_jumping: bool = _state == States.ON_GROUND and Input.is_action_just_pressed(""move_up"")`\r\n\r\ncould be broken down into 2 lines of code for readability sake. It took me a while to figure out what is happening here. Much easier solution to this would be changing it into \r\n\r\nIf States.ON_GROUND and Input.is_action_just_pressed(""move_up""):\r\n    var is_jumping: bool = true\r\nelse:\r\n    var is_jumping = false\r\n\r\n<!-- Give use insights on your workflow and your needs so we can best help you. -->\r\n\r\nI know it\'s more lines of code but cramming this thing into one line was really confusing.', 'title': 'Some code could be made easier to read ', 'type': 'issue'}
 {'action': 'created', 'author': 'NathanLovato', 'comment_id': 788014794.0, 'datetime': '2021-03-01 15:00:32+00:00', 'masked_author': 'username_1', 'text': 'I would prefer people to learn to read and understand boolean expressions, and in particular, that they don\'t require conditional branches.\r\n\r\nI can imagine this was confusing for you if you\'re not used to seeing lines like these, but at the same time your if statement does the same thing: it evaluates the condition, and if it evaluates to `true`, it sets the variable to `true`, but if it evaluates to `false`, it assigns `false` to the variable.\r\n\r\nAnything you put after ""if"" or ""elif"" has to be a boolean expression, which always evaluates to `true` or `false`.\r\n\r\nOnce you make that idea yours, you\'ll understand every variable assignment that includes `==`, `and`, `or`, and all the other comparison operators. It\'s an expression that always evaluates to either `true` or `false`.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'NathanLovato', 'comment_id': 788016903.0, 'datetime': '2021-03-01 15:03:08+00:00', 'masked_author': 'username_1', 'text': ""I'll add that above, the point of the variable is to make the boolean expression explicit: the character `is_jumping` when the state is equal to `States.ON_GROUND` and the player just pressed `move_up`."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Feniks-Gaming', 'comment_id': 788075199.0, 'datetime': '2021-03-01 16:16:39+00:00', 'masked_author': 'username_0', 'text': 'Yeah I understand what was a reason behind it maybe comment explaining what it does will help. I understood this line of code it just took more energy than understanding few seperate lines.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'NathanLovato', 'comment_id': 788235875.0, 'datetime': '2021-03-01 20:08:41+00:00', 'masked_author': 'username_1', 'text': 'Regarding the issue you opened, was there anything other that this line of code?', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'NathanLovato', 'comment_id': None, 'datetime': '2021-03-02 14:33:36+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'Feniks-Gaming', 'comment_id': 789855820.0, 'datetime': '2021-03-03 16:37:34+00:00', 'masked_author': 'username_0', 'text': ""No it's fine from what I have seen with the rest happy for it to be closed."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'NathanLovato', 'comment_id': 789878458.0, 'datetime': '2021-03-03 16:58:50+00:00', 'masked_author': 'username_1', 'text': ""Okay, don't hesitate to open issues whenever you see something like this. Also you should find a button at the bottom of every tutorial to modify it, and you can use the github text editor to do so. It's markdown so it's simpler than the Godot docs."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Feniks-Gaming', 'comment_id': 789984151.0, 'datetime': '2021-03-03 19:08:41+00:00', 'masked_author': 'username_0', 'text': 'Thanks will give it a go.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Some code could be made easier to read 
username_0: **I'm submitting a...**

- [ ] Bug report.
- [x ] Feature request.

## Feature request ##

**Describe the problem you're trying to solve.**

In current version some parts of code are not very easy to follow

```
func _physics_process(delta: float) -> void:
	#...
	# Instead of using different functions and variables, we can now use a single variable 
	# to manage the current state.
	var is_jumping: bool = _state == States.ON_GROUND and Input.is_action_just_pressed(""move_up"")
```

I feel that 

`var is_jumping: bool = _state == States.ON_GROUND and Input.is_action_just_pressed(""move_up"")`

could be broken down into 2 lines of code for readability sake. It took me a while to figure out what is happening here. Much easier solution to this would be changing it into 

If States.ON_GROUND and Input.is_action_just_pressed(""move_up""):
    var is_jumping: bool = true
else:
    var is_jumping = false

<!-- Give use insights on your workflow and your needs so we can best help you. -->

I know it's more lines of code but cramming this thing into one line was really confusing.
<issue_comment>username_1: I would prefer people to learn to read and understand boolean expressions, and in particular, that they don't require conditional branches.

I can imagine this was confusing for you if you're not used to seeing lines like these, but at the same time your if statement does the same thing: it evaluates the condition, and if it evaluates to `true`, it sets the variable to `true`, but if it evaluates to `false`, it assigns `false` to the variable.

Anything you put after ""if"" or ""elif"" has to be a boolean expression, which always evaluates to `true` or `false`.

Once you make that idea yours, you'll understand every variable assignment that includes `==`, `and`, `or`, and all the other comparison operators. It's an expression that always evaluates to either `true` or `false`.
<issue_comment>username_1: I'll add that above, the point of the variable is to make the boolean expression explicit: the character `is_jumping` when the state is equal to `States.ON_GROUND` and the player just pressed `move_up`.
<issue_comment>username_0: Yeah I understand what was a reason behind it maybe comment explaining what it does will help. I understood this line of code it just took more energy than understanding few seperate lines.
<issue_comment>username_1: Regarding the issue you opened, was there anything other that this line of code?<issue_closed>
<issue_comment>username_0: No it's fine from what I have seen with the rest happy for it to be closed.
<issue_comment>username_1: Okay, don't hesitate to open issues whenever you see something like this. Also you should find a button at the bottom of every tutorial to modify it, and you can use the github text editor to do so. It's markdown so it's simpler than the Godot docs.
<issue_comment>username_0: Thanks will give it a go."
flutter/website,214899921,446,"{'number': 446.0, 'repo': 'website', 'user_login': 'flutter'}","[{'action': 'opened', 'author': 'LarkAscending', 'comment_id': None, 'datetime': '2017-03-17T03:40:18Z', 'masked_author': 'username_0', 'text': ""First take at adding Windows to flutter.io/setup.\r\n\r\nSome sort of picker widget (like a dropdown list w/platforms) or zippies for showing/hiding platforms that don't apply, is TBD.\r\n\r\nNote that this PR doesn't instruct Windows users to add the JDK to their PATH; we're pretty sure that @johnmccutchan 's PATH detection goodness also works on Windows. It would be good to verify this is the case, i.e. what happens if the user doesn't manually add this to the system PATH variable.\r\n\r\nThere are several other omissions, like opening a new terminal window. This might be too streamlined - we can add back in.\r\n\r\nIdeally, I'd like to test this on a Windows machine before merging."", 'title': 'Adding first Windows setup info!', 'type': 'issue'}
 {'action': 'created', 'author': 'goderbauer', 'comment_id': 287460530.0, 'datetime': '2017-03-17 20:18:26+00:00', 'masked_author': 'username_1', 'text': 'Given that people are already trying to run Flutter on Windows in Git Bash (see https://github.com/flutter/flutter/issues/8860) it might be worth pointing out that we only support Cmd and PowerShell on Windows.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LarkAscending', 'comment_id': 288921489.0, 'datetime': '2017-03-24 03:07:52+00:00', 'masked_author': 'username_0', 'text': '@username_2 Re: Travis failure, is it possible that HTML Proofer is failing again on newly-added files?\r\n\r\nThere is one valid broken link, in tutorials/interactive/index.html. Will fix that after merging changes from master...', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mit-mit', 'comment_id': 289001859.0, 'datetime': '2017-03-24 11:44:05+00:00', 'masked_author': 'username_2', 'text': 'No, that is not it. It\'s the relative links that are wrong. Don\'t use:\r\n```\r\n<a href=""setup-linux/#android-setup"">Linux</a>\r\n```\r\n\r\nUse:\r\n```\r\n<a href=""/setup-linux/#android-setup"">Linux</a>\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mit-mit', 'comment_id': 289007272.0, 'datetime': '2017-03-24 12:13:49+00:00', 'masked_author': 'username_2', 'text': 'Great to see Windows support! I added a first round of review comments.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mit-mit', 'comment_id': 289007457.0, 'datetime': '2017-03-24 12:15:01+00:00', 'masked_author': 'username_2', 'text': ""Also, one general concern: The whole flow starts with this:\r\n\r\n![screen shot 2017-03-24 at 12 55 32](https://cloud.githubusercontent.com/assets/13644170/24293791/c34aedb8-1093-11e7-91eb-f8a5c7da2594.png)\r\n\r\nI have two overall concerns with this:\r\n\r\n1. It's confusing to see the checklist here, and then not see it on the per-os pages.\r\n\r\n2. Why do we ask for OS? Can't we just detect what OS they are on, and take them to the relevant page?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'LarkAscending', 'comment_id': 289102983.0, 'datetime': '2017-03-24 18:11:12+00:00', 'masked_author': 'username_0', 'text': ""@username_2 We have an OS dropdown because it's what was initially asked for. OS detection - tho not perfect - is possible. It takes longer, is not a priority, and right now the setup instructions are already too long to keep all the platforms in one file. Maybe open an issue requesting this? Or just a PR if it's easy enough to do.\r\n\r\nAlso, the HTML Proofer URL requirements should probably go in a contributing.md file... see #https://github.com/flutter/flutter/issues/8187"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mit-mit', 'comment_id': 290065928.0, 'datetime': '2017-03-29 11:49:42+00:00', 'masked_author': 'username_2', 'text': 'LGTM\r\n\r\nEverything looks great now! Thanks for the long, hard push on getting this done!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Adding first Windows setup info!
username_0: First take at adding Windows to flutter.io/setup.

Some sort of picker widget (like a dropdown list w/platforms) or zippies for showing/hiding platforms that don't apply, is TBD.

Note that this PR doesn't instruct Windows users to add the JDK to their PATH; we're pretty sure that @johnmccutchan 's PATH detection goodness also works on Windows. It would be good to verify this is the case, i.e. what happens if the user doesn't manually add this to the system PATH variable.

There are several other omissions, like opening a new terminal window. This might be too streamlined - we can add back in.

Ideally, I'd like to test this on a Windows machine before merging.
<issue_comment>username_1: Given that people are already trying to run Flutter on Windows in Git Bash (see https://github.com/flutter/flutter/issues/8860) it might be worth pointing out that we only support Cmd and PowerShell on Windows.
<issue_comment>username_0: @username_2 Re: Travis failure, is it possible that HTML Proofer is failing again on newly-added files?

There is one valid broken link, in tutorials/interactive/index.html. Will fix that after merging changes from master...
<issue_comment>username_2: No, that is not it. It's the relative links that are wrong. Don't use:
```
<a href=""setup-linux/#android-setup"">Linux</a>
```

Use:
```
<a href=""/setup-linux/#android-setup"">Linux</a>
```
<issue_comment>username_2: Great to see Windows support! I added a first round of review comments.
<issue_comment>username_2: Also, one general concern: The whole flow starts with this:

![screen shot 2017-03-24 at 12 55 32](https://cloud.githubusercontent.com/assets/13644170/24293791/c34aedb8-1093-11e7-91eb-f8a5c7da2594.png)

I have two overall concerns with this:

1. It's confusing to see the checklist here, and then not see it on the per-os pages.

2. Why do we ask for OS? Can't we just detect what OS they are on, and take them to the relevant page?
<issue_comment>username_0: @username_2 We have an OS dropdown because it's what was initially asked for. OS detection - tho not perfect - is possible. It takes longer, is not a priority, and right now the setup instructions are already too long to keep all the platforms in one file. Maybe open an issue requesting this? Or just a PR if it's easy enough to do.

Also, the HTML Proofer URL requirements should probably go in a contributing.md file... see #https://github.com/flutter/flutter/issues/8187
<issue_comment>username_2: LGTM

Everything looks great now! Thanks for the long, hard push on getting this done!"
