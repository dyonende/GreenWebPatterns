apache/apisix-website,1000319815,617,"{'number': 617.0, 'repo': 'apisix-website', 'user_login': 'apache'}","[{'action': 'opened', 'author': '1502shivam-singh', 'comment_id': None, 'datetime': '2021-09-19T13:53:43Z', 'masked_author': 'username_0', 'text': 'Apache APISIX website redesign (sub-pr 3)\r\n\r\nThis large feature addition wil be done through 3 chained PRs which for easier reviews and merging. Please merge all these 3 sub PRs together, in ascending order for no breaking changes. Dependency flow is like PR3 depends on PR2, depends on PR1.\r\n\r\nUpdate: PR1, PR2 merged. This PR is ready to be merged now.\r\n\r\nChanges:\r\n\r\nAddition of the redesigned sections and stylesheets.', 'title': 'feat: apisix-website redesign, add redesigned-site sections and styles (sub-pr3)', 'type': 'issue'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 922480092.0, 'datetime': '2021-09-19 14:10:15+00:00', 'masked_author': 'username_0', 'text': ""cc @username_1 merge this in place of  #496 (previous got it's history to uncleaned, so closed it)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'juzhiyuan', 'comment_id': 922493162.0, 'datetime': '2021-09-19 15:37:23+00:00', 'masked_author': 'username_1', 'text': 'really a large PR. cc @username_3 @username_2 to have a look.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 927113811.0, 'datetime': '2021-09-25 12:24:25+00:00', 'masked_author': 'username_0', 'text': 'Any updates on this ?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'juzhiyuan', 'comment_id': 927120940.0, 'datetime': '2021-09-25 13:26:17+00:00', 'masked_author': 'username_1', 'text': 'ping @username_2', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 927322926.0, 'datetime': '2021-09-26 15:18:47+00:00', 'masked_author': 'username_2', 'text': 'Sorry for the late reply, great page, thank you for your contribution, there are a few minor issues regarding this PR.\r\n1. it seems that the adaptive layout has not been done and needs to be updated\r\n2. each file needs to be formatted with code. We use 2 spaces as standard\r\nThank you very much for your contribution!\r\n3. If you have time, please take care of the conflicting files, thank you very much!\r\n![image](https://user-images.githubusercontent.com/72343596/134813804-614e970e-50bb-43d0-9751-a3399e44d8d7.png)\r\n![image](https://user-images.githubusercontent.com/72343596/134813840-3724be7d-fa76-4d16-850f-6a5f17668396.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 927322976.0, 'datetime': '2021-09-26 15:19:14+00:00', 'masked_author': 'username_2', 'text': 'also cc @username_3 have a look', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 927363659.0, 'datetime': '2021-09-26 20:15:14+00:00', 'masked_author': 'username_0', 'text': 'Sure.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'juzhiyuan', 'comment_id': 927876136.0, 'datetime': '2021-09-27 13:28:23+00:00', 'masked_author': 'username_1', 'text': '666 üëè', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 928047640.0, 'datetime': '2021-09-27 16:25:32+00:00', 'masked_author': 'username_0', 'text': ""Pardon my ignorance here, but didn't get it (number of the devil üò±üò±)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'juzhiyuan', 'comment_id': 928470598.0, 'datetime': '2021-09-27 23:56:35+00:00', 'masked_author': 'username_1', 'text': ""```\r\n(li√π li√π li√π), used to describe someone or something is very powerful,cool,impressive.\r\n```\r\n\r\nüòÑ Waiting for others' review."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Baoyuantop', 'comment_id': 928657387.0, 'datetime': '2021-09-28 02:40:24+00:00', 'masked_author': 'username_3', 'text': 'Thank you for your hard work @username_0, the effect looks great~\r\nI have a proposal about the first part, this is the current preview:\r\n\r\n![image](https://user-images.githubusercontent.com/30611190/135012879-05aeea70-8e4f-4e18-b4c2-3430bd6119a5.png)\r\n\r\nI know you want to use the animation on the right to express `Effortless` and `smooth`, the animation is very cool, but I feel a sense of separation between the left and right sides. I think it would be better to use the animation on the right as the background of the content on the left. Or adjust the color on the right, what do you think?\r\nWhat about the opinions of others?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 929298900.0, 'datetime': '2021-09-28 14:43:55+00:00', 'masked_author': 'username_0', 'text': 'This is a nice suggestion for alot of case. But here, problem is stretching. The shader that creates that particle system on right interpolates it in between corners. So, full screen one would stretch. If I were to adjust the stretch it would lead to a good amount of emptiness on both side. \r\nThis is kind of my goto layout (right visual element, left text and cta). Something visible a lot in graphic designs, eg. Magazines.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Baoyuantop', 'comment_id': 929751533.0, 'datetime': '2021-09-29 01:40:03+00:00', 'masked_author': 'username_3', 'text': 'Ok, I get it, I just think the white background on the left and the black background on the right has a strong sense of opposition.\r\n\r\nWhat if the right side is adjusted to white? üòÅ @username_0', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 930282206.0, 'datetime': '2021-09-29 15:24:07+00:00', 'masked_author': 'username_0', 'text': 'Here, you will see the difference. I understand you are trying for color harmony here but that hides some finer details i want to showcase in that wave (like the combo of red and purple color) also the page seems emptier than necessary.\r\n\r\n![image](https://user-images.githubusercontent.com/57267960/135290907-0e60eb6a-2262-4b99-9809-b983ec7edf0c.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 931181793.0, 'datetime': '2021-09-30 10:07:30+00:00', 'masked_author': 'username_0', 'text': 'So I assume we have an agreement finally, is it ?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 932746345.0, 'datetime': '2021-10-02 12:45:41+00:00', 'masked_author': 'username_2', 'text': ""Sorry for the late reply, thanks for the update, I have rechecked and found the following issues:\r\n1. the styles on the iPhone 5 phone size need to be adjusted, they now look completely messed up\r\n![image](https://user-images.githubusercontent.com/72343596/135716108-66e97d31-3f07-41c2-82ab-38def31812bb.png)\r\n2. it doesn't seem to adjust itself when I reduce the size of the large screen window, which I think is a problem that can't be ignored; if you reduce your browser window I'm sure you can easily reproduce these issues\r\n![image](https://user-images.githubusercontent.com/72343596/135716323-4d295565-97de-4bc7-9cec-4762ca4417a2.png)\r\n![image](https://user-images.githubusercontent.com/72343596/135716465-cc470a88-ec7a-45bf-8ab1-f98611f24663.png)\r\n![image](https://user-images.githubusercontent.com/72343596/135716541-35298c82-270a-40dc-aa9e-78f6196f96c1.png)\r\n3. It is convenient to take a screenshot to see how it would look if the background colour on the right was the same as the background colour on the left.\r\n![image](https://user-images.githubusercontent.com/72343596/135716664-9803664a-3b5b-49d1-9359-b59cb111fb65.png)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 932839401.0, 'datetime': '2021-10-03 00:24:56+00:00', 'masked_author': 'username_0', 'text': ""Not really, you can check this [reply](https://github.com/apache/apisix-website/pull/617#issuecomment-930282206) of mine, for a similar question from above to understand why. Mainly it's related to contrast and for showcasing details, and bringing both to the same tone (whitish here) barely makes the effect visible. I have tried a number of color combinations and this one suits the best."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'guoqqqi', 'comment_id': 932943813.0, 'datetime': '2021-10-03 12:45:09+00:00', 'masked_author': 'username_2', 'text': 'There are still some defects present:\r\n1. ![image](https://user-images.githubusercontent.com/72343596/135754056-a738ee64-d108-4593-965e-57386fd4b0af.png)\r\n2. ![image](https://user-images.githubusercontent.com/72343596/135754099-d48cb0ba-0e87-4671-9a6f-5a0388215bf2.png)\r\n3. ![image](https://user-images.githubusercontent.com/72343596/135754162-bed923be-85bd-440e-899f-61dc00b31b65.png)\r\n4. ![image](https://user-images.githubusercontent.com/72343596/135754196-3be18f26-2eee-4c54-89cd-467226e34a28.png)\r\n5. ![image](https://user-images.githubusercontent.com/72343596/135754209-43052911-9284-457d-982f-f8b5eee64c4f.png)\r\n6. ![image](https://user-images.githubusercontent.com/72343596/135754234-ddc236aa-98c1-4bd7-a484-90ef4bb0ead0.png)\r\n![image](https://user-images.githubusercontent.com/72343596/135754245-b6a79fd9-fbc8-4f83-b61b-2537087d68ba.png)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': '1502shivam-singh', 'comment_id': 932974180.0, 'datetime': '2021-10-03 15:32:09+00:00', 'masked_author': 'username_0', 'text': ""@username_2 , I really appreciate the detailed reviews, but TBH now I feel some of the issues coming up are mostly nitpicking. So, I would appreciate more that you highlight only issues that seriously hurt the UX because the ones highlighted above (though now solved) are more of supposedly recreated ones or are not intended to be viewed that way in the first place on a specific device (honestly, few took me sometime to actually recreate)\r\n\r\nHope you understand what I mean here.\r\n\r\nI don't think there are any more such issues given we have really thoroughly dig deep into the UI (if you find one that seems serious, please report).\r\nThanks :)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'juzhiyuan', 'comment_id': 933050976.0, 'datetime': '2021-10-03 23:36:16+00:00', 'masked_author': 'username_1', 'text': 'also, cc @username_3 to have a review.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: feat: apisix-website redesign, add redesigned-site sections and styles (sub-pr3)
username_0: Apache APISIX website redesign (sub-pr 3)

This large feature addition wil be done through 3 chained PRs which for easier reviews and merging. Please merge all these 3 sub PRs together, in ascending order for no breaking changes. Dependency flow is like PR3 depends on PR2, depends on PR1.

Update: PR1, PR2 merged. This PR is ready to be merged now.

Changes:

Addition of the redesigned sections and stylesheets.
<issue_comment>username_0: cc @username_1 merge this in place of  #496 (previous got it's history to uncleaned, so closed it)
<issue_comment>username_1: really a large PR. cc @username_3 @username_2 to have a look.
<issue_comment>username_0: Any updates on this ?
<issue_comment>username_1: ping @username_2
<issue_comment>username_2: Sorry for the late reply, great page, thank you for your contribution, there are a few minor issues regarding this PR.
1. it seems that the adaptive layout has not been done and needs to be updated
2. each file needs to be formatted with code. We use 2 spaces as standard
Thank you very much for your contribution!
3. If you have time, please take care of the conflicting files, thank you very much!
![image](https://user-images.githubusercontent.com/72343596/134813804-614e970e-50bb-43d0-9751-a3399e44d8d7.png)
![image](https://user-images.githubusercontent.com/72343596/134813840-3724be7d-fa76-4d16-850f-6a5f17668396.png)
<issue_comment>username_2: also cc @username_3 have a look
<issue_comment>username_0: Sure.
<issue_comment>username_1: 666 üëè
<issue_comment>username_0: Pardon my ignorance here, but didn't get it (number of the devil üò±üò±)
<issue_comment>username_1: ```
(li√π li√π li√π), used to describe someone or something is very powerful,cool,impressive.
```

üòÑ Waiting for others' review.
<issue_comment>username_3: Thank you for your hard work @username_0, the effect looks great~
I have a proposal about the first part, this is the current preview:

![image](https://user-images.githubusercontent.com/30611190/135012879-05aeea70-8e4f-4e18-b4c2-3430bd6119a5.png)

I know you want to use the animation on the right to express `Effortless` and `smooth`, the animation is very cool, but I feel a sense of separation between the left and right sides. I think it would be better to use the animation on the right as the background of the content on the left. Or adjust the color on the right, what do you think?
What about the opinions of others?
<issue_comment>username_0: This is a nice suggestion for alot of case. But here, problem is stretching. The shader that creates that particle system on right interpolates it in between corners. So, full screen one would stretch. If I were to adjust the stretch it would lead to a good amount of emptiness on both side. 
This is kind of my goto layout (right visual element, left text and cta). Something visible a lot in graphic designs, eg. Magazines.
<issue_comment>username_3: Ok, I get it, I just think the white background on the left and the black background on the right has a strong sense of opposition.

What if the right side is adjusted to white? üòÅ @username_0
<issue_comment>username_0: Here, you will see the difference. I understand you are trying for color harmony here but that hides some finer details i want to showcase in that wave (like the combo of red and purple color) also the page seems emptier than necessary.

![image](https://user-images.githubusercontent.com/57267960/135290907-0e60eb6a-2262-4b99-9809-b983ec7edf0c.png)
<issue_comment>username_0: So I assume we have an agreement finally, is it ?
<issue_comment>username_2: Sorry for the late reply, thanks for the update, I have rechecked and found the following issues:
1. the styles on the iPhone 5 phone size need to be adjusted, they now look completely messed up
![image](https://user-images.githubusercontent.com/72343596/135716108-66e97d31-3f07-41c2-82ab-38def31812bb.png)
2. it doesn't seem to adjust itself when I reduce the size of the large screen window, which I think is a problem that can't be ignored; if you reduce your browser window I'm sure you can easily reproduce these issues
![image](https://user-images.githubusercontent.com/72343596/135716323-4d295565-97de-4bc7-9cec-4762ca4417a2.png)
![image](https://user-images.githubusercontent.com/72343596/135716465-cc470a88-ec7a-45bf-8ab1-f98611f24663.png)
![image](https://user-images.githubusercontent.com/72343596/135716541-35298c82-270a-40dc-aa9e-78f6196f96c1.png)
3. It is convenient to take a screenshot to see how it would look if the background colour on the right was the same as the background colour on the left.
![image](https://user-images.githubusercontent.com/72343596/135716664-9803664a-3b5b-49d1-9359-b59cb111fb65.png)
<issue_comment>username_0: Not really, you can check this [reply](https://github.com/apache/apisix-website/pull/617#issuecomment-930282206) of mine, for a similar question from above to understand why. Mainly it's related to contrast and for showcasing details, and bringing both to the same tone (whitish here) barely makes the effect visible. I have tried a number of color combinations and this one suits the best.
<issue_comment>username_2: There are still some defects present:
1. ![image](https://user-images.githubusercontent.com/72343596/135754056-a738ee64-d108-4593-965e-57386fd4b0af.png)
2. ![image](https://user-images.githubusercontent.com/72343596/135754099-d48cb0ba-0e87-4671-9a6f-5a0388215bf2.png)
3. ![image](https://user-images.githubusercontent.com/72343596/135754162-bed923be-85bd-440e-899f-61dc00b31b65.png)
4. ![image](https://user-images.githubusercontent.com/72343596/135754196-3be18f26-2eee-4c54-89cd-467226e34a28.png)
5. ![image](https://user-images.githubusercontent.com/72343596/135754209-43052911-9284-457d-982f-f8b5eee64c4f.png)
6. ![image](https://user-images.githubusercontent.com/72343596/135754234-ddc236aa-98c1-4bd7-a484-90ef4bb0ead0.png)
![image](https://user-images.githubusercontent.com/72343596/135754245-b6a79fd9-fbc8-4f83-b61b-2537087d68ba.png)
<issue_comment>username_0: @username_2 , I really appreciate the detailed reviews, but TBH now I feel some of the issues coming up are mostly nitpicking. So, I would appreciate more that you highlight only issues that seriously hurt the UX because the ones highlighted above (though now solved) are more of supposedly recreated ones or are not intended to be viewed that way in the first place on a specific device (honestly, few took me sometime to actually recreate)

Hope you understand what I mean here.

I don't think there are any more such issues given we have really thoroughly dig deep into the UI (if you find one that seems serious, please report).
Thanks :)
<issue_comment>username_1: also, cc @username_3 to have a review."
facebook/docusaurus,790163918,4079,,"[{'action': 'opened', 'author': 'slorber', 'comment_id': None, 'datetime': '2021-01-20 17:09:35+00:00', 'masked_author': 'username_0', 'text': '## üöÄ Feature\r\n\r\nWe want to give a good impression to users when they first try Docusaurus, and improve:\r\n- our init templates (generated with the CLI)\r\n- the [new.docusaurus.io](https://new.docusaurus.io) CodeSandbox experience (sync with the classic template).\r\n\r\nIt was proposed (https://github.com/facebook/docusaurus/issues/3489) that we make the initial docs more representative of a real-world doc site and be a bit more opinionated:\r\n- be more like a small example site rather than a hello-world empty site\r\n- apply documentation best practices (docs vs apis)\r\n- show real content instead of lorem ipsum\r\n- use more markdown features to showcase the features of Docusaurus (maybe this can even be kept in sync with the [markdown features](https://v2.docusaurus.io/docs/next/markdown-features) category of Docusaurus site itself)\r\n\r\nWe also have some content duplication in templates, as each template MD docs are very similar and copy/paste. We should find a way to create once this content for all sites instead of keeping them in sync manually.\r\n\r\nFor users that really want an empty/minimal Docusaurus site, we could add a new separate minimalistic template.', 'title': 'Improve the initial templates', 'type': 'issue'}
 {'action': 'created', 'author': 'javidrashid', 'comment_id': 780714013.0, 'datetime': '2021-02-17 17:19:31+00:00', 'masked_author': 'username_1', 'text': 'Fellows to document what would be the good UI, there is no such fixed UI experience. You can come up with a general meaningful UI with minimum content, links and submit a PR for review.\r\n\r\n# Look a the existing features and come up with the best experience as you.\r\n\r\n# How init template can be improved\r\n\r\n# Redesign the existing template. (UI/UX)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 786770410.0, 'datetime': '2021-02-26 17:01:49+00:00', 'masked_author': 'username_0', 'text': 'The idea for me would to be create a minimalistic documentation site for Docusaurus site itself, so that it kind of serve as a realistic example.\r\n\r\nWe want to spark immediate joy to the user and let him try Docusauurs in a step by step guide where each action provides immediate gratification by seeing the result of the action. \r\n\r\nI don\'t think the user needs to understand everything about Docusaurus at the end of this tutorial, but be convinced that this is a powerful tool and quite simple to use.\r\n\r\nWhat about using the following docs/sidebar?\r\n\r\n```js\r\nmodule.exports = {\r\n  docs: {\r\n    ""Docusaurus Tutorial"": [\r\n      ""Docusaurus Intro"", // Basic infos + install steps\r\n      ""Create a doc"", // + how to add it to  the sidebar\r\n      ""Create a page"", // jsx + md\r\n      ""Create a post"",\r\n      ""Markdown Features"", // basic markdown + some MDX explanations\r\n      ""Thank you"" // end of tutorial, show what\'s next?\r\n    ],\r\n    Extras: [\r\n      ""Deploy your site"", // configure a bit + build + deploy to GH pages?\r\n      ""Translate your site"", // very basic version, like add ""fr"" language + put a copy `docs/intro.md` to `i18n/fr/plugin-docs/intro.md` + run `yarn start --locale fr`\r\n      ""Manage versions"" // just run the versioning cli + restart the site with yarn start\r\n    ]\r\n  }\r\n};\r\n```\r\n\r\nI suggest the initial PR (https://github.com/facebook/docusaurus/pull/4302) focus first on the ""Docusaurus tutorial"" category. Once it\'s merged we can add the Extras category later?\r\n\r\nDo you think this is a good structure?', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'slorber', 'comment_id': None, 'datetime': '2021-03-17 14:59:02+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Improve the initial templates
username_0: ## üöÄ Feature

We want to give a good impression to users when they first try Docusaurus, and improve:
- our init templates (generated with the CLI)
- the [new.docusaurus.io](https://new.docusaurus.io) CodeSandbox experience (sync with the classic template).

It was proposed (https://github.com/facebook/docusaurus/issues/3489) that we make the initial docs more representative of a real-world doc site and be a bit more opinionated:
- be more like a small example site rather than a hello-world empty site
- apply documentation best practices (docs vs apis)
- show real content instead of lorem ipsum
- use more markdown features to showcase the features of Docusaurus (maybe this can even be kept in sync with the [markdown features](https://v2.docusaurus.io/docs/next/markdown-features) category of Docusaurus site itself)

We also have some content duplication in templates, as each template MD docs are very similar and copy/paste. We should find a way to create once this content for all sites instead of keeping them in sync manually.

For users that really want an empty/minimal Docusaurus site, we could add a new separate minimalistic template.
<issue_comment>username_1: Fellows to document what would be the good UI, there is no such fixed UI experience. You can come up with a general meaningful UI with minimum content, links and submit a PR for review.

# Look a the existing features and come up with the best experience as you.

# How init template can be improved

# Redesign the existing template. (UI/UX)
<issue_comment>username_0: The idea for me would to be create a minimalistic documentation site for Docusaurus site itself, so that it kind of serve as a realistic example.

We want to spark immediate joy to the user and let him try Docusauurs in a step by step guide where each action provides immediate gratification by seeing the result of the action. 

I don't think the user needs to understand everything about Docusaurus at the end of this tutorial, but be convinced that this is a powerful tool and quite simple to use.

What about using the following docs/sidebar?

```js
module.exports = {
  docs: {
    ""Docusaurus Tutorial"": [
      ""Docusaurus Intro"", // Basic infos + install steps
      ""Create a doc"", // + how to add it to  the sidebar
      ""Create a page"", // jsx + md
      ""Create a post"",
      ""Markdown Features"", // basic markdown + some MDX explanations
      ""Thank you"" // end of tutorial, show what's next?
    ],
    Extras: [
      ""Deploy your site"", // configure a bit + build + deploy to GH pages?
      ""Translate your site"", // very basic version, like add ""fr"" language + put a copy `docs/intro.md` to `i18n/fr/plugin-docs/intro.md` + run `yarn start --locale fr`
      ""Manage versions"" // just run the versioning cli + restart the site with yarn start
    ]
  }
};
```

I suggest the initial PR (https://github.com/facebook/docusaurus/pull/4302) focus first on the ""Docusaurus tutorial"" category. Once it's merged we can add the Extras category later?

Do you think this is a good structure?<issue_closed>"
facebook/docusaurus,623397722,2793,"{'number': 2793.0, 'repo': 'docusaurus', 'user_login': 'facebook'}","[{'action': 'opened', 'author': 'slorber', 'comment_id': None, 'datetime': '2020-05-22T18:16:56Z', 'masked_author': 'username_0', 'text': 'First draft of plugin to handle client side redirects\r\n\r\nI tried to make it flexible, and testable (tests will come)\r\n\r\n\r\nIt should cover basic redirections with ease, like path.html -> path\r\nIt should also cover the Watchman case: path -> path.html\r\n\r\n\r\n\r\nNot ready to run, but you can take a look and give me some early feedback @yangshun ?', 'title': 'feat(v2): docusaurus-plugin-client-redirects', 'type': 'issue'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 633266293.0, 'datetime': '2020-05-24 17:47:46+00:00', 'masked_author': 'username_0', 'text': ""Thanks for the feedback @username_1 \r\n\r\nIt's not ready and not tested, just wanted to let you see a preview of the API I'm crafting (actually didn't even run the code yet so it might have bugs)\r\n\r\nWill handle your feedbacks tomorrow."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 633674247.0, 'datetime': '2020-05-25 18:15:02+00:00', 'masked_author': 'username_0', 'text': 'Hi @username_1 \r\n\r\nI\'ve added the tests and made the code more robust, it\'s almost finished (still has some bugs to fixes, and the write side involving fs is not tested yet).\r\n\r\nWhen this feature is complete, using the following (main usecase)\r\n\r\n```\r\n    [\r\n      \'@docusaurus/plugin-client-redirects\',\r\n      {\r\n        fromExtensions: [\'html\'],\r\n      },\r\n    ],\r\n```\r\n\r\nShould redirect from ""/path.html"" to ""/path"" and write a ""/path.html/index.html"" file (or maybe just ""/path.html"" ?)\r\n \r\n\r\nBut it should also support the ""Watchman"" case (https://github.com/facebook/docusaurus/issues/2697) that wants .html urls being the canonical ones:\r\n\r\n```\r\n    [\r\n      \'@docusaurus/plugin-client-redirects\',\r\n      {\r\n        toExtensions: [\'html\'],\r\n      },\r\n    ],\r\n```\r\n\r\nShould redirect from ""/path"" to ""/path.html"" and write a ""/path/index.html"" file\r\n\r\n\r\nFor power users, it\'s also possible to provide a function:\r\n\r\n```\r\n    [\r\n      \'@docusaurus/plugin-client-redirects\',\r\n      {\r\n        createRedirects: (existingPath) => {\r\n           return [""existingPath"" + ""/"" + ""someFancyPathSuffix""];\r\n        },\r\n      },\r\n    ],\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 634215316.0, 'datetime': '2020-05-26 19:00:26+00:00', 'masked_author': 'username_0', 'text': ""So I think it's working fine now, and has good test coverage.\r\n\r\nI propose to dogfood on the docusaurus v2 to redirect /path.html to /path, so that we know it keeps working over time.\r\n\r\nIt's already in the PR: https://deploy-preview-2793--docusaurus-2.netlify.app/docs/next/installation.html\r\n\r\nI'll try the plugin on the Watchman site now and see if I have any issue.\r\n\r\nAnd I'll write the doc."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 636641315.0, 'datetime': '2020-06-01 06:36:38+00:00', 'masked_author': 'username_1', 'text': 'I wonder, in the current Docusaurus architecture, is it possible to define redirects in the frontmatter of Markdown files, like in this Gatsby plugin? https://www.gatsbyjs.org/packages/gatsby-redirect-from/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 636886374.0, 'datetime': '2020-06-01 14:16:46+00:00', 'masked_author': 'username_0', 'text': 'Hi @username_1 \r\n\r\nI definitively agree that it\'s convenient to declare redirects directly from the markdown files.\r\n\r\nGatsby\'s architecture is a bit different than D2. It has a data layer that permits to read the frontmatter of all markdown files from everywhere, and a core `createRedirect` api that they leverage mostly to hook into host specific solutions, and create server-side redirects (for example, if you use gatsby-plugin-netlify, it will write a _redirects file to the /build folder, which is a proprietary config file for Netlify).\r\n\r\nIn D2 we don\'t really have a shared data layer to read about all markdown files from a unified interface. Instead, each plugin is independant, reads frontmatter of the markdown on his own, and do the calls to `addRoute`. The frontmatter for a blog post and a doc are different types. \r\n\r\n\r\nEven with a core `createRedirect` api, we would have to implement the reading of `redirect_from: []` in each markdown plugin to call that `createRedirect` api, while gatsby is able to query its data layer directly in a more generic way.\r\n\r\n\r\nAlso, implementing redirects at the markdown level means it\'s not possible to create redirects from JSX pages.\r\n\r\nI think it\'s better to start with this generic plugin. The configuration feels less ""co-located"" and more centralized than the Gatsby one, but at least it should support all usecases (ie markdown + pages), without the need to add new core lifecycle actions like `createRedirect`. \r\n\r\nAlso we should discourage users to use client-side redirects, in favor of server-side redirects. As we don\'t want to support host-specific redirect configuration, introducing a core `createRedirect` api would encourage people to create client-side redirects. \r\n\r\nI see this plugin as an escape hatch when the user can\'t setup server-side redirects at all for various reasons (like using Github pages and not willing to migrate, which is the Watchman case).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 638120944.0, 'datetime': '2020-06-03 10:57:57+00:00', 'masked_author': 'username_0', 'text': 'Yes, we can use all options at the same time.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 638189298.0, 'datetime': '2020-06-03 13:15:19+00:00', 'masked_author': 'username_0', 'text': '@username_1 currently I have:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    [\r\n      ""@docusaurus/plugin-client-redirects"",\r\n      {\r\n        fromExtensions: [""html""],\r\n        toExtensions: [""exe""],\r\n        redirects: [\r\n          {\r\n            to: ""/docs/newDocPath"",\r\n            from: [""/docs/oldDocPathFrom2019"", ""/docs/legacyDocPathFrom2016""]\r\n          }\r\n        ],\r\n        createRedirects: function(existingPath) {\r\n          if (existingPath === ""/docs/newDocPath"") {\r\n            return [""/docs/oldDocPathFrom2019"", ""/docs/legacyDocPathFrom2016""];\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  ]\r\n};\r\n```\r\n\r\nI\'m thinking on making the `createRedirects` function more consistent, what do you think of:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    [\r\n      ""@docusaurus/plugin-client-redirects"",\r\n      {\r\n        fromExtensions: [""html""],\r\n        toExtensions: [""exe""],\r\n        redirects: [\r\n          {\r\n            to: ""/docs/newDocPath"",\r\n            from: [""/docs/oldDocPathFrom2019"", ""/docs/legacyDocPathFrom2016""]\r\n          }\r\n        ],\r\n        createRedirects: function({paths, createRedirect}) {\r\n              actions.createRedirect({\r\n                from: ""/docs/oldDocPathFrom2019"",\r\n                to: ""/docs/newDocPath""\r\n              });\r\n              actions.createRedirect({\r\n                from: ""/docs/legacyDocPathFrom2016"",\r\n                to: ""/docs/newDocPath""\r\n              });\r\n          });\r\n        }\r\n      }\r\n    ]\r\n  ]\r\n};\r\n```\r\n\r\nIt\'s a bit more verbose, but more consistent with the static redirect array you proposed and could be easier to understand as well.\r\n\r\nAlso it\'s what Gatsby does and nobody complained afaik: https://www.gatsbyjs.org/docs/actions/#createRedirect', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 638361968.0, 'datetime': '2020-06-03 17:54:33+00:00', 'masked_author': 'username_1', 'text': ""I don‚Äôt know what are the advantages of this approach?\r\n\r\nBy the way, after the merging of #2861, it would be nice to add redirects to v2 website. I wonder if it is possible to use regular expressions for this purpose (to cover versioned docs)?\r\n\r\n\r\nhttps://v2.docusaurus.io/docs/introduction -> https://v2.docusaurus.io/docs/\r\nhttps://v2.docusaurus.io/docs/2.0.0-alpha.55/introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.55/\r\nhttps://v2.docusaurus.io/docs/2.0.0-alpha.54/introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.54/\r\nhttps://v2.docusaurus.io/docs/2.0.0-alpha.50introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.50/\r\nhttps://v2.docusaurus.io/docs/2.0.0-alpha.48/introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.48/\r\nhttps://v2.docusaurus.io/docs/next/introduction -> https://v2.docusaurus.io/docs/next/\r\n\r\n\r\nI did something similar when [I needed to correctly highlight active items in navbar](https://github.com/facebook/docusaurus/blob/master/website/docusaurus.config.js#L103), so I'm  curious if redirects could be added this way (using regex)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 638363767.0, 'datetime': '2020-06-03 17:58:03+00:00', 'masked_author': 'username_0', 'text': ""Hi @username_1 \r\n\r\nHere are some updates:\r\n\r\n- a new `redirects` plugin option, as you requeted\r\n- improved documentation an example with the 4 plugin options used together\r\n- stricter validation: it's barely impossible for the user to use badly formatted options\r\n- improved error messages\r\n- non-blocking warnings in case some redirects get filtered for security (ie that would lead to FS files overwriting each thers)\r\n- did not change the `createRedirects` (cf comment above)\r\n\r\n\r\n----\r\n\r\nHere's the config deployed in the PR, so that we can test better on D2 website:\r\n\r\n```js\r\n[\r\n      '@docusaurus/plugin-client-redirects',\r\n      {\r\n        fromExtensions: ['html'],\r\n        redirects: [\r\n          {\r\n            to: '/',\r\n            from: [\r\n              '/plugin-client-redirects-tests/toHome1',\r\n              '/plugin-client-redirects-tests/toHome2',\r\n            ],\r\n          },\r\n          {\r\n            to: '/docs',\r\n            from: '/plugin-client-redirects-tests/toDocs1',\r\n          },\r\n          {\r\n            to: '/docs',\r\n            from: '/plugin-client-redirects-tests/toDocs2',\r\n          },\r\n          {\r\n            to: '/docs',\r\n            from: '/plugin-client-redirects-tests/toHomeDuplicatePath',\r\n          },\r\n        ],\r\n        createRedirects: function (existingPath) {\r\n          if (existingPath === '/') {\r\n            return [\r\n              '/',\r\n              '/docs',\r\n              '/plugin-client-redirects-tests/toHome3',\r\n              '/plugin-client-redirects-tests/toHome4',\r\n              '/plugin-client-redirects-tests/toHomeDuplicatePath',\r\n            ];\r\n          }\r\n        },\r\n      },\r\n    ],\r\n```\r\n\r\nThe following redirects work:\r\n\r\nHtml extension redirects:\r\n\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/docs/next.html\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/docs/next/installation.html\r\n\r\nOther redirects:\r\n\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome1\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome2\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome3\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome4\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHomeDuplicatePath\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toDocs1\r\n- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toDocs2\r\n\r\nAs the config creates twice the `toHomeDuplicatePath`, and tries to redirect from `/` and `/docs` (existing paths that should not be overwritten by a redirect file), the build outputs the following warnings:\r\n\r\n![image](https://user-images.githubusercontent.com/749374/83671109-70a91380-a5d4-11ea-93bf-141c597a1874.png)\r\n\r\n\r\nDo you see other things to handle?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 638368372.0, 'datetime': '2020-06-03 18:07:01+00:00', 'masked_author': 'username_0', 'text': ""About the version thing, I thought about it, and agree that's something we could support. \r\nWhat about adding this in a new PR? As this one starts to get fat :)\r\nIt's already possible to add version redirects with the custom `createRedirects` fn in userland.\r\nBut I agree this is a pattern that we should make it simpler to configure."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lex111', 'comment_id': 638387485.0, 'datetime': '2020-06-03 18:40:58+00:00', 'masked_author': 'username_1', 'text': ""Honestly, this plugin really came out huge and strong I thought there would be much less code in order to implement it. We actually did not pay so much attention to error handling in our existing plugins. However, I can‚Äôt say that this is a bad approach, just before that we did not attach so much importance to this.\r\n\r\nI actually trust in a high test coverage of this plugin, since mentally this plugin is not easy to understand (I mean me). But this is really cool, although maybe we could simplify some things, for example, is it really necessary to use Yup? Although it may be necessary to go this way in our other plugins. I mean, maybe we should try to reconsider the development process of our plugins so that they are like this redirect plugin -- a lot of tests, a thorough validation of errors, a lot of high-level abstractions... Apparently I got carried away :smile: \r\n\r\nOkay, tomorrow I'll see it again in action and probably we can already merge it into master branch.\r\n\r\nP.S. But please add redirects for `introduction` path. This will also be an example for release notes."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 638726179.0, 'datetime': '2020-06-04 09:15:11+00:00', 'masked_author': 'username_0', 'text': 'I agree that it\'s not so easy to reason about this plugin, there are more hidden subtilities than I thought. Myself I often get confused, particularly inverting the from/to of the plugin. Maybe it\'s not the correct terminology to use, and we could find simpler wordings (like sourcePath/targetPath or something?)\r\n\r\nAbout the abstractions, I don\'t think there\'s a lot of them, the only thing I really abstracted is the ""redirectCreator"" concept, which is `function(path): redirects`, and permit to fit the user provided `createRedirects` function and the ""shortcuts"" `fromExtensions` / `toExtensions` under the same interface.\r\n\r\nI can remove this abstraction if you feel it\'s too hard to reason about. That means I\'ll need to write less generic code here:\r\n\r\n```js\r\nfunction doCollectRedirects(pluginContext: PluginContext): RedirectMetadata[] {\r\n  const redirectsCreators: RedirectsCreator[] = buildRedirectCreators(\r\n    pluginContext.options,\r\n  );\r\n\r\n  const optionsRedirects = collectPluginOptionRedirects(pluginContext);\r\n\r\n  const redirectCreatorsRedirects = flatten(\r\n    redirectsCreators.map((redirectCreator) => {\r\n      return createRoutesPathsRedirects(redirectCreator, pluginContext);\r\n    }),\r\n  );\r\n\r\n  return [...optionsRedirects, ...redirectCreatorsRedirects];\r\n}\r\n```\r\n\r\nThat would become something like:\r\n\r\n```js\r\nfunction doCollectRedirects(pluginContext: PluginContext): RedirectMetadata[] {\r\n  return [\r\n    ...collectToExtensionsRedirects(pluginContext),\r\n    ...collectFromExtensionsRedirects(pluginContext),\r\n    ...collectPluginOptionRedirects(pluginContext),\r\n    ...collectCreateRedirects(pluginContext),\r\n  ];\r\n}\r\n```\r\n\r\nI think you are right, that may be simpler to understand, and this abstraction may not be worth it.\r\n\r\nDo you agree I should refactor?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'slorber', 'comment_id': 638827711.0, 'datetime': '2020-06-04 12:52:05+00:00', 'masked_author': 'username_0', 'text': '@username_1 \r\n\r\nI\'ve removed the ""redirectsCreator"" abstraction, that simplified a bit the code.\r\n\r\n\r\nFor the doc home redirects, blocked by https://github.com/facebook/docusaurus/issues/2879\r\nMaybe we can merge and fix this redirection later if needed?', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: feat(v2): docusaurus-plugin-client-redirects
username_0: First draft of plugin to handle client side redirects

I tried to make it flexible, and testable (tests will come)


It should cover basic redirections with ease, like path.html -> path
It should also cover the Watchman case: path -> path.html



Not ready to run, but you can take a look and give me some early feedback @yangshun ?
<issue_comment>username_0: Thanks for the feedback @username_1 

It's not ready and not tested, just wanted to let you see a preview of the API I'm crafting (actually didn't even run the code yet so it might have bugs)

Will handle your feedbacks tomorrow.
<issue_comment>username_0: Hi @username_1 

I've added the tests and made the code more robust, it's almost finished (still has some bugs to fixes, and the write side involving fs is not tested yet).

When this feature is complete, using the following (main usecase)

```
    [
      '@docusaurus/plugin-client-redirects',
      {
        fromExtensions: ['html'],
      },
    ],
```

Should redirect from ""/path.html"" to ""/path"" and write a ""/path.html/index.html"" file (or maybe just ""/path.html"" ?)
 

But it should also support the ""Watchman"" case (https://github.com/facebook/docusaurus/issues/2697) that wants .html urls being the canonical ones:

```
    [
      '@docusaurus/plugin-client-redirects',
      {
        toExtensions: ['html'],
      },
    ],
```

Should redirect from ""/path"" to ""/path.html"" and write a ""/path/index.html"" file


For power users, it's also possible to provide a function:

```
    [
      '@docusaurus/plugin-client-redirects',
      {
        createRedirects: (existingPath) => {
           return [""existingPath"" + ""/"" + ""someFancyPathSuffix""];
        },
      },
    ],
```
<issue_comment>username_0: So I think it's working fine now, and has good test coverage.

I propose to dogfood on the docusaurus v2 to redirect /path.html to /path, so that we know it keeps working over time.

It's already in the PR: https://deploy-preview-2793--docusaurus-2.netlify.app/docs/next/installation.html

I'll try the plugin on the Watchman site now and see if I have any issue.

And I'll write the doc.
<issue_comment>username_1: I wonder, in the current Docusaurus architecture, is it possible to define redirects in the frontmatter of Markdown files, like in this Gatsby plugin? https://www.gatsbyjs.org/packages/gatsby-redirect-from/
<issue_comment>username_0: Hi @username_1 

I definitively agree that it's convenient to declare redirects directly from the markdown files.

Gatsby's architecture is a bit different than D2. It has a data layer that permits to read the frontmatter of all markdown files from everywhere, and a core `createRedirect` api that they leverage mostly to hook into host specific solutions, and create server-side redirects (for example, if you use gatsby-plugin-netlify, it will write a _redirects file to the /build folder, which is a proprietary config file for Netlify).

In D2 we don't really have a shared data layer to read about all markdown files from a unified interface. Instead, each plugin is independant, reads frontmatter of the markdown on his own, and do the calls to `addRoute`. The frontmatter for a blog post and a doc are different types. 


Even with a core `createRedirect` api, we would have to implement the reading of `redirect_from: []` in each markdown plugin to call that `createRedirect` api, while gatsby is able to query its data layer directly in a more generic way.


Also, implementing redirects at the markdown level means it's not possible to create redirects from JSX pages.

I think it's better to start with this generic plugin. The configuration feels less ""co-located"" and more centralized than the Gatsby one, but at least it should support all usecases (ie markdown + pages), without the need to add new core lifecycle actions like `createRedirect`. 

Also we should discourage users to use client-side redirects, in favor of server-side redirects. As we don't want to support host-specific redirect configuration, introducing a core `createRedirect` api would encourage people to create client-side redirects. 

I see this plugin as an escape hatch when the user can't setup server-side redirects at all for various reasons (like using Github pages and not willing to migrate, which is the Watchman case).
<issue_comment>username_0: Yes, we can use all options at the same time.
<issue_comment>username_0: @username_1 currently I have:

```js
module.exports = {
  plugins: [
    [
      ""@docusaurus/plugin-client-redirects"",
      {
        fromExtensions: [""html""],
        toExtensions: [""exe""],
        redirects: [
          {
            to: ""/docs/newDocPath"",
            from: [""/docs/oldDocPathFrom2019"", ""/docs/legacyDocPathFrom2016""]
          }
        ],
        createRedirects: function(existingPath) {
          if (existingPath === ""/docs/newDocPath"") {
            return [""/docs/oldDocPathFrom2019"", ""/docs/legacyDocPathFrom2016""];
          }
        }
      }
    ]
  ]
};
```

I'm thinking on making the `createRedirects` function more consistent, what do you think of:

```js
module.exports = {
  plugins: [
    [
      ""@docusaurus/plugin-client-redirects"",
      {
        fromExtensions: [""html""],
        toExtensions: [""exe""],
        redirects: [
          {
            to: ""/docs/newDocPath"",
            from: [""/docs/oldDocPathFrom2019"", ""/docs/legacyDocPathFrom2016""]
          }
        ],
        createRedirects: function({paths, createRedirect}) {
              actions.createRedirect({
                from: ""/docs/oldDocPathFrom2019"",
                to: ""/docs/newDocPath""
              });
              actions.createRedirect({
                from: ""/docs/legacyDocPathFrom2016"",
                to: ""/docs/newDocPath""
              });
          });
        }
      }
    ]
  ]
};
```

It's a bit more verbose, but more consistent with the static redirect array you proposed and could be easier to understand as well.

Also it's what Gatsby does and nobody complained afaik: https://www.gatsbyjs.org/docs/actions/#createRedirect
<issue_comment>username_1: I don‚Äôt know what are the advantages of this approach?

By the way, after the merging of #2861, it would be nice to add redirects to v2 website. I wonder if it is possible to use regular expressions for this purpose (to cover versioned docs)?


https://v2.docusaurus.io/docs/introduction -> https://v2.docusaurus.io/docs/
https://v2.docusaurus.io/docs/2.0.0-alpha.55/introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.55/
https://v2.docusaurus.io/docs/2.0.0-alpha.54/introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.54/
https://v2.docusaurus.io/docs/2.0.0-alpha.50introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.50/
https://v2.docusaurus.io/docs/2.0.0-alpha.48/introduction -> https://v2.docusaurus.io/docs/2.0.0-alpha.48/
https://v2.docusaurus.io/docs/next/introduction -> https://v2.docusaurus.io/docs/next/


I did something similar when [I needed to correctly highlight active items in navbar](https://github.com/facebook/docusaurus/blob/master/website/docusaurus.config.js#L103), so I'm  curious if redirects could be added this way (using regex).
<issue_comment>username_0: Hi @username_1 

Here are some updates:

- a new `redirects` plugin option, as you requeted
- improved documentation an example with the 4 plugin options used together
- stricter validation: it's barely impossible for the user to use badly formatted options
- improved error messages
- non-blocking warnings in case some redirects get filtered for security (ie that would lead to FS files overwriting each thers)
- did not change the `createRedirects` (cf comment above)


----

Here's the config deployed in the PR, so that we can test better on D2 website:

```js
[
      '@docusaurus/plugin-client-redirects',
      {
        fromExtensions: ['html'],
        redirects: [
          {
            to: '/',
            from: [
              '/plugin-client-redirects-tests/toHome1',
              '/plugin-client-redirects-tests/toHome2',
            ],
          },
          {
            to: '/docs',
            from: '/plugin-client-redirects-tests/toDocs1',
          },
          {
            to: '/docs',
            from: '/plugin-client-redirects-tests/toDocs2',
          },
          {
            to: '/docs',
            from: '/plugin-client-redirects-tests/toHomeDuplicatePath',
          },
        ],
        createRedirects: function (existingPath) {
          if (existingPath === '/') {
            return [
              '/',
              '/docs',
              '/plugin-client-redirects-tests/toHome3',
              '/plugin-client-redirects-tests/toHome4',
              '/plugin-client-redirects-tests/toHomeDuplicatePath',
            ];
          }
        },
      },
    ],
```

The following redirects work:

Html extension redirects:

- https://deploy-preview-2793--docusaurus-2.netlify.app/docs/next.html
- https://deploy-preview-2793--docusaurus-2.netlify.app/docs/next/installation.html

Other redirects:

- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome1
- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome2
- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome3
- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHome4
- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toHomeDuplicatePath
- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toDocs1
- https://deploy-preview-2793--docusaurus-2.netlify.app/plugin-client-redirects-tests/toDocs2

As the config creates twice the `toHomeDuplicatePath`, and tries to redirect from `/` and `/docs` (existing paths that should not be overwritten by a redirect file), the build outputs the following warnings:

![image](https://user-images.githubusercontent.com/749374/83671109-70a91380-a5d4-11ea-93bf-141c597a1874.png)


Do you see other things to handle?
<issue_comment>username_0: About the version thing, I thought about it, and agree that's something we could support. 
What about adding this in a new PR? As this one starts to get fat :)
It's already possible to add version redirects with the custom `createRedirects` fn in userland.
But I agree this is a pattern that we should make it simpler to configure.
<issue_comment>username_1: Honestly, this plugin really came out huge and strong I thought there would be much less code in order to implement it. We actually did not pay so much attention to error handling in our existing plugins. However, I can‚Äôt say that this is a bad approach, just before that we did not attach so much importance to this.

I actually trust in a high test coverage of this plugin, since mentally this plugin is not easy to understand (I mean me). But this is really cool, although maybe we could simplify some things, for example, is it really necessary to use Yup? Although it may be necessary to go this way in our other plugins. I mean, maybe we should try to reconsider the development process of our plugins so that they are like this redirect plugin -- a lot of tests, a thorough validation of errors, a lot of high-level abstractions... Apparently I got carried away :smile: 

Okay, tomorrow I'll see it again in action and probably we can already merge it into master branch.

P.S. But please add redirects for `introduction` path. This will also be an example for release notes.
<issue_comment>username_0: I agree that it's not so easy to reason about this plugin, there are more hidden subtilities than I thought. Myself I often get confused, particularly inverting the from/to of the plugin. Maybe it's not the correct terminology to use, and we could find simpler wordings (like sourcePath/targetPath or something?)

About the abstractions, I don't think there's a lot of them, the only thing I really abstracted is the ""redirectCreator"" concept, which is `function(path): redirects`, and permit to fit the user provided `createRedirects` function and the ""shortcuts"" `fromExtensions` / `toExtensions` under the same interface.

I can remove this abstraction if you feel it's too hard to reason about. That means I'll need to write less generic code here:

```js
function doCollectRedirects(pluginContext: PluginContext): RedirectMetadata[] {
  const redirectsCreators: RedirectsCreator[] = buildRedirectCreators(
    pluginContext.options,
  );

  const optionsRedirects = collectPluginOptionRedirects(pluginContext);

  const redirectCreatorsRedirects = flatten(
    redirectsCreators.map((redirectCreator) => {
      return createRoutesPathsRedirects(redirectCreator, pluginContext);
    }),
  );

  return [...optionsRedirects, ...redirectCreatorsRedirects];
}
```

That would become something like:

```js
function doCollectRedirects(pluginContext: PluginContext): RedirectMetadata[] {
  return [
    ...collectToExtensionsRedirects(pluginContext),
    ...collectFromExtensionsRedirects(pluginContext),
    ...collectPluginOptionRedirects(pluginContext),
    ...collectCreateRedirects(pluginContext),
  ];
}
```

I think you are right, that may be simpler to understand, and this abstraction may not be worth it.

Do you agree I should refactor?
<issue_comment>username_0: @username_1 

I've removed the ""redirectsCreator"" abstraction, that simplified a bit the code.


For the doc home redirects, blocked by https://github.com/facebook/docusaurus/issues/2879
Maybe we can merge and fix this redirection later if needed?"
pidcodes/pidcodes.github.com,66229735,10,"{'number': 10.0, 'repo': 'pidcodes.github.com', 'user_login': 'pidcodes'}","[{'action': 'opened', 'author': 'FPGA-Computer', 'comment_id': None, 'datetime': '2015-04-03T21:18:18Z', 'masked_author': 'username_0', 'text': 'Creation', 'title': 'Create index.md', 'type': 'issue'}
 {'action': 'created', 'author': 'FPGA-Computer', 'comment_id': 89423156.0, 'datetime': '2015-04-03 21:19:04+00:00', 'masked_author': 'username_0', 'text': 'Please add my PID of 1357 for for a battery analyzer (new project - work in progress)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Arachnid', 'comment_id': 89426656.0, 'datetime': '2015-04-03 21:36:58+00:00', 'masked_author': 'username_1', 'text': ""Thanks for your pull request. It has a few issues that need resolving:\r\n\r\n - PIDs starting with 0x1*** are reserved; please choose another PID\r\n - You haven't published any of your source or schematics, as far as I can determine from the link provided.\r\n - CC 'Non Commercial' licenses aren't open-source licenses.\r\n - I can't find your license specified anywhere other than in your pull request\r\n - You need to commit an organisation page and reference it correctly, as specified in http://pid.codes/howto/.\r\n\r\nIf you're able to fix these issues, please feel free to reopen this PR or submit a new one with fixes."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Create index.md
username_0: Creation
<issue_comment>username_0: Please add my PID of 1357 for for a battery analyzer (new project - work in progress)
<issue_comment>username_1: Thanks for your pull request. It has a few issues that need resolving:

 - PIDs starting with 0x1*** are reserved; please choose another PID
 - You haven't published any of your source or schematics, as far as I can determine from the link provided.
 - CC 'Non Commercial' licenses aren't open-source licenses.
 - I can't find your license specified anywhere other than in your pull request
 - You need to commit an organisation page and reference it correctly, as specified in http://pid.codes/howto/.

If you're able to fix these issues, please feel free to reopen this PR or submit a new one with fixes."
gohugoio/hugo,780549741,8122,"{'number': 8122.0, 'repo': 'hugo', 'user_login': 'gohugoio'}","[{'action': 'opened', 'author': 'benmezger', 'comment_id': None, 'datetime': '2021-01-06T13:23:24Z', 'masked_author': 'username_0', 'text': 'This PR adds support for zsh, fish and powershell completion.\r\n\r\n\r\nSee issue #4296', 'title': 'Feat: Add zsh, fish and powershell completion support', 'type': 'issue'}
 {'action': 'created', 'author': 'bep', 'comment_id': 755990634.0, 'datetime': '2021-01-07 09:17:46+00:00', 'masked_author': 'username_1', 'text': 'Looks good to me -- I added @username_2 as a reviewer, as I remember vaguely that he was ""talking about this"" at some point.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 770076661.0, 'datetime': '2021-01-29 22:08:20+00:00', 'masked_author': 'username_1', 'text': 'Bump, I would love to see this merged.\r\n\r\n/cc @username_2  \r\n\r\n@username_0 I assume you have confirmed that this actually work?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'anthonyfok', 'comment_id': 770202286.0, 'datetime': '2021-01-30 12:07:31+00:00', 'masked_author': 'username_2', 'text': '* Zsh completion works.  I placed the generated file in ""${fpath[1]}/_hugo"" (according to https://github.com/spf13/cobra/blob/master/shell_completions.md), i.e. /usr/local/share/zsh/site-functions/_hugo on my system.\r\n\r\n* Fish completion probably works, but somehow fish already comes with its own hugo completion in /usr/share/fish/completions/hugo.fish, and for some reasons completion still works after removing that file.\r\n\r\n* PowerShell support was added to Cobra on 2020-12-29, but the latest released version of Cobra v1.1.1 is dated October 2020, thus PowerShell completion is not working (fish completion is output instead.), so probably Cobra needs a new release, and Hugo\'s go.mod needs to be updated accordingly.\r\n\r\nRegardless of the shell `--type`, `hugo gen autocomplete` would always try to write to /etc/bash_completion.d/hugo.sh unless `--completionfile` is defined.  I have always uneasy on this behaviour (which dates way back to the early days of Hugo) especially /etc is not supposed to be writeable by normal (non-admin) users.  But yes, writing zsh/fish/PowerShell completion file as /etc/bash_completion.d/hugo.sh is definitely incorrect, so this needs to be fixed somehow, probably in a separate PR/commit.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'anthonyfok', 'comment_id': 770203401.0, 'datetime': '2021-01-30 12:16:17+00:00', 'masked_author': 'username_2', 'text': 'If the two problems I listed above are better served by separate pull requests, I can change the review stations from ""requested changes"" to ""approved"".  Please let me know.  :-)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'benmezger', 'comment_id': 770414801.0, 'datetime': '2021-01-31 17:09:00+00:00', 'masked_author': 'username_0', 'text': '@username_2, thanks for the input, I have some questions regarding the issues you mentioned. \r\n\r\n1. From what I understood regarding powershell, is that we should drop powershell support for now, is this correct?\r\n2. I agree with `/etc` not being ideal. What I think it would be a solution is to print the completion to `stdout` by default, and the user may pipe to a file or specify `--completionfile` instead, but, I would like to hear more suggestions, as the path to completion file really depends on the user setup/os.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'anthonyfok', 'comment_id': 770586112.0, 'datetime': '2021-02-01 05:44:40+00:00', 'masked_author': 'username_2', 'text': ""I agree: printing to `stdout` is a saner default.  It _might_ break some existing packaging scripts, but I doubt it: besides Debian's debian/rules which I maintain and already specifies `--completionfile`, Hugo's Homebrew also specifies `--completionfile` too https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/hugo.rb\r\n\r\nSo, yes, please feel free to go ahead with making this change!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 770668590.0, 'datetime': '2021-02-01 08:24:29+00:00', 'masked_author': 'username_1', 'text': 'I suggest we take the Powershell thing as a separate ... thing.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'anthonyfok', 'comment_id': 770673331.0, 'datetime': '2021-02-01 08:31:47+00:00', 'masked_author': 'username_2', 'text': ""Good idea!  I didn't even know that Cobra has support for PowerShell completion, haha!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'benmezger', 'comment_id': 772087912.0, 'datetime': '2021-02-02 23:31:47+00:00', 'masked_author': 'username_0', 'text': ""@username_2 I've made the suggested changes. If you have any suggestion on handling `stdout` files instead of the `if` check I've made, let me know, regarding @username_1 suggestion on removing powershell, I've completely removed powershell for now."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 772459777.0, 'datetime': '2021-02-03 12:05:57+00:00', 'masked_author': 'username_1', 'text': ""@username_2 feel free to merge, it looks good to me. I'm not a big Powershell (or Windows user; I have an old Windows 8.1 VM that I test Hugo stuff on (only version I have license for  :-), not sure it even has Powershell...).\r\n\r\n@username_0 a quick note: the doc below /commands gets autogenerated so any manual change to it will be overwritten. It does not matter too much here, but I'm just mentioning it."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 774506468.0, 'datetime': '2021-02-06 16:55:07+00:00', 'masked_author': 'username_1', 'text': ""@username_2 for the future it would be good if you could squash commits like these into one (it's one logical unit)."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'anthonyfok', 'comment_id': 775480009.0, 'datetime': '2021-02-08 21:37:42+00:00', 'masked_author': 'username_2', 'text': '@username_1 Indeed!  Thank you for the advice!  I noticed the ""3 separate commits that should have been one"" too late, and wished I could have gone back and fixed it, and yet the ""squash commit"" option didn\'t even cross my mind!  My inexperience.  Will definitely be more careful in future PRs.  Thank you!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'benmezger', 'comment_id': 775638710.0, 'datetime': '2021-02-09 03:43:48+00:00', 'masked_author': 'username_0', 'text': ""@username_1 @username_2 I should have noticed it too. It didn't occur to me that\nthe `CONTRIBUTION` guideline actually details this.\nMy bad peeps ‚Äì will pay attention to this on a next contribution."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'benmezger', 'comment_id': 775638871.0, 'datetime': '2021-02-09 03:44:20+00:00', 'masked_author': 'username_0', 'text': ""@username_1 @username_2 I should have noticed it too. It didn't occur to me that the `CONTRIBUTION` guideline actually details this. \r\nMy bad peeps ‚Äì will pay attention to this on a next contribution."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Feat: Add zsh, fish and powershell completion support
username_0: This PR adds support for zsh, fish and powershell completion.


See issue #4296
<issue_comment>username_1: Looks good to me -- I added @username_2 as a reviewer, as I remember vaguely that he was ""talking about this"" at some point.
<issue_comment>username_1: Bump, I would love to see this merged.

/cc @username_2  

@username_0 I assume you have confirmed that this actually work?
<issue_comment>username_2: * Zsh completion works.  I placed the generated file in ""${fpath[1]}/_hugo"" (according to https://github.com/spf13/cobra/blob/master/shell_completions.md), i.e. /usr/local/share/zsh/site-functions/_hugo on my system.

* Fish completion probably works, but somehow fish already comes with its own hugo completion in /usr/share/fish/completions/hugo.fish, and for some reasons completion still works after removing that file.

* PowerShell support was added to Cobra on 2020-12-29, but the latest released version of Cobra v1.1.1 is dated October 2020, thus PowerShell completion is not working (fish completion is output instead.), so probably Cobra needs a new release, and Hugo's go.mod needs to be updated accordingly.

Regardless of the shell `--type`, `hugo gen autocomplete` would always try to write to /etc/bash_completion.d/hugo.sh unless `--completionfile` is defined.  I have always uneasy on this behaviour (which dates way back to the early days of Hugo) especially /etc is not supposed to be writeable by normal (non-admin) users.  But yes, writing zsh/fish/PowerShell completion file as /etc/bash_completion.d/hugo.sh is definitely incorrect, so this needs to be fixed somehow, probably in a separate PR/commit.
<issue_comment>username_2: If the two problems I listed above are better served by separate pull requests, I can change the review stations from ""requested changes"" to ""approved"".  Please let me know.  :-)
<issue_comment>username_0: @username_2, thanks for the input, I have some questions regarding the issues you mentioned. 

1. From what I understood regarding powershell, is that we should drop powershell support for now, is this correct?
2. I agree with `/etc` not being ideal. What I think it would be a solution is to print the completion to `stdout` by default, and the user may pipe to a file or specify `--completionfile` instead, but, I would like to hear more suggestions, as the path to completion file really depends on the user setup/os.
<issue_comment>username_2: I agree: printing to `stdout` is a saner default.  It _might_ break some existing packaging scripts, but I doubt it: besides Debian's debian/rules which I maintain and already specifies `--completionfile`, Hugo's Homebrew also specifies `--completionfile` too https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/hugo.rb

So, yes, please feel free to go ahead with making this change!
<issue_comment>username_1: I suggest we take the Powershell thing as a separate ... thing.
<issue_comment>username_2: Good idea!  I didn't even know that Cobra has support for PowerShell completion, haha!
<issue_comment>username_0: @username_2 I've made the suggested changes. If you have any suggestion on handling `stdout` files instead of the `if` check I've made, let me know, regarding @username_1 suggestion on removing powershell, I've completely removed powershell for now.
<issue_comment>username_1: @username_2 feel free to merge, it looks good to me. I'm not a big Powershell (or Windows user; I have an old Windows 8.1 VM that I test Hugo stuff on (only version I have license for  :-), not sure it even has Powershell...).

@username_0 a quick note: the doc below /commands gets autogenerated so any manual change to it will be overwritten. It does not matter too much here, but I'm just mentioning it.
<issue_comment>username_1: @username_2 for the future it would be good if you could squash commits like these into one (it's one logical unit).
<issue_comment>username_2: @username_1 Indeed!  Thank you for the advice!  I noticed the ""3 separate commits that should have been one"" too late, and wished I could have gone back and fixed it, and yet the ""squash commit"" option didn't even cross my mind!  My inexperience.  Will definitely be more careful in future PRs.  Thank you!
<issue_comment>username_0: @username_1 @username_2 I should have noticed it too. It didn't occur to me that
the `CONTRIBUTION` guideline actually details this.
My bad peeps ‚Äì will pay attention to this on a next contribution.
<issue_comment>username_0: @username_1 @username_2 I should have noticed it too. It didn't occur to me that the `CONTRIBUTION` guideline actually details this. 
My bad peeps ‚Äì will pay attention to this on a next contribution."
getnikola/nikola,88634270,1826,,"[{'action': 'opened', 'author': 'shmilee', 'comment_id': None, 'datetime': '2015-06-16 06:32:47+00:00', 'masked_author': 'username_0', 'text': 'Archlinux, python 3.4.3, python-six 1.9.0,  python-unidecode 0.04.17, nikola 7.5.1\r\n\r\nWhen running `nikola help auto`, I  get an error:\r\n```\r\nTraceback (most recent call last):\r\n  File ""/usr/lib/python3.4/site-packages/doit/doit_cmd.py"", line 165, in run\r\n    return command.parse_execute(args)\r\n  File ""/usr/lib/python3.4/site-packages/doit/cmd_base.py"", line 122, in parse_execute\r\n    return self.execute(params, args)\r\n  File ""/usr/lib/python3.4/site-packages/doit/cmd_help.py"", line 155, in execute\r\n    six.print_(cmd.help())\r\nUnicodeEncodeError: \'ascii\' codec can\'t encode character \'\\u2013\' in position 269: ordinal not in range(128)\r\n```', 'title': 'nikola help auto, UnicodeEncodeError', 'type': 'issue'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 112386628.0, 'datetime': '2015-06-16 11:08:08+00:00', 'masked_author': 'username_1', 'text': ""That's unusual. I can't reproduce that myself yet."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 112442957.0, 'datetime': '2015-06-16 13:59:52+00:00', 'masked_author': 'username_2', 'text': 'You probably need to [configure your locale](https://wiki.archlinux.org/index.php/Locale) properly: make sure you use an `.utf8` locale.\r\n\r\nWhat does `python -c ""import sys; print(sys.getdefaultencoding(), sys.getfilesystemencoding())""` say?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'shmilee', 'comment_id': 112514022.0, 'datetime': '2015-06-16 17:55:41+00:00', 'masked_author': 'username_0', 'text': 'Thanks. Problem solved.\r\n\r\nI run the command `nikola help auto` in a docker container, and the locale is forgotten to configure.\r\n\r\nAnd,\r\n```\r\n$ python -c ""import sys; print(sys.getdefaultencoding(), sys.getfilesystemencoding())""\r\nutf-8 ascii\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'shmilee', 'comment_id': None, 'datetime': '2015-06-16 17:56:19+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 112515300.0, 'datetime': '2015-06-16 18:00:55+00:00', 'masked_author': 'username_2', 'text': 'Your locale might still be misconfigured then, they should both say utf-8.  Make sure `locale` outputs sane UTF-8 values for everything (other than `LC_ALL` which cannot be set)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sukiletxe', 'comment_id': 215460532.0, 'datetime': '2016-04-28 15:15:33+00:00', 'masked_author': 'username_3', 'text': 'The same thing happens here, in a Windows 10 machine, both in cmd and Powershell. It complains whenever an en-dash (u2013) is used, refusing to print any help. This happens in at least auto and serve.\r\nAfter running the command suggested above, I get:\r\nutf-8 mbcs', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 215460852.0, 'datetime': '2016-04-28 15:16:17+00:00', 'masked_author': 'username_2', 'text': 'Full traceback?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sukiletxe', 'comment_id': 215462517.0, 'datetime': '2016-04-28 15:20:02+00:00', 'masked_author': 'username_3', 'text': 'Oops, so sorry, I was going to add that when you replied. With nikola auto:\r\nTraceback (most recent call last):\r\n  File ""c:\\python35\\lib\\site-packages\\doit\\doit_cmd.py"", line 168, in run\r\n    return command.parse_execute(args)\r\n  File ""c:\\python35\\lib\\site-packages\\doit\\cmd_base.py"", line 122, in parse_execute\r\n    return self.execute(params, args)\r\n  File ""c:\\python35\\lib\\site-packages\\doit\\cmd_help.py"", line 157, in execute\r\n    six.print_(cmd.help())\r\n  File ""c:\\python35\\lib\\encodings\\cp850.py"", line 19, in encode\r\n    return codecs.charmap_encode(input,self.errors,encoding_map)[0]\r\nUnicodeEncodeError: \'charmap\' codec can\'t encode character \'\\u2013\' in position 274: character maps to <undefined>', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 215465795.0, 'datetime': '2016-04-28 15:26:22+00:00', 'masked_author': 'username_2', 'text': 'So basically, en-dashes we use somewhere trip up Windows, which does **not** speak Unicode and blatantly lies about locales. Fixed in master.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sukiletxe', 'comment_id': 215469151.0, 'datetime': '2016-04-28 15:34:50+00:00', 'masked_author': 'username_3', 'text': 'Thank you very much!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: nikola help auto, UnicodeEncodeError
username_0: Archlinux, python 3.4.3, python-six 1.9.0,  python-unidecode 0.04.17, nikola 7.5.1

When running `nikola help auto`, I  get an error:
```
Traceback (most recent call last):
  File ""/usr/lib/python3.4/site-packages/doit/doit_cmd.py"", line 165, in run
    return command.parse_execute(args)
  File ""/usr/lib/python3.4/site-packages/doit/cmd_base.py"", line 122, in parse_execute
    return self.execute(params, args)
  File ""/usr/lib/python3.4/site-packages/doit/cmd_help.py"", line 155, in execute
    six.print_(cmd.help())
UnicodeEncodeError: 'ascii' codec can't encode character '\u2013' in position 269: ordinal not in range(128)
```
<issue_comment>username_1: That's unusual. I can't reproduce that myself yet.
<issue_comment>username_2: You probably need to [configure your locale](https://wiki.archlinux.org/index.php/Locale) properly: make sure you use an `.utf8` locale.

What does `python -c ""import sys; print(sys.getdefaultencoding(), sys.getfilesystemencoding())""` say?
<issue_comment>username_0: Thanks. Problem solved.

I run the command `nikola help auto` in a docker container, and the locale is forgotten to configure.

And,
```
$ python -c ""import sys; print(sys.getdefaultencoding(), sys.getfilesystemencoding())""
utf-8 ascii
```<issue_closed>
<issue_comment>username_2: Your locale might still be misconfigured then, they should both say utf-8.  Make sure `locale` outputs sane UTF-8 values for everything (other than `LC_ALL` which cannot be set)
<issue_comment>username_3: The same thing happens here, in a Windows 10 machine, both in cmd and Powershell. It complains whenever an en-dash (u2013) is used, refusing to print any help. This happens in at least auto and serve.
After running the command suggested above, I get:
utf-8 mbcs
<issue_comment>username_2: Full traceback?
<issue_comment>username_3: Oops, so sorry, I was going to add that when you replied. With nikola auto:
Traceback (most recent call last):
  File ""c:\python35\lib\site-packages\doit\doit_cmd.py"", line 168, in run
    return command.parse_execute(args)
  File ""c:\python35\lib\site-packages\doit\cmd_base.py"", line 122, in parse_execute
    return self.execute(params, args)
  File ""c:\python35\lib\site-packages\doit\cmd_help.py"", line 157, in execute
    six.print_(cmd.help())
  File ""c:\python35\lib\encodings\cp850.py"", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_map)[0]
UnicodeEncodeError: 'charmap' codec can't encode character '\u2013' in position 274: character maps to <undefined>
<issue_comment>username_2: So basically, en-dashes we use somewhere trip up Windows, which does **not** speak Unicode and blatantly lies about locales. Fixed in master.
<issue_comment>username_3: Thank you very much!"
gohugoio/hugo,300024467,4449,,"[{'action': 'opened', 'author': 'bep', 'comment_id': None, 'datetime': '2018-02-25 13:02:47+00:00', 'masked_author': 'username_0', 'text': 'This relates to #4446 -- but deserves its own issue. \r\n\r\n`resource.SASS¬¥ etc. should also work with the output types, and that will enable template support, but it would also be really cool and useful if we could do:\r\n\r\n\r\n```html\r\n{{ $css :=  resource ""main.scss"" | resource.Templify .Site |  resource.Sass | resource.Digest | resource.Fingerprint }}\r\n```\r\n\r\nAnd then in `main.scss`:\r\n\r\n```\r\n$white:    {{ .Params.colors.white }} !default;\r\n...\r\n```\r\n\r\nThis should give some pretty powerful theming options.\r\n\r\nImplementation notes:\r\n\r\n* text vs HTML\r\n* Maybe custom delimiters (""{{"" and ""}}"")', 'title': 'Add resource.Templify', 'type': 'issue'}
 {'action': 'closed', 'author': 'bep', 'comment_id': None, 'datetime': '2018-07-21 15:29:49+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Add resource.Templify
username_0: This relates to #4446 -- but deserves its own issue. 

`resource.SASS¬¥ etc. should also work with the output types, and that will enable template support, but it would also be really cool and useful if we could do:


```html
{{ $css :=  resource ""main.scss"" | resource.Templify .Site |  resource.Sass | resource.Digest | resource.Fingerprint }}
```

And then in `main.scss`:

```
$white:    {{ .Params.colors.white }} !default;
...
```

This should give some pretty powerful theming options.

Implementation notes:

* text vs HTML
* Maybe custom delimiters (""{{"" and ""}}"")<issue_closed>"
department-of-veterans-affairs/vets-website,306950712,7458,,"[{'action': 'opened', 'author': 'chriseldredge-usds', 'comment_id': None, 'datetime': '2018-03-20 16:50:27+00:00', 'masked_author': 'username_0', 'text': '[common/index.js](/department-of-veterans-affairs/vets-website/blob/master/src/js/common/index.js#L9) assumes all pages will have a `#vetnav-menu` element, but no such element is present on playbook views (e.g. https://www.vets.gov/playbook/). This results in an unhandled javascript error that prevents additional javascript from executing.', 'title': 'Missing vetnav-menu error on Playbook pages', 'type': 'issue'}
 {'action': 'closed', 'author': 'ncksllvn', 'comment_id': None, 'datetime': '2018-12-03 15:14:57+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'ncksllvn', 'comment_id': 443745045.0, 'datetime': '2018-12-03 15:14:57+00:00', 'masked_author': 'username_1', 'text': ""Thanks @username_0! The Playbook is in need of some revisiting now that we've launched as VA.gov and there are still a couple console warnings on Dev, but now that we've migrated to a React-powered top navigation, the error defined in this ticket is no longer present."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Missing vetnav-menu error on Playbook pages
username_0: [common/index.js](/department-of-veterans-affairs/vets-website/blob/master/src/js/common/index.js#L9) assumes all pages will have a `#vetnav-menu` element, but no such element is present on playbook views (e.g. https://www.vets.gov/playbook/). This results in an unhandled javascript error that prevents additional javascript from executing.<issue_closed>
<issue_comment>username_1: Thanks @username_0! The Playbook is in need of some revisiting now that we've launched as VA.gov and there are still a couple console warnings on Dev, but now that we've migrated to a React-powered top navigation, the error defined in this ticket is no longer present."
