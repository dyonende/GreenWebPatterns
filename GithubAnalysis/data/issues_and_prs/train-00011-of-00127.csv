ethereum/ethereum-org-website,585221733,853,,"[{'action': 'opened', 'author': 'samajammin', 'comment_id': None, 'datetime': '2020-03-20 17:28:51+00:00', 'masked_author': 'username_0', 'text': '**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I\'m always frustrated when [...] -->\r\nWe\'ve gotten feedback from users that it\'d be valuable to add a brief explanation on the ""what"" & ""why"" of the /dapps page. Currently we just list some example dapps to use.\r\n\r\n**Describe the solution you\'d like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nAdd a brief intro paragraph explaining what dapps are & how they\'re different.\r\n\r\n**Describe alternatives you\'ve considered**\r\n<!-- A clear and concise description of any alternative solutions or features you\'ve considered. -->\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->', 'title': 'Add dapp explanation on /dapps page', 'type': 'issue'}
 {'action': 'created', 'author': 'VoltronDeveloper1', 'comment_id': 616879667.0, 'datetime': '2020-04-21 00:29:02+00:00', 'masked_author': 'username_1', 'text': 'You all are so far away from the true power its unbelievable. Its elementary my dear Watson', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'samajammin', 'comment_id': None, 'datetime': '2020-04-21 01:19:22+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 616893396.0, 'datetime': '2020-04-21 01:19:22+00:00', 'masked_author': 'username_0', 'text': 'Solved in #854', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Add dapp explanation on /dapps page
username_0: **Is your feature request related to a problem? Please describe.**
<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->
We've gotten feedback from users that it'd be valuable to add a brief explanation on the ""what"" & ""why"" of the /dapps page. Currently we just list some example dapps to use.

**Describe the solution you'd like**
<!-- A clear and concise description of what you want to happen. -->
Add a brief intro paragraph explaining what dapps are & how they're different.

**Describe alternatives you've considered**
<!-- A clear and concise description of any alternative solutions or features you've considered. -->

**Additional context**
<!-- Add any other context or screenshots about the feature request here. -->
<issue_comment>username_1: You all are so far away from the true power its unbelievable. Its elementary my dear Watson<issue_closed>
<issue_comment>username_0: Solved in #854"
getnikola/nikola,102807424,1972,"{'number': 1972.0, 'repo': 'nikola', 'user_login': 'getnikola'}","[{'action': 'opened', 'author': 'jjconti', 'comment_id': None, 'datetime': '2015-08-24T14:30:20Z', 'masked_author': 'username_0', 'text': 'Based on tags.py\r\n\r\nRequires this configs:\r\n\r\n    AUTHOR_PATH = \'author\'\r\n    AUTHOR_PAGES_ARE_INDEXES = True\r\n\r\nand this messages:\r\n\r\n    ""Authors"": ""Autores"",\r\n    ""Posts by %s"": ""Posts de %s""', 'title': 'WIP: render authors pages', 'type': 'issue'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 134229014.0, 'datetime': '2015-08-24 14:39:06+00:00', 'masked_author': 'username_1', 'text': 'Great idea!\r\n\r\n* style fixes needed: https://travis-ci.org/getnikola/nikola/jobs/76990366#L171\r\n* tests fail. Add your new settings to `conf.py.in` and `nikola.py`, and messages to `messages_en.py` (we need some more work to get it to Transifex, we will handle that)\r\n* Would you mind implementing the title/description customization parts from tags?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Aeyoun', 'comment_id': 134233143.0, 'datetime': '2015-08-24 14:54:56+00:00', 'masked_author': 'username_2', 'text': 'Enhancement idea: Most CMS include short author bios and portrait images on these kind of pages. Maybe duplicate whats available in TAG_PAGES_DESCRIPTIONS as AUTHOR_PAGES_BIOS with the same format?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 134321720.0, 'datetime': '2015-08-24 18:10:29+00:00', 'masked_author': 'username_0', 'text': ""@username_2 interesting ideas, but with what I've implemented so far my requirements and available time are covered."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 134324144.0, 'datetime': '2015-08-24 18:17:18+00:00', 'masked_author': 'username_3', 'text': '@username_2 can you file those as a enhancement issue with a checklist? Once this is polished and merged we can tackle that as needed.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 134345752.0, 'datetime': '2015-08-24 19:18:33+00:00', 'masked_author': 'username_0', 'text': 'For the doc:\r\n\r\nYou can link an author\'s page form you template adding this:\r\n\r\n    <a href=""${_link(\'author\', post.author())}"">${post.author()}</a>', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 134345820.0, 'datetime': '2015-08-24 19:18:58+00:00', 'masked_author': 'username_0', 'text': 'A working example of this at: http://lugcos.github.io/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Aeyoun', 'comment_id': 134372512.0, 'datetime': '2015-08-24 20:38:07+00:00', 'masked_author': 'username_2', 'text': 'Issues #973, #1974, and #1975.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Aeyoun', 'comment_id': 134584375.0, 'datetime': '2015-08-25 13:24:29+00:00', 'masked_author': 'username_2', 'text': 'Line 34 in `data/themes/base/templates/post_header.tmpl` should link to the author’s pages if it is being generated. The enclosing span element can be replaced with an a element retaining the span’s microformats and adding `rel=""author me""`.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 135663252.0, 'datetime': '2015-08-28 07:39:44+00:00', 'masked_author': 'username_1', 'text': '@username_0 do you consider this finished and good for review, or are you still working on it?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 135855110.0, 'datetime': '2015-08-28 18:32:11+00:00', 'masked_author': 'username_0', 'text': 'Roberto mentioned that it would be best to not run this in every instance\nof Nikola, for example, blogs with only one author would not need it. I was\nwaiting for a dedicition about this: should I add a config to\nenable/disable it?\n\nSomething else you want me to add?\n\n\n\n\n-- \nJuanjo Conti\nMi primer novela ya se puede conseguir en:\nhttp://www.juanjoconti.com.ar/xolopes', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 135855360.0, 'datetime': '2015-08-28 18:33:24+00:00', 'masked_author': 'username_1', 'text': 'yeah, add a config option for this.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 135855391.0, 'datetime': '2015-08-28 18:33:33+00:00', 'masked_author': 'username_3', 'text': ""@username_0 so, you could have a flag for this (ENABLE_AUTHOR_PAGES ?) and if there's a single author disable it anyway (with a warning maybe)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Aeyoun', 'comment_id': 135885789.0, 'datetime': '2015-08-28 20:55:18+00:00', 'masked_author': 'username_2', 'text': 'On the sections branch I just don’t generate the tasks if there is no more than one section. (Rationale being that it would just be a exact duplicate of the main index.) You could just don’t generate the author pages if there is no more than one author.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 135886554.0, 'datetime': '2015-08-28 20:59:37+00:00', 'masked_author': 'username_3', 'text': '@username_2 you still need the flag for things like templates to be sane (pardon the pseudocode):\r\n\r\n```\r\nif doing_authors_pages:\r\n   make author name be a link to it\r\nelse:\r\n  just the author name\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ralsina', 'comment_id': 136216980.0, 'datetime': '2015-08-30 23:29:10+00:00', 'masked_author': 'username_3', 'text': ""I say let's merge this and @username_2 's PR and let's fix any broken bits later. They are major features, they are awesome, and they are well done."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Aeyoun', 'comment_id': 136220142.0, 'datetime': '2015-08-31 00:18:01+00:00', 'masked_author': 'username_2', 'text': '@username_0 do you wish to rebase on master and resolve the conflicts yourself? or should i?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 136222719.0, 'datetime': '2015-08-31 00:33:23+00:00', 'masked_author': 'username_0', 'text': ""I'll do it tonight when adding a final change. Thanks."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 136240279.0, 'datetime': '2015-08-31 03:04:53+00:00', 'masked_author': 'username_0', 'text': ""I'm done. This can be merged (do I do it? am I getting commit access or something like that?).\r\n\r\n**NOTE:** author*tmpl files are missing for base-jinja theme. I can add them after this is merged."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 136291092.0, 'datetime': '2015-08-31 07:49:48+00:00', 'masked_author': 'username_1', 'text': '1. I’ll merge it. If you want commit rights, just ask.\r\n2. It can be generated with `scripts/jinjify.py`. I’ll handle that.\r\n\r\nThanks for your contribution!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 136338843.0, 'datetime': '2015-08-31 11:19:33+00:00', 'masked_author': 'username_0', 'text': ""You're welcome. Thanks for the software. I'll continue using it so I'll probably be doing more contributions.\r\n\r\nDo we need to update CHANGELOG? Something in doc/? AUTHORS.txt?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Kwpolska', 'comment_id': 136339696.0, 'datetime': '2015-08-31 11:26:01+00:00', 'masked_author': 'username_1', 'text': '1. So, do you want commit rights or not?\r\n2. CHANGES.txt, AUTHORS.txt and docs/manual.txt could use an update. Will you do it?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 136339975.0, 'datetime': '2015-08-31 11:28:13+00:00', 'masked_author': 'username_0', 'text': ""Ok! I'll do it! :D I wasn't sure because of what Uncle Ben said[1] but, let's do it!\r\n\r\n[1]Uncle Ben: Remember, with great power. comes great responsibility."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jjconti', 'comment_id': 136405425.0, 'datetime': '2015-08-31 15:25:38+00:00', 'masked_author': 'username_0', 'text': 'Done.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: WIP: render authors pages
username_0: Based on tags.py

Requires this configs:

    AUTHOR_PATH = 'author'
    AUTHOR_PAGES_ARE_INDEXES = True

and this messages:

    ""Authors"": ""Autores"",
    ""Posts by %s"": ""Posts de %s""
<issue_comment>username_1: Great idea!

* style fixes needed: https://travis-ci.org/getnikola/nikola/jobs/76990366#L171
* tests fail. Add your new settings to `conf.py.in` and `nikola.py`, and messages to `messages_en.py` (we need some more work to get it to Transifex, we will handle that)
* Would you mind implementing the title/description customization parts from tags?
<issue_comment>username_2: Enhancement idea: Most CMS include short author bios and portrait images on these kind of pages. Maybe duplicate whats available in TAG_PAGES_DESCRIPTIONS as AUTHOR_PAGES_BIOS with the same format?
<issue_comment>username_0: @username_2 interesting ideas, but with what I've implemented so far my requirements and available time are covered.
<issue_comment>username_3: @username_2 can you file those as a enhancement issue with a checklist? Once this is polished and merged we can tackle that as needed.
<issue_comment>username_0: For the doc:

You can link an author's page form you template adding this:

    <a href=""${_link('author', post.author())}"">${post.author()}</a>
<issue_comment>username_0: A working example of this at: http://lugcos.github.io/
<issue_comment>username_2: Issues #973, #1974, and #1975.
<issue_comment>username_2: Line 34 in `data/themes/base/templates/post_header.tmpl` should link to the author’s pages if it is being generated. The enclosing span element can be replaced with an a element retaining the span’s microformats and adding `rel=""author me""`.
<issue_comment>username_1: @username_0 do you consider this finished and good for review, or are you still working on it?
<issue_comment>username_0: Roberto mentioned that it would be best to not run this in every instance
of Nikola, for example, blogs with only one author would not need it. I was
waiting for a dedicition about this: should I add a config to
enable/disable it?

Something else you want me to add?




-- 
Juanjo Conti
Mi primer novela ya se puede conseguir en:
http://www.juanjoconti.com.ar/xolopes
<issue_comment>username_1: yeah, add a config option for this.
<issue_comment>username_3: @username_0 so, you could have a flag for this (ENABLE_AUTHOR_PAGES ?) and if there's a single author disable it anyway (with a warning maybe)
<issue_comment>username_2: On the sections branch I just don’t generate the tasks if there is no more than one section. (Rationale being that it would just be a exact duplicate of the main index.) You could just don’t generate the author pages if there is no more than one author.
<issue_comment>username_3: @username_2 you still need the flag for things like templates to be sane (pardon the pseudocode):

```
if doing_authors_pages:
   make author name be a link to it
else:
  just the author name
```
<issue_comment>username_3: I say let's merge this and @username_2 's PR and let's fix any broken bits later. They are major features, they are awesome, and they are well done.
<issue_comment>username_2: @username_0 do you wish to rebase on master and resolve the conflicts yourself? or should i?
<issue_comment>username_0: I'll do it tonight when adding a final change. Thanks.
<issue_comment>username_0: I'm done. This can be merged (do I do it? am I getting commit access or something like that?).

**NOTE:** author*tmpl files are missing for base-jinja theme. I can add them after this is merged.
<issue_comment>username_1: 1. I’ll merge it. If you want commit rights, just ask.
2. It can be generated with `scripts/jinjify.py`. I’ll handle that.

Thanks for your contribution!
<issue_comment>username_0: You're welcome. Thanks for the software. I'll continue using it so I'll probably be doing more contributions.

Do we need to update CHANGELOG? Something in doc/? AUTHORS.txt?
<issue_comment>username_1: 1. So, do you want commit rights or not?
2. CHANGES.txt, AUTHORS.txt and docs/manual.txt could use an update. Will you do it?
<issue_comment>username_0: Ok! I'll do it! :D I wasn't sure because of what Uncle Ben said[1] but, let's do it!

[1]Uncle Ben: Remember, with great power. comes great responsibility.
<issue_comment>username_0: Done."
microsoft/TypeScript-Website,615261470,565,,"[{'action': 'opened', 'author': 'DanielRosenwasser', 'comment_id': None, 'datetime': '2020-05-09 21:15:32+00:00', 'masked_author': 'username_0', 'text': 'I\'ve been consistently asked ""why don\'t the code samples look like a real editor?"" and this is something I kind of agree with, especially since we\'ve put so much work into highlighting the docs.\r\n\r\n![image](https://user-images.githubusercontent.com/972891/81485033-2c0da080-91ff-11ea-99fd-5ad9a250a919.png)\r\n\r\nI know the intent was to try to hint at what the differences are between JS and TS code (which is why the type declarations/annotations are colored differently) but I\'m not sure if that\'s getting in the way seeing how TypeScript is concretely used. In fact, if you look at languages like Kotlin, Swift, and Scala, their landing pages all use either samples or images that are reminiscent of dark themed editors.\r\n\r\n![image](https://user-images.githubusercontent.com/972891/81485045-4182ca80-91ff-11ea-8b32-3dc242ee6eec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/972891/81485051-52334080-91ff-11ea-8040-bb87cd45e6aa.png)\r\n\r\n![image](https://user-images.githubusercontent.com/972891/81485060-637c4d00-91ff-11ea-817a-00ebfea06e20.png)\r\n\r\nI think a subtle nod to VS Code on our site might not be too out of the question.\r\n\r\nIf we still want to call out the differences between TS and JS, one thing I could imagine is an actual highlighting/overlay/burnout on the interesting portions of the code. It\'s a little subtle in the following image, but not much more subtle than the current landing page snippets.\r\n\r\n![image](https://user-images.githubusercontent.com/972891/81484906-45fab380-91fe-11ea-9812-016981dbd09a.png)', 'title': 'Consider making landing page examples feel closer to a real editor', 'type': 'issue'}
 {'action': 'created', 'author': 'orta', 'comment_id': 626742366.0, 'datetime': '2020-05-11 14:35:47+00:00', 'masked_author': 'username_1', 'text': 'I think if we switch to a more representational version of the editor then we\'d probably have to drop the before/after metaphor and likely the \'these are the tokens added to JS\' that it currently does. come up with something else completely - last time I tried this I couldn\'t get it fitting in the visual space on mobile.\r\n\r\nSome rough ideas: \r\n\r\n### Keep some abstraction, but lean harder into VSCode-like\r\n\r\n![Screen Shot 2020-05-11 at 10 17 11 AM](https://user-images.githubusercontent.com/49038/81571938-97c34b00-9370-11ea-9947-cd17e6ef2d6d.png)\r\n\r\n- ditches the 2nd editor and uses that space to show \'filenames\' as titles of sections\r\n- re-use the errors panel to show the info \r\n- I\'d probably have to find a new way to indicate \'next\'\r\n\r\n[(filled varient)](https://user-images.githubusercontent.com/49038/81572187-e670e500-9370-11ea-9e88-9987db565d18.png which looks closer to vscode)\r\n\r\n### Go all in on VS Code\r\n\r\n![Screen Shot 2020-05-11 at 10 17 36 AM](https://user-images.githubusercontent.com/49038/81571984-a7429400-9370-11ea-9a4d-164dc8d58b50.png)\r\n\r\n- Switches to use interactive images with vscode as the code editor\r\n- re-use the file explorer to highlight different examples\r\n- [can add highlights to indicate things we want people to look at](https://user-images.githubusercontent.com/49038/81573265-3bf9c180-9372-11ea-9b17-e6c261a7b5c1.png)\r\n- [could instead be a full bleed highlight](https://user-images.githubusercontent.com/49038/81573430-7c593f80-9372-11ea-86c2-54ed3239f8b3.png)\r\n\r\nObviously these aren\'t the only ways it could go but that\'s keeping the existing above the fold metaphors of:\r\n\r\n- TS is JS with Types (so you might already know it)\r\n- JS Tooling is powered by TS\r\n- TS helps you scale codebases by giving errors where they didn\'t exist \r\n\r\nFor example the Kotlin above the fold looks like: \r\n\r\n - Kotlin is a modern OSS language\r\n - Kotlin can can be used for X\r\n - What has changed in Kotlin\r\n\r\nWe could switch out one/some of the current messages with ""TypeScript helps you do X at scale"" and X could be ""electron apps"", ""massive websites"" - there\'s a lot of potentials', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'DanielRosenwasser', 'comment_id': 627017829.0, 'datetime': '2020-05-11 23:24:24+00:00', 'masked_author': 'username_0', 'text': ""I like this idea now that it's been explained to me, but my first guess was that each of the un-selected files were some helper library code that I shouldn't be paying attention to. Maybe that's from the name `react-prop-types` which could maybe be named something else. Maybe an alternative is to use the tab list to give a stronger sense of left <-> right order."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'orta', 'comment_id': 632649761.0, 'datetime': '2020-05-22 11:43:53+00:00', 'masked_author': 'username_1', 'text': 'We paired on this yesterday: \r\n![Screen Shot 2020-05-22 at 7 43 25 AM](https://user-images.githubusercontent.com/49038/82664576-f9e93f00-9bff-11ea-9f86-0148fe726067.png)', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'orta', 'comment_id': None, 'datetime': '2020-06-18 17:18:46+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Consider making landing page examples feel closer to a real editor
username_0: I've been consistently asked ""why don't the code samples look like a real editor?"" and this is something I kind of agree with, especially since we've put so much work into highlighting the docs.

![image](https://user-images.githubusercontent.com/972891/81485033-2c0da080-91ff-11ea-99fd-5ad9a250a919.png)

I know the intent was to try to hint at what the differences are between JS and TS code (which is why the type declarations/annotations are colored differently) but I'm not sure if that's getting in the way seeing how TypeScript is concretely used. In fact, if you look at languages like Kotlin, Swift, and Scala, their landing pages all use either samples or images that are reminiscent of dark themed editors.

![image](https://user-images.githubusercontent.com/972891/81485045-4182ca80-91ff-11ea-8b32-3dc242ee6eec.png)

![image](https://user-images.githubusercontent.com/972891/81485051-52334080-91ff-11ea-8040-bb87cd45e6aa.png)

![image](https://user-images.githubusercontent.com/972891/81485060-637c4d00-91ff-11ea-817a-00ebfea06e20.png)

I think a subtle nod to VS Code on our site might not be too out of the question.

If we still want to call out the differences between TS and JS, one thing I could imagine is an actual highlighting/overlay/burnout on the interesting portions of the code. It's a little subtle in the following image, but not much more subtle than the current landing page snippets.

![image](https://user-images.githubusercontent.com/972891/81484906-45fab380-91fe-11ea-9812-016981dbd09a.png)
<issue_comment>username_1: I think if we switch to a more representational version of the editor then we'd probably have to drop the before/after metaphor and likely the 'these are the tokens added to JS' that it currently does. come up with something else completely - last time I tried this I couldn't get it fitting in the visual space on mobile.

Some rough ideas: 

### Keep some abstraction, but lean harder into VSCode-like

![Screen Shot 2020-05-11 at 10 17 11 AM](https://user-images.githubusercontent.com/49038/81571938-97c34b00-9370-11ea-9947-cd17e6ef2d6d.png)

- ditches the 2nd editor and uses that space to show 'filenames' as titles of sections
- re-use the errors panel to show the info 
- I'd probably have to find a new way to indicate 'next'

[(filled varient)](https://user-images.githubusercontent.com/49038/81572187-e670e500-9370-11ea-9e88-9987db565d18.png which looks closer to vscode)

### Go all in on VS Code

![Screen Shot 2020-05-11 at 10 17 36 AM](https://user-images.githubusercontent.com/49038/81571984-a7429400-9370-11ea-9a4d-164dc8d58b50.png)

- Switches to use interactive images with vscode as the code editor
- re-use the file explorer to highlight different examples
- [can add highlights to indicate things we want people to look at](https://user-images.githubusercontent.com/49038/81573265-3bf9c180-9372-11ea-9b17-e6c261a7b5c1.png)
- [could instead be a full bleed highlight](https://user-images.githubusercontent.com/49038/81573430-7c593f80-9372-11ea-86c2-54ed3239f8b3.png)

Obviously these aren't the only ways it could go but that's keeping the existing above the fold metaphors of:

- TS is JS with Types (so you might already know it)
- JS Tooling is powered by TS
- TS helps you scale codebases by giving errors where they didn't exist 

For example the Kotlin above the fold looks like: 

 - Kotlin is a modern OSS language
 - Kotlin can can be used for X
 - What has changed in Kotlin

We could switch out one/some of the current messages with ""TypeScript helps you do X at scale"" and X could be ""electron apps"", ""massive websites"" - there's a lot of potentials
<issue_comment>username_0: I like this idea now that it's been explained to me, but my first guess was that each of the un-selected files were some helper library code that I shouldn't be paying attention to. Maybe that's from the name `react-prop-types` which could maybe be named something else. Maybe an alternative is to use the tab list to give a stronger sense of left <-> right order.
<issue_comment>username_1: We paired on this yesterday: 
![Screen Shot 2020-05-22 at 7 43 25 AM](https://user-images.githubusercontent.com/49038/82664576-f9e93f00-9bff-11ea-9f86-0148fe726067.png)<issue_closed>"
pidcodes/pidcodes.github.com,325786862,334,"{'number': 334.0, 'repo': 'pidcodes.github.com', 'user_login': 'pidcodes'}","[{'action': 'opened', 'author': 'yanfali', 'comment_id': None, 'datetime': '2018-05-23T16:38:49Z', 'masked_author': 'username_0', 'text': ""Requesting a PID (B195) for the Big Switch PCB, powered by a pro micro and QMK\r\nfirmware. I contributed the firmware port and Don of the board u/flehrad\r\ncreated the PCB and open sourced it's design."", 'title': 'Big Switch PCB by flehrad', 'type': 'issue'}
 {'action': 'created', 'author': 'yanfali', 'comment_id': 395771308.0, 'datetime': '2018-06-08 14:05:22+00:00', 'masked_author': 'username_0', 'text': 'Thank you!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Big Switch PCB by flehrad
username_0: Requesting a PID (B195) for the Big Switch PCB, powered by a pro micro and QMK
firmware. I contributed the firmware port and Don of the board u/flehrad
created the PCB and open sourced it's design.
<issue_comment>username_0: Thank you!"
gohugoio/hugo,176618106,2443,"{'number': 2443.0, 'repo': 'hugo', 'user_login': 'gohugoio'}","[{'action': 'opened', 'author': 'dholbach', 'comment_id': None, 'datetime': '2016-09-13T11:41:15Z', 'masked_author': 'username_0', 'text': ""In the last days I created a snap of `hugo` and this PR contains the `snapcraft.yaml` that's required to build it. I tested it to some degree, but to make sure it's working well enough to be published and distributed to users I need your help.\n\nI'd love to hear if you are generally interested in your software being available as a snap and if you could imagine shipping the `snapcraft.yaml` file in your source repository for easier publishing.\n### Background info\n\nIf you haven't heard of snaps yet, they are self-contained apps, which can be used on a [multitude of Linux systems](https://snapcraft.io). Via `seccomp`, `apparmor` and other Linux security features, they provide great security for users, uploads to the store are available within seconds and you have\nfull control over your relevant stack.\n\nSnaps can be installed by millions of users: Ubuntu 16.04 LTS and later have `snapd` installed by default and many other Linux distributions, like Arch, Debian, Gentoo, Fedora, openSUSE, OpenEmbedded, Yocto and OpenWRT made `snapd` (which powers the snap experience) available as well.\n### Publishing\n\nUploading to the store can be done via the command line and there are multiple release channels available, so users can choose between for example stable, beta and alpha releases. You could even hook up `snapcraft upload` with Travis to auto-publish release tags or nightly builds. The process for this is very simple:\n- Once:\n  - Register an account at http://myapps.developer.ubuntu.com/\n  - Run `snapcraft login`\n  - Run `snapcraft register hugo`\n- `snapcraft push hugo_<version>.snap --release=beta`"", 'title': 'add snapcraft.yaml file', 'type': 'issue'}]","<issue_start><issue_comment>Title: add snapcraft.yaml file
username_0: In the last days I created a snap of `hugo` and this PR contains the `snapcraft.yaml` that's required to build it. I tested it to some degree, but to make sure it's working well enough to be published and distributed to users I need your help.

I'd love to hear if you are generally interested in your software being available as a snap and if you could imagine shipping the `snapcraft.yaml` file in your source repository for easier publishing.
### Background info

If you haven't heard of snaps yet, they are self-contained apps, which can be used on a [multitude of Linux systems](https://snapcraft.io). Via `seccomp`, `apparmor` and other Linux security features, they provide great security for users, uploads to the store are available within seconds and you have
full control over your relevant stack.

Snaps can be installed by millions of users: Ubuntu 16.04 LTS and later have `snapd` installed by default and many other Linux distributions, like Arch, Debian, Gentoo, Fedora, openSUSE, OpenEmbedded, Yocto and OpenWRT made `snapd` (which powers the snap experience) available as well.
### Publishing

Uploading to the store can be done via the command line and there are multiple release channels available, so users can choose between for example stable, beta and alpha releases. You could even hook up `snapcraft upload` with Travis to auto-publish release tags or nightly builds. The process for this is very simple:
- Once:
  - Register an account at http://myapps.developer.ubuntu.com/
  - Run `snapcraft login`
  - Run `snapcraft register hugo`
- `snapcraft push hugo_<version>.snap --release=beta`"
clearlydefined/website,414046830,489,"{'number': 489.0, 'repo': 'website', 'user_login': 'clearlydefined'}","[{'action': 'opened', 'author': 'storrisi', 'comment_id': None, 'datetime': '2019-02-25T10:56:37Z', 'masked_author': 'username_0', 'text': ""According on what discussed on #469 , we've used another library to render the FileList.\r\nThis implementation switches from the old `react-table` to the Table element available in `ant-design`\r\n\r\nFixes #469 , #343"", 'title': 'FileList implementation with ant-design', 'type': 'issue'}
 {'action': 'created', 'author': 'jeffmcaffer', 'comment_id': 467053812.0, 'datetime': '2019-02-25 15:27:07+00:00', 'masked_author': 'username_1', 'text': 'Have not looked at the code but the UX looks pretty good! How styleable is it? For example, would like to \r\n* remove the line between files\r\n* make each row shorter (smaller height)\r\n* change the amount of indentation on the tree part (need to deal with long paths in Java)\r\n\r\nHow do you feel about the code?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 467055680.0, 'datetime': '2019-02-25 15:31:50+00:00', 'masked_author': 'username_0', 'text': ""The library has a lot of props, so i think we'll be able to apply most of the customizations.\r\n\r\nOtherwise, we could use a classic style approach where a specific props doesn't exists.\r\n\r\nSee https://ant.design/components/table/#API"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 467057343.0, 'datetime': '2019-02-25 15:35:53+00:00', 'masked_author': 'username_0', 'text': ""A lot less complicated than `react-table`.\r\nMany of the functionalities that we've implemented in a custom way on `react-table` , here are ready out of the box.\r\nThis seems very powerful and easy to use."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 467184298.0, 'datetime': '2019-02-25 21:10:14+00:00', 'masked_author': 'username_0', 'text': ""I've fixed the filter methods, this is now ready to be reviewed."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'storrisi', 'comment_id': 467191905.0, 'datetime': '2019-02-25 21:32:39+00:00', 'masked_author': 'username_0', 'text': ""Don't know why E2E are failing. I haven't made any change on them since my last commit."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: FileList implementation with ant-design
username_0: According on what discussed on #469 , we've used another library to render the FileList.
This implementation switches from the old `react-table` to the Table element available in `ant-design`

Fixes #469 , #343
<issue_comment>username_1: Have not looked at the code but the UX looks pretty good! How styleable is it? For example, would like to 
* remove the line between files
* make each row shorter (smaller height)
* change the amount of indentation on the tree part (need to deal with long paths in Java)

How do you feel about the code?
<issue_comment>username_0: The library has a lot of props, so i think we'll be able to apply most of the customizations.

Otherwise, we could use a classic style approach where a specific props doesn't exists.

See https://ant.design/components/table/#API
<issue_comment>username_0: A lot less complicated than `react-table`.
Many of the functionalities that we've implemented in a custom way on `react-table` , here are ready out of the box.
This seems very powerful and easy to use.
<issue_comment>username_0: I've fixed the filter methods, this is now ready to be reviewed.
<issue_comment>username_0: Don't know why E2E are failing. I haven't made any change on them since my last commit."
