corona-warn-app/cwa-website,974412643,1644,,"[{'action': 'opened', 'author': 'larswmh', 'comment_id': None, 'datetime': '2021-08-19 08:32:18+00:00', 'masked_author': 'username_0', 'text': ""<!--\r\nThanks for requesting a feature üôå ‚ù§Ô∏è\r\n\r\nBefore opening a new issue, please make sure that we do not have any duplicates already open. You can ensure this by searching the issue list for this repository. If there is a duplicate, please close your issue and add a comment to the existing issue instead.\r\n-->\r\n\r\n## Feature description\r\n\r\nAdd many terms that could potentially need further explanation to the glossary. \r\n\r\n## Problem and motivation\r\n\r\nLack of content in glossary.\r\n\r\n## Is this something you're interested in working on\r\n\r\nYes. I will also keep this list up-to-date and adjust it with community suggestions.\r\n\r\n## Current glossary entries (German | English)\r\n\r\nBusiness rules | Business Rules\r\nDCC\r\nDigitales Zertifikat | Digital Certificate\r\nDigitale Signatur | Digital Signature\r\nEU DCC\r\nGenesenenzertifikat | Recovery Certificate\r\nG√ºltigkeit eines EU digitalen COVID-Zertifikats | Validity of an EU digital COVID certificate\r\nImpfnachweis | Proof of vaccination\r\nImpfzertifikat | Vaccination certificate\r\nPr√ºf-App / Pr√ºfen eines Zertifikats / Verifizieren eines Zertifikats | Verifier-App / Checking a certificate / Verifying a certificate\r\nSignatur (Signierung eines Zertifikats) | Signature\r\nTestzertifikat | Test Certificate\r\nZertifikat | Certificate\r\n\r\n## New glossary entry ideas (German | English)\r\n\r\nAnaloger Impfausweis | Paper-based vaccination certificate\r\nAndroid\r\nAntigen-Schnelltest | Rapid Antigen Test\r\nAPI\r\nBackend\r\nBackup\r\nBarcode\r\nBetriebssystem | Operating system\r\nBlog\r\nBluetooth-Low-Energy-Technologie (BLE) | Bluetooth-Low-Energy-Technology (BLE)\r\nBundesministerium f√ºr Gesundheit (BMG) | Federal Ministry of Health (BMG)\r\nCheck-in\r\nCheck-out\r\nCode\r\nCode of Conduct\r\nCommunity\r\nContent Delivery Network (CDN)\r\nCorona-Warn-App (CWA)\r\nCOVID-19\r\nCovPass-App\r\nDatenspende | Data donation\r\nDeutsche Telekom\r\nDezentralit√§t | Decentralization\r\nDiagnoseschl√ºssel | Diagnosis Key\r\nDigitaler Impfnachweis | Digital vaccination certificate\r\nDNS\r\nDomains\r\nEnde-zu-Ende Verschl√ºsselung | End-to-end encryption\r\nEntschl√ºsselung | Decryption\r\nEmulator\r\nEuropean Federation Gateway Service (EFGS)\r\nEvent-Registrierung | Event registration\r\nExposition | Exposure\r\nExposure Notification Express (ENE)\r\nExposure Notification Framework (ENF)\r\nFachliche G√ºltigkeit | Effective validity\r\nFehleranalyse | Error analysis\r\nFehlerberichte | Error report\r\nFehlermeldung | Error message\r\nFirewall\r\nGelbes Heft | Yellow booklet\r\nGitHub\r\nHardware\r\nHotline\r\n[Truncated]\nRisikoberechnung | Risk calculation\r\nRisikostatus | Risk status\r\nRolling Proximity Identifier (RPI)\r\nRobert Koch Institut (RKI)\r\nSAP\r\nSARS-CoV-2\r\nScan\r\nSchnelltest | Rapid test\r\nSchnelltest-Profil | Rapid test profile\r\nScience-Blog\r\nSelbsttest | Self-test\r\nServer\r\nSoftware\r\nTAN\r\nTechnische G√ºltigkeit | Technical validity\r\nTemporary Exposure Keys\r\nVerschl√ºsselung | Encryption\r\nVier-Augen-Prinzip | Dual control principle\r\n\r\n##"", 'title': 'Add new entries to the glossary', 'type': 'issue'}]","<issue_start><issue_comment>Title: Add new entries to the glossary
username_0: <!--
Thanks for requesting a feature üôå ‚ù§Ô∏è

Before opening a new issue, please make sure that we do not have any duplicates already open. You can ensure this by searching the issue list for this repository. If there is a duplicate, please close your issue and add a comment to the existing issue instead.
-->

## Feature description

Add many terms that could potentially need further explanation to the glossary. 

## Problem and motivation

Lack of content in glossary.

## Is this something you're interested in working on

Yes. I will also keep this list up-to-date and adjust it with community suggestions.

## Current glossary entries (German | English)

Business rules | Business Rules
DCC
Digitales Zertifikat | Digital Certificate
Digitale Signatur | Digital Signature
EU DCC
Genesenenzertifikat | Recovery Certificate
G√ºltigkeit eines EU digitalen COVID-Zertifikats | Validity of an EU digital COVID certificate
Impfnachweis | Proof of vaccination
Impfzertifikat | Vaccination certificate
Pr√ºf-App / Pr√ºfen eines Zertifikats / Verifizieren eines Zertifikats | Verifier-App / Checking a certificate / Verifying a certificate
Signatur (Signierung eines Zertifikats) | Signature
Testzertifikat | Test Certificate
Zertifikat | Certificate

## New glossary entry ideas (German | English)

Analoger Impfausweis | Paper-based vaccination certificate
Android
Antigen-Schnelltest | Rapid Antigen Test
API
Backend
Backup
Barcode
Betriebssystem | Operating system
Blog
Bluetooth-Low-Energy-Technologie (BLE) | Bluetooth-Low-Energy-Technology (BLE)
Bundesministerium f√ºr Gesundheit (BMG) | Federal Ministry of Health (BMG)
Check-in
Check-out
Code
Code of Conduct
Community
Content Delivery Network (CDN)
Corona-Warn-App (CWA)
COVID-19
CovPass-App
Datenspende | Data donation
Deutsche Telekom
Dezentralit√§t | Decentralization
Diagnoseschl√ºssel | Diagnosis Key
Digitaler Impfnachweis | Digital vaccination certificate
DNS
Domains
Ende-zu-Ende Verschl√ºsselung | End-to-end encryption
Entschl√ºsselung | Decryption
Emulator
European Federation Gateway Service (EFGS)
Event-Registrierung | Event registration
Exposition | Exposure
Exposure Notification Express (ENE)
Exposure Notification Framework (ENF)
Fachliche G√ºltigkeit | Effective validity
Fehleranalyse | Error analysis
Fehlerberichte | Error report
Fehlermeldung | Error message
Firewall
Gelbes Heft | Yellow booklet
GitHub
Hardware
Hotline
[Truncated]
Risikoberechnung | Risk calculation
Risikostatus | Risk status
Rolling Proximity Identifier (RPI)
Robert Koch Institut (RKI)
SAP
SARS-CoV-2
Scan
Schnelltest | Rapid test
Schnelltest-Profil | Rapid test profile
Science-Blog
Selbsttest | Self-test
Server
Software
TAN
Technische G√ºltigkeit | Technical validity
Temporary Exposure Keys
Verschl√ºsselung | Encryption
Vier-Augen-Prinzip | Dual control principle

##"
kubernetes/website,949906686,29060,"{'number': 29060.0, 'repo': 'website', 'user_login': 'kubernetes'}","[{'action': 'opened', 'author': 'ehashman', 'comment_id': None, 'datetime': '2021-07-21T16:41:18Z', 'masked_author': 'username_0', 'text': ""<!-- üõà\r\n\r\n Hello!\r\n\r\n Remember to ADD A DESCRIPTION and delete this note before submitting\r\n your pull request. The description should explain what will change,\r\n and why.\r\n\r\n PLEASE title the FIRST commit appropriately, so that if you squash all\r\n your commits into one, the combined commit message makes sense.\r\n For overall help on editing and submitting pull requests, visit:\r\n  https://kubernetes.io/docs/contribute/start/#improve-existing-content\r\n\r\n Use the default base branch, ‚Äúmain‚Äù, if you're documenting existing\r\n features in the English localization.\r\n\r\n If you're working on a different localization (not English), see\r\n https://kubernetes.io/docs/contribute/new-content/overview/#choose-which-git-branch-to-use\r\n for advice.\r\n\r\n If you're documenting a feature that will be part of a future release, see\r\n https://kubernetes.io/docs/contribute/new-content/new-features/ for advice.\r\n\r\n-->\r\n\r\nFollow-up to https://github.com/kubernetes/website/pull/29016 but with an actual post filled in and ready for review :)"", 'title': '1.22 feature blog for alpha swap support', 'type': 'issue'}
 {'action': 'created', 'author': 'ehashman', 'comment_id': 884399648.0, 'datetime': '2021-07-21 18:26:44+00:00', 'masked_author': 'username_0', 'text': 'Addressed comments, thanks @username_1 !', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 888497560.0, 'datetime': '2021-07-28 17:43:50+00:00', 'masked_author': 'username_1', 'text': ""Once the publication date is set to something post-release (2021-08-18 is the one we've picked), it's OK to unhold this."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ehashman', 'comment_id': 889326342.0, 'datetime': '2021-07-29 17:24:37+00:00', 'masked_author': 'username_0', 'text': 'Moved to 08/18, PTAL.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'chrisnegus', 'comment_id': 891005251.0, 'datetime': '2021-08-02 13:00:38+00:00', 'masked_author': 'username_2', 'text': 'There are kubeadm procedures in the docs (for install and upgrade) that explicitly say that swap must be disabled. Would it be appropriate for us to add notes describing this alpha feature in those places for people who want to turn on swap?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 891091526.0, 'datetime': '2021-08-02 14:53:06+00:00', 'masked_author': 'username_1', 'text': ""Maybe, but this blog article doesn't have to be where we cover that. Instead, I'd imagine separate PRs that signpost readers from the kubeadm pages where swap is mentioned, to a new task page about ‚ÄúDeploy a Linux node with swap enabled‚Äù or similar. We would definitely want those pages before this graduates to beta."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ehashman', 'comment_id': 892026647.0, 'datetime': '2021-08-03 17:25:51+00:00', 'masked_author': 'username_0', 'text': '/hold cancel\r\nas release date has been updated, please review', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 893813415.0, 'datetime': '2021-08-05 21:13:22+00:00', 'masked_author': 'username_1', 'text': '@kubernetes/sig-node-pr-reviews - how is this looking in terms of technical accuracy?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 893813495.0, 'datetime': '2021-08-05 21:13:31+00:00', 'masked_author': 'username_1', 'text': '/retest', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'rphillips', 'comment_id': 894459488.0, 'datetime': '2021-08-06 19:02:10+00:00', 'masked_author': 'username_3', 'text': 'This looks great! +1 to publish!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jlbutler', 'comment_id': 895353888.0, 'datetime': '2021-08-09 16:13:35+00:00', 'masked_author': 'username_4', 'text': 'This one is complete, reviewed and ready to publish. With an ok from @username_1 and @username_0, I support publishing this today.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ehashman', 'comment_id': 895371290.0, 'datetime': '2021-08-09 16:38:10+00:00', 'masked_author': 'username_0', 'text': '@username_4 do you want me to update the date again?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 895371904.0, 'datetime': '2021-08-09 16:39:12+00:00', 'masked_author': 'username_1', 'text': '@username_0 I can use my admin powers to push that commit, but feel free to do that yourself.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'sftim', 'comment_id': 895372207.0, 'datetime': '2021-08-09 16:39:41+00:00', 'masked_author': 'username_1', 'text': '(also, nice-to-have, update the date in the PR description too)', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ehashman', 'comment_id': 895412343.0, 'datetime': '2021-08-09 17:40:57+00:00', 'masked_author': 'username_0', 'text': 'Thank you!', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: 1.22 feature blog for alpha swap support
username_0: <!-- üõà

 Hello!

 Remember to ADD A DESCRIPTION and delete this note before submitting
 your pull request. The description should explain what will change,
 and why.

 PLEASE title the FIRST commit appropriately, so that if you squash all
 your commits into one, the combined commit message makes sense.
 For overall help on editing and submitting pull requests, visit:
  https://kubernetes.io/docs/contribute/start/#improve-existing-content

 Use the default base branch, ‚Äúmain‚Äù, if you're documenting existing
 features in the English localization.

 If you're working on a different localization (not English), see
 https://kubernetes.io/docs/contribute/new-content/overview/#choose-which-git-branch-to-use
 for advice.

 If you're documenting a feature that will be part of a future release, see
 https://kubernetes.io/docs/contribute/new-content/new-features/ for advice.

-->

Follow-up to https://github.com/kubernetes/website/pull/29016 but with an actual post filled in and ready for review :)
<issue_comment>username_0: Addressed comments, thanks @username_1 !
<issue_comment>username_1: Once the publication date is set to something post-release (2021-08-18 is the one we've picked), it's OK to unhold this.
<issue_comment>username_0: Moved to 08/18, PTAL.
<issue_comment>username_2: There are kubeadm procedures in the docs (for install and upgrade) that explicitly say that swap must be disabled. Would it be appropriate for us to add notes describing this alpha feature in those places for people who want to turn on swap?
<issue_comment>username_1: Maybe, but this blog article doesn't have to be where we cover that. Instead, I'd imagine separate PRs that signpost readers from the kubeadm pages where swap is mentioned, to a new task page about ‚ÄúDeploy a Linux node with swap enabled‚Äù or similar. We would definitely want those pages before this graduates to beta.
<issue_comment>username_0: /hold cancel
as release date has been updated, please review
<issue_comment>username_1: @kubernetes/sig-node-pr-reviews - how is this looking in terms of technical accuracy?
<issue_comment>username_1: /retest
<issue_comment>username_3: This looks great! +1 to publish!
<issue_comment>username_4: This one is complete, reviewed and ready to publish. With an ok from @username_1 and @username_0, I support publishing this today.
<issue_comment>username_0: @username_4 do you want me to update the date again?
<issue_comment>username_1: @username_0 I can use my admin powers to push that commit, but feel free to do that yourself.
<issue_comment>username_1: (also, nice-to-have, update the date in the PR description too)
<issue_comment>username_0: Thank you!"
jaspervdj/hakyll,451056472,710,,"[{'action': 'opened', 'author': 'adithyaov', 'comment_id': None, 'datetime': '2019-06-01 07:26:53+00:00', 'masked_author': 'username_0', 'text': ""Hi, I was thinking there should be a `module` called `ForeignCompilers`.\r\n\r\nThe compilers that Hakyll currently has are basic and one could probably use the power of foreign compilers to compile `sass`, `es6` (maybe even `react`), etc.\r\n\r\nI haven't thought of how this would work entirely but it seems possible and with some positive response, I could look into it.\r\n\r\nI am a bit skeptical about this as it seems like overkill. I wonder what the community thinks about it."", 'title': 'Foreign Compilers', 'type': 'issue'}
 {'action': 'created', 'author': 'Radvendii', 'comment_id': 498082189.0, 'datetime': '2019-06-03 01:07:09+00:00', 'masked_author': 'username_1', 'text': ""Check out https://hackage.haskell.org/package/hakyll-sass for sass compilation.\r\n\r\nI'm not sure exactly what you mean by foreign compilers, but you can use `unixFilter` and `unixFilterLBS` for most things. See for example, I made a compiler pandoc filter to embed TiKZ output in blog posts: https://taeer.bar-yam.me/blog/posts/hakyll-tikz/.\r\n\r\nIs there anything you were looking for that is outside of that scope? Were you just looking for a place to collect community made compilers?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'adithyaov', 'comment_id': 498116217.0, 'datetime': '2019-06-03 05:19:42+00:00', 'masked_author': 'username_0', 'text': '@username_1 By Foreign Compilers, I mean using compilers from other languages. For example, Node JS has many beautiful compilers (for ES6, babel, etc). The idea is to use compilers from other languages with Hakyll. The signature for such functions will be something like `String -> IO String`.\r\n\r\nThis could be achieved by running some system commands. This is definitely not safe and is **system dependent** (Can only run `python` commands if `python` is installed) but can be used with the user knows what they are doing.\r\n\r\nThe more I think about it, the more skeptical I get. Maybe this is not a proper place for such a discussion although it played really well in my mind. If you think this is a bit too much feel free to close this issue else we can continue discussing this!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'Radvendii', 'comment_id': 498307026.0, 'datetime': '2019-06-03 15:32:04+00:00', 'masked_author': 'username_1', 'text': '@username_0 Yeah, this is exactly what `unixFilter String -> [String] -> String -> Compiler String` does. Take a look at https://www.stackage.org/haddock/lts-12.26/hakyll-4.12.4.0/Hakyll-Core-UnixFilter.html.\r\n\r\nThe only restriction is that the external program has to act like a pipe. It gets in input, and gives out input on the command line, as opposed to generating a file with the output. For most purposes, you can easily create wrappers around programs which output to a tmp directory and then read the output file back to stdout.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'adithyaov', 'comment_id': None, 'datetime': '2019-06-03 17:08:05+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'adithyaov', 'comment_id': 498343459.0, 'datetime': '2019-06-03 17:08:05+00:00', 'masked_author': 'username_0', 'text': ""Oh, That's nice :-). Thank you!"", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Foreign Compilers
username_0: Hi, I was thinking there should be a `module` called `ForeignCompilers`.

The compilers that Hakyll currently has are basic and one could probably use the power of foreign compilers to compile `sass`, `es6` (maybe even `react`), etc.

I haven't thought of how this would work entirely but it seems possible and with some positive response, I could look into it.

I am a bit skeptical about this as it seems like overkill. I wonder what the community thinks about it.
<issue_comment>username_1: Check out https://hackage.haskell.org/package/hakyll-sass for sass compilation.

I'm not sure exactly what you mean by foreign compilers, but you can use `unixFilter` and `unixFilterLBS` for most things. See for example, I made a compiler pandoc filter to embed TiKZ output in blog posts: https://taeer.bar-yam.me/blog/posts/hakyll-tikz/.

Is there anything you were looking for that is outside of that scope? Were you just looking for a place to collect community made compilers?
<issue_comment>username_0: @username_1 By Foreign Compilers, I mean using compilers from other languages. For example, Node JS has many beautiful compilers (for ES6, babel, etc). The idea is to use compilers from other languages with Hakyll. The signature for such functions will be something like `String -> IO String`.

This could be achieved by running some system commands. This is definitely not safe and is **system dependent** (Can only run `python` commands if `python` is installed) but can be used with the user knows what they are doing.

The more I think about it, the more skeptical I get. Maybe this is not a proper place for such a discussion although it played really well in my mind. If you think this is a bit too much feel free to close this issue else we can continue discussing this!
<issue_comment>username_1: @username_0 Yeah, this is exactly what `unixFilter String -> [String] -> String -> Compiler String` does. Take a look at https://www.stackage.org/haddock/lts-12.26/hakyll-4.12.4.0/Hakyll-Core-UnixFilter.html.

The only restriction is that the external program has to act like a pipe. It gets in input, and gives out input on the command line, as opposed to generating a file with the output. For most purposes, you can easily create wrappers around programs which output to a tmp directory and then read the output file back to stdout.<issue_closed>
<issue_comment>username_0: Oh, That's nice :-). Thank you!"
