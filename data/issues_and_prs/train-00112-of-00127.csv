nodejs/nodejs.org,229502933,1230,,"[{'action': 'opened', 'author': 'serenam18', 'comment_id': None, 'datetime': '2017-05-17 22:16:04+00:00', 'masked_author': 'username_0', 'text': 'Hi, I’m Serena from the Node.js Foundation Marketing Team. The Marketing Committee, led by @ShubhraKar, has been working on some really exciting ideas to help promote Node.js and we are ready to detail a new section under the Foundation portion of the website.\r\n\r\nIn order to make it easier to highlight various ways people and businesses are using Node.js, we would like to add a few pages to the Foundation/Resources section. \r\n\r\nBelow is the workflow we’ve like to implement for capturing “Self-Serve Case Studies” as well as some ideas on how to best present them. These changes will help us capture new innovations with how Node.js is being utilized. \r\n\r\n\r\nThis request for discussion invites ideas and collaboration on the proposed workflow as well as developing the web pages and assets needed. The proposal is only for reference purposes and in not intended to serve as the final design.\r\n\r\nPrimary Landing Page: [https://nodejs.org/en/foundation/case-studies/](https://nodejs.org/en/foundation/case-studies/)\r\n\r\n  \r\n\r\n\r\n![image11](https://cloud.githubusercontent.com/assets/23459465/26177124/55f6c940-3b0d-11e7-9b76-3703f65c3c17.png)\r\n\r\nThe proposed changes to the case study section \xa0are the following: \r\n\r\n\r\n## Sample workflow and layouts\r\n\r\n\r\n1. Listings (Example) \r\n\r\n#### 1.1 Categories (Click to see relevant case studies & testimonials)\r\n![image8](https://cloud.githubusercontent.com/assets/23459465/26177202/a3005cec-3b0d-11e7-87b1-7aad7824c9bb.png)\r\n\r\n \r\n\r\n#### 1. 2 Logo Board under each category (Click to see relevant case studies & testimonials)\r\n\r\n<img width=""479"" alt=""screen shot 2017-05-17 at 2 39 05 pm"" src=""https://cloud.githubusercontent.com/assets/23459465/26177509/bc8f0c16-3b0e-11e7-8a2a-135fa04b72c0.png"">\r\n\r\n\r\n \xa0\xa0\xa0\xa0\xa0 \xa0\xa0\r\n\r\n\r\n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0\xa0\xa0\xa0\xa0\xa0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\r\n#### 1.3 CTA (Call to Action)\r\n\r\n<img width=""469"" alt=""screen shot 2017-05-17 at 2 51 13 pm"" src=""https://cloud.githubusercontent.com/assets/23459465/26177884/6d87a3d8-3b10-11e7-85e2-a7547ca9c0f7.png"">\r\n\r\n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0  \r\n\r\n\r\n\r\n### 2. Details of Individual Case Studies and Testimonials\r\n\r\n  \r\n\r\n#### Customer Success Story: \r\n\r\n#### BBOXX (Mock example)\r\n\r\n  \r\n  \r\n![image18](https://cloud.githubusercontent.com/assets/23459465/26178120/7c9c75f0-3b11-11e7-8901-aa41afcea8a1.png)\r\n\r\nSynopsis:\r\n\r\nBBOXX had an interesting problem to solve — how to become a data-driven company by continuously monitoring their geographically dispersed 85,000 solar rooftop units (IoT monitoring) providing insights into customer-usage patterns and anomaly detection. They turned to Node.js, because “it was easy, scalable, modularized, open — it just worked!”\r\n\r\n  \r\n\r\nThe Challenge:\r\n\r\nThe company grew on a fast trajectory; in just seven years it has 350 employees across five offices in China, UK, and East Africa, and has sold more than 85,000 BBOXX units running in more than 35 countries, providing 350,000 people with electricity. Becoming a data-driven business meant that their solution needed to have real-time data at its core which had another set of challenges. But, their outsourced system of apis were not scaling.\r\n  \r\nThe Result:\r\n\r\nThe initial goal of becoming a data-driven business is a reality, due to their use of Node.js. They are now able to develop microservices and are applying lessons learned from analyzing past data to develop new and exciting products that exceed customer expectations. Although gathering data was not a core part of their business plan, the insight it has created is a core asset to the business.\r\n  \r\nCompany Description:\r\n\r\nBBOXX (pronounced “Bee Box”) develops and manufactures products to provide affordable, clean solar energy to off-grid communities in the developing world. The name is short for “Battery Box.” Their systems comprise of a solar panel connected to a battery and a set of USB and DC connectors to power lights, radios, and low powered televisions. The unit also includes a set of electronics to allow BBOXX to control it remotely.\r\n\r\n### 3. Self Service Form\r\n\r\n  \r\n<img width=""375"" alt=""screen shot 2017-05-17 at 3 02 20 pm"" src=""https://cloud.githubusercontent.com/assets/23459465/26178205/e19b4936-3b11-11e7-815c-efbdfd072559.png"">\r\n[Truncated]\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n### 4. Design and Resources Considerations:\r\n\r\n  \r\n\r\n1. Database - Where will the form data be stored. Ideally we save to a db, which can be queried. \r\n2. Data Aggregation - Marketing Team will need to aggregate the use case submissions to segment them horizontally (technology solutions) or vertically (industries) \r\n3. Refine Messaging - Work with the person submitting the testimonial / use case to refine the messaging and make it crisp. This would be an email follow up done by marketing team \r\n4. Publishing and Promotion - Web dev working with marketing team will create web pages, upload logos, publish the use case summary and details in a repeatable and agreed upon format.', 'title': 'Self-Serve Case Studies and Testimonials ', 'type': 'issue'}
 {'action': 'created', 'author': 'hackygolucky', 'comment_id': 303202893.0, 'datetime': '2017-05-22 19:54:49+00:00', 'masked_author': 'username_1', 'text': ""@username_0 What's the deadline for input here? When would you be able to like to go back to the committee before more work happens here?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikeal', 'comment_id': 303203326.0, 'datetime': '2017-05-22 19:56:36+00:00', 'masked_author': 'username_2', 'text': ""Ideally, data storage would be simple, like in a Google Sheet posted from an embedded Google Form. That seems like the best way to ensure we can have proper access controls around it. \r\n\r\nAlso note that whatever we do has to conform to the foundation's privacy policy https://github.com/nodejs/nodejs.org/blob/51bfa346fcdb5cc1a3dce2cfbaa2a8465408db17/locale/en/about/privacy.md"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'serenam18', 'comment_id': 304747733.0, 'datetime': '2017-05-30 00:26:06+00:00', 'masked_author': 'username_0', 'text': 'Thanks @username_2!\r\n\r\n@username_1 looking to receive feedback by Thursday, 61.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'geek', 'comment_id': 305276827.0, 'datetime': '2017-05-31 18:31:31+00:00', 'masked_author': 'username_3', 'text': '', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'serenam18', 'comment_id': 307487350.0, 'datetime': '2017-06-09 20:07:44+00:00', 'masked_author': 'username_0', 'text': 'Does anyone have any other feedback? What is the best way to move forward? Thanks for your help!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'fayazg', 'comment_id': 317598523.0, 'datetime': '2017-07-25 01:07:45+00:00', 'masked_author': 'username_4', 'text': 'Using google forms will add the google branding.\r\nIs there a standard/template for adding (google) forms?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bnb', 'comment_id': 331264482.0, 'datetime': '2017-09-21 19:57:47+00:00', 'masked_author': 'username_5', 'text': ""With the new Foundation site in development, is it more appropriate to add this there? I think it'd probably be a better fit and would enable the Foundation team to get the data they needed faster. \r\n\r\nI just dug this issue up because of a comment by @dshaw on [Twitter](https://twitter.com/dshaw/status/910938318979850240) about how the Foundation membership form gets blocked by ad blockers - it seems like this form is within the same scope of a Foundation resource, and something that would be better managed on the Foundation end. \r\n\r\nThoughts?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'gtewallace', 'comment_id': 331284254.0, 'datetime': '2017-09-21 21:16:02+00:00', 'masked_author': 'username_6', 'text': '@username_5 yup, totally agree! thanks. I think we can close this issue.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bnb', 'comment_id': None, 'datetime': '2017-09-25 16:43:09+00:00', 'masked_author': 'username_5', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Self-Serve Case Studies and Testimonials 
username_0: Hi, I’m Serena from the Node.js Foundation Marketing Team. The Marketing Committee, led by @ShubhraKar, has been working on some really exciting ideas to help promote Node.js and we are ready to detail a new section under the Foundation portion of the website.

In order to make it easier to highlight various ways people and businesses are using Node.js, we would like to add a few pages to the Foundation/Resources section. 

Below is the workflow we’ve like to implement for capturing “Self-Serve Case Studies” as well as some ideas on how to best present them. These changes will help us capture new innovations with how Node.js is being utilized. 


This request for discussion invites ideas and collaboration on the proposed workflow as well as developing the web pages and assets needed. The proposal is only for reference purposes and in not intended to serve as the final design.

Primary Landing Page: [https://nodejs.org/en/foundation/case-studies/](https://nodejs.org/en/foundation/case-studies/)

  


![image11](https://cloud.githubusercontent.com/assets/23459465/26177124/55f6c940-3b0d-11e7-9b76-3703f65c3c17.png)

The proposed changes to the case study section  are the following: 


## Sample workflow and layouts


1. Listings (Example) 

#### 1.1 Categories (Click to see relevant case studies & testimonials)
![image8](https://cloud.githubusercontent.com/assets/23459465/26177202/a3005cec-3b0d-11e7-87b1-7aad7824c9bb.png)

 

#### 1. 2 Logo Board under each category (Click to see relevant case studies & testimonials)

<img width=""479"" alt=""screen shot 2017-05-17 at 2 39 05 pm"" src=""https://cloud.githubusercontent.com/assets/23459465/26177509/bc8f0c16-3b0e-11e7-8a2a-135fa04b72c0.png"">


         


                          
#### 1.3 CTA (Call to Action)

<img width=""469"" alt=""screen shot 2017-05-17 at 2 51 13 pm"" src=""https://cloud.githubusercontent.com/assets/23459465/26177884/6d87a3d8-3b10-11e7-85e2-a7547ca9c0f7.png"">

                                       



### 2. Details of Individual Case Studies and Testimonials

  

#### Customer Success Story: 

#### BBOXX (Mock example)

  
  
![image18](https://cloud.githubusercontent.com/assets/23459465/26178120/7c9c75f0-3b11-11e7-8901-aa41afcea8a1.png)

Synopsis:

BBOXX had an interesting problem to solve — how to become a data-driven company by continuously monitoring their geographically dispersed 85,000 solar rooftop units (IoT monitoring) providing insights into customer-usage patterns and anomaly detection. They turned to Node.js, because “it was easy, scalable, modularized, open — it just worked!”

  

The Challenge:

The company grew on a fast trajectory; in just seven years it has 350 employees across five offices in China, UK, and East Africa, and has sold more than 85,000 BBOXX units running in more than 35 countries, providing 350,000 people with electricity. Becoming a data-driven business meant that their solution needed to have real-time data at its core which had another set of challenges. But, their outsourced system of apis were not scaling.
  
The Result:

The initial goal of becoming a data-driven business is a reality, due to their use of Node.js. They are now able to develop microservices and are applying lessons learned from analyzing past data to develop new and exciting products that exceed customer expectations. Although gathering data was not a core part of their business plan, the insight it has created is a core asset to the business.
  
Company Description:

BBOXX (pronounced “Bee Box”) develops and manufactures products to provide affordable, clean solar energy to off-grid communities in the developing world. The name is short for “Battery Box.” Their systems comprise of a solar panel connected to a battery and a set of USB and DC connectors to power lights, radios, and low powered televisions. The unit also includes a set of electronics to allow BBOXX to control it remotely.

### 3. Self Service Form

  
<img width=""375"" alt=""screen shot 2017-05-17 at 3 02 20 pm"" src=""https://cloud.githubusercontent.com/assets/23459465/26178205/e19b4936-3b11-11e7-815c-efbdfd072559.png"">
[Truncated]

  
  
  
  
  
  
  
  
  
  

### 4. Design and Resources Considerations:

  

1. Database - Where will the form data be stored. Ideally we save to a db, which can be queried. 
2. Data Aggregation - Marketing Team will need to aggregate the use case submissions to segment them horizontally (technology solutions) or vertically (industries) 
3. Refine Messaging - Work with the person submitting the testimonial / use case to refine the messaging and make it crisp. This would be an email follow up done by marketing team 
4. Publishing and Promotion - Web dev working with marketing team will create web pages, upload logos, publish the use case summary and details in a repeatable and agreed upon format.
<issue_comment>username_1: @username_0 What's the deadline for input here? When would you be able to like to go back to the committee before more work happens here?
<issue_comment>username_2: Ideally, data storage would be simple, like in a Google Sheet posted from an embedded Google Form. That seems like the best way to ensure we can have proper access controls around it. 

Also note that whatever we do has to conform to the foundation's privacy policy https://github.com/nodejs/nodejs.org/blob/51bfa346fcdb5cc1a3dce2cfbaa2a8465408db17/locale/en/about/privacy.md
<issue_comment>username_0: Thanks @username_2!

@username_1 looking to receive feedback by Thursday, 61.
<issue_comment>username_0: Does anyone have any other feedback? What is the best way to move forward? Thanks for your help!
<issue_comment>username_4: Using google forms will add the google branding.
Is there a standard/template for adding (google) forms?
<issue_comment>username_5: With the new Foundation site in development, is it more appropriate to add this there? I think it'd probably be a better fit and would enable the Foundation team to get the data they needed faster. 

I just dug this issue up because of a comment by @dshaw on [Twitter](https://twitter.com/dshaw/status/910938318979850240) about how the Foundation membership form gets blocked by ad blockers - it seems like this form is within the same scope of a Foundation resource, and something that would be better managed on the Foundation end. 

Thoughts?
<issue_comment>username_6: @username_5 yup, totally agree! thanks. I think we can close this issue.<issue_closed>"
conda-forge/conda-forge.github.io,146134502,78,,"[{'action': 'opened', 'author': 'jakirkham', 'comment_id': None, 'datetime': '2016-04-05 23:12:25+00:00', 'masked_author': 'username_0', 'text': ""After having some issues yesterday during deployment (due to a package having a `.` in its name) and thinking back to the fact that this problem has occurred before for us while trying to explain this to a user that expected everything worked, I was thinking maybe we would benefit from having a status page. This way we could transparently communicate the status of different parts of our pipeline. Additionally, it would be nice if it could be combined with our automation to announce issues.\r\n\r\nGiven how much we :heart: repos here, one possibility that I noticed was a status page that used a repo ( https://github.com/pyupio/statuspage ). We already are quite familiar with the process of automating interactions with repos. Errors in feedstock generation could be filed as issues with one label. Errors in webpage deployment could go under another. Errors updating the feedstocks submodules could go under another label (thus solving this issue https://github.com/conda-forge/conda-forge.github.io/issues/70). As labels are required for an issue to show up in the status, we don't need to worry about users opening issues against this status repo and accidentally affecting the status. This would also do double duty as we could be notified as these problems occur letting us more quickly resolve them. Also, it would provide this information to our users without distracting us from trying to get out a quick fix. Once we resolve an issue, we can close it, which will update the status. Alternatively, we can automate the closing of issues too. This won't leave us dependent on yet another service to get the job done. It will just rely on GitHub.\r\n\r\nWe can certainly consider other ways to do this. Right now, I think this idea sounds like the easiest to get setup and will nicely integrate with our existing workflows."", 'title': 'Adding a status page', 'type': 'issue'}
 {'action': 'created', 'author': 'pelson', 'comment_id': 206224525.0, 'datetime': '2016-04-06 08:45:04+00:00', 'masked_author': 'username_1', 'text': ""Hehe. We don't love repos for the sake of loving repos - we love them because they were the right abstraction for conda recipes :smile: \r\n\r\nThat said, it is a pretty neat idea! One question though: what are the kinds of statuses we've seen recently, and would having the status page have improved the user experience? I'm reluctant to implement a status page if we are gradually refining away all of the issues anyway."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 216006752.0, 'datetime': '2016-05-01 01:23:08+00:00', 'masked_author': 'username_0', 'text': 'In some cases, I find we have these issues at various places (e.g. webpage repo, staged recipes, maybe even feedstocks, in the future the docker-images repo). By having a singular status page repo, we would actually be able to consolidate these issues instead of cross referencing across repos. Further it would avoid noise that occurs by having these operational issues intermingled with topic driven issues like the organizational ones we have here, package requests on staged recipes, etc.. It would also avoid having to ping each other and draw attention to each other all over the place. By having a singular place to raise these issues, we could also see existing issues related to this problem and discuss any strategy as needed. I can think of lots of nifty uses cases for this, but will stop there.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pelson', 'comment_id': 217554166.0, 'datetime': '2016-05-06 20:45:26+00:00', 'masked_author': 'username_1', 'text': 'Sold. What do we need to do to make it happen?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 217558692.0, 'datetime': '2016-05-06 21:07:21+00:00', 'masked_author': 'username_0', 'text': 'I think we need a repo, a new token (possibly admin?), and probably use another thread on Heroku.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pelson', 'comment_id': 217701619.0, 'datetime': '2016-05-08 07:38:25+00:00', 'masked_author': 'username_1', 'text': 'You have the power on all of these. My advice first though - get it going as you and then we can migrate it to an appropriate user (once we know the load on GH etc.).\r\n\r\nAre you happy to run with this?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 219168003.0, 'datetime': '2016-05-13 21:50:47+00:00', 'masked_author': 'username_0', 'text': 'cc-ing @ocefpaf so that this is on your radar at least as something we are planning to do.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 219168068.0, 'datetime': '2016-05-13 21:51:12+00:00', 'masked_author': 'username_0', 'text': 'Yes.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 221306641.0, 'datetime': '2016-05-24 15:23:10+00:00', 'masked_author': 'username_0', 'text': 'cc-ing @astrofrog so you can see what I have on mind for this status page. Also, if you have some feedback on this, please let me know.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 225458515.0, 'datetime': '2016-06-12 20:29:17+00:00', 'masked_author': 'username_0', 'text': 'I am creating this repo ( https://github.com/conda-forge/conda-forge-statuspage ) for this purpose.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 226656556.0, 'datetime': '2016-06-17 01:09:49+00:00', 'masked_author': 'username_0', 'text': 'Decided to renamed to ( https://github.com/conda-forge/status ). The main reason being that someone can visit ( https://conda-forge.github.io/status ) to get the status. Though happy to discuss this with others here.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 226656644.0, 'datetime': '2016-06-17 01:10:29+00:00', 'masked_author': 'username_0', 'text': 'Copying you guys here as you are watching the repo currently, @ocefpaf @janschulz.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 226679113.0, 'datetime': '2016-06-17 04:40:54+00:00', 'masked_author': 'username_0', 'text': 'Adding the dependencies in this PR ( https://github.com/conda-forge/staged-recipes/pull/775 ).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'pelson', 'comment_id': 228122838.0, 'datetime': '2016-06-23 17:30:45+00:00', 'masked_author': 'username_1', 'text': 'Are interested in moving this forward without the dependencies on conda-forge so that we could potentially parallelise progress?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228576531.0, 'datetime': '2016-06-25 23:58:14+00:00', 'masked_author': 'username_0', 'text': 'Well, the dependencies are ready to go at this point. They just need a review/merge. If there are formatting changes required, then I agree someone else could/should be welcomed to take them over. Alternatively, those sorts of changes could be saved for feedstocks depending on how people feel.\r\n\r\nThe main issue I have these days is really just having enough time. I say that while fully acknowledging having a status page will be a real time saver once it is up.\r\n\r\nThough I agree this is very important to get moving. Hence why it has gotten some more attention of late. 😉\r\n\r\nWill start playing with phase 2 soon.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228576742.0, 'datetime': '2016-06-26 00:04:51+00:00', 'masked_author': 'username_0', 'text': ""Should add that PyInstaller does something weird where it generates a bunch of files in a hidden directory `.waf-1.8.21-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX`. Not really sure whether this should be expected or whether it serves a purpose. If someone knows more, please feel free to share. Otherwise, I'm happy to save that for the feedstock as it doesn't seem to cause any issues."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228579491.0, 'datetime': '2016-06-26 01:42:32+00:00', 'masked_author': 'username_0', 'text': ""So, I have generated the status page. Though still needs more work before it is operational.\r\n\r\nAfter going through that process, I'm not sure that going with the PR deps as is will be the best move. This may take a bit more customization than that. I'll work on it a bit and see what I can come up with."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228603009.0, 'datetime': '2016-06-26 14:04:13+00:00', 'masked_author': 'username_0', 'text': 'Need to add a patch to out `pygithub` package to proceed. Here is the PR ( https://github.com/conda-forge/pygithub-feedstock/pull/9 ) for adding that patch. Details in that PR. A review/merge of that change would be greatly appreciated.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228610981.0, 'datetime': '2016-06-26 17:00:38+00:00', 'masked_author': 'username_0', 'text': 'Also, we need to make the certificates easier to discover. I found setting some environment variables will do the trick. Please see this PR ( https://github.com/conda-forge/ca-certificates-feedstock/pull/2 ) for details on how I propose we do this.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228611837.0, 'datetime': '2016-06-26 17:19:16+00:00', 'masked_author': 'username_0', 'text': 'To ensure the change to `ca-certificates` ( https://github.com/conda-forge/ca-certificates-feedstock/pull/2 ) is honored on Heroku. We need to add proper environment activation, which this PR ( https://github.com/pl31/heroku-buildpack-conda/pull/2 ) should do.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 228612029.0, 'datetime': '2016-06-26 17:23:49+00:00', 'masked_author': 'username_0', 'text': 'So, I have tried to do what I can as far as setting up the page. I think we will have to chat about how we want to configure this with Heroku, @username_1. Not really sure how things are working now or how to insert this into the mix. That being said, what we actually need to do is quite simple. We just need to pickup a webhook any time an issue is opened on that status page and run one command when that happens.\r\n\r\nThough honestly the hardest part of this process has always been the dependencies. 😞 The problem with trying to do this without them is we will end up have to write our own buildpack from scratch and do lots of weird development installs, which sounded like more of a pain. That being said, all of the changes shown above work for me and do the job (excepting Heroku as it is untested yet).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'jakirkham', 'comment_id': 240459418.0, 'datetime': '2016-08-17 16:00:26+00:00', 'masked_author': 'username_0', 'text': 'This has been implemented with PR ( https://github.com/conda-forge/conda-forge-webservices/pull/34 ) and rebuilt on Heroku. Opening issues with a label for the service and the service status on repo ( https://github.com/conda-forge/status ) will result in a payload being sent to Heroku, which will then update the webpage. History will be logged below. We ( @username_1 and I ) tested this earlier to make sure it worked in several cases. Please open any service issues encountered on that repo with related info. Thanks @jayfk for all of the help getting `statuspage` packaged. Also thanks @username_1 for helping get this live. Please ask any questions you may have.\r\n\r\ncc @conda-forge/core', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'jakirkham', 'comment_id': None, 'datetime': '2016-08-17 16:00:32+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Adding a status page
username_0: After having some issues yesterday during deployment (due to a package having a `.` in its name) and thinking back to the fact that this problem has occurred before for us while trying to explain this to a user that expected everything worked, I was thinking maybe we would benefit from having a status page. This way we could transparently communicate the status of different parts of our pipeline. Additionally, it would be nice if it could be combined with our automation to announce issues.

Given how much we :heart: repos here, one possibility that I noticed was a status page that used a repo ( https://github.com/pyupio/statuspage ). We already are quite familiar with the process of automating interactions with repos. Errors in feedstock generation could be filed as issues with one label. Errors in webpage deployment could go under another. Errors updating the feedstocks submodules could go under another label (thus solving this issue https://github.com/conda-forge/conda-forge.github.io/issues/70). As labels are required for an issue to show up in the status, we don't need to worry about users opening issues against this status repo and accidentally affecting the status. This would also do double duty as we could be notified as these problems occur letting us more quickly resolve them. Also, it would provide this information to our users without distracting us from trying to get out a quick fix. Once we resolve an issue, we can close it, which will update the status. Alternatively, we can automate the closing of issues too. This won't leave us dependent on yet another service to get the job done. It will just rely on GitHub.

We can certainly consider other ways to do this. Right now, I think this idea sounds like the easiest to get setup and will nicely integrate with our existing workflows.
<issue_comment>username_1: Hehe. We don't love repos for the sake of loving repos - we love them because they were the right abstraction for conda recipes :smile: 

That said, it is a pretty neat idea! One question though: what are the kinds of statuses we've seen recently, and would having the status page have improved the user experience? I'm reluctant to implement a status page if we are gradually refining away all of the issues anyway.
<issue_comment>username_0: In some cases, I find we have these issues at various places (e.g. webpage repo, staged recipes, maybe even feedstocks, in the future the docker-images repo). By having a singular status page repo, we would actually be able to consolidate these issues instead of cross referencing across repos. Further it would avoid noise that occurs by having these operational issues intermingled with topic driven issues like the organizational ones we have here, package requests on staged recipes, etc.. It would also avoid having to ping each other and draw attention to each other all over the place. By having a singular place to raise these issues, we could also see existing issues related to this problem and discuss any strategy as needed. I can think of lots of nifty uses cases for this, but will stop there.
<issue_comment>username_1: Sold. What do we need to do to make it happen?
<issue_comment>username_0: I think we need a repo, a new token (possibly admin?), and probably use another thread on Heroku.
<issue_comment>username_1: You have the power on all of these. My advice first though - get it going as you and then we can migrate it to an appropriate user (once we know the load on GH etc.).

Are you happy to run with this?
<issue_comment>username_0: cc-ing @ocefpaf so that this is on your radar at least as something we are planning to do.
<issue_comment>username_0: Yes.
<issue_comment>username_0: cc-ing @astrofrog so you can see what I have on mind for this status page. Also, if you have some feedback on this, please let me know.
<issue_comment>username_0: I am creating this repo ( https://github.com/conda-forge/conda-forge-statuspage ) for this purpose.
<issue_comment>username_0: Decided to renamed to ( https://github.com/conda-forge/status ). The main reason being that someone can visit ( https://conda-forge.github.io/status ) to get the status. Though happy to discuss this with others here.
<issue_comment>username_0: Copying you guys here as you are watching the repo currently, @ocefpaf @janschulz.
<issue_comment>username_0: Adding the dependencies in this PR ( https://github.com/conda-forge/staged-recipes/pull/775 ).
<issue_comment>username_1: Are interested in moving this forward without the dependencies on conda-forge so that we could potentially parallelise progress?
<issue_comment>username_0: Well, the dependencies are ready to go at this point. They just need a review/merge. If there are formatting changes required, then I agree someone else could/should be welcomed to take them over. Alternatively, those sorts of changes could be saved for feedstocks depending on how people feel.

The main issue I have these days is really just having enough time. I say that while fully acknowledging having a status page will be a real time saver once it is up.

Though I agree this is very important to get moving. Hence why it has gotten some more attention of late. 😉

Will start playing with phase 2 soon.
<issue_comment>username_0: Should add that PyInstaller does something weird where it generates a bunch of files in a hidden directory `.waf-1.8.21-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX`. Not really sure whether this should be expected or whether it serves a purpose. If someone knows more, please feel free to share. Otherwise, I'm happy to save that for the feedstock as it doesn't seem to cause any issues.
<issue_comment>username_0: So, I have generated the status page. Though still needs more work before it is operational.

After going through that process, I'm not sure that going with the PR deps as is will be the best move. This may take a bit more customization than that. I'll work on it a bit and see what I can come up with.
<issue_comment>username_0: Need to add a patch to out `pygithub` package to proceed. Here is the PR ( https://github.com/conda-forge/pygithub-feedstock/pull/9 ) for adding that patch. Details in that PR. A review/merge of that change would be greatly appreciated.
<issue_comment>username_0: Also, we need to make the certificates easier to discover. I found setting some environment variables will do the trick. Please see this PR ( https://github.com/conda-forge/ca-certificates-feedstock/pull/2 ) for details on how I propose we do this.
<issue_comment>username_0: To ensure the change to `ca-certificates` ( https://github.com/conda-forge/ca-certificates-feedstock/pull/2 ) is honored on Heroku. We need to add proper environment activation, which this PR ( https://github.com/pl31/heroku-buildpack-conda/pull/2 ) should do.
<issue_comment>username_0: So, I have tried to do what I can as far as setting up the page. I think we will have to chat about how we want to configure this with Heroku, @username_1. Not really sure how things are working now or how to insert this into the mix. That being said, what we actually need to do is quite simple. We just need to pickup a webhook any time an issue is opened on that status page and run one command when that happens.

Though honestly the hardest part of this process has always been the dependencies. 😞 The problem with trying to do this without them is we will end up have to write our own buildpack from scratch and do lots of weird development installs, which sounded like more of a pain. That being said, all of the changes shown above work for me and do the job (excepting Heroku as it is untested yet).
<issue_comment>username_0: This has been implemented with PR ( https://github.com/conda-forge/conda-forge-webservices/pull/34 ) and rebuilt on Heroku. Opening issues with a label for the service and the service status on repo ( https://github.com/conda-forge/status ) will result in a payload being sent to Heroku, which will then update the webpage. History will be logged below. We ( @username_1 and I ) tested this earlier to make sure it worked in several cases. Please open any service issues encountered on that repo with related info. Thanks @jayfk for all of the help getting `statuspage` packaged. Also thanks @username_1 for helping get this live. Please ask any questions you may have.

cc @conda-forge/core<issue_closed>"
gohugoio/hugo,531535711,6573,,"[{'action': 'opened', 'author': 'jeremyf', 'comment_id': None, 'datetime': '2019-12-02 21:00:22+00:00', 'masked_author': 'username_0', 'text': '### What version of Hugo are you using (`hugo version`)?\r\n\r\n<pre>\r\n$ hugo version\r\n=> 0.60.1\r\n</pre>\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes\r\n\r\n### The Issue\r\n\r\nI have a shortcode for rendering tables consistently:\r\n\r\n```go\r\n{{- $caption := .Get ""caption"" }}\r\n{{- $table_number := .Get ""table_number"" }}\r\n<div class=""table-wrapper"">\r\n<a name=""table-{{ $table_number }}""></a>\r\n<table {{ with .Get ""unstriped"" }}class=""unstriped"" {{ end }}aria-label=""Table {{ $table_number }}{{ if $caption}}: {{ $caption }}{{ end }}"">\r\n{{- if $caption }}<caption>Table {{ $table_number}}: {{ $caption | markdownify }}</caption>{{- end }}\r\n{{ .Inner | markdownify }}\r\n</table>\r\n</div>\r\n```\r\n\r\nI have content that is basically:\r\n\r\n```go\r\n{{% table table_number=""42"" caption=""My Table"" %}}\r\n<tr>\r\n<td>20</td>\r\n<td>Goblin (Eberron)</td>\r\n<td>[goo.gl/eYjUk9](https://goo.gl/eYjUk9)</td>\r\n</tr>\r\n{{% /table %}}\r\n```\r\n\r\nWhen I have blackFriday enabled, I see HTML that converts the markdown A-tag to a proper HTML a-tag (e.g. `<td><a href=""https://goo.gl/eYjUk9"">goo.gl/eYjUk9</a></td>`). When I have goldmark enabled, this does not convert (and I end up with a `<td>[goo.gl/eYjUk9](https://goo.gl/eYjUk9)</td>` rendered on the page.\r\n\r\nI can continue to use blackFriday but would prefer to use goldmark, and was wondering about expanding the markdown within a shortcode. I\'m also encountering a few other oddities that I believe are goldmark related.\r\n\r\nThis may be related to #6553. Thank you in advance for your time and energy in the project.', 'title': '0.60.1 Goldmark issue regarding markdown and shortcodes', 'type': 'issue'}
 {'action': 'created', 'author': 'moorereason', 'comment_id': 560716941.0, 'datetime': '2019-12-02 22:10:36+00:00', 'masked_author': 'username_1', 'text': 'I believe this is part of the switch to a CommonMark-compliant renderer.  My understanding of the [CommonMark spec](https://spec.commonmark.org/0.29/#html-blocks) is that markup within a HTML block will be ignored.\r\n\r\nTry this instead:\r\n\r\n```\r\n{{% table table_number=""42"" caption=""My Table"" %}}\r\n<table>\r\n<tr>\r\n<td>20</td>\r\n<td>Goblin (Eberron)</td>\r\n<td>\r\n\r\n[goo.gl/eYjUk9](https://goo.gl/eYjUk9)\r\n</td>\r\n</tr>\r\n</table>\r\n{{% /table %}}\r\n```\r\n\r\nShould yield:\r\n```\r\n<table>\r\n<tr>\r\n<td>20</td>\r\n<td>Goblin (Eberron)</td>\r\n<td>\r\n<p><a href=""https://goo.gl/eYjUk9"">goo.gl/eYjUk9</a></p>\r\n</td>\r\n</tr>\r\n</table>\r\n```\r\n\r\nI don\'t know how to render it without the wrapping paragraph tag.  🤷\u200d♂ Play around with the [CommonMark dingus](https://spec.commonmark.org/dingus/) and see if you can do better than me.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 560817775.0, 'datetime': '2019-12-02 22:54:32+00:00', 'masked_author': 'username_2', 'text': ""I would read the CommonMark spec. I doubt that the above construct is in according with that spec, but if it is, please raise an issue on Goldmark issue tracker. We don't have the resources to follow up upstream issues on such defail here."", 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'bep', 'comment_id': None, 'datetime': '2019-12-02 22:54:33+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'jeremyf', 'comment_id': 560982611.0, 'datetime': '2019-12-03 03:30:33+00:00', 'masked_author': 'username_0', 'text': ""Thanks for the follow-up. Cheers! I'll do what I can."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: 0.60.1 Goldmark issue regarding markdown and shortcodes
username_0: ### What version of Hugo are you using (`hugo version`)?

<pre>
$ hugo version
=> 0.60.1
</pre>

### Does this issue reproduce with the latest release?

Yes

### The Issue

I have a shortcode for rendering tables consistently:

```go
{{- $caption := .Get ""caption"" }}
{{- $table_number := .Get ""table_number"" }}
<div class=""table-wrapper"">
<a name=""table-{{ $table_number }}""></a>
<table {{ with .Get ""unstriped"" }}class=""unstriped"" {{ end }}aria-label=""Table {{ $table_number }}{{ if $caption}}: {{ $caption }}{{ end }}"">
{{- if $caption }}<caption>Table {{ $table_number}}: {{ $caption | markdownify }}</caption>{{- end }}
{{ .Inner | markdownify }}
</table>
</div>
```

I have content that is basically:

```go
{{% table table_number=""42"" caption=""My Table"" %}}
<tr>
<td>20</td>
<td>Goblin (Eberron)</td>
<td>[goo.gl/eYjUk9](https://goo.gl/eYjUk9)</td>
</tr>
{{% /table %}}
```

When I have blackFriday enabled, I see HTML that converts the markdown A-tag to a proper HTML a-tag (e.g. `<td><a href=""https://goo.gl/eYjUk9"">goo.gl/eYjUk9</a></td>`). When I have goldmark enabled, this does not convert (and I end up with a `<td>[goo.gl/eYjUk9](https://goo.gl/eYjUk9)</td>` rendered on the page.

I can continue to use blackFriday but would prefer to use goldmark, and was wondering about expanding the markdown within a shortcode. I'm also encountering a few other oddities that I believe are goldmark related.

This may be related to #6553. Thank you in advance for your time and energy in the project.
<issue_comment>username_1: I believe this is part of the switch to a CommonMark-compliant renderer.  My understanding of the [CommonMark spec](https://spec.commonmark.org/0.29/#html-blocks) is that markup within a HTML block will be ignored.

Try this instead:

```
{{% table table_number=""42"" caption=""My Table"" %}}
<table>
<tr>
<td>20</td>
<td>Goblin (Eberron)</td>
<td>

[goo.gl/eYjUk9](https://goo.gl/eYjUk9)
</td>
</tr>
</table>
{{% /table %}}
```

Should yield:
```
<table>
<tr>
<td>20</td>
<td>Goblin (Eberron)</td>
<td>
<p><a href=""https://goo.gl/eYjUk9"">goo.gl/eYjUk9</a></p>
</td>
</tr>
</table>
```

I don't know how to render it without the wrapping paragraph tag.  🤷‍♂ Play around with the [CommonMark dingus](https://spec.commonmark.org/dingus/) and see if you can do better than me.
<issue_comment>username_2: I would read the CommonMark spec. I doubt that the above construct is in according with that spec, but if it is, please raise an issue on Goldmark issue tracker. We don't have the resources to follow up upstream issues on such defail here.<issue_closed>
<issue_comment>username_0: Thanks for the follow-up. Cheers! I'll do what I can."
ethereum/ethereum-org-website,886164317,3020,,"[{'action': 'opened', 'author': 'samajammin', 'comment_id': None, 'datetime': '2021-05-11 06:14:51+00:00', 'masked_author': 'username_0', 'text': ""**Is your feature request related to a problem? Please describe.**\r\n\r\nIt's a well known critique on Ethereum/NFTs/blockchains generally.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAn open explanation of energy consumption. Why there's a trade-off for decentralization and why this won't be an issue with Eth2 moving to PoS.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nFlesh out / optimize content on https://ethereum.org/en/eth2/vision/\r\n\r\n**Additional context**\r\n\r\n- Bankless folks offered to co-publish if we can find a writer: https://twitter.com/samonchain/status/1383120909624483841?s=20\r\n- Great thread on Ethereum’s current state & roadmap https://twitter.com/smpalladino/status/1391901504752300033?s=21-Could be a good outline for “ethereum energy consumption” page\r\n\r\n**Want to contribute?**\r\n\r\nWe love contributions from the Ethereum community! Please comment on an issue if you're interested in helping out with a PR."", 'title': 'Page on Ethereum energy consumption', 'type': 'issue'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 846164202.0, 'datetime': '2021-05-21 18:45:52+00:00', 'masked_author': 'username_0', 'text': 'Solid article by @CarlBeek that could serve as the foundation for this!\r\nhttps://blog.ethereum.org/2021/05/18/country-power-no-more/', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'heypran', 'comment_id': 860118239.0, 'datetime': '2021-06-12 21:54:49+00:00', 'masked_author': 'username_1', 'text': 'We can add a new list item in the `Learn` dropdown, linking to a separate page where we can showcase all the relevant energy consumption-related articles/resources. \r\n\r\n<img width=""500"" alt=""Screenshot 2021-06-13 at 1 43 10 AM"" src=""https://user-images.githubusercontent.com/15847009/121789748-973b5a80-cbe9-11eb-9746-6d719db89793.png"">\r\n\r\nWe can me the page something similar to the history page as below- \r\n<img width=""832"" alt=""Screenshot 2021-06-13 at 1 47 51 AM"" src=""https://user-images.githubusercontent.com/15847009/121789812-44ae6e00-cbea-11eb-8aeb-2ddf85e3ca28.png"">', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'samajammin', 'comment_id': 964203758.0, 'datetime': '2021-11-09 14:29:36+00:00', 'masked_author': 'username_0', 'text': 'https://twitter.com/0xstark/status/1457823831360368640?s=20', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'minimalsm', 'comment_id': None, 'datetime': '2021-12-25 17:28:49+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Page on Ethereum energy consumption
username_0: **Is your feature request related to a problem? Please describe.**

It's a well known critique on Ethereum/NFTs/blockchains generally.

**Describe the solution you'd like**

An open explanation of energy consumption. Why there's a trade-off for decentralization and why this won't be an issue with Eth2 moving to PoS.

**Describe alternatives you've considered**

Flesh out / optimize content on https://ethereum.org/en/eth2/vision/

**Additional context**

- Bankless folks offered to co-publish if we can find a writer: https://twitter.com/samonchain/status/1383120909624483841?s=20
- Great thread on Ethereum’s current state & roadmap https://twitter.com/smpalladino/status/1391901504752300033?s=21-Could be a good outline for “ethereum energy consumption” page

**Want to contribute?**

We love contributions from the Ethereum community! Please comment on an issue if you're interested in helping out with a PR.
<issue_comment>username_0: Solid article by @CarlBeek that could serve as the foundation for this!
https://blog.ethereum.org/2021/05/18/country-power-no-more/
<issue_comment>username_1: We can add a new list item in the `Learn` dropdown, linking to a separate page where we can showcase all the relevant energy consumption-related articles/resources. 

<img width=""500"" alt=""Screenshot 2021-06-13 at 1 43 10 AM"" src=""https://user-images.githubusercontent.com/15847009/121789748-973b5a80-cbe9-11eb-9746-6d719db89793.png"">

We can me the page something similar to the history page as below- 
<img width=""832"" alt=""Screenshot 2021-06-13 at 1 47 51 AM"" src=""https://user-images.githubusercontent.com/15847009/121789812-44ae6e00-cbea-11eb-8aeb-2ddf85e3ca28.png"">
<issue_comment>username_0: https://twitter.com/0xstark/status/1457823831360368640?s=20<issue_closed>"
nodejs/nodejs.org,195892251,1073,"{'number': 1073.0, 'repo': 'nodejs.org', 'user_login': 'nodejs'}","[{'action': 'opened', 'author': 'ZibbyKeaton', 'comment_id': None, 'datetime': '2016-12-15T19:22:28Z', 'masked_author': 'username_0', 'text': ""I was also hoping to post this momentum release to the website. It came out during Node.js Interactive, so it's a little late... But, I want it on the site for historically reference. Please let me know if you have any questions, and again sorry for my errors in advance."", 'title': 'Node.js Foundation Momentum Release', 'type': 'issue'}
 {'action': 'created', 'author': 'bnb', 'comment_id': 267433705.0, 'datetime': '2016-12-15 20:22:09+00:00', 'masked_author': 'username_1', 'text': ""@username_0 When you say it came out, do you mean it was published to the Medium account? I feel like I remember seeing it, but I can't find it anywhere. 🤔"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ZibbyKeaton', 'comment_id': 267434282.0, 'datetime': '2016-12-15 20:24:32+00:00', 'masked_author': 'username_0', 'text': '@username_1 I should have clarified, we issued this over Marketwired. We have yet to post it on our website. I did, however, post a Node.js Interactive blog on our Medium channel that highlights pieces of this news release. Does that make sense?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mikeal', 'comment_id': 267434359.0, 'datetime': '2016-12-15 20:24:52+00:00', 'masked_author': 'username_2', 'text': '@username_1 it was also sent to journalists directly upon release.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hackygolucky', 'comment_id': 268068136.0, 'datetime': '2016-12-19 20:22:41+00:00', 'masked_author': 'username_3', 'text': 'oh hey friends! Have the answers Zibby provided been deemed sufficient enough for us to merge this as an archived press release? Gave this a few days for response.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lpinca', 'comment_id': 268290608.0, 'datetime': '2016-12-20 16:35:01+00:00', 'masked_author': 'username_4', 'text': '@username_3 there are a couple of nits in the markdown syntax that should be fixed before this can be merged.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lpinca', 'comment_id': 268291729.0, 'datetime': '2016-12-20 16:38:56+00:00', 'masked_author': 'username_4', 'text': ""Am I allowed to push on Zibby's branch to fix them?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'hackygolucky', 'comment_id': 268292012.0, 'datetime': '2016-12-20 16:39:57+00:00', 'masked_author': 'username_3', 'text': '@username_4 that would be delightful. Please do.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lpinca', 'comment_id': 268298144.0, 'datetime': '2016-12-20 17:03:10+00:00', 'masked_author': 'username_4', 'text': 'Done, this is what I changed:\r\n\r\n- Removed commit message bidy as it was not relevant to the change.\r\n- Renamed file to ""nodejs-foundation-momentum-release.md"" to be consistent with the others.\r\n- Fixed post metadata at the beginning of the file.\r\n- Added a sentence at the end (""The Node.js Foundation is a Linux Foundation Project, which are independently funded software projects that harness the power of collaborative development to fuel innovation across industries and ecosystems. [www.linuxfoundation.org](http://www.linuxfoundation.org/)"") as it was also present in the other blog posts.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'lpinca', 'comment_id': 269090219.0, 'datetime': '2016-12-24 16:09:42+00:00', 'masked_author': 'username_4', 'text': '@nodejs/website can this be merged?', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'thefourtheye', 'comment_id': 269298334.0, 'datetime': '2016-12-27 09:12:56+00:00', 'masked_author': 'username_5', 'text': 'cc @nodejs/ctc @nodejs/tsc', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ZibbyKeaton', 'comment_id': 269331514.0, 'datetime': '2016-12-27 14:16:02+00:00', 'masked_author': 'username_0', 'text': '@username_5 @username_4 thank you!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ZibbyKeaton', 'comment_id': 270404390.0, 'datetime': '2017-01-04 15:50:31+00:00', 'masked_author': 'username_0', 'text': '@username_1 mind helping us merge this and posting to the site?', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Node.js Foundation Momentum Release
username_0: I was also hoping to post this momentum release to the website. It came out during Node.js Interactive, so it's a little late... But, I want it on the site for historically reference. Please let me know if you have any questions, and again sorry for my errors in advance.
<issue_comment>username_1: @username_0 When you say it came out, do you mean it was published to the Medium account? I feel like I remember seeing it, but I can't find it anywhere. 🤔
<issue_comment>username_0: @username_1 I should have clarified, we issued this over Marketwired. We have yet to post it on our website. I did, however, post a Node.js Interactive blog on our Medium channel that highlights pieces of this news release. Does that make sense?
<issue_comment>username_2: @username_1 it was also sent to journalists directly upon release.
<issue_comment>username_3: oh hey friends! Have the answers Zibby provided been deemed sufficient enough for us to merge this as an archived press release? Gave this a few days for response.
<issue_comment>username_4: @username_3 there are a couple of nits in the markdown syntax that should be fixed before this can be merged.
<issue_comment>username_4: Am I allowed to push on Zibby's branch to fix them?
<issue_comment>username_3: @username_4 that would be delightful. Please do.
<issue_comment>username_4: Done, this is what I changed:

- Removed commit message bidy as it was not relevant to the change.
- Renamed file to ""nodejs-foundation-momentum-release.md"" to be consistent with the others.
- Fixed post metadata at the beginning of the file.
- Added a sentence at the end (""The Node.js Foundation is a Linux Foundation Project, which are independently funded software projects that harness the power of collaborative development to fuel innovation across industries and ecosystems. [www.linuxfoundation.org](http://www.linuxfoundation.org/)"") as it was also present in the other blog posts.
<issue_comment>username_4: @nodejs/website can this be merged?
<issue_comment>username_5: cc @nodejs/ctc @nodejs/tsc
<issue_comment>username_0: @username_5 @username_4 thank you!
<issue_comment>username_0: @username_1 mind helping us merge this and posting to the site?"
cake-build/website,336719492,547,,"[{'action': 'opened', 'author': 'Jericho', 'comment_id': None, 'datetime': '2018-06-28 17:52:58+00:00', 'masked_author': 'username_0', 'text': ""The Cake.AddinDiscoverer tool has discovered discrepencies between the YAML files currently on Cake's web site and the packages discovered on Nuget.org:\r\n\r\nYAML files to be deleted:\r\n\r\n\r\nYAML files to be created:\r\n- Cake.Android.AvdManager\r\n- Cake.ArtifactDrop\r\n- Cake.AWS.Lambda\r\n- Cake.AzCopy\r\n- Cake.AzureBlobStorage\r\n- Cake.Bower\r\n- Cake.CachedNpm\r\n- Cake.CakeBoss\r\n- Cake.CK.Pack\r\n- Cake.ClickTwice\r\n- Cake.ConventionalChangelog\r\n- Cake.Coverlet\r\n- Cake.Deploy.Azure.Authentication\r\n- Cake.Deploy.Bot.LUIS\r\n- Cake.Deploy.Variables\r\n- Cake.DeployParams\r\n- Cake.DocCreator\r\n- Cake.DocumentDb\r\n- Cake.Eazfuscator.Net\r\n- Cake.Flyway\r\n- Cake.FtpDeploy\r\n- Cake.GitHubUtility\r\n- Cake.Gradle\r\n- Cake.Graph\r\n- Cake.Handlebars\r\n- Cake.HandlebarsDotNet\r\n- Cake.Helm\r\n- Cake.HgVersion\r\n- Cake.Jira\r\n- Cake.Karma\r\n- Cake.LittleHelpers\r\n- Cake.Mage\r\n- Cake.Markdown-Pdf\r\n- Cake.MonoApiTools\r\n- Cake.Netlify\r\n- Cake.NewRelic\r\n- Cake.Npx\r\n- Cake.NSpec\r\n- Cake.NSwag.Console\r\n- Cake.OssIndex\r\n- Cake.Packages\r\n- Cake.PickAndRoll\r\n- Cake.PinNuGetDependency\r\n- Cake.ScheduledTasks\r\n- Cake.SimpleHTTPServer\r\n- Cake.SimpleVersionIncrement\r\n- Cake.SquareLogo\r\n- Cake.Storm.Android\r\n- Cake.Storm.Environment\r\n- Cake.Storm.Fluent\r\n- Cake.Storm.Fluent.Android\r\n- Cake.Storm.Fluent.DotNetCore\r\n- Cake.Storm.Fluent.iOS\r\n- Cake.Storm.Fluent.NuGet\r\n- Cake.Storm.Fluent.Transformations\r\n- Cake.Storm.iOS\r\n- Cake.Storm.JsonBuildConfiguration\r\n- Cake.Storm.Nuget\r\n- Cake.TravisCI\r\n- Cake.Umbraco.PackageUploader\r\n- Cake.UncUtils\r\n- Cake.UServer\r\n- Cake.Utility\r\n- Cake.ViewCompiler\r\n- Cake.WindowsAppStore\r\n- Cake.Xamarin.Binding.Util\r\n\r\nYAML files to be updated:\r\n- Cake.ActiveDirectory\r\n- Cake.AliaSql\r\n- Cake.Apigee\r\n- Cake.AppleSimulator\r\n- Cake.AWS.CloudFront\r\n- Cake.AWS.CodeDeploy\r\n[Truncated]\n- Cake.Powershell\r\n- Cake.ProGet\r\n- Cake.ProjHelpers\r\n- Cake.Putty\r\n- Cake.Raygun\r\n- Cake.ReSharperReports\r\n- Cake.Services\r\n- Cake.Slack\r\n- Cake.SqlServer\r\n- Cake.SqlTools\r\n- Cake.Terraform\r\n- Cake.Tfx\r\n- Cake.Topshelf\r\n- Cake.Twitter\r\n- Cake.VersionReader\r\n- Cake.VsCode\r\n- Cake.VsixSignTool\r\n- Cake.VsMetrics\r\n- Cake.WebDeploy\r\n- Cake.Webpack"", 'title': 'Synchronizing YAML files', 'type': 'issue'}
 {'action': 'closed', 'author': 'Jericho', 'comment_id': None, 'datetime': '2018-08-30 15:51:46+00:00', 'masked_author': 'username_0', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Synchronizing YAML files
username_0: The Cake.AddinDiscoverer tool has discovered discrepencies between the YAML files currently on Cake's web site and the packages discovered on Nuget.org:

YAML files to be deleted:


YAML files to be created:
- Cake.Android.AvdManager
- Cake.ArtifactDrop
- Cake.AWS.Lambda
- Cake.AzCopy
- Cake.AzureBlobStorage
- Cake.Bower
- Cake.CachedNpm
- Cake.CakeBoss
- Cake.CK.Pack
- Cake.ClickTwice
- Cake.ConventionalChangelog
- Cake.Coverlet
- Cake.Deploy.Azure.Authentication
- Cake.Deploy.Bot.LUIS
- Cake.Deploy.Variables
- Cake.DeployParams
- Cake.DocCreator
- Cake.DocumentDb
- Cake.Eazfuscator.Net
- Cake.Flyway
- Cake.FtpDeploy
- Cake.GitHubUtility
- Cake.Gradle
- Cake.Graph
- Cake.Handlebars
- Cake.HandlebarsDotNet
- Cake.Helm
- Cake.HgVersion
- Cake.Jira
- Cake.Karma
- Cake.LittleHelpers
- Cake.Mage
- Cake.Markdown-Pdf
- Cake.MonoApiTools
- Cake.Netlify
- Cake.NewRelic
- Cake.Npx
- Cake.NSpec
- Cake.NSwag.Console
- Cake.OssIndex
- Cake.Packages
- Cake.PickAndRoll
- Cake.PinNuGetDependency
- Cake.ScheduledTasks
- Cake.SimpleHTTPServer
- Cake.SimpleVersionIncrement
- Cake.SquareLogo
- Cake.Storm.Android
- Cake.Storm.Environment
- Cake.Storm.Fluent
- Cake.Storm.Fluent.Android
- Cake.Storm.Fluent.DotNetCore
- Cake.Storm.Fluent.iOS
- Cake.Storm.Fluent.NuGet
- Cake.Storm.Fluent.Transformations
- Cake.Storm.iOS
- Cake.Storm.JsonBuildConfiguration
- Cake.Storm.Nuget
- Cake.TravisCI
- Cake.Umbraco.PackageUploader
- Cake.UncUtils
- Cake.UServer
- Cake.Utility
- Cake.ViewCompiler
- Cake.WindowsAppStore
- Cake.Xamarin.Binding.Util

YAML files to be updated:
- Cake.ActiveDirectory
- Cake.AliaSql
- Cake.Apigee
- Cake.AppleSimulator
- Cake.AWS.CloudFront
- Cake.AWS.CodeDeploy
[Truncated]
- Cake.Powershell
- Cake.ProGet
- Cake.ProjHelpers
- Cake.Putty
- Cake.Raygun
- Cake.ReSharperReports
- Cake.Services
- Cake.Slack
- Cake.SqlServer
- Cake.SqlTools
- Cake.Terraform
- Cake.Tfx
- Cake.Topshelf
- Cake.Twitter
- Cake.VersionReader
- Cake.VsCode
- Cake.VsixSignTool
- Cake.VsMetrics
- Cake.WebDeploy
- Cake.Webpack<issue_closed>"
facebook/docusaurus,527641066,2041,,"[{'action': 'opened', 'author': 'omry', 'comment_id': None, 'datetime': '2019-11-24 02:53:27+00:00', 'masked_author': 'username_0', 'text': ""## 🚀 Feature\r\n\r\nRunning yarn deploy pushes the a version to the gh-pages branch even if there are no changes to the website.\r\n\r\n## Motivation\r\n\r\nPushing the website even if there are no changes have a few bad side effects:\r\n1. doubling the number of commits in the repo.\r\n2. polluting git log output with irrelevant records\r\n3. possibly increases the size of the repo (as force push it used).\r\n\r\nThe user can work around it in circleci config, but it's tricky.\r\nHere is an example such workaround:\r\n\r\nhttps://github.com/facebookresearch/hydra/pull/308/files"", 'title': 'Deploy should only push if there is an actual change', 'type': 'issue'}
 {'action': 'created', 'author': 'amimas', 'comment_id': 559328137.0, 'datetime': '2019-11-28 03:34:04+00:00', 'masked_author': 'username_1', 'text': ""To me, this sounds like CI/CD related. I'm not sure if Docusaurus should really be responsible for this (even though it has built-in commands to publish to github pages). There are a lots of ways a static site can be deployed. Github page is just one of many of those options.\r\n\r\nMy perception is that Docusaurus is a static site generator that helps to build and maintain techincal docs site quickly. It should be focused on that only. Adding any other responsibilities can make it too complicated and/or take away focus from that core function."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'yangshun', 'comment_id': 559331999.0, 'datetime': '2019-11-28 03:57:58+00:00', 'masked_author': 'username_2', 'text': ""I agree with @username_1. It could be a helpful Docusaurus plugin that adds a smart deploy command but then again it's not specific to Docusaurus so maybe it can just be a cli tool?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'omry', 'comment_id': 559333230.0, 'datetime': '2019-11-28 04:06:00+00:00', 'masked_author': 'username_0', 'text': 'It looks like docusaurus already owns  this responsibility as evidenced by the the yarn deploy command.\r\n\r\nI agree that it would make sense to move this responsibility to a different tool or plugin(s).', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'endiliey', 'comment_id': 559383560.0, 'datetime': '2019-11-28 08:01:59+00:00', 'masked_author': 'username_3', 'text': 'Its not easy to work this out as the new plugin system will let you pull out data sources from elsewhere. Example: I can fetch from a realtime API and so every yarn deploy means I want to use the data from that current time I ran the command.\n\nAs suggested, this is indeed CI related and docusaurus should not try to handle everything with such limited manpower.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'endiliey', 'comment_id': None, 'datetime': '2019-11-28 08:02:21+00:00', 'masked_author': 'username_3', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'endiliey', 'comment_id': 559384005.0, 'datetime': '2019-11-28 08:03:35+00:00', 'masked_author': 'username_3', 'text': 'And yeah, actually yarn deploy to gh pages was there due to legacy reason of v1. In fact it can be moved as a plugin with “extendCli” hooks. But well, maybe something to revisit in future.', 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: Deploy should only push if there is an actual change
username_0: ## 🚀 Feature

Running yarn deploy pushes the a version to the gh-pages branch even if there are no changes to the website.

## Motivation

Pushing the website even if there are no changes have a few bad side effects:
1. doubling the number of commits in the repo.
2. polluting git log output with irrelevant records
3. possibly increases the size of the repo (as force push it used).

The user can work around it in circleci config, but it's tricky.
Here is an example such workaround:

https://github.com/facebookresearch/hydra/pull/308/files
<issue_comment>username_1: To me, this sounds like CI/CD related. I'm not sure if Docusaurus should really be responsible for this (even though it has built-in commands to publish to github pages). There are a lots of ways a static site can be deployed. Github page is just one of many of those options.

My perception is that Docusaurus is a static site generator that helps to build and maintain techincal docs site quickly. It should be focused on that only. Adding any other responsibilities can make it too complicated and/or take away focus from that core function.
<issue_comment>username_2: I agree with @username_1. It could be a helpful Docusaurus plugin that adds a smart deploy command but then again it's not specific to Docusaurus so maybe it can just be a cli tool?
<issue_comment>username_0: It looks like docusaurus already owns  this responsibility as evidenced by the the yarn deploy command.

I agree that it would make sense to move this responsibility to a different tool or plugin(s).
<issue_comment>username_3: Its not easy to work this out as the new plugin system will let you pull out data sources from elsewhere. Example: I can fetch from a realtime API and so every yarn deploy means I want to use the data from that current time I ran the command.

As suggested, this is indeed CI related and docusaurus should not try to handle everything with such limited manpower.<issue_closed>
<issue_comment>username_3: And yeah, actually yarn deploy to gh pages was there due to legacy reason of v1. In fact it can be moved as a plugin with “extendCli” hooks. But well, maybe something to revisit in future."
eduardoboucas/staticman,170141706,6,,"[{'action': 'opened', 'author': 'cweiske', 'comment_id': None, 'datetime': '2016-08-09T11:18:34Z', 'masked_author': 'username_0', 'text': ""It'd be nice to see websites where this is actually used."", 'title': 'Demo URLs', 'type': 'issue'}
 {'action': 'created', 'author': 'eduardoboucas', 'comment_id': 238532933.0, 'datetime': '2016-08-09 12:05:35+00:00', 'masked_author': 'username_1', 'text': ""You can see it in action [on my website](https://username_1.com/), and the repository is [here](https://github.com/username_1/username_1.github.io).\r\n\r\nI'd be nice to add a section to the README with a list of sites using it, but perhaps once we have a few more?"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'eduardoboucas', 'comment_id': 238806330.0, 'datetime': '2016-08-10 08:57:16+00:00', 'masked_author': 'username_1', 'text': ""There's also [this](http://popcorn.staticman.net) and a screencast on how that was made: https://username_1.com/blog/2016/08/10/staticman.html"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'cweiske', 'comment_id': 238807067.0, 'datetime': '2016-08-10 09:00:28+00:00', 'masked_author': 'username_0', 'text': ""I wouldn't wait until the list is larger than x."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'mmistakes', 'comment_id': 252603103.0, 'datetime': '2016-10-10 12:22:24+00:00', 'masked_author': 'username_2', 'text': ""I'm using Staticman to power comments on my personal site [Made Mistakes](https://mademistakes.com/) ([repo](https://github.com/username_2/made-mistakes-jekyll)), along with adding it as an option to a [Jekyll theme](https://github.com/username_2/minimal-mistakes) I maintain."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'eduardoboucas', 'comment_id': 252642990.0, 'datetime': '2016-10-10 14:47:30+00:00', 'masked_author': 'username_1', 'text': ""Thanks. Added [a section to the README](https://github.com/username_1/staticman#sites-using-staticman). Keep 'em coming!"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'twentytwoo', 'comment_id': 261910433.0, 'datetime': '2016-11-21 11:17:38+00:00', 'masked_author': 'username_3', 'text': ""I'm using it on [startpages.cf](http://startpages.cf/), to allow users to submit startpages and [movw-0x16.cf](http://movw-0x16.cf) to send comments."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'eduardoboucas', 'comment_id': 262017479.0, 'datetime': '2016-11-21 18:02:55+00:00', 'masked_author': 'username_1', 'text': 'Thanks, @username_3. Do you mind adding those to the README (including a link to the source repository, if public) and creating a PR?\r\n\r\nI will close this issue in favour of asking people to PR will their own sites.', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'eduardoboucas', 'comment_id': None, 'datetime': '2016-11-21 18:02:56+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Demo URLs
username_0: It'd be nice to see websites where this is actually used.
<issue_comment>username_1: You can see it in action [on my website](https://username_1.com/), and the repository is [here](https://github.com/username_1/username_1.github.io).

I'd be nice to add a section to the README with a list of sites using it, but perhaps once we have a few more?
<issue_comment>username_1: There's also [this](http://popcorn.staticman.net) and a screencast on how that was made: https://username_1.com/blog/2016/08/10/staticman.html
<issue_comment>username_0: I wouldn't wait until the list is larger than x.
<issue_comment>username_2: I'm using Staticman to power comments on my personal site [Made Mistakes](https://mademistakes.com/) ([repo](https://github.com/username_2/made-mistakes-jekyll)), along with adding it as an option to a [Jekyll theme](https://github.com/username_2/minimal-mistakes) I maintain.
<issue_comment>username_1: Thanks. Added [a section to the README](https://github.com/username_1/staticman#sites-using-staticman). Keep 'em coming!
<issue_comment>username_3: I'm using it on [startpages.cf](http://startpages.cf/), to allow users to submit startpages and [movw-0x16.cf](http://movw-0x16.cf) to send comments.
<issue_comment>username_1: Thanks, @username_3. Do you mind adding those to the README (including a link to the source repository, if public) and creating a PR?

I will close this issue in favour of asking people to PR will their own sites.<issue_closed>"
gohugoio/hugo,849255761,8383,,"[{'action': 'opened', 'author': 'jmooring', 'comment_id': None, 'datetime': '2021-04-02 14:38:32+00:00', 'masked_author': 'username_0', 'text': '### What version of Hugo are you using (`hugo version`)?\r\n\r\n<pre>\r\nhugo v0.83.0-DEV+extended linux/amd64 BuildDate=unknown\r\n</pre>\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes\r\n\r\n### Without a heading render hook\r\n\r\nThis markup:\r\n\r\n```\r\n## Section One\r\n```\r\n\r\nProduces this HTML:\r\n\r\n```\r\n<h2 id=""section-one"">Section One</h2>\r\n```\r\n\r\nWith this item in the .TableOfContents:\r\n\r\n```\r\n<li><a href=""#section-one"">Section One</a></li>\r\n```\r\n\r\nAt this point everything is behaving as expected.\r\n\r\n### With a heading render hook\r\n\r\nlayouts/_default/_markup/render-heading.html:\r\n\r\n```\r\n<h{{ .Level }} id=""{{ printf ""%s%s"" ""foo-"" .Anchor | safeURL }}"">{{ .Text | safeHTML }}</h{{ .Level }}>\r\n```\r\n\r\nProduces this HTML:\r\n\r\n```\r\n<h2 id=""foo-section-one"">Section One</h2>\r\n```\r\n\r\nWith this item in the .TableOfContents:\r\n\r\n```\r\n<li><a href=""#section-one"">Section One</a></li>\r\n```\r\n\r\nThe item in the .TableOfContents _should_ be:\r\n\r\n```\r\n<li><a href=""#foo-section-one"">Section One</a></li>\r\n```', 'title': "".TableOfContents ignores id's generated by heading-render hook"", 'type': 'issue'}
 {'action': 'created', 'author': 'jmooring', 'comment_id': 812566972.0, 'datetime': '2021-04-02 14:59:01+00:00', 'masked_author': 'username_0', 'text': 'Example:\r\n\r\n```bash\r\ngit clone --single-branch -b hugo-github-issue-8383 https://github.com/username_0/hugo-testing hugo-github-issue-8383\r\ncd hugo-github-issue-8383\r\nhugo server\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'matt9189', 'comment_id': 821996828.0, 'datetime': '2021-04-18 14:04:49+00:00', 'masked_author': 'username_1', 'text': 'It appears that the table of contents generation is dependent upon Goldmark\'s autoHeadingID being set to true. This parses the actual content in the markdown file to generate the link. In your example above, if you change ""Section One"" in the markdown file to ""Hello Friend,"" the link would produce `<a href=""#hello-friend"">`.\r\n\r\nGoldmark has a parser option that allows for custom ids if specified in the markdown file:\r\n`## heading {#id .className attrName=attrValue class=""class1 class2""}`\r\n\r\nThis can be added; however, it would not fix the issue above. The table of contents would have to be generated from parsing the html output rather than the markdown to incorporate the render hooks correctly. Or, at least that is what I have gathered from my investigation.', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'bep', 'comment_id': 823883342.0, 'datetime': '2021-04-21 08:30:52+00:00', 'masked_author': 'username_2', 'text': 'This is certainly a known limitation. We could (and should?) maybe get by this if we allow setting attributes inside the hook, e.g.: \r\n\r\n```html\r\n{{ $id := printf ""%s%s"" ""foo-"" .Anchor | safeURL }}\r\n{{ .SetAttribute ""id"" $id }}\r\n<h{{ .Level }} id=""{{ $id }}"">{{ .Text | safeHTML }}</h{{ .Level }}>\r\n```', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'marshall007', 'comment_id': 1077773011.0, 'datetime': '2022-03-24 15:45:42+00:00', 'masked_author': 'username_3', 'text': ""@username_2 did you have some idea in mind for the solution here? I was having a look to see what it would take to contribute the fix and it seems quite complicated. My intuition was that we could implement native parsing of raw HTML header elements upstream in `goldmark` (or potentially as an extension) such that they would be emitted in the markdown AST just as if they were authored in `#` syntax. This would make `autoHeadingID` and also make render hooks work for `<h*>` elements.\r\n\r\nI think this could be done without violating the CommonMark specification as described by `@yuin` in https://github.com/yuin/goldmark/issues/125#issuecomment-622207664.\r\n\r\n---\r\n\r\nThat only covers one scenario though, there are actually many:\r\n\r\n1. `#...` and `<h*>` tags authored in markdown files\r\n1. `<h*>` elements emitted from render hooks\r\n1. `<h*>` elements emitted from shortcode evaluation (directly or indirectly via `markdownify`)\r\n1. `<h*>` elements in surrounding layout templates\r\n\r\n... and that's just for headers. We have the same/similar problems with `<a>` and `<img>` tags to consider as well.\r\n\r\nThe solution described above really only helps solve (1). I don't see a way we could address (2-4) without performing a second pass using a full-blown HTML parser over the fully rendered document.\r\n\r\nThis would have serious performance implications but could also be very powerful for a number of other scenarios like automated link integrity checking (without requiring use of `ref/relref`), more robust render hooks (that work no matter what the source format is), HTML minification, linting, etc."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: .TableOfContents ignores id's generated by heading-render hook
username_0: ### What version of Hugo are you using (`hugo version`)?

<pre>
hugo v0.83.0-DEV+extended linux/amd64 BuildDate=unknown
</pre>

### Does this issue reproduce with the latest release?

Yes

### Without a heading render hook

This markup:

```
## Section One
```

Produces this HTML:

```
<h2 id=""section-one"">Section One</h2>
```

With this item in the .TableOfContents:

```
<li><a href=""#section-one"">Section One</a></li>
```

At this point everything is behaving as expected.

### With a heading render hook

layouts/_default/_markup/render-heading.html:

```
<h{{ .Level }} id=""{{ printf ""%s%s"" ""foo-"" .Anchor | safeURL }}"">{{ .Text | safeHTML }}</h{{ .Level }}>
```

Produces this HTML:

```
<h2 id=""foo-section-one"">Section One</h2>
```

With this item in the .TableOfContents:

```
<li><a href=""#section-one"">Section One</a></li>
```

The item in the .TableOfContents _should_ be:

```
<li><a href=""#foo-section-one"">Section One</a></li>
```
<issue_comment>username_0: Example:

```bash
git clone --single-branch -b hugo-github-issue-8383 https://github.com/username_0/hugo-testing hugo-github-issue-8383
cd hugo-github-issue-8383
hugo server
```
<issue_comment>username_1: It appears that the table of contents generation is dependent upon Goldmark's autoHeadingID being set to true. This parses the actual content in the markdown file to generate the link. In your example above, if you change ""Section One"" in the markdown file to ""Hello Friend,"" the link would produce `<a href=""#hello-friend"">`.

Goldmark has a parser option that allows for custom ids if specified in the markdown file:
`## heading {#id .className attrName=attrValue class=""class1 class2""}`

This can be added; however, it would not fix the issue above. The table of contents would have to be generated from parsing the html output rather than the markdown to incorporate the render hooks correctly. Or, at least that is what I have gathered from my investigation.
<issue_comment>username_2: This is certainly a known limitation. We could (and should?) maybe get by this if we allow setting attributes inside the hook, e.g.: 

```html
{{ $id := printf ""%s%s"" ""foo-"" .Anchor | safeURL }}
{{ .SetAttribute ""id"" $id }}
<h{{ .Level }} id=""{{ $id }}"">{{ .Text | safeHTML }}</h{{ .Level }}>
```
<issue_comment>username_3: @username_2 did you have some idea in mind for the solution here? I was having a look to see what it would take to contribute the fix and it seems quite complicated. My intuition was that we could implement native parsing of raw HTML header elements upstream in `goldmark` (or potentially as an extension) such that they would be emitted in the markdown AST just as if they were authored in `#` syntax. This would make `autoHeadingID` and also make render hooks work for `<h*>` elements.

I think this could be done without violating the CommonMark specification as described by `@yuin` in https://github.com/yuin/goldmark/issues/125#issuecomment-622207664.

---

That only covers one scenario though, there are actually many:

1. `#...` and `<h*>` tags authored in markdown files
1. `<h*>` elements emitted from render hooks
1. `<h*>` elements emitted from shortcode evaluation (directly or indirectly via `markdownify`)
1. `<h*>` elements in surrounding layout templates

... and that's just for headers. We have the same/similar problems with `<a>` and `<img>` tags to consider as well.

The solution described above really only helps solve (1). I don't see a way we could address (2-4) without performing a second pass using a full-blown HTML parser over the fully rendered document.

This would have serious performance implications but could also be very powerful for a number of other scenarios like automated link integrity checking (without requiring use of `ref/relref`), more robust render hooks (that work no matter what the source format is), HTML minification, linting, etc."
11ty/11ty-website,937314199,1091,,"[{'action': 'opened', 'author': 'bzerangue', 'comment_id': None, 'datetime': '2021-07-05 19:08:48+00:00', 'masked_author': 'username_0', 'text': 'The following leaderboard sites are no longer Eleventy sites...\r\n\r\nhttps://alexcarpenter.me - Now on Next.js\r\n\r\nhttps://edjohnsonwilliams.co.uk - Now on Next.js', 'title': 'Leaderboard site featuring other site generators (no longer Eleventy sites)', 'type': 'issue'}
 {'action': 'created', 'author': 'tannerdolby', 'comment_id': 883696836.0, 'datetime': '2021-07-20 20:45:35+00:00', 'masked_author': 'username_1', 'text': ""Hmmm. I guess this is a bit odd to have sites built with other SSG's on the Eleventy leaderboards. \r\n\r\nI'm not entirely sure how @username_2 is pulling the site data into speedlify to do the testing for leaderboard generation. But I do know we have `.json` files with each of our sites information within `src/_data/sites/`. Maybe there could be an extra field dynamically added to sites (that we know are no longer 11ty powered) like `is11ty: false`. \r\n\r\nThere might be an easier way to pluck out the sites from the leaderboard that aren't powered by 11ty but I can't think of anything at the moment."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'zachleat', 'comment_id': 883736724.0, 'datetime': '2021-07-20 22:03:35+00:00', 'masked_author': 'username_2', 'text': 'All the files in `src/_data/sites/` should be Eleventy sites, so we should remove any entries that are no longer valid there!', 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tannerdolby', 'comment_id': 883738331.0, 'datetime': '2021-07-20 22:07:02+00:00', 'masked_author': 'username_1', 'text': ""Agreed! I will remove those too entries listed above:\r\n- https://alexcarpenter.me\r\n- https://edjohnsonwilliams.co.uk\r\n\r\nI'm not sure if any other files in `src/_data/sites` are not Eleventy sites, but for now removing those two mentioned above will resolve this issue."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tannerdolby', 'comment_id': 883748167.0, 'datetime': '2021-07-20 22:29:33+00:00', 'masked_author': 'username_1', 'text': 'Can confirm:\r\n\r\n- https://alexcarpenter.me has moved to Next.js - _(Most recently this site is built using Next.js, Tailwind CSS, TypeScript, MDX, and hosted using Vercel. [https://alexcarpenter.me/](https://alexcarpenter.me/))_\r\n\r\n- https://edjohnsonwilliams.co.uk/ has moved to Next.js - https://github.com/edjw/edjw-nextjs-blog', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'zachleat', 'comment_id': None, 'datetime': '2021-07-26 16:05:33+00:00', 'masked_author': 'username_2', 'text': '', 'title': None, 'type': 'issue'}]","<issue_start><issue_comment>Title: Leaderboard site featuring other site generators (no longer Eleventy sites)
username_0: The following leaderboard sites are no longer Eleventy sites...

https://alexcarpenter.me - Now on Next.js

https://edjohnsonwilliams.co.uk - Now on Next.js
<issue_comment>username_1: Hmmm. I guess this is a bit odd to have sites built with other SSG's on the Eleventy leaderboards. 

I'm not entirely sure how @username_2 is pulling the site data into speedlify to do the testing for leaderboard generation. But I do know we have `.json` files with each of our sites information within `src/_data/sites/`. Maybe there could be an extra field dynamically added to sites (that we know are no longer 11ty powered) like `is11ty: false`. 

There might be an easier way to pluck out the sites from the leaderboard that aren't powered by 11ty but I can't think of anything at the moment.
<issue_comment>username_2: All the files in `src/_data/sites/` should be Eleventy sites, so we should remove any entries that are no longer valid there!
<issue_comment>username_1: Agreed! I will remove those too entries listed above:
- https://alexcarpenter.me
- https://edjohnsonwilliams.co.uk

I'm not sure if any other files in `src/_data/sites` are not Eleventy sites, but for now removing those two mentioned above will resolve this issue.
<issue_comment>username_1: Can confirm:

- https://alexcarpenter.me has moved to Next.js - _(Most recently this site is built using Next.js, Tailwind CSS, TypeScript, MDX, and hosted using Vercel. [https://alexcarpenter.me/](https://alexcarpenter.me/))_

- https://edjohnsonwilliams.co.uk/ has moved to Next.js - https://github.com/edjw/edjw-nextjs-blog<issue_closed>"
gdg-x/hoverboard,115167507,22,,"[{'action': 'opened', 'author': 'cliveb', 'comment_id': None, 'datetime': '2015-11-04 22:50:22+00:00', 'masked_author': 'username_0', 'text': 'In Zeppelin update _config.yml to deploy very clear example: https://github.com/gdg-x/zeppelin/blob/master/_config.yml\r\n\r\nIn Hoverboard update gulpfile.js to deploy no example (I AM LOST)\r\nhttps://github.com/gdg-x/hoverboard/blob/master/gulpfile.js#L205\r\n\r\n\r\nReally appreciate Zeppelin like \r\nQuick-start guide ;)\r\n\r\nFork this repo\r\nClone locally\r\nUpdate _config.yml\r\nSelect what content blocks do you need\r\nPush changes to gh-pages branch\r\nEnjoy your awesome DevFest site at http://[your github name].github.io/zeppelin/', 'title': ""[HELP] Warning: don't forget to edit destination repository to deploy the website?"", 'type': 'issue'}
 {'action': 'created', 'author': 'ozasadnyy', 'comment_id': 153981327.0, 'datetime': '2015-11-05 07:56:15+00:00', 'masked_author': 'username_1', 'text': ""Hello @username_0 . Yeah, I know, it's not easy. This is why it's still in beta ;)\r\nFor now it will deploy in the same repository you are, but into *gh-pages* branch.\r\nBtw, if you want to deploy into another repository, specify it with **remoteUrl**. Take a look [here](https://github.com/shinnn/gulp-gh-pages#optionsremoteurl). \r\nIf you have enabled two-factors authentication, then take into a count [this issue](https://github.com/shinnn/gulp-gh-pages/issues/72)"", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'tasomaniac', 'comment_id': 153983075.0, 'datetime': '2015-11-05 08:08:08+00:00', 'masked_author': 'username_2', 'text': ""That's the power of the open source! We should contribute back to the repository with the info we have. \r\n\r\nZeppelin is really mature. I remember Zeppelin is just like this when it is first released. Hoverboard will be mature and easy to configure too."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'cliveb', 'comment_id': 153984474.0, 'datetime': '2015-11-05 08:17:46+00:00', 'masked_author': 'username_0', 'text': ""Thanks guys. Very much appreciate you making both Zepplin and Hoverboard\nfor GDG-X. I know documentation is hard (always falls out for sync). A\nworking sample and where to look is my preference to configure. I'm cooking\nup a bootstrap site for DevFest, could not get get even early Zepplin to\ninstantiate, I have a hunch gh-pages branch needed. I am enjoying the\nhacking."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ozasadnyy', 'comment_id': 196088699.0, 'datetime': '2016-03-14 00:34:22+00:00', 'masked_author': 'username_1', 'text': 'The new version was released. Here is [documentation](https://github.com/gdg-x/hoverboard#deploy-app) for deployment', 'title': None, 'type': 'comment'}
 {'action': 'closed', 'author': 'ozasadnyy', 'comment_id': None, 'datetime': '2016-03-14 00:34:22+00:00', 'masked_author': 'username_1', 'text': '', 'title': None, 'type': 'issue'}
 {'action': 'created', 'author': 'cliveb', 'comment_id': 196131132.0, 'datetime': '2016-03-14 04:13:03+00:00', 'masked_author': 'username_0', 'text': ""Hunch Boomerang is a fork of Zeppelin / Hoverboard. Last weekend at gdg #nacommunitysummit I got some mentoring configuring node. I'm using Chromebook + GCP Ubuntu VM to configure (not a Macbook). It turns out on a VM node and npm need manually linking and Ubuntu must be 14.2x. http://gdgseattle.github.io/boomerang/  \r\n\r\nYou guys may know this Node know-how as background know-how. Is there a way to add this know-how, by adding a Slack channel or some interactive way to get help. I ran into 4 GDGer's at the summit who also had crashed and burned getting github CI hosting working because of Node. For 2015 I ended up forking the BABBQ boostrap to avoid node. https://github.com/GDGSeattle/DevFest\r\n\r\nThanks for consideration."", 'title': None, 'type': 'comment'}
 {'action': 'created', 'author': 'ozasadnyy', 'comment_id': 196179103.0, 'datetime': '2016-03-14 07:25:14+00:00', 'masked_author': 'username_1', 'text': ""Hello, @username_0. Actually Boomerang isn't a Zeppelin/Hoverboard fork.."", 'title': None, 'type': 'comment'}]","<issue_start><issue_comment>Title: [HELP] Warning: don't forget to edit destination repository to deploy the website?
username_0: In Zeppelin update _config.yml to deploy very clear example: https://github.com/gdg-x/zeppelin/blob/master/_config.yml

In Hoverboard update gulpfile.js to deploy no example (I AM LOST)
https://github.com/gdg-x/hoverboard/blob/master/gulpfile.js#L205


Really appreciate Zeppelin like 
Quick-start guide ;)

Fork this repo
Clone locally
Update _config.yml
Select what content blocks do you need
Push changes to gh-pages branch
Enjoy your awesome DevFest site at http://[your github name].github.io/zeppelin/
<issue_comment>username_1: Hello @username_0 . Yeah, I know, it's not easy. This is why it's still in beta ;)
For now it will deploy in the same repository you are, but into *gh-pages* branch.
Btw, if you want to deploy into another repository, specify it with **remoteUrl**. Take a look [here](https://github.com/shinnn/gulp-gh-pages#optionsremoteurl). 
If you have enabled two-factors authentication, then take into a count [this issue](https://github.com/shinnn/gulp-gh-pages/issues/72)
<issue_comment>username_2: That's the power of the open source! We should contribute back to the repository with the info we have. 

Zeppelin is really mature. I remember Zeppelin is just like this when it is first released. Hoverboard will be mature and easy to configure too.
<issue_comment>username_0: Thanks guys. Very much appreciate you making both Zepplin and Hoverboard
for GDG-X. I know documentation is hard (always falls out for sync). A
working sample and where to look is my preference to configure. I'm cooking
up a bootstrap site for DevFest, could not get get even early Zepplin to
instantiate, I have a hunch gh-pages branch needed. I am enjoying the
hacking.
<issue_comment>username_1: The new version was released. Here is [documentation](https://github.com/gdg-x/hoverboard#deploy-app) for deployment<issue_closed>
<issue_comment>username_0: Hunch Boomerang is a fork of Zeppelin / Hoverboard. Last weekend at gdg #nacommunitysummit I got some mentoring configuring node. I'm using Chromebook + GCP Ubuntu VM to configure (not a Macbook). It turns out on a VM node and npm need manually linking and Ubuntu must be 14.2x. http://gdgseattle.github.io/boomerang/  

You guys may know this Node know-how as background know-how. Is there a way to add this know-how, by adding a Slack channel or some interactive way to get help. I ran into 4 GDGer's at the summit who also had crashed and burned getting github CI hosting working because of Node. For 2015 I ended up forking the BABBQ boostrap to avoid node. https://github.com/GDGSeattle/DevFest

Thanks for consideration.
<issue_comment>username_1: Hello, @username_0. Actually Boomerang isn't a Zeppelin/Hoverboard fork.."
